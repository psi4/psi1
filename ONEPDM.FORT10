      PROGRAM ONEPDM
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
c Moved to PSI distribution disk on 020289 - clj.
C**********************************************************************
C   BY:  Curtis Janssen                            search:  clj113088 *
C   DATE:  11-30-88                                                   *
C   REASON: Improved numerical precision of natural orbitals.         *
C**********************************************************************
C   BY:  Tracy Hamilton                            search:  LRGCNF    *
C   DATE:  August   31, 1988                                          *
C   REASON: Change output to write longer MO configuration list.      *
C**********************************************************************
C   BY:  RICHARD REMINGTON                         search:  c3-24-88  *
C   DATE:  MARCH  24,  1988                                           *
C   REASON: DECREASE CORE TO RUN IN 7MB ON 9370                       *
C**********************************************************************
C   BY: WESLEY ALLEN                                                  *
C   DATE: NOVEMBER 5, 1986                                            *
C   REASON: ADD A WARNING TO THE USER WHO WRITES NATURAL ORBITALS     *
C           OVER THE MOLECULAR ORBITALS IN FILE30.                    *
C**********************************************************************
C   BY: WESLEY ALLEN                                                  *
C   DATE: MAY 27, 1985                                                *
C   REASON: SET UP DEFAULTS IF "ONEPDM" INPUT NOT IN INPUT DECK       *
C**********************************************************************
C   BY: WESLEY ALLEN                                                  *
C   DATE: AUGUST 16, 1985                                             *
C   REASON: MODIFICATIONS TO LABEL THE IRREDUCIBLE REPRESENTATIONS    *
C           OF DIFFERENT POINT GROUPS CORRECTLY. ALSO, ITAP'S WERE    *
C           CHANGED TO IFIL'S WITH THE CORRECT NUMBERS.               *
C**********************************************************************
C   BY: WESLEY ALLEN                                                  *
C   DATE: SEPTEMBER 17, 1985                                          *
C   REASON: OPTIONS ADDED TO WRITE THE AO 1-PDM TO THE MASTER FILE    *
C            AND THE NATURAL ORBITALS OVER THE SCF VECTOR IN FILE30.  *
C**********************************************************************
C
c3-24-88 (For  7Mb)  REAL*8 A(100000)
c3-24-88 (For 15Mb)  REAL*8 A(200000)
      REAL*8 A(100000)
C
    1 FORMAT(/,1H ,16X,'>>>>>  ONEPDM CALCULATION COMPLETED  <<<<< ')
C
c3-24-88 (For  7Mb)  MAXCOR=100000
c3-24-88 (For 15Mb)  MAXCOR=200000
      MAXCOR=100000
      CALL TSTART(3)
      CALL TSTART(6)
      CALL NOUNFL
      CALL MAIN(A,MAXCOR)
      WRITE(6,1)
      CALL TSTOP(3)
      CALL TSTOP(6)
C
      STOP
      END
C/////////////////////////////////////////////////////
C     INPUT FOR PROGRAM ONEPDM:
C     OPTIONS ARE READ FROM THE NORMAL SCF-CI INPUT FILE: TAPE5
C     CARD 1:
C     # ONEPDM ###################
C     CARD 2:
C     PRINT,MAX,PRPFLG,ROOTI,ROOTF,PGROUP      FORMAT:5I5,2X,A3
C
C     MAX:  THE MAX MOST IMPORTANT CONFIGURATIONS ARE DISPLAYED. DEFAULT
C     ROOTI AND ROOTF : THE FIRST AND LAST CI ROOTS FOR WHICH ONEPDM IS
C          BE RUN.  DEFAULT=1,1
C     PRPFLG=-1      DISPLAY THE MOST IMPORTANT CONFIGURATIONS ONLY.
C     PRPFLG=0   IN ADDITION TO THE ABOVE,  FORM THE 1-PDM AND PRINT THE
C                POPULATIONS IN THE MO'S.
C     PRPFLG=1   IN ADDITION TO THE ABOVE, DIAGONALIZE THE 1-PDM TO OBTA
C                THE NATURAL ORBITALS IN TERMS OF THE MO'S , SO'S, AND
C                AO'S. THE AO ONEPDM IS THEN WRITTEN TO THE MASTER FILE.
C     PRPFLG=2   IN ADDITION TO THE ABOVE, WRITE THE NATURAL ORBITALS
C                (RELATIVE TO THE SO'S) OVER THE SCF VECTOR IN FILE30.
C     PRINT =0   NO ADDITIONAL PRINTING.
C     PRINT =1   PRINT THE 1-PDM TO TAPE6 ALSO.
C     PRINT =2   PRINT THE 1-PDM AND NO-MO MATRIX TO TAPE6.
C     PRINT =3   PRINT THE 1-PDM, NO-MO MATRIX, AND NO-SO MATRIX TO TAPE
C     PGROUP     THE POINT GROUP OF THE MOLECULE, E.G. C2V,CS,D2H,ETC.
C             THIS INFORMATION IS USED FOR THE PURPOSE OF LABELLING
C             THE ORBITALS WITH THE CORRECT IRREDUCIBLE REPRESENTATION.
C             DEFAULT:  C1,CS,C2V, OR D2H.
C
C     MAIN INPUT :  FILE5=THE NORMAL INPUT FILE
C                   FILE58=THE DRT TAPE.
C                   FILE54=THE TAPE ON WHICH THE CI VECTOR IS STORED.
C                   FILE30=THE OUTPUT TAPE FROM PITZER'S SCF PROGRAM ON
C                    WHICH THE SCF EIGENVECTORS AND EIGENVALUES ARE STOR
C                    (ONLY NECESSARY IF PRPFLG=1)
C     OUTPUT :  FILE6 IS THE NORMAL OUTPUT UNIT.
C               FILE50 IS AN UNBLOCKED FILE TO WHICH THE SO ONEPDM IS
C                      WRITTEN.
C               FILE51 IS A BLOCKED WORK FILE FOR STORING THE SCF VECTOR
C                 AND THE NO-MO TRANSFORMATION MATRIX.
C
C
C                                         WESLEY D. ALLEN
C                                         9/17/85
C
C///////////////////////////////////////////////////////////////////////
      SUBROUTINE MAIN(A,MAXR)
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION A(MAXR)
C   PROGRAM TO CALCULATE ONE-PARTICLE DENSITY MATRICES AND TRANSFORMATIO
C   TO GET NATURAL ORBITALS AND DENSITY MATRICES FOR ONE ELECTRON PROPER
      DOUBLE PRECISION ECI,FZCORE,REP,CZERO,EGUESS
      CHARACTER PGROUP*3,SYMLBL*3
      LOGICAL PAGEIN
      DOUBLE PRECISION ACF,DRTVER
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF,IERROR,ICBN12(16),ICBN8(16)
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
      COMMON /DRT/ IA(20000)
      IFILE5=5
      IFILE6=6
      IFIL58=58
      IFIL30=30
      IFIL40=40
      IFIL54=54
      IFIL50=50
      IFIL51=51
      IDEV=0
c!!!  MAXI=20000   this is not related to maxcor
      MAXI=20000
      WRITE(IFILE6,5)
    5 FORMAT(1H )
CRBR  WRITE(IFILE6,6)
    6 FORMAT(/,13(10('*')),/)
      WRITE(IFILE6,10)
   10 FORMAT(1H ,20X,'THE SHAPE DRIVEN GRAPHICAL UNITARY GROUP',/
     $,      1H ,20X,'   CONFIGURATION INTERACTION PACKAGE ')
      WRITE(IFILE6,11)
   11 FORMAT(1H ,17X,'ONE PARTICLE DENSITY MATRIX GENERATION PROGRAM')
      WRITE(IFILE6,12)
   12 FORMAT(1H ,11X,'WRITTEN BY WILLIAM D. LAIDIG AND ADAPTED BY '
     $,              'DOUGLAS J. FOX'/)
      WRITE(IFILE6,13)
   13 FORMAT(18X,'CONVERTED TO THE IBM SYSTEM WITH ADDITIONS AND'
     $,     /,25X,'MODIFICATIONS BY WESLEY D. ALLEN.',/)
      WRITE(IFILE6,6)
C   OPEN ALL FILES
      CALL RFILE(IFIL54)
      CALL RFILE(IFIL58)
      CALL RFILE(IFIL50)
      CALL RFILE(IFIL30)
      CALL DCDLBL(IFIL54,INTLBL,SCFLBL,REFWLK,IX,NWKS,EGUESS,ECI,CZERO)
      CALL LOCATE(IFILE5,'# ONEPDM #',IERROR)
      IF(IERROR.NE.0)THEN
           WRITE(IFILE6,14)
           MAX = 20
           ROOTI = 1
           ROOTF = 1
           PRINT = 0
           PRPFLG = -1
           PGROUP='   '
           GO TO 19
      END IF
   14 FORMAT(1X,'WARNING! NO ONEPDM INPUT FOUND ',
     +' **** DEFAULT OPTIONS BEING USED **** ')
      READ(IFILE5,20) PRINT,MAX,PRPFLG,ROOTI,ROOTF,PGROUP
   20 FORMAT(5I5,2X,A3)
   19 CONTINUE
      IF(PRPFLG.GE.1) CALL INITMF(1)
      CALL WREADW(IFIL58,DRTVER,INTOWP(1),1,IEND)
      CALL WREADW(IFIL58,DRTLBL,26,IEND,IEND)
      CALL WREADW(IFIL58,NBF,1,IEND,IEND)
      CALL WREADW(IFIL58,NSYM,1,IEND,IEND)
      CALL WREADW(IFIL58,NORBS,1,IEND,IEND)
      CALL WREADW(IFIL58,NROWS,1,IEND,IEND)
      CALL WREADW(IFIL58,NROWS4,1,IEND,IEND)
      CALL WREADW(IFIL58,NLEVS,1,IEND,IEND)
      CALL WREADW(IFIL58,NREFS,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,NWKS,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,IX,1,IEND,IEND)
      CALL WREADW(IFIL58,ORBFRM,1,IEND,IEND)
      CALL WREADW(IFIL58,NUMKL,1,IEND,IEND)
      CALL WREADW(IFIL58,NUMIJ,1,IEND,IEND)
      CALL WREADW(IFIL58,NGROUP,1,IEND,IEND)
      CALL WREADW(IFIL58,NUMINT,1,IEND,IEND)
      CALL WREADW(IFIL58,NMAX,1,IEND,IEND)
      CALL WREADW(IFIL58,BMAX,1,IEND,IEND)
      IEND=IEND+2+2*NUMKL+2*NUMIJ+4*NORBS+NGROUP+NBF
      IF(NSYM.EQ.1) THEN
      IRSYM=1
      ELSE IF(NSYM.EQ.2) THEN
      IRSYM=2
      ELSE IF(NSYM.EQ.4) THEN
      IRSYM=2
      ELSE
      IRSYM=3
      END IF
      CALL SETSYM(PGROUP)
      IF(MAX.LE.0) MAX=20
      IF(MAX.GT.NWKS) MAX=NWKS
      IF(ROOTI.LE.0) ROOTI=1
      IF(ROOTF.LT.ROOTI) ROOTF=ROOTI
      NROOTS=ROOTF-ROOTI+1
      WRITE(IFILE6,21)
   21 FORMAT(1H ,'OPTIONS',18X,'PRINT MAX PRPFLG ROOTI ROOTF')
      WRITE(IFILE6,22)PRINT,MAX,PRPFLG,ROOTI,ROOTF
   22 FORMAT(1H ,22X,2I6,I5,2I6)
      WRITE(IFILE6,23)DRTLBL
   23 FORMAT(/,1H ,'LABEL FROM DRT:  ',26A3)
      WRITE(IFILE6,24)EGUESS,ECI
   24 FORMAT(/,1H ,'EGUESS =',F16.10,/,1H ,'ECI    =',F16.10,/)
      LEVFRM=ORBFRM+1
      NWKS2=NWKS*2
      NORBSQ=NORBS*NORBS
      NBFSQ=NBF*NBF
      NLEVS=NORBS+1
      NLWKS = 1
      BVAL   = NLWKS + NROWS
      ARC    = BVAL + NROWS
      WGHT   = ARC + NROWS4
      ISEGM  = WGHT + NROWS4
      JSEGM  = ISEGM + NLEVS
      IMAIN  = JSEGM + NLEVS
      ISUB   = IMAIN + NLEVS
      IUWKMN = ISUB  + NLEVS
      IUWKSB = IUWKMN + NLEVS
      HDWGT  = IUWKSB + NLEVS
      HDSEG  = HDWGT + NLEVS
      HDPNT  = HDSEG + NLEVS
      ORBSYM = HDPNT + NLEVS
      ORBTBF = ORBSYM + NORBS
      BFCODE = ORBTBF + NORBS
      BFSYM  = BFCODE + NBF
      ORDER  = BFSYM + NBF
      CNF    = ORDER + MAX
      POP    = CNF + MAX
      LENI   = POP + NOCCMX*MAX
      IF(LENI.LE.MAXI) GO TO 31
      IF(ORDER.GT.MAXI) GO TO 900
      MAX=(MAXI-ORDER)/(NOCCMX+2)
      CNF    = ORDER + MAX
      POP    = CNF + MAX
      WRITE(IFILE6,30)MAX
   30 FORMAT(1H ,'INSUFFICIENT INTEGER STORAGE, MAX LOWERED TO ',I4)
   31 CALL GETDRT(IA(ISEGM),IA(BVAL),IA(ARC),IA(NLWKS),IA(WGHT)
     $,           IA(ORBSYM),IA(ORBTBF),IA(BFSYM),IA(BFCODE))
      NWKSMX=NWKS
      NWKMX2=NWKS2
      DRTDM=1
      ACOEF  = DRTDM + NBFSQ
      COEF   = ACOEF + NLEVS
      VECTOR = COEF + MAX
      LENR= VECTOR + NWKS
      IF(LENR.LT.MAXR) GO TO 50
      WRITE(IFILE6,41)
   41 FORMAT(1H ,'INSUFFICIENT CORE TO HOLD ALL VECTORS. PAGING WILL'
     *,' BE TRIED,')
      NWKSMX=(MAXR-VECTOR)
      NWKMX2=NWKSMX + NWKSMX
      IF(NLWKMX.GT.NWKSMX) GO TO 940
      WRITE(IFILE6,42) NWKSMX
   42 FORMAT(1X,I8,' ELEMENTS OF THE VECTOR CAN BE HELD AT ONCE.')
   50 CONTINUE
C   OVER LAPPING ASSIGNMENTS FOR USE LATER ON
      SCFDM  = DRTDM + NBFSQ
      SCFVEC = SCFDM + NBFSQ
      MOOCC  = SCFVEC + NBFSQ
      NOOCC  = MOOCC + NBF
      XSO = NOOCC + NBF
      SCRTCH = XSO+ NBF*(NBF+1)/2
      CALL INITPG(A(VECTOR))
      DO 80 I=1,NROOTS
      WRITE(IFILE6,60) I
   60 FORMAT(1H ,37X,'ROOT ',I2)
      CALL LRGCNF(A(VECTOR),A(COEF),IA(CNF),IA(ORDER))
      CALL OCCUPY(IA(ARC),IA(WGHT),IA(ORBTBF),IA(ISEGM),IA(IUWKMN)
     $,         IA(IMAIN),A(COEF),IA(CNF),IA(ORDER),IA(POP),IA(BFSYM))
      IF(PRPFLG.LT.0) GO TO 80
      CALL INITDM(A(DRTDM),A(VECTOR))
      CALL LOOP1(IA(BVAL),IA(NLWKS),IA(WGHT),IA(ARC),IA(ORBSYM)
     $,          IA(ISEGM),IA(JSEGM),IA(IMAIN),IA(ISUB),IA(IUWKMN)
     $,          IA(IUWKSB),A(ACOEF),IA(HDWGT),IA(HDSEG),IA(HDPNT))
      CALL DENSMA(A(DRTDM),A(SCRTCH),A(SCFDM),A(SCFVEC),A(MOOCC)
     $, A(NOOCC),A(XSO),IA(ORBTBF),IA(BFCODE),IA(ORDER),A(DRTDM))
      IF(PRPFLG.LT.1) GO TO 80
CWA   LOCATE THE AO-SO TRANSFORMATION MATRIX IN FILE30.
      CALL SCFLCU(LOCU,NUMAO)
CWA   FORM THE AO 1-PDM FROM THE SO 1-PDM ON FILE50.
      USOTAO=DRTDM
      XSO=USOTAO+NUMAO*NBF
      XAO=XSO+NBF*(NBF+1)/2
      SCRT1=XAO+NUMAO*(NUMAO+1)/2
      SCRT2=SCRT1+NUMAO*NUMAO
      SCRT3=SCRT2+NUMAO*NUMAO
      CALL XAOWRT(A(USOTAO),A(XSO),A(XAO),A(SCRT1),A(SCRT2),A(SCRT3),
     $      NBF,NUMAO,LOCU)
      WRITE(IFILE6,5)
   80 IWORD3=IWORD3+NWKS2
      WRITE(IFILE6,6)
      IF(PRPFLG.GE.1) CALL RCLOSE(IFIL40,3)
      IF(PRPFLG.GE.2) CALL RCLOSE(IFIL30,3)
      RETURN
  900 WRITE(IFILE6,905) LENI
  905 FORMAT(1X,'INSUFFICIENT INTEGER STORAGE ',I6,' WORDS NEEDED.')
      CALL EXIT
  940 WRITE(IFILE6,945) VECTOR + NLWKMX
  945 FORMAT(1X,'INSUFFICIENT REAL STORAGE ',I8,' REAL WORDS NEEDED.')
      CALL EXIT
      END
C///////////////////////////////////////////////////////////////
      SUBROUTINE GETDRT(LEVPT,BVAL,ARC,NLWKS,WEIGHT,ORBSYM,ORBTBF,BFSYM
     $,                 BFCODE)
C
      IMPLICIT INTEGER (A-Z)
C
      DOUBLE PRECISION ACF,DRTVER
      CHARACTER SYMLBL*3
      INTEGER LEVPT(NLEVS),BVAL(NROWS),ORBSYM(NORBS),ORBTBF(NORBS)
      INTEGER ARC(NROWS4),NLWKS(NROWS),WEIGHT(NROWS4),BFSYM(NBF)
      INTEGER BMAX,SYMOFF,DRTLBL,SCFLBL,SYMDIF,BFCODE(NBF)
C
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
C
      CALL WREADW(IFIL58,ORBSYM,NORBS,IEND,IEND)
      CALL WREADW(IFIL58,BFSYM,NBF,IEND,IEND)
      CALL WREADW(IFIL58,BFCODE,NREFS*NBF,IEND,IEND)
      CALL WREADW(IFIL58,ORBTBF,NORBS,IEND,IEND)
      CALL WREADW(IFIL58,LEVPT,NLEVS,IEND,IEND)
      IEND=IEND+NLEVS
      CALL WREADW(IFIL58,AVAL,1,IEND,IEND)
      IEND=IEND+NROWS-1
      CALL WREADW(IFIL58,BVAL,NROWS,IEND,IEND)
      IEND=IEND+NROWS
      CALL WREADW(IFIL58,ARC,NROWS4,IEND,IEND)
      CALL WREADW(IFIL58,NLWKS,NROWS,IEND,IEND)
      CALL WREADW(IFIL58,WEIGHT,NROWS4,IEND,IEND)
      NFRMIN=LEVPT(LEVFRM)+1
      NLWKMX=0
      DO 20 I=NFRMIN,NROWOC
      IF(NLWKS(I).GT.NLWKMX) NLWKMX=NLWKS(I)
   20 CONTINUE
      NLWKMX=NLWKMX+NLWKMX
      NOCCMX=AVAL+BMAX
      SYM=BFSYM(1)
      SYMOFF(SYM+1)=0
      ISYM=1
      DO 30 I=1,NBF
      IF(BFSYM(I).EQ.SYM) GO TO 30
      NTOTS(ISYM,1)=SUM-SYMOFF(SYM+1)
      NTOTS(ISYM,2)=SYM
      ISYM=ISYM+1
      SYM=BFSYM(I)
      SYMOFF(SYM+1)=SUM
   30 SUM=SUM+1
      NTOTS(ISYM,1)=NBF-SYMOFF(SYM+1)
      NTOTS(ISYM,2)=SYM
      DO 40 I=1,NORBS
   40 ORBSYM(I)=ORBSYM(I)-1
      RETURN
      END
C//////////////////////////////////////////////////////////
      SUBROUTINE LRGCNF(VECTOR,COEF,CNF,ORDER)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION VECTOR(NWKSMX),COEF(MAX),CMIN
      CHARACTER SYMLBL*3
      INTEGER CNF(MAX),FWORD,OFFSET,TSTCNF,ORDER(MAX)
      LOGICAL PAGEIN
      DOUBLE PRECISION ACF,DRTVER
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
      CMIN=0.0D0
      NCNF=0
      OFFSET=0
      FWORD=IWORD3
      NPASS=(NWKS-1)/NWKSMX+1
      NWORDL=NWKS2-(NPASS-1)*NWKMX2
      DO 10 I=1,MAX
      ORDER(I)=I
   10 COEF(I)=0.0D0
      NWORD=NWKMX2
C  SORT MOST IMPORTANT CONFIGURATIONS OUT OF VECTOR
      DO 40 L=1,NPASS
      IF(L.EQ.NPASS) NWORD=NWORDL
      NLOOP=NWORD/2
      CALL WREADW(IFIL54,VECTOR,NWORD,FWORD,FWORD)
      DO 30 K=1,NLOOP
      TSTCF=VECTOR(K)
      TSTABS=ABS(TSTCF)
      TSTCNF=K+OFFSET
      IF(TSTABS.LT.CMIN) GO TO 30
      NCNF=NCNF+1
      IF(NCNF.GT.MAX) NCNF=MAX
      DO 20 J=1,NCNF
      IF(TSTABS.LT.ABS(COEF(J))) GO TO 20
      TEMP=COEF(J)
      ITEMP=CNF(J)
      COEF(J)=TSTCF
      CNF(J)=TSTCNF
      TSTCF=TEMP
      TSTABS=ABS(TEMP)
      TSTCNF=ITEMP
   20 CONTINUE
      IF(NCNF.GE.MAX) CMIN=ABS(COEF(NCNF))
   30 CONTINUE
      OFFSET=OFFSET+NLOOP
   40 CONTINUE
      RETURN
      END
C////////////////////////////////////////////////
      SUBROUTINE OCCUPY(ARC,WGHT,ORBTBF,ISEGM,IUWKMN,IMAIN
     $,                 COEF,CNF,ORDER,POP,BFSYM)
      IMPLICIT INTEGER (A-Z)
      DOUBLE PRECISION COEF(MAX)
      DOUBLE PRECISION ACF,DRTVER
      CHARACTER SYMLBL*3,CHTP*3,SYMPRT(150)*7,CODE*4
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
      DIMENSION ARC(NROWS4),WGHT(NROWS4),ORBTBF(NORBS)
      DIMENSION ISEGM(NLEVS),IUWKMN(NLEVS),IMAIN(NLEVS)
      DIMENSION CNF(MAX),ORDER(MAX),POP(MAX,NOCCMX),BFSYM(NBF)
      DIMENSION CODE(4)
      DATA CODE/' ','\','/','X'/
      DATA MASK/262143/
      DO 10 J=1,MAX
      DO 5 I=1,NOCCMX
    5 POP(J,I)=0.0
   10 POP(J,1)=CNF(J)
      DO 20 J=1,MAX
      J1=J+1
      DO 20 K=J1,MAX
      IF(POP(K,1).GT.POP(J,1)) GO TO 20
      TEMP=ORDER(K)
      ORDER(K)=ORDER(J)
      ORDER(J)=TEMP
      TEMP=POP(K,1)
      POP(K,1)=POP(J,1)
      POP(J,1)=TEMP
   20 CONTINUE
C   IDENTIFY THE CONFIGURATIONS
      LEVH=NLEVS+1
      NPT=1
      IUWKMN(NLEVS)=0
      IMAIN(NLEVS)=1
      PUWK=1
      NCNF=1
      ICNF=ORDER(NCNF)
      TARGET=CNF(ICNF)
  100 LEVH=LEVH-1
      SEGWGT=0
      HSEG=0
      HPT=NPT
  110 HSEG=HSEG+1
      IF(HSEG.LE.4) GO TO 130
  120 LEVH=LEVH+1
      IF(LEVH.GT.NLEVS) GO TO 200
      PUWK=PUWK-IUWKMN(LEVH)
      HSEG=ISEGM(LEVH)
      HPT=IMAIN(LEVH)
      GO TO 110
  130 CONTINUE
      HARPT=4*(HPT-1)+HSEG
      NPT=ARC(HARPT)
      IF(NPT.EQ.0) GO TO 110
      PUWK=PUWK-SEGWGT
      SEGWGT=WGHT(HARPT)
      PUWK=PUWK+SEGWGT
      IUWKMN(LEVH)=SEGWGT
      ISEGM(LEVH)=HSEG
      LEV=LEVH-1
      IMAIN(LEV)=NPT
      IF(LEV.GT.1) GO TO 100
      IF(PUWK.LT.TARGET) GO TO 120
      J=NLEVS
      IORB=0
      DO 140 I=1,NORBS
      J1=J-1
      IF(ISEGM(J).EQ.1) GO TO 140
      IORB=IORB+1
      POP(ICNF,IORB)=ISHFT(ISEGM(J),21)+ORBTBF(J1)
  140 J=J1
      NCNF=NCNF+1
      IF(NCNF.GT.MAX) GOTO 200
      ICNF=ORDER(NCNF)
      TARGET=CNF(ICNF)
      GO TO 120
C   PRINT OUT ALL THIS IN A NICE FORMAT
  200 CONTINUE
      WRITE(IFILE6,210) MAX
  210 FORMAT(1H ,22X,'THE',I4,' MOST IMPORTANT CONFIGURATIONS',/)
      SYMDIF=NSYM
      ASSIGN 240 TO FORM
      IF(NSYM.GT.2) SYMDIF=4
      IF(NSYM.GT.1) ASSIGN 241 TO FORM
      IF(NSYM.GT.4) SYMDIF=8
      IF(NSYM.GT.4) ASSIGN 242 TO FORM
      KKLC=IRSYM+3
      DO 250 I=1,MAX
      DO 220 J=1,NOCCMX
      HSEG=ISHFT(POP(I,J),-21)
      IF(HSEG.EQ.0) GO TO 230
      IMAIN(J)=IAND(POP(I,J),MASK)
      TEMP=BFSYM(IMAIN(J))
      IMAIN(J)=IMAIN(J)-SYMOFF(TEMP+1)
      WRITE(CHTP,'(I3)') IMAIN(J)
      SYMPRT(J)=CHTP//SYMLBL(TEMP+SYMDIF)
  220 SYMPRT(J)=SYMPRT(J)(1:KKLC)//CODE(HSEG)
  230 J=J-1
      WRITE(IFILE6,FORM) I,COEF(I),CNF(I),(SYMPRT(K),K=1,J)
  240 FORMAT(1X,I3,F12.6,' (',I7,')',20A5/9(26X,20A5,/))
  241 FORMAT(1X,I3,F12.6,' (',I7,')',17A6/9(26X,17A6,/))
  242 FORMAT(1X,I3,F12.6,' (',I7,')',15A7/9(26X,15A7,/))
  250 CONTINUE
      RETURN
      END
C/////////////////////////////////////////////////////////////
      SUBROUTINE LOOP1(NABC,NLWKS,WGHT,ARC,ISYM
     $,                ISEGM,JSEGM,IMAIN,ISUB,IUWKMN,IUWKSB,ACOEF
     $,                HDWGT,HDSEG,HDPNT)
C   THIS SUBROUTINE IS A STRIPPED DOWN VERSION OF LOOPY THAT ONLY
C   HANDLES THE ONE-ELECTRON LOOPS
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL PAGEIN
      CHARACTER SYMLBL*3
      DOUBLE PRECISION ACF,DRTVER,ACOEF,COEFFS,CFS,A
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
C
      DIMENSION NABC(NROWS),ARC(NROWS4),NLWKS(NROWS),WGHT(NROWS4)
C
      DIMENSION ISEGM(NLEVS),JSEGM(NLEVS),IUWKMN(NLEVS),IUWKSB(NLEVS)
      DIMENSION ACOEF(NLEVS),IMAIN(NLEVS),ISUB(NLEVS),ISYM(NORBS)
C
      DIMENSION HDWGT(NLEVS),HDSEG(NLEVS),HDPNT(NLEVS)
C
      DIMENSION JSEGNR(3),JSEGPT(3),IARCMN(21),IARCSB(21),NXTSEG(21)
      DIMENSION COEFFS(20,5),CFS(100)
      EQUIVALENCE (COEFFS,CFS)
      INTEGER ARC,WGHT,HDSEG,HDWGT,HDPNT,HPT,HSEG,HARPT,SEGWGT
      DATA JSEGNR/7,14,21/
      DATA NXTSEG/0,0,0,2,2,3,3,0,0,2,2,2,2,3,0,0,3,3,3,3,2/
      DATA IARCMN/2,3,4,3,4,2,4,1,2,1,2,3,4,2,1,3,1,2,3,4,3/
      DATA IARCSB/2,3,4,1,2,1,3,3,4,1,2,3,4,3,2,4,1,2,3,4,2/
      JSEGPT(1)=0
      DO 130 I=1,2
  130 JSEGPT(I+1)=JSEGNR(I)
      DO 135 I=1,2
      DO 135 J=1,5
  135 COEFFS(I,J)=0.0D0
C   THESE ARE THE POSSIBLE SEGMENT COEFFICIENTS
      DO 140 I=3,20
      A=FLOAT(I-2)
      COEFFS(I,1)=1.0D0/A
      COEFFS(I,2)=-1.0D0/A
      COEFFS(I,3)=DSQRT((A+1.0D0)/A)
      COEFFS(I,4)=DSQRT(A/(A+1.0D0))
      COEFFS(I,5)=DSQRT(A*(A+2.0D0))/(A+1.0D0)
  140 CONTINUE
C   START THE MAIN LOOP
      DO 500 I=1,NORBS
      PUWK=1
      NPT=1
      LEVI=I+1
      NOFFI=0
      NOFFJ=0
      LEVV=NLEVS
      PAGEIN=.FALSE.
      IF(NWKS.LE.NWKSMX) PAGEIN=.TRUE.
      IF(LEVI.EQ.NLEVS) GO TO 1050
C   GENERATE HEAD SEGMENTS TO LOOPS
      LEVH=NLEVS+1
      HDWGT(NLEVS)=0
      HDPNT(NLEVS)=1
 1000 LEVH=LEVH-1
      SEGWGT=0
      HSEG=0
      HPT=NPT
 1010 HSEG=HSEG+1
      IF(HSEG.LE.4) GO TO 1030
 1020 LEVH=LEVH+1
      IF(LEVH.GT.NLEVS) GO TO 500
      PUWK=PUWK-HDWGT(LEVH)
      HSEG=HDSEG(LEVH)
      HPT=HDPNT(LEVH)
      GO TO 1010
 1030 CONTINUE
      HARPT=(HPT-1)*4+HSEG
      NPT=ARC(HARPT)
      IF(NPT.EQ.0) GO TO 1010
      PUWK=PUWK-SEGWGT
      SEGWGT=WGHT(HARPT)
      PUWK=PUWK+SEGWGT
      HDWGT(LEVH)=SEGWGT
      HDSEG(LEVH)=HSEG
      LEV=LEVH-1
      HDPNT(LEV)=NPT
      IUWK=0
      JUWK=0
      NLWK=NLWKS(NPT)
      IF(PAGEIN) GO TO 1035
      CALL PAGED
      IF(PAGEIN) LEVV=LEV
      GO TO 1040
 1035 CONTINUE
      IF(LEVV.GT.LEV) GO TO 1040
      PAGEIN=.FALSE.
      CALL PAGED
      LEVV=NLEVS
      IF(PAGEIN) LEVV=LEV
 1040 CONTINUE
      IF(LEV.GT.LEVI) GO TO 1000
 1050 LEV=LEVI
      LEVM=LEV-1
      JSM=ISYM(LEVM)
      IAD=LEVM
      ISEGM(LEV)=1
      ISEG=1
      IMN=NPT
      ISB=NPT
      KSEG=0
      KSEGMX=JSEGNR(ISEG)
      IUWKMN(LEV)=PUWK
      IUWKSB(LEV)=PUWK
      IMAIN(LEV)=NPT
      ISUB(LEV)=NPT
      ACOEF(LEV)=1.0D0
C   SEARCH FOR NEXT LOOP SEGMENT
  200 KSEG = KSEG + 1
      IF(KSEG.GT.KSEGMX) GO TO 440
      KMN = IARCMN(KSEG)
      IARPT = 4*(IMN-1)+KMN
      KMN = ARC(IARPT)
      IF(KMN.EQ.0) GO TO 200
      KSB = IARCSB(KSEG)
      JARPT = 4*(ISB-1)+KSB
      KSB = ARC(JARPT)
      IF(KSB.EQ.0) GO TO 200
      JSEGM(LEV) = KSEG
      IUWKMN(LEVM) = IUWKMN(LEV) + WGHT(IARPT)
      IUWKSB(LEVM) = IUWKSB(LEV) + WGHT(JARPT)
C   HAVING FOUND A VALID SEGMENT, UPDATE THE VALUE OF THE COEFFICIENT
      GO TO(1,1,4,1,12,1,8,1,7,1,17,2,2,3,1,13,1,2,19,2,6),KSEG
   1  ACOEF(LEVM) = ACOEF(LEV)
      GO TO 120
   2  ACOEF(LEVM) = -ACOEF(LEV)
      GO TO 120
   3  IA=NABC(IMN)+2
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
    4 ACOEF(LEVM)=ACOEF(LEV)+ACOEF(LEV)
      GOTO 120
    6 IA=NABC(IMN)+24
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
    7 IA=NABC(IMN)+42
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
    8 IA=NABC(IMN)+43
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
   12 IA=NABC(IMN)+62
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
   13 IA=NABC(IMN)+63
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
   17 IA=NABC(IMN)+81
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
   19 IA=NABC(IMN)+83
      ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
      GO TO 120
  120 CONTINUE
C   CHECK TO SEE IF PAGE OF VECTOR IS CORRECT
 1100 IF(PAGEIN) GO TO 1110
      IUWK=IUWKSB(LEVM)
      JUWK=IUWKMN(LEVM)
      NLWKI=NLWKS(KSB)
      NLWKJ=NLWKS(KMN)
      CALL PAGES
      IF(PAGEIN) LEVV=LEVM
      GO TO 1130
 1110 CONTINUE
      IF(LEVM.LT.LEVV) GO TO 1130
      IUWK=IUWKSB(LEVM)
      JUWK=IUWKMN(LEVM)
      NLWKI=NLWKS(KSB)
      NLWKJ=NLWKS(KMN)
      IF(LEVM.GT.LEVV) GO TO 1120
      CALL PAGEIJ
      LEVV=NLEVS
      IF(PAGEIN) LEVV=LEVM
      GO TO 1130
 1120 CONTINUE
      PAGEIN=.FALSE.
      GO TO 1100
 1130 CONTINUE
      IF(NXTSEG(KSEG).GT.0) GO TO 400
      IF(ISYM(LEVM).NE.JSM)GOTO 200
      IF(KMN-KSB) 300,380,300
C   UPDATE ALL VARIABLES FOR THE NEW SEGMENT
  300 LEVL=LEVM
      KSEGMX=4
  310 LEV=LEVM
      LEVM=LEV-1
      IF(LEVM.GT.0) GO TO 315
      WRITE(6,313)
  313 FORMAT(' PROBLEMS WITH PARTIAL SPACE')
      CALL MABORT
  315 CONTINUE
      KSEG=0
      IMN=KMN
      IMAIN(LEV)=KMN
      ISB=KSB
      ISUB(LEV)=KSB
  320 KSEG = KSEG + 1
      IF(KSEG.GT.KSEGMX) GO TO 360
      IARPT = 4*(IMN-1)+KSEG
      KMN = ARC(IARPT)
      IF(KMN.LE.0) GO TO 320
      JARPT = 4*(ISB-1)+KSEG
      KSB = ARC(JARPT)
      IF(KSB.LE.0) GO TO 320
      JSEGM(LEV) = KSEG
      IMAIN(LEVM)=KMN
      IUWKMN(LEVM)=IUWKMN(LEV)+WGHT(IARPT)
      ISUB(LEVM)=KSB
      IUWKSB(LEVM)=IUWKSB(LEV)+WGHT(JARPT)
      IF(KMN-KSB) 310,340,310
C   A LOOP HAS BEEN CONSTRUCTED_ FIND ITS CONTRIBUTION AND ADD
C   TO THE DENSTIY MATRIX
  340 IORB = IAD
      JORB = LEVL
      NLWK = NLWKS(KMN)
      IUWK = IUWKMN(LEVM)
      JUWK = IUWKSB(LEVM)
      ACF = ACOEF(LEVL)
      CALL MAKEDM
      GO TO 320
  360 IF(LEV.EQ.LEVL) GO TO 440
      LEVM=LEV
      LEV=LEVM+1
      IMN=IMAIN(LEV)
      ISB=ISUB(LEV)
      KSEG=JSEGM(LEV)
      GO TO 320
C    A LOOP HAS BEEN CONSTRUCTED_ ADD ITS CONTRIBUTION TO THE DENSITY
C    MATRIX
  380 IORB = IAD
      JORB = LEVM
      NLWK = NLWKS(KMN)
      IUWK = IUWKMN(LEVM)
      JUWK = IUWKSB(LEVM)
      ACF = ACOEF(LEVM)
      CALL MAKEDM
      GO TO 200
  400 CONTINUE
      LEV = LEVM
      LEVM = LEV - 1
      ISEG = NXTSEG(KSEG)
      ISEGM(LEV) = ISEG
      KSEG = JSEGPT(ISEG)
      IMN = KMN
      IMAIN(LEV) = KMN
      ISB = KSB
      ISUB(LEV) = KSB
      KSEGMX = JSEGNR(ISEG)
      GO TO 200
  440 CONTINUE
      IF(LEV.EQ.LEVI) GO TO 1010
      LEVM = LEV
      LEV = LEVM + 1
      ISEG = ISEGM(LEV)
      IMN = IMAIN(LEV)
      ISB = ISUB(LEV)
      KSEG = JSEGM(LEV)
      KSEGMX = JSEGNR(ISEG)
      GO TO 200
  500 CONTINUE
      RETURN
      END
C//////////////////////////////////////////////////
      SUBROUTINE INITDM(DRTDM,VECTOR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C   INITIALIZE AND PREPARE TO MAKE THE DENSITY MATRIX
      DOUBLE PRECISION DRTDM(NBFSQ),VECTOR(NWKSMX),DC
      LOGICAL PAGEIN
      DOUBLE PRECISION ACF,DRTVER
      CHARACTER SYMLBL*3
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
C   ZERO THE DENSITY MATRIX
      DO 10 IK=1,NBFSQ
   10 DRTDM(IK) = 0.0D0
C   THIS SECTION CREATES THE DENSITY MATRIX FROM DATA PASSED IN BY
C   LOOPY
      RETURN
      ENTRY MAKEDM
      NLWKT=0
      II = IUWK - NOFFI
      JJ = JUWK - NOFFJ
      IF(PAGEIN) GO TO 21
      NLWKT=NLWK
   20 IF(NLWKT.LE.0) GO TO 23
      JJ=1
      II=1
      NLWK=MIN(NLWKT,NWKSMX)
      CALL PAGED
      PAGEIN=.FALSE.
   21 DC = 0.0D0
      DO 22 I=1,NLWK
      DC = DC + VECTOR(II) * VECTOR(JJ)
      II = II + 1
   22 JJ = JJ + 1
      NLWKT=NWLKT-NLWK
      IUWK=IUWK+NLWK
      GO TO 20
   23 LAD = (IORB-1) * NBF + JORB
      MAD = (JORB-1) * NBF + IORB
C   ADD THIS CONTRIBUTION TO THE DENSITY MATRIX
      DRTDM(LAD) = DRTDM(LAD) + ACF * DC
      DRTDM(MAD) = DRTDM(LAD)
      RETURN
      END
C//////////////////////////////////////////
      SUBROUTINE INITPG(VECTOR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION VECTOR(NWKSMX)
      CHARACTER SYMLBL*3
      INTEGER PUWKT,REFWLK,FWORD,ORBFRM,SEC2I
      LOGICAL IEQJ
      LOGICAL PAGEIN
      DOUBLE PRECISION ACF,DRTVER
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
      COMMON /PAGDAT/IEQJ,IUWKSV,JUWKSV,NLWKI2,NLWKJ2,JWALK,IWALK,II,JJ
      IWORD3=SEC2I(1)+1
      IWALK=0
      II=1
      JJ=1
      IEQJ=.TRUE.
      RETURN
      ENTRY PAGES
      IF(IUWK.NE.JUWK) GO TO 210
      ENTRY PAGED
  200 IF(NLWKI.GT.NWKSMX) RETURN
      IUWKSV=IUWK
      JUWKSV=JUWK
      IEQJ=.TRUE.
      PAGEIN=.TRUE.
      NLWKI2=NLWKI+NLWKI
      NLWKJ2=NLWKI2
      NOFFI=IUWK-1
      NOFFJ=NOFFI
      IWALK=NOFFI+NOFFI
      II=1
      JJ=1
      FWORD=IWALK+IWORD3
      WRITE(IFILE6,10)
      CALL MABORT
   10 FORMAT(2X,'ENTRY PAGES')
C     CALL WREADW(ITAP03,VECTOR,NLWKI2,FWORD,JUNK)
      RETURN
  210 IF((NLWKI+NLWKJ).GT.NWKSMX) RETURN
      ENTRY PAGEO
      IUWKSV=IUWK
      JUWKSV=JUWK
      PAGEIN=.TRUE.
      IEQJ=.FALSE.
      NLWKI2=NLWKI+NLWKI
      NLWKJ2=NLWKJ+NLWKJ
      NOFFI=IUWK-1
      NOFFJ=JUWK-1
      IWALK=NOFFI+NOFFI
      JWALK=NOFFJ+NOFFJ
      NOFFJ=NOFFJ-NLWKI
      II=1
      JJ=NLWKI+1
      FWORD=IWALK+IWORD3
      WRITE(IFILE6,11)
      CALL MABORT
  11  FORMAT(2X,'ENTRY PAGEO')
C     CALL WREADW(ITAP03,VECTOR,NLWKI2,FWORD,JUNK)
      FWORD=JWALK+IWORD3
C     CALL WREADW(ITAP03,VECTOR(JJ),NLWKJ2,FWORD,JUNK)
      RETURN
      ENTRY PAGEIJ
C   CHECK THAT SOMETHING HAS CHANGED
      IF(IUWKSV.EQ.IUWK.AND.JUWKSV.EQ.JUWK) RETURN
      IF(IEQJ) GO TO 400
      IF(IUWKSV.EQ.IUWK) GO TO 310
      IF(JUWKSV.EQ.JUWK) GO TO 330
  300 PAGEIN=.FALSE.
      IF(IUWK.EQ.JUWK) GO TO 200
      GO TO 210
  310 IF((NLWKI+NLWKJ).LE.NWKSMX) GO TO 320
      PAGEIN=.FALSE.
      RETURN
  320 JJ=NLWKI+1
      JUWKSV=JUWK
      NLWKJ2=NLWKJ+NLWKJ
      NOFFJ=JUWK-1
      JWALK=NOFFJ+NOFFJ
      NOFFJ=NOFFJ-NLWKI
      FWORD=JWALK+IWORD3
      WRITE(IFILE6,12)
      CALL MABORT
 12   FORMAT(2X,'ENTRY PAGEIJ')
C     CALL WREADW(ITAP03,VECTOR(JJ),NLWKJ2,FWORD,JUNK)
      RETURN
  330 IF(IUWK.NE.JUWK) GO TO 340
      IEQJ=.TRUE.
      II=JJ
      IWALK=JWALK
      IUWKSV=IUWK
      NLWKI2=NLWKJ2
      RETURN
  340 IF(NLWKI.LT.JJ) GO TO 350
      PAGEIN=.FALSE.
      GO TO 210
  350 IUWKSV=IUWK
      NOFFI=IUWK-1
      IWALK=NOFFI+NOFFI
      NLWKI2=NLWKI+NLWKI
      II=1
      FWORD=IWALK+IWORD3
C     CALL WREADW(ITAP03,VECTOR(II),NLWKI2,FWORD,JUNK)
      RETURN
  400 IF(IUWK.NE.IUWKSV) GO TO 420
      IEQJ=.FALSE.
      IF(II.EQ.1) GO TO 405
      IF(NLWKJ.GE.II) GO TO 420
      JJ=1
      GOTO 410
  405 IF((NLWKI+NLWKJ).GT.NWKSMX) GO TO 420
      JJ=II+NLWKI
  410 JUWKSV=JUWK
      NOFFJ=JUWK-1
      JWALK=NOFFJ+NOFFJ
      NOFFJ=NOFFJ-NLWKI
      NLWKJ2=NLWKJ+NLWKJ
      FWORD=JWALK+IWORD3
C     CALL WREADW(ITAP03,VECTOR(JJ),NLWKJ2,FWORD,JUNK)
      RETURN
  420 PAGEIN=.FALSE.
      IF(IUWK.EQ.JUWK) GO TO 200
      GO TO 210
      END
C////////////////////////////////////////////////////
      SUBROUTINE DENSMA(DRTDM,TRANS,SCFDM,SCFVEC,OCC,OCCNO,XSO,
     $      ORBTBF,BFCODE,JUNK,VECWRT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER FWORD,FZC,ORBTBF,BFCODE,SYM,ICBN13(16),LOCVEC
      DOUBLE PRECISION SCFVEC,OCC,SUM,OCCNO,XSO,XXX
      DOUBLE PRECISION DRTDM(NBF,NBF),TRANS(NBF,NBF),SCFDM(NBF,NBF)
      CHARACTER SYMLBL*3,CHTP*3
      DIMENSION SCFVEC(NBF,NBF),ORBTBF(NORBS),OCC(NBF),JUNK(NBF)
      DIMENSION XSO(1),OCCNO(NBF),VECWRT(1)
      DIMENSION BFCODE(NBF),FMT(26),ILBL(26)
clj113088 Begin.
      parameter (mbf=200)
      dimension dmdiag(mbf),dmpack(mbf*(mbf+1)/2)
      dimension tv1(mbf),tv2(mbf)
clj113088 End.
      LOGICAL PAGEIN
      DOUBLE PRECISION ACF,DRTVER
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
      DATA FZC/1/
C    FORM THE SCF DENSITY MATRIX
      IJL=0
      IJM=0
      IJN=0
      DO 4  I=1,NBF*(NBF+1)/2
    4 XSO(I)=0.0D0
      DO 20 I=1,NBF
      DO 10 J=1,I
      SCFDM(J,I) = 0.0D0
   10 SCFDM(I,J) = 0.0D0
      IF(BFCODE(I).EQ.FZC) SCFDM(I,I) = 2.0D0
   20 CONTINUE
      DO 30 I=1,NORBS
      DO 30 J=1,I
      II = ORBTBF(I)
      JJ = ORBTBF(J)
      ELE = DRTDM(I,J)
      SCFDM(JJ,II) = ELE
   30 SCFDM(II,JJ) = ELE
      WRITE(IFILE6,31)
   31 FORMAT(//,1H ,32X,'POPULATIONS OF THE MOLECULAR ORBITALS'/)
      WRITE(IFILE6,32) (I,SCFDM(I,I),I=1,NBF)
   32 FORMAT(8(I3,1X,F10.5))
      IF(PRPFLG.LT.1) GO TO 50
      DO 40 I=1,NBF
      DO 40 J=1,NBF
   40 SCFVEC(I,J)=0.0D0
      REWIND IFIL51
      CALL SCFLCV(LOCVEC)
      LOCVC2=LOCVEC
   50 CONTINUE
      IORB=0
      DO 190 L=1,NSYM
      NTOT=NTOTS(L,1)
      IF (NTOT.EQ.0) GO TO 190
      SYM=NTOTS(L,2)
      CHTP=SYMLBL(SYM+SYMDIF)
      II=IORB
      DO 70 I=1,NTOT
      JJ=IORB
      II=II+1
      DO 70 J=1,NTOT
      JJ=JJ+1
      SCFVEC(I,J)=SCFDM(II,JJ)
      DRTDM(I,J)=SCFDM(II,JJ)
   70 CONTINUE
      IORB=IORB+NTOT
clj113088 Begin. replaced call to hdiag with call to rsp.
clj   CALL HDIAG(DRTDM,TRANS,OCC,NBF,NTOT,JUNK,0)
      if (ntot.gt.mbf) then
        write(6,*) 'onepdm: densma: increase mbf to at least',mbf
        write(3,*) 'onepdm: densma: increase mbf to at least',mbf
        stop
        endif
      ntri = ntot*(ntot+1)/2
      ijtmp = 0
      do 1802 itmp = 1, ntot
        do 2802 jtmp = 1, itmp
          ijtmp = ijtmp + 1
          if (drtdm(itmp,jtmp).ne.drtdm(jtmp,itmp))
     &      write(6,*) 'nonsymmetric drtdm: i,j,delta=',
     &                  itmp,jtmp,drtdm(itmp,jtmp)-drtdm(jtmp,itmp)
          dmpack(ijtmp) = drtdm(itmp,jtmp)
 2802     continue
 1802   continue
      call rsp(nbf,ntot,ntri,dmpack,dmdiag,1,trans,tv1,tv2)
 
clj RSP has put things in the wrong order--reverse ordering.
      do 1804 i1tmp = 1, ntot/2
        i2tmp = ntot - i1tmp + 1
        tmp = dmdiag(i2tmp)
        dmdiag(i2tmp) = dmdiag(i1tmp)
        dmdiag(i1tmp) = tmp
        do 2804 jtmp = 1, ntot
          tmp = trans(jtmp,i2tmp)
          trans(jtmp,i2tmp) = trans(jtmp,i1tmp)
          trans(jtmp,i1tmp) = tmp
 2804     continue
 1804   continue
 
c     write(6,*)
c     write(6,*) 'The eigenvalues of the onepdm for irrep ',chtp
c     do 1803 itmp = 1, ntot
c       write(6,fmt='(1x,i5,f20.16)') itmp,dmdiag(itmp)
c1803   continue
 
clj Put the diagonal DM in drtdm.
      do 1801 itmp = 1, ntot
       do 2801 jtmp = 1, ntot
         drtdm(itmp,jtmp) = 0.d0
 2801    continue
       drtdm(itmp,itmp) = dmdiag(itmp)
 1801  continue
clj113088 End.
      IF(PRINT.EQ.0) GOTO 90
      DO 80 I=1,NTOT
   80 OCC(I)=DRTDM(I,I)
      IF(L.EQ.1) WRITE(IFILE6,81)
   81 FORMAT(//,1H1,21X,'DENSITY MATRIX OVER MOLECULAR ORBITALS',/)
      CALL PRINMA(SCFVEC,OCC,CHTP,NTOT,1,NBF)
   90 CONTINUE
      IF(PRPFLG.LT.1) GO TO 190
      DO 92  IJK=1,NTOT
      IJL=IJL+1
   92 OCCNO(IJL)=OCC(IJK)
      DO 96  J=1,NTOT
      CALL WREADW(IFIL30,OCC,INTOWP(NTOT),LOCVEC,LOCVEC)
      DO 96  I=1,NTOT
   96 SCFVEC(I,J)=OCC(I)
      DO 150 I=1,NTOT
      DO 150 J=1,NTOT
      SUM=0.0D0
CCC  BEFORE 7/12/84 TRANS(J,K) APPEARED HERE INCORRECTLY.  W. ALLEN .
      DO 140 K=1,NTOT
  140 SUM=SUM+SCFVEC(I,K)*TRANS(K,J)
      SCFDM(I,J)=SUM
  150 CONTINUE
      DO 170 I=1,NTOT
  170 WRITE(IFIL51,172) (SCFDM(J,I),J=1,NTOT)
      DO 171 I=1,NTOT
  171 WRITE(IFIL51,172) (TRANS(J,I),J=1,NTOT)
clj113088 (increase precision)  172 FORMAT(1X,5E20.12)
  172 FORMAT(1X,5D23.16)
  190 CONTINUE
      IF(PRPFLG.LT.1) RETURN
      CALL WREADW(IFIL30,OCC,INTOWP(NBF),LOCVEC,LOCVEC)
      WRITE(IFILE6,230)
  230 FORMAT(//,1X,'MOLECULAR ORBITAL ENERGIES',/)
      WRITE(IFILE6,32) (I,OCC(I),I=1,NBF)
      WRITE(IFILE6,231)
  231 FORMAT(//)
      IF(PRINT.LT.2) GO TO 301
      REWIND IFIL51
      DO 300  L=1,NSYM
      NTOT=NTOTS(L,1)
      IF(NTOT.EQ.0) GO TO 300
      SYM=NTOTS(L,2)
      CHTP=SYMLBL(SYM+SYMDIF)
           DO 302  I=1,NTOT
  302      READ(IFIL51,172) (SCFDM(J,I),J=1,NTOT)
           DO 304  I=1,NTOT
  304      READ(IFIL51,172) (TRANS(J,I),J=1,NTOT)
      IF(L.EQ.1) WRITE(IFILE6,200)
  200 FORMAT(//,1H1,20X,'NATURAL ORBITALS IN TERMS OF MOLECULAR'
     $       ,' ORBITALS',/)
      CALL PRINMA(TRANS,OCC,CHTP,NTOT,0,NBF)
  300 CONTINUE
  301 REWIND IFIL51
      IJM=0
      DO 310  L=1,NSYM
      NTOT=NTOTS(L,1)
      IF(NTOT.EQ.0) GO TO 310
      SYM=NTOTS(L,2)
      CHTP=SYMLBL(SYM+SYMDIF)
           DO 312  I=1,NTOT
  312      READ(IFIL51,172) (SCFDM(J,I),J=1,NTOT)
           DO 314  I=1,NTOT
  314      READ(IFIL51,172) (TRANS(J,I),J=1,NTOT)
      IF(PRINT.LT.3) GO TO 217
      IF(L.EQ.1) WRITE(IFILE6,210)
  210 FORMAT(//,1H1,20X,'NATURAL ORBITALS IN TERMS OF SYMMETRY'
     $       ,' ORBITALS',/)
      CALL PRINMA(SCFDM,OCC,CHTP,NTOT,0,NBF)
  217 CONTINUE
CWA   WRITE THE NO'S TO FILE30.
      IF(PRPFLG.EQ.2) THEN
           KK=0
           DO 316  J=1,NTOT
           DO 316  I=1,NTOT
           KK=KK+1
 316       VECWRT(KK)=SCFDM(I,J)
           CALL WWRITW(IFIL30,VECWRT,INTOWP(KK),LOCVC2,LOCVC2)
           WRITE(IFILE6,211) PRPFLG
 211  FORMAT(//,1X,'WARNING: NATURAL ORBITALS HAVE BEEN WRITTEN ',
     $  'TO FILE30.'/,1X,'PRPFLG=',I5)
      END IF
CWA   FORM THE SO 1-PDM AND WRITE IT TO FILE50.
      DO 322  I=1,NTOT
      DO 322  J=1,I
        XXX=0.0D0
        IJL=IJM
        DO 324  K=1,NTOT
        IJL=IJL+1
  324   XXX=XXX+OCCNO(IJL)*SCFDM(I,K)*SCFDM(J,K)
      IJI=I+IJM
      IJJ=IJI*(IJI-1)/2+IJM+J
  322 XSO(IJJ)=XXX
      IJM=IJM+NTOT
  310 CONTINUE
      KK=NBF*(NBF+1)/2
      CALL SWRIT(IFIL50,XSO,INTOWP(KK))
  220 CONTINUE
      RETURN
C 900 WRITE(IFILE6,905) CHTP,NTOT,NTOTS(L,1)
C 905 FORMAT (1X,'VECTOR DOES NOT MATCH DRT, SYMMETRY ',A3,' SCF NTOT='
C    $,       I3,' DRT NTOT=',I3)
C     CALL MABORT
      END
C/////////////////////////////////////////////////
       SUBROUTINE NCDLBL(ITAPE,NA,NB,NC,ND,NE,RF,RG,RH)
       DOUBLE PRECISION RF,RG,RH,RN
       DIMENSION NA(26),NB(26),N(112),RN(10)
       EQUIVALENCE (N(57),RN(1))
       L=26
       DO 10 I=1,26
       L = L + 1
       N(I) = NA(I)
 10    N(L) = NB(I)
       N(53) = NC
       N(54) = ND
       N(55) = NE
       RN(1) = RF
       RN(2) = RG
       RN(3) = RH
       CALL SWRIT(ITAPE,N,112)
       RETURN
C
       ENTRY DCDLBL(ITAPE,NA,NB,NC,ND,NE,RF,RG,RH)
       CALL SREAD(ITAPE,N,112)
       L=26
       DO 20 I=1,26
       L = L + 1
       NA(I) = N(I)
 20    NB(I) = N(L)
       NC = N(53)
       ND = N(54)
       NE = N(55)
       RF = RN(1)
       RG = RN(2)
       RH = RN(3)
       RETURN
       END
C////////////////////////////////////////////////////////
      SUBROUTINE SCFLCV(LOCVEC)
      INTEGER LOCVEC,I10(200),IELAST(1),ICBN10(16)
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
C  LOCATE POSITION OF SCF VECTOR ON FILE 30.
      CALL WREADW(IFIL30,I10,200,101,JUNK)
      IEND=I10(1)
      MPOINT=I10(2)
      MCONST=I10(3)
      MCALCS=I10(4)
      NCALCS=I10(5)
      NAT=I10(19)
      JUNK=101+MCONST+MPOINT
      CALL WREADW(IFIL30,I10,MCALCS,JUNK,JUNK)
      LOCCAL=I10(NCALCS)
      JUNK=LOCCAL+60
      CALL WREADW(IFIL30,I10,20,JUNK,JUNK1)
      NEWVEC=0
      LOCVEC=I10(1)
      IF(LOCVEC.LE.0) THEN
           LOCVEC=IEND
           I10(1)=IEND
           CALL WREADW(IFIL30,I10,20,JUNK,JUNK1)
           NEWVEC=1
      END IF
      JUNK=LOCCAL+60+20+INTOWP(3*NAT)+INTOWP(1)
      CALL WREADW(IFIL30,IELAST,INTOWP(1),JUNK,JUNK)
      RETURN
      END
      SUBROUTINE MABORT
      WRITE(6,*) ' MABORT CALLED '
      STOP
      END
C////////////////////////////////////////////////////////////////////
      SUBROUTINE SETSYM(PGROUP)
      CHARACTER PGROUP*3,SYMLBL*3
      INTEGER PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM,SYMOFF
      INTEGER NTOTS,SYMDIF
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      SYMLBL(1)='A'
      SYMLBL(2)='A'''
      SYMLBL(3)='A"'
      SYMLBL(4)='A1'
      SYMLBL(5)='A2'
      SYMLBL(6)='B1'
      SYMLBL(7)='B2'
      SYMLBL(8)=' AG'
      SYMLBL(9)='B1G'
      SYMLBL(10)='B2G'
      SYMLBL(11)='B3G'
      SYMLBL(12)=' AU'
      SYMLBL(13)='B1U'
      SYMLBL(14)='B2U'
      SYMLBL(15)='B3U'
      IF(PGROUP.EQ.' C1'.OR.PGROUP.EQ.' C2') THEN
      IRSYM=1
      SYMLBL(2)='A'
      SYMLBL(3)='B'
      ELSE IF (PGROUP.EQ.' CS') THEN
      IRSYM=2
      ELSE IF (PGROUP.EQ.' CI') THEN
      SYMLBL(2)='AG'
      SYMLBL(3)='AU'
      IRSYM=2
      ELSE IF (PGROUP.EQ.'C2V') THEN
      IRSYM=2
      ELSE IF (PGROUP.EQ.' D2') THEN
      SYMLBL(4)=' A'
      SYMLBL(5)='B1'
      SYMLBL(6)='B2'
      SYMLBL(7)='B3'
      IRSYM=2
      ELSE IF (PGROUP.EQ.'C2H') THEN
      SYMLBL(4)='AG'
      SYMLBL(5)='BG'
      SYMLBL(6)='AU'
      SYMLBL(7)='BU'
      IRSYM=2
      ELSE IF (PGROUP.EQ.'D2H') THEN
      IRSYM=3
      END IF
      RETURN
      END
C////////////////////////////////////////////////////////////////////
      SUBROUTINE XAOWRT(USOTAO,XSO,XAO,SCRT1,SCRT2,SCRT3,NBF,NUMAO
     $,   LOCU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION USOTAO(1),XSO(1),XAO(1)
      DIMENSION SCRT1(NUMAO,NUMAO),SCRT2(NUMAO,NUMAO),SCRT3(NUMAO)
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      KK=NUMAO*NBF
      CALL WREADW(IFIL30,USOTAO,INTOWP(KK),LOCU,JJ)
      KK=0
      DO 10  I=1,NBF
           SCRT3(I)=0.0D0
           DO 10  K=1,NUMAO
           KK=KK+1
           SCRT2(K,I)=USOTAO(KK)
 10        SCRT3(I)=SCRT3(I)+USOTAO(KK)*USOTAO(KK)
      DO 15  J=1,NBF
      DO 15  I=1,NUMAO
CWA   SCRT1(J,I)=SCRT2(I,J)/SCRT3(J)
 15   SCRT1(J,I)=SCRT2(I,J)
      CALL SREW(IFIL50)
      KK=NBF*(NBF+1)/2
      CALL SREAD(IFIL50,XSO,INTOWP(KK))
      DO 20  I=1,NUMAO
      DO 20  J=1,I
           KK=I*(I-1)/2+J
           VAL1=0.0D0
           DO 25  L=1,NBF
           DO 25  K=1,NBF
           LL=MIN0(K,L)
           MM=MAX0(K,L)
           LL=MM*(MM-1)/2+LL
 25        VAL1=SCRT1(K,I)*SCRT1(L,J)*XSO(LL)+VAL1
 20   XAO(KK)=VAL1
CWA   WRITE THE AO 1-PDM TO THE MASTER FILE.
      CALL MWRIT(XAO,34)
      END
C//////////////////////////////////////////////////////////////////////
      SUBROUTINE SCFLCU(LOCU,NUMAO)
      INTEGER ITEMP(200)
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      MPOINT=200
      MCONST=200
      CALL WREADW (IFIL30,ITEMP,MCONST,101,IEND)
      NUMAO = ITEMP(22)
      CALL WREADW (IFIL30,ITEMP,MPOINT,IEND,IEND)
      LOCU = ITEMP(29)
      END
      SUBROUTINE PRINMA(ARRAY,EIG,SYM,N,IFLG,NN)
clj113088 This version of prinma prints matrices using more digits.
C     EXTENDED DUMMY ARRAY,EIG
      DOUBLE PRECISION ARRAY(NN,NN),EIG(NN)
      CHARACTER SYMLBL*3,SYM*3
      LOGICAL PAGEIN
      DOUBLE PRECISION ACF,DRTVER
      INTEGER BMAX,PUWK,PRPFLG,PRINT,ROOTI,ROOTF,SYMOFF,IRSYM
      INTEGER DRTLBL,SCFLBL,SYMDIF
      COMMON /TAPES/IFILE3,IFILE5,IFILE6,ITAPE7,IFIL58,IFIL54,IFIL50
     $,             IFIL51,IDEV,IFIL30
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     $,             NWKSMX,NWKMX2,NLWKMX,BMAX,NROOTS,NORBSQ,NBFSQ
     $,             NOCCMX,NREFS,IEND
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,NUMKL,INTSRT
      COMMON /LOOPS/ACF,IUWK,JUWK,NLWK,IORB,JORB,PUWK
      COMMON /PAGE/ IWORD3,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL
      COMMON /OPS/  PRINT,MAX,NOFLG,PRPFLG,ROOTI,ROOTF,IRSYM
      COMMON /SYMM/ SYMOFF(8),NTOTS(8,2),SYMDIF,SYMLBL(15)
      COMMON /LBLS/ DRTVER,DRTLBL(26),INTLBL(26),SCFLBL(26)
      INC=4
      IF(IDEV.EQ.0) INC=5
      MINI = 1
   10 MAXI = N
      IF((MAXI-MINI).GT.INC) MAXI = MINI + INC
      WRITE(IFILE6,20)SYM,(K,K=MINI,MAXI)
   20 FORMAT(/,1H ,'IRREP ',A3,3X, 6(I3,17X))
      DO 30 I=1,N
   30 WRITE(IFILE6,31)(ARRAY(I,J),J=MINI,MAXI)
   31 FORMAT(1H ,6X, 6F20.16)
      IF(IFLG.EQ.0) GO TO 40
      WRITE(IFILE6,32)(EIG(J),J=MINI,MAXI)
   32 FORMAT(1H ,'EIGENVALUES',/,1H ,6X, 6F20.16)
   40 MINI = MAXI + 1
      IF(MAXI.LT.N) GO TO 10
      RETURN
      END
