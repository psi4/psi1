      SUBROUTINE FENTRY(CC,IA,MAXCOR)
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
c Moved to PSI distribution disk on 020389 - clj.
C**********************************************************************
C*  BY:  YUKIO YAMAGUCHI                           SEARCH:  C2-20-89  *
C*  DATE:  FEBRUARY 20, 1989                                          *
C*  REASON: MODIFICATION FOR IMS VERSION                              *
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         SEARCH:  C3-25-88  *
C*  DATE:  MARCH  25,  1988                                           *
C*  REASON: MIGRATION TO RUN IN 7MB ON 9370                           *
C**********************************************************************
C*  LAST UPDATED ON AUGUST 19, 1985 BY RICHARD REMINGTON              *
C*   REASON: INCREASE MATRIX NAT TO NAT(50,50) FROM                   *
C*   NAT(10,10) FOR LARGE CASES AND ADD AN ADDITIONAL                 *
C*   OPTION TO  "IPRNT"  IN ORDER TO SUPPRESS PRINTING                *
C*   OF ANGLES FOR LARGE CASES (ANY NEGATIVE VALUE FOR                *
C*   THE EIGHTH PARAMETER SUPPRESSES ANGLE PRINTING).                 *
C**********************************************************************
C*  LAST UPDATED ON FEBRUARY 20, 1985 BY YUKIO YAMAGUCHI              *
C**********************************************************************
C   THE SOURCE CODE OF GEOMETRY OPTIMIZATION PROGRAM
C   THIS PROGRAM IS ABLE TO TREAT UP TO '50' ATOMS
C   THIS PROGRAM IS ABLE TO TREAT UP TO '150' INTERNAL COORDINATES
      IMPLICIT REAL*8 (A-H,O-Z)
C02-20-89  DIMENSION CC(360000),IA(1)
      DIMENSION CC(MAXCOR),IA(1)
      DIMENSION I30(200),NUNQ(50),NAT(50,50),COORD(3,50)
      CHARACTER*8 UPD
      LOGICAL UPDATE
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM102/NSORT,NCOOD,NDIF,NPLUS,NCASE,NROOT
      COMMON/COM103/CHG(50),XX(50),YY(50),ZZ(50)
      COMMON/COM104/EX(50),EY(50),EZ(50)
      COMMON/COM105/ENGR(150),RCOOD(150)
      COMMON/COM106/ESCF(150),GNORM(150),SNORM(150)
      COMMON/COM107/R(1275)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      COMMON/COM109/XMAX,YMAX,ZMAX
      COMMON/COM110/NSET(150),NORD(150),NXVAR(150)
      COMMON/COM112/XOLD(150),XNEW(150)
C2-20-89  EQUIVALENCE (CC,IA)
      DATA A00,TEN / 0.0D+00 , 10.0D+00 /
      DATA FMILI / 1.0D-3 /
    1 FORMAT(//,2X,' THE GEOMETRY OPTIMIZATION PROGRAM'//)
    2 FORMAT(2I5,F20.10,I5)
    3 FORMAT(10I5)
    4 FORMAT(14I5)
    5 FORMAT(A5,3I5)
    6 FORMAT(2X,' NCOOD   = ',I5/
     1 2X,' NSORT   = ',I5/
     2 2X,' IHESS   = ',I5/
     3 2X,' IMETR   = ',I5/
     4 2X,' IAGHES  = ',I5/
     5 2X,' NVAR    = ',I5/
     6 2X,' NROOT   = ',I5/
     7 2X,' IPRNT   = ',I5/
     8 2X,' NATOM   = ',I5/
     9 2X,' N3N     = ',I5/
     A 2X,' NINT    = ',I5/
     B 2X,' IFORCE  = ',I5/
     C 2X,' NSTORE  = ',I5/
     D 2X,' NCASE   = ',I5/
     E 2X,' NPLUS   = ',I5/
     F 2X,' NDIF    = ',I5/
     H 2X,' NCHNG   = ',I5/
     H 2X,' NCONV   = ',I5/
     I 2X,' NUNIQ   = ',I5)
    7 FORMAT(//,2X,' THERE ARE NOT ENOUGH DATA TO USE THE QUASI NEWTON-R
     1APHSON METHOD'/)
    8 FORMAT(//,2X,' OLD COORDINATES IN TAPE30'/
     1 39X,' OLD X IN A.U.'/
     2 4X,4H NO.,4X,7H CHARGE,9X,2H X,14X,2H Y,14X,2H Z/)
    9 FORMAT(3X,I5,1X,4F16.10)
   10 FORMAT(//,2X,' NEW COORDINATES IN TAPE30'/
     1 39X,' NEW X IN A.U.'/
     2 4X,4H NO.,4X,7H CHARGE,9X,2H X,14X,2H Y,14X,2H Z/)
   11 FORMAT(//,2X,' GEOMETRY IN TAPE30 IS UPDATED'/)
   12 FORMAT(//,2X,':::::::::::::::::::::::::::'/
     1          2X,':::GEOMETRY IS OPTIMIZED:::'/
     2          2X,':::::::::::::::::::::::::::'//
     3          2X,' GNORM = ',F15.10,7X,' GCONV = ',F15.10/)
   13 FORMAT(//,2X,' TOO BIG CHANGE IN GEOMETRY---SCRATCH YOUR HEAD TO F
     1IND A NEW GEOMETRY'//
     2          2X,' XMAX = ',F15.10,7X,' YMAX = ',F15.10,7X,' ZMAX = ',
     3                        F15.10,7X,' GCHNG = ',F15.10/)
   14 FORMAT(//,2X,' SHORT OF INFORMATION---SCRATCH YOUR HEAD TO FIND A
     1NEW GEOMETRY'/)
C
      CALL TSTART(6)
      CALL NOUNFL
C
      LDIM=1275
      MDIM=150
      NDIM=50
      INPUT=5
      ITAPE6=6
      ITAP12=12
      ITAP13=13
      ITAP15=15
      ITAP30=30
      IFLAG=0
C2-20-89  MAXCOR=360000
C
      WRITE(6,1)
      REWIND ITAP12
      REWIND ITAP13
      READ(ITAP12,2) NATOM,NINT,ESCFZ,IFORCE
C
C   NSORT IS A PARAMETER FOR SORTING
C     NSORT=0---NO SORT
C     NSORT=1---GRADIENT SORT
C     NSORT=2---ENERGY SORT
C     NSORT=3---SELECTED GRADIENT SORT
C   IMETR IS A PARAMETER FOR THE VARIABLE METRIC METHOD
C     IMETR=0---SKIP THIS METHOD
C     IMETR=1---MURTAGH-SARGENT METHOD
C     IMETR=2---FLETCHER METHOD
C     IMETR=3---DAVIDON-FLETCHER-POWELL METHOD
C   IAHESS IS A PARAMETER FOR THE AUGMENTED HESSIAN METHOD
C     IAHESS=0---SKIP THIS METHOD
C     IAHESS=1---USE THIS METHOD
C
      N3N=NATOM*3
      CALL LOCATE(INPUT,'# GNEXTS #',IERR)
      READ(5,3) NCOOD,NSORT,IHESS,IMETR,IAGHES,NVAR,NROOT,IPRNT
      IF(NROOT.LE.0) NROOT=1
      READ(5,4) (NSET(I),I=1,NCOOD)
      DO 101 I=1,N3N
  101 NXVAR(I)=I
      IF(NVAR.EQ.0) NVAR=N3N
      IF(NVAR.EQ.N3N) GO TO 201
      READ(5,4) (NXVAR(I),I=1,NVAR)
  201 READ(ITAP13,3,END=300) NSTORE
      GO TO 301
  300 CONTINUE
      NSTORE=0
  301 CONTINUE
      NCASE=NCOOD+1
      NPLUS=NSTORE+1
      NDIF=NPLUS-NCASE
      READ(5,5) UPD,NCHNG,NCONV,NUNIQ
      IF(UPD.EQ.'UP     ') UPDATE=.TRUE.
      IF(NCHNG.EQ.0) NCHNG=2
      IF(NCONV.EQ.0) NCONV=7
      IF(NUNIQ.EQ.0) NUNIQ=NATOM
      WRITE(6,6) NCOOD,NSORT,IHESS,IMETR,IAGHES,NVAR,NROOT,IPRNT,
     1 NATOM,N3N,NINT,IFORCE,NSTORE,NCASE,NPLUS,NDIF,NCHNG,NCONV,NUNIQ
      GCHNG=TEN**(-NCHNG)
      GCONV=TEN**(-NCONV)
      IF(.NOT.UPDATE) GO TO 202
      DO 102 I=1,NATOM
      NUNQ(I)=1
      NAT(I,1)=I
  102 CONTINUE
      IF(NUNIQ.EQ.NATOM) GO TO 202
      DO 103 I=1,NUNIQ
      READ(5,4) NN,(NAT(I,J),J=1,NN)
      NUNQ(I)=NN
  103 CONTINUE
C
C   READ IN STORED INFORMATION FROM TAPE13
  202 CONTINUE
      IC1=1
      IC2=IC1+N3N*NPLUS
      IC3=IC2+N3N*NPLUS
      IC4=IC3+NINT*NPLUS
      IC5=IC4+NINT*NPLUS
      IC6=IC5+N3N*NPLUS
      IC7=IC6+N3N*NPLUS
      IC8=IC7+NINT*NPLUS
      ICMAX=IC8+NINT*NPLUS
C.................X       G       COOD    ENG.....
      CALL READIN(CC(IC5),CC(IC6),CC(IC7),CC(IC8))
C
C   SORT DATA W.R.T. GRADIENT OR ENERGY
      IC1=1
      IC2=IC1+N3N*NPLUS
      IC3=IC2+N3N*NPLUS
      IC4=IC3+NINT*NPLUS
      IC5=IC4+NINT*NPLUS
      IC6=IC5+N3N*NPLUS
      IC7=IC6+N3N*NPLUS
      IC8=IC7+NINT*NPLUS
      ICMAX=IC8+NINT*NPLUS
C...............SX      SG      SCOOD   SENG    X       G.......
      CALL SORT(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C...............COOD    ENG.....
     1          CC(IC7),CC(IC8))
      GNORML=GNORM(NPLUS)*FMILI
      IF(NSORT.EQ.3) GNORML=SNORM(NPLUS)*FMILI
      IF(GNORML.LT.GCONV) GO TO 215
C
C*********************************
C***QUASI NEWTON-RAPHSON METHOD***
C*********************************
C:::THIS SECTION ONLY HANDLES THE INTERNAL COORDINATE SYSTEM:::
C
      IF(NDIF.LT.0) GO TO 203
      IC1=1
      IC2=IC1+N3N*NPLUS
      IC3=IC2+N3N*NPLUS
      IC4=IC3+NINT*NPLUS
      IC5=IC4+NINT*NPLUS
      IC6=IC5+NCOOD*NCOOD
      IC7=IC6+NCOOD*NCOOD
      IC8=IC7+NCOOD*NCOOD
      IC9=IC8+NCOOD
      IA9=IC9+IC9-1
      ICMAX=IC9+NCOOD
C................SX      SG      SCOOD   SENG    FC      FT......
      CALL QUASI(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................EE      PIVOT   INDEX...
     1           CC(IC7),CC(IC8),IA(IA9))
C
C   ESTIMATE FORCE CONSTANT MATRIX
      IC1=1
      IC2=IC1+N3N*NPLUS
      IC3=IC2+N3N*NPLUS
      IC4=IC3+NINT*NPLUS
      IC5=IC4+NINT*NPLUS
      IC6=IC5+NCOOD*NCOOD
      IC7=IC6+NCOOD*NCOOD
      IC8=IC7+NCOOD*NCOOD
      IC9=IC8+NCOOD*NCOOD
      IC10=IC9+NCOOD*NCOOD
      IC11=IC10+NCOOD
      IA11=IC11+IC11-1
      ICMAX=IC11+NCOOD
C.................SCOOD   SENG    FC      DELC    FF      DELG....
      CALL FESTIM(CC(IC3),CC(IC4),CC(IC5),CC(IC6),CC(IC7),CC(IC8),
C.................EE      PIVOT    INDEX....
     1            CC(IC9),CC(IC10),IA(IA11))
      IF(DABS(XMAX).GT.GCHNG) GO TO 204
      IF(DABS(YMAX).GT.GCHNG) GO TO 204
      IF(DABS(ZMAX).GT.GCHNG) GO TO 204
      GO TO 212
  203 CONTINUE
      WRITE(6,7)
C
C********************************
C***THE VARIABLE METRIC METHOD***
C********************************
C:::THIS SECTION ONLY HANDLES THE CARTESIAN COORDINATE SYSTEM:::
  204 CONTINUE
      IF(.NOT.UPDATE.AND.IMETR.EQ.0) GO TO 205
      IC1=1
      IC2=IC1+N3N*NPLUS
      IC3=IC2+N3N*NPLUS
      IC4=IC3+N3N*N3N
      IC5=IC4+NVAR*NVAR
      IC6=IC5+NVAR*NVAR
      IC7=IC6+NVAR*NVAR
      IC8=IC7+NVAR
      IA8=IC8+IC8-1
      ICMAX=IC8+NVAR
C.................SX      SG      FX      HH      FT      EE......
      CALL METRIC(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C.................PIVOT   INDEX...........................
     1            CC(IC7),IA(IA8),NVAR,IMETR,IHESS,UPDATE)
C
C**********************************
C***THE AUGMENTED HESSIAN METHOD***
C**********************************
  205 CONTINUE
      IF(IAGHES.EQ.0) GO TO 210
      N3N1=N3N+1
      N3NTRI=N3N1*(N3N1+1)/2
      IC1=1
      IC2=IC1+N3N*NPLUS
      IC3=IC2+N3N*NPLUS
      IC4=IC3+N3N*N3N
      IC5=IC4+N3N1*N3N1
      IC6=IC5+N3N1*N3N1
      IC7=IC6+N3N1*N3N1
      IC8=IC7+N3N1
      IC9=IC8+N3N1
      IC10=IC9+N3N1
      IC11=IC10+N3N1
      ICMAX=IC11+N3NTRI
C.................SX      SG      FX      ELX     EE      FT......
      CALL AGHESS(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C.................VALU    EIGN    FV1     FV2      FC.......
     1            CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),
C.............................
     2            N3N1,N3NTRI)
C
C*******************************
C***UPDATE TAPE10 IF REQUIRED***
C*******************************
C
  210 CONTINUE
      IF(.NOT.UPDATE.AND.NDIF.LT.0) GO TO 218
C
      IF(DABS(XMAX).GT.GCHNG) GO TO 217
      IF(DABS(YMAX).GT.GCHNG) GO TO 217
      IF(DABS(ZMAX).GT.GCHNG) GO TO 217
C
C   READ IN GEOMETRY FROM TAPE30
  212 CONTINUE
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      MPOINT=I30(2)
      MCONST=I30(3)
      NCALCS=I30(5)
      IGEOP=100+MCONST+MPOINT+NCALCS
      CALL WREADW(ITAP30,LOCCAL,1,IGEOP,JUNK)
      IGEOP=LOCCAL+80
      CALL WREADW(ITAP30,COORD,N3N*2,IGEOP,JUNK)
      WRITE(6,8)
      DO 104 I=1,NATOM
      WRITE(6,9) I,CHG(I),COORD(1,I),COORD(2,I),COORD(3,I)
  104 CONTINUE
      DO 107 I=1,NUNIQ
      NN=NUNQ(I)
      SUMX=A00
      SUMY=A00
      SUMZ=A00
      DO 105 J=1,NN
      MM=NAT(I,J)
      SUMX=SUMX+DABS(XX(MM))
      SUMY=SUMY+DABS(YY(MM))
      SUMZ=SUMZ+DABS(ZZ(MM))
  105 CONTINUE
      ANX=DBLE(NN)
      AVGX=SUMX/ANX
      AVGY=SUMY/ANX
      AVGZ=SUMZ/ANX
      DO 106 J=1,NN
      MM=NAT(I,J)
      XX(MM)=DSIGN(AVGX,XX(MM))
      YY(MM)=DSIGN(AVGY,YY(MM))
      ZZ(MM)=DSIGN(AVGZ,ZZ(MM))
  106 CONTINUE
  107 CONTINUE
      WRITE(6,10)
      DO 108 I=1,NATOM
      COORD(1,I)=XX(I)
      COORD(2,I)=YY(I)
      COORD(3,I)=ZZ(I)
      WRITE(6,9) I,CHG(I),COORD(1,I),COORD(2,I),COORD(3,I)
  108 CONTINUE
      CALL WWRITW(ITAP30,COORD,N3N*2,IGEOP,JUNK)
      WRITE(6,11)
      CALL RCLOSE(ITAP30,3)
      GO TO 220
C
C   GEOMETRY IS OPTIMIZED
  215 CONTINUE
      WRITE(6,12) GNORML,GCONV
      STOP 99
C
C   GEOMETRY CHANGE IS TOO LARGE
  217 CONTINUE
      WRITE(6,13) XMAX,YMAX,ZMAX,GCHNG
      GO TO 220
C
C   SHORT OF INFORMATION
  218 CONTINUE
      WRITE(6,14)
C
  220 CONTINUE
C
      CALL TSTOP(6)
C
C02-20-89 STOP
      RETURN
      END
      SUBROUTINE READIN(X,G,COOD,ENG)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION X(N3N,NPLUS),G(N3N,NPLUS)
      DIMENSION COOD(NINT,NPLUS),ENG(NINT,NPLUS)
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM102/NSORT,NCOOD,NDIF,NPLUS,NCASE,NROOT
      COMMON/COM103/CHG(50),XX(50),YY(50),ZZ(50)
      COMMON/COM104/EX(50),EY(50),EZ(50)
      COMMON/COM105/ENGR(150),RCOOD(150)
      COMMON/COM106/ESCF(150),GNORM(150),SNORM(150)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      COMMON/COM110/NSET(150),NORD(150),NXVAR(150)
      DATA ITAP12,ITAP13 / 12 , 13 /
      DATA FKILO,FMILI / 1.0D+3 , 1.0D-3 /
    1 FORMAT(2I5,F20.10,I5)
    2 FORMAT(10I5)
    3 FORMAT(I5,F20.10)
    4 FORMAT(////,2X,10H CASE   = ,I5/
     1 2X,10H ESCF   = ,F20.10)
    5 FORMAT(//,2X,22H CARTESIAN COORDINATES,51X,10H GRADIENTS/
     1 4X,4H NO.,4X,7H CHARGE,9X,2H X,14X,2H Y,14X,2H Z,
     2                       17X,2H X,14X,2H Y,14X,2H Z)
    6 FORMAT(4F20.10)
    7 FORMAT(3X,I5,1X,4F16.10,3X,3F16.10)
    8 FORMAT(//,2X,' INTERNAL GRADIENTS (IN 1.0D+3 A.U.)'/
     1 5X,4H NO.,10X,7H COORD.,13X,6H GRAD./)
    9 FORMAT(2F20.10)
   10 FORMAT(2X,I7,5X,2F20.10)
   11 FORMAT(/,2X,22H NORM FOR GRADIENTS = ,F15.7)
   12 FORMAT(//,2X,' ***SELECTED VARIABLES DO NOT MATCH***'/
     1 2X,' NCOOD = ',I5,' II = ',I5/)
   13 FORMAT(/,2X,' NORM FOR CASE ',I5,3X,' IS ',F15.7/)
   14 FORMAT(///,2X,' CARTESIAN COORDINATE MATRIX'/)
   15 FORMAT(//,2X,' INTERNAL COORDINATE MATRIX'/)
   16 FORMAT(//,2X,' CARTESIAN GRADIENT MATRIX'/)
   17 FORMAT(//,2X,' INTERNAL GRADINET MATRIX'/)
   18 FORMAT(//,2X,' GRADIENTS NORMS AND ENERGIES'/
     1 3X,4H NO.,8X,6H GNORM,14X,6H SNORM,14X,7H ENERGY/)
   19 FORMAT(2X,I4,5X,3F20.10)
C
      REWIND ITAP12
      READ(ITAP12,1) NATOM,NINT,ESCFZ,IFORCE
      REWIND ITAP13
      READ(ITAP13,2,END=400) NSTORE
      GO TO 401
  400 CONTINUE
      NSTORE=0
  401 CONTINUE
C
      DO 105 ICASE=1,NPLUS
      IF(ICASE.EQ.NPLUS) GO TO 202
      READ(ITAP13,3) JCASE,ESCF(ICASE)
      GO TO 203
  202 ESCF(ICASE)=ESCFZ
  203 IF(IPRNT.LE.0) GO TO 301
      WRITE(6,4) ICASE,ESCF(ICASE)
  301 CONTINUE
      IF(IPRNT.LE.0) GO TO 302
      WRITE(6,5)
C***READ CARTESIAN COORDINATES OF EACH CASE
  302 DO 102 I=1,NATOM
      IF(ICASE.EQ.NPLUS) GO TO 204
      READ(ITAP13,6) CHG(I),XX(I),YY(I),ZZ(I)
      GO TO 102
  204 READ(ITAP12,6) CHG(I),XX(I),YY(I),ZZ(I)
  102 CONTINUE
C***READ CARTESIAN GRADIENTS OF EACH CASE
      DO 103 I=1,NATOM
      IF(ICASE.EQ.NPLUS) GO TO 205
      READ(ITAP13,6) CHG(I),EX(I),EY(I),EZ(I)
      GO TO 206
  205 READ(ITAP12,6) CHG(I),EX(I),EY(I),EZ(I)
  206 IF(IPRNT.LE.0) GO TO 303
      WRITE(6,7) I,CHG(I),XX(I),YY(I),ZZ(I),EX(I),EY(I),EZ(I)
  303 IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      X(IX,ICASE)=XX(I)
      X(IY,ICASE)=YY(I)
      X(IZ,ICASE)=ZZ(I)
      G(IX,ICASE)=EX(I)
      G(IY,ICASE)=EY(I)
      G(IZ,ICASE)=EZ(I)
  103 CONTINUE
      IF(IPRNT.LE.0) GO TO 304
      CALL DIST(NATOM,XX,YY,ZZ,NDIM)
      WRITE(6,8)
C***READ COORDINATES AND GRADIENTS OF EACH CASE
  304 DO 104 I=1,NINT
      IF(ICASE.EQ.NPLUS) GO TO 207
      READ(ITAP13,9) RCOOD(I),ENGR(I)
      GO TO 208
  207 READ(ITAP12,9) RCOOD(I),ENGR(I)
  208 ENGR(I)=ENGR(I)*FKILO
      IF(IPRNT.LE.0) GO TO 305
      WRITE(6,10) I,RCOOD(I),ENGR(I)
  305 COOD(I,ICASE)=RCOOD(I)
      ENG(I,ICASE)=ENGR(I)
  104 CONTINUE
C   CALCULATE NORM OF GRADIENTS
      CALL ANORM(CNORM,ENGR,MDIM,NINT)
      IF(IPRNT.LE.0) GO TO 306
      WRITE(6,11) CNORM
  306 GNORM(ICASE)=CNORM
  105 CONTINUE
C
      DO 108 ICASE=1,NPLUS
      II=0
      DO 107 I=1,NINT
      DO 106 J=1,NCOOD
      IF(NSET(J).NE.I) GO TO 106
      II=II+1
      ENGR(II)=ENG(I,ICASE)
  106 CONTINUE
  107 CONTINUE
      IF(II.EQ.NCOOD) GO TO 307
      WRITE(6,12) NCOOD,II
      STOP
  307 CONTINUE
      CALL ANORM(CNORM,ENGR,MDIM,NCOOD)
      IF(IPRNT.LE.0) GO TO 308
      WRITE(6,13) ICASE,CNORM
  308 SNORM(ICASE)=CNORM
  108 CONTINUE
C
C   SUMMARY OF INPUT
      IF(IPRNT.LE.0) GO TO 309
      WRITE(6,14)
      CALL MATOUT(X,N3N,NPLUS,N3N,NPLUS,6)
      WRITE(6,15)
      CALL MATOUT(COOD,NINT,NPLUS,NINT,NPLUS,6)
      WRITE(6,16)
      CALL MATOUT(G,N3N,NPLUS,N3N,NPLUS,6)
      WRITE(6,17)
      CALL MATOUT(ENG,NINT,NPLUS,NINT,NPLUS,6)
  309 WRITE(6,18)
      DO 110 ICASE=1,NPLUS
      WRITE(6,19) ICASE,GNORM(ICASE),SNORM(ICASE),ESCF(ICASE)
  110 CONTINUE
C
C   STORE GEOMETRIES AND GRADIENTS IN TAPE13
      REWIND ITAP13
      WRITE(ITAP13,2) NPLUS
      DO 115 ICASE=1,NPLUS
      WRITE(ITAP13,3) ICASE,ESCF(ICASE)
      DO 111 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      XX(I)=X(IX,ICASE)
      YY(I)=X(IY,ICASE)
      ZZ(I)=X(IZ,ICASE)
      WRITE(ITAP13,6) CHG(I),XX(I),YY(I),ZZ(I)
  111 CONTINUE
      DO 112 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      EX(I)=G(IX,ICASE)
      EY(I)=G(IY,ICASE)
      EZ(I)=G(IZ,ICASE)
      WRITE(ITAP13,6) CHG(I),EX(I),EY(I),EZ(I)
  112 CONTINUE
      DO 113 I=1,NINT
      RCOOD(I)=COOD(I,ICASE)
      ENGR(I)=ENG(I,ICASE)*FMILI
      WRITE(ITAP13,9) RCOOD(I),ENGR(I)
  113 CONTINUE
  115 CONTINUE
C
      REWIND ITAP12
      REWIND ITAP13
C
      RETURN
      END
      SUBROUTINE DIST(NATOM,XX,YY,ZZ,NNX)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XX(NNX),YY(NNX),ZZ(NNX)
      COMMON/COM107/R(1275)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,28H INTERATOMIC DISTANCE MATRIX/)
C
      IJ=0
      DO 101 I=1,NATOM
      DO 101 J=1,I
      IJ=IJ+1
      R(IJ)=A00
      IF(I.EQ.J) GO TO 101
      XD=XX(I)-XX(J)
      YD=YY(I)-YY(J)
      ZD=ZZ(I)-ZZ(J)
      RR=DSQRT(XD*XD+YD*YD+ZD*ZD)
      R(IJ)=RR
  101 CONTINUE
      WRITE(6,1)
      CALL PRINT(R,LDIM,NATOM,6)
      RETURN
      END
      SUBROUTINE ANGLE(NATOM,XX,YY,ZZ,NNX)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XX(NNX),YY(NNX),ZZ(NNX)
      COMMON/COM107/R(1275)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      DATA PI / 3.1415926536D+00 /
    1 FORMAT(//,2X,' BOND ANGLES'/
     1 2X,' I   J   K',3X,' DEGREES   ',1X,' J   I   K',3X,' DEGREES  ',
     2 1X,' I   K   J',3X,' DEGREES   '/)
    2 FORMAT(3I4,F11.3, 2X,3I4,F11.3,1X,3I4,F11.3)
    3 FORMAT(//,2X,' BOND ANGLES WILL NOT BE PRINTED---IPRNT .LT. 0 '/)
C
      AR=PI/180.0D+00
      IF(IPRNT.GE.0) WRITE(6,1)
      IF(IPRNT.LT.0) WRITE(6,3)
      DO 101 I=1,NATOM-2
      DO 101 J=I+1,NATOM-1
      IJ=I+J*(J-1)/2
      XIJ=XX(I)-XX(J)
      YIJ=YY(I)-YY(J)
      ZIJ=ZZ(I)-ZZ(J)
      EXIJ=-XIJ/R(IJ)
      EYIJ=-YIJ/R(IJ)
      EZIJ=-ZIJ/R(IJ)
      EXJI=-EXIJ
      EYJI=-EYIJ
      EZJI=-EZIJ
      DO 101 K=J+1,NATOM
      IK=I+K*(K-1)/2
      XIK=XX(I)-XX(K)
      YIK=YY(I)-YY(K)
      ZIK=ZZ(I)-ZZ(K)
      EXIK=-XIK/R(IK)
      EYIK=-YIK/R(IK)
      EZIK=-ZIK/R(IK)
      EXKI=-EXIK
      EYKI=-EYIK
      EZKI=-EZIK
      JK=J+K*(K-1)/2
      XJK=XX(J)-XX(K)
      YJK=YY(J)-YY(K)
      ZJK=ZZ(J)-ZZ(K)
      EXJK=-XJK/R(JK)
      EYJK=-YJK/R(JK)
      EZJK=-ZJK/R(JK)
      EXKJ=-EXJK
      EYKJ=-EYJK
      EZKJ=-EZJK
      AIJK=EXJI*EXJK+EYJI*EYJK+EZJI*EZJK
      AJIK=EXIJ*EXIK+EYIJ*EYIK+EZIJ*EZIK
      AIKJ=EXKI*EXKJ+EYKI*EYKJ+EZKI*EZKJ
      ANGIJK=DACOS(AIJK)/AR
      ANGJIK=DACOS(AJIK)/AR
      ANGIKJ=DACOS(AIKJ)/AR
      IF(IPRNT.GE.0) WRITE(6,2) I,J,K,ANGIJK,J,I,K,ANGJIK,I,K,J,ANGIKJ
  101 CONTINUE
C
      RETURN
      END
      SUBROUTINE ANORM(CNORM,C,NNC,NC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION C(NNC)
      DATA A00 / 0.0D+00 /
C
      CNORM=A00
      DO 101 I=1,NC
      CNORM=CNORM+C(I)*C(I)
  101 CONTINUE
      CNORM=DSQRT(CNORM)
      RETURN
      END
      SUBROUTINE SORT(SX,SG,SCOOD,SENG,X,G,COOD,ENG)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SX(N3N,NPLUS),SG(N3N,NPLUS),X(N3N,NPLUS),G(N3N,NPLUS)
      DIMENSION SCOOD(NINT,NPLUS),SENG(NINT,NPLUS)
      DIMENSION COOD(NINT,NPLUS),ENG(NINT,NPLUS)
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM102/NSORT,NCOOD,NDIF,NPLUS,NCASE,NROOT
      COMMON/COM106/ESCF(150),GNORM(150),SNORM(150)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      COMMON/COM110/NSET(150),NORD(150),NXVAR(150)
    1 FORMAT(//,2X,' SORTED CARTESIAN COORDINATE MATRIX'/)
    2 FORMAT(//,2X,' SORTED CARTESIAN GRADIENT MATRIX'/)
    3 FORMAT(//,2X,' SORTED INTERNAL COORDINATE MATRIX'/)
    4 FORMAT(//,2X,' SORTED GRADIENT MATRIX'/)
C
      DO 101 I=1,NPLUS
      NORD(I)=I
  101 CONTINUE
      IF(NPLUS.EQ.1) GO TO 205
      IF(NSORT.EQ.0) GO TO 205
      GO TO (201,202,203),NSORT
C
C   GRADIENT SORT
  201 CALL ORDER(GNORM,NORD,MDIM,NPLUS)
      GO TO 205
C
C   ENERGY SORT
  202 CALL ORDER(ESCF,NORD,MDIM,NPLUS)
      GO TO 205
C
C   SELECTED GRADIENT SORT
  203 CALL ORDER(SNORM,NORD,MDIM,NPLUS)
C
C   NO SORT AND/OR AFTER SORT
  205 II=0
      DO 104 I=1,NPLUS
      II=II+1
      MM=NORD(I)
      DO 102 J=1,NCOOD
      NN=NSET(J)
      SCOOD(J,II)=COOD(NN,MM)
      SENG(J,II)=ENG(NN,MM)
  102 CONTINUE
      DO 103 J=1,N3N
      SX(J,II)=X(J,MM)
      SG(J,II)=G(J,MM)
  103 CONTINUE
  104 CONTINUE
      IF(IPRNT.LE.0) GO TO 206
      WRITE(6,1)
      CALL MATOUT(SX,N3N,NPLUS,N3N,NPLUS,6)
      WRITE(6,2)
      CALL MATOUT(SG,N3N,NPLUS,N3N,NPLUS,6)
  206 CONTINUE
      WRITE(6,3)
      CALL MATOUT(SCOOD,NINT,NPLUS,NCOOD,NPLUS,6)
      WRITE(6,4)
      CALL MATOUT(SENG,NINT,NPLUS,NCOOD,NPLUS,6)
C
      RETURN
      END
      SUBROUTINE ORDER(A,NORD,NND,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NND),NORD(NND)
C
      N1=N-1
      DO 102 I=1,N1
      IR=I+1
      DO 101 J=IR,N
      IF(A(I).GT.A(J)) GO TO 101
      AA=A(I)
      A(I)=A(J)
      A(J)=AA
      NN=NORD(I)
      NORD(I)=NORD(J)
      NORD(J)=NN
  101 CONTINUE
  102 CONTINUE
      RETURN
      END
      SUBROUTINE QUASI(SX,SG,SCOOD,SENG,FC,FT,EE,PIVOT,INDEX)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SX(N3N,NPLUS),SG(N3N,NPLUS)
      DIMENSION SCOOD(NINT,NPLUS),SENG(NINT,NPLUS)
      DIMENSION FC(NCOOD,NCOOD),FT(NCOOD,NCOOD),EE(NCOOD,NCOOD)
      DIMENSION PIVOT(NCOOD),INDEX(NCOOD)
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM102/NSORT,NCOOD,NDIF,NPLUS,NCASE,NROOT
      COMMON/COM103/CHG(50),XX(50),YY(50),ZZ(50)
      COMMON/COM104/XT(150)
      COMMON/COM105/ENGR(150),RCOOD(150)
      COMMON/COM107/COEF(1275)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      COMMON/COM109/XMAX,YMAX,ZMAX
      COMMON/COM112/XOLD(150),XNEW(150)
      DATA A00,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,'*************************************'/
     1          2X,'***THE QUASI NEWTON-RAPHSON METHOD***'/
     2          2X,'*************************************'//)
    2 FORMAT(//,2X,' FC MATRIX'/)
    3 FORMAT(//,2X,' INVERSE GRADIENT MATRIX'/)
    4 FORMAT(//,2X,' DETERM = ',D20.10/)
    5 FORMAT(//,2X,' ENG * ENG(-1) = E '/)
C
      WRITE(6,1)
C
C   CALCULATE INVERSE FORCE CONSTANT MATRIX
      DO 101 I=1,NCOOD
      ENGR(I)=SENG(I,NPLUS)
      DO 101 J=1,NCOOD
      JJ=NDIF+J
      FC(I,J)=SENG(I,JJ)
  101 CONTINUE
      IF(IPRNT.LE.0) GO TO 201
      WRITE(6,2)
      CALL MATOUT(FC,NCOOD,NCOOD,NCOOD,NCOOD,6)
  201 CONTINUE
      DO 102 I=1,NCOOD
      DO 102 J=1,NCOOD
  102 FT(I,J)=FC(I,J)
      CALL MATINV(FC,EE,PIVOT,INDEX,NCOOD,NCOOD,DETERM,NCOOD)
      IF(IPRNT.LE.0) GO TO 202
      WRITE(6,3)
      CALL MATOUT(FC,NCOOD,NCOOD,NCOOD,NCOOD,6)
  202 WRITE(6,4) DETERM
C
C   CHECK UNITARITY OF THE INVERTED MATRIX
      CALL MTXMPY(FT,NCOOD,FC,NCOOD,EE,NCOOD,EE,NCOOD,NCOOD,1)
      IF(IPRNT.LE.0) GO TO 203
      WRITE(6,5)
      CALL MATOUT(EE,NCOOD,NCOOD,NCOOD,NCOOD,6)
C
C   ESTIMATE NEW GEOMETRY
  203 DO 103 I=1,NCOOD
      COEF(I)=A00
      DO 103 J=1,NCOOD
      COEF(I)=COEF(I)+FC(I,J)*ENGR(J)
  103 CONTINUE
      DO 104 I=1,N3N
      XT(I)=A00
      DO 104 J=1,NCOOD
      JJ=NDIF+J
      XT(I)=XT(I)+SX(I,JJ)*COEF(J)
  104 CONTINUE
      SUM=A00
      DO 105 I=1,NCOOD
      SUM=SUM+COEF(I)
  105 CONTINUE
      FACT=ONE/(SUM-ONE)
C
      DO 106 I=1,N3N
      XOLD(I)=SX(I,NPLUS)
      XNEW(I)=(XT(I)-XOLD(I))*FACT
  106 CONTINUE
      IFLAG=1
      CALL OLDNEW(XOLD,XNEW,IFLAG)
C
      RETURN
      END
      SUBROUTINE FESTIM(SCOOD,SENG,FC,DELC,FF,DELG,EE,PIVOT,INDEX)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SCOOD(NINT,NPLUS),SENG(NINT,NPLUS)
      DIMENSION FC(NCOOD,NCOOD),DELC(NCOOD,NCOOD),FF(NCOOD,NCOOD)
      DIMENSION DELG(NCOOD,NCOOD),EE(NCOOD,NCOOD)
      DIMENSION PIVOT(NCOOD),INDEX(NCOOD)
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM102/NSORT,NCOOD,NDIF,NPLUS,NCASE,NROOT
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      DATA HALF / 0.5D+00 /
      DATA FKILO / 1.0D+3 /
    1 FORMAT(//,2X,' DELC MATRIX'/)
    2 FORMAT(//,2X,' DELG MATRIX'/)
    3 FORMAT(//,2X,' INVERSE DELC MATRIX'/)
    4 FORMAT(//,2X,' DETERM = ',D20.10/)
    5 FORMAT(//,2X,' DELC * DELC(-1) = E '/)
    6 FORMAT(//,2X,' ESTIMATED FORCE CONSTANT MATRIX'/)
    7 FORMAT(//,2X,' AVERAGED FORCE CONSTANT MATRIX'/)
C
C   ESTIMATE FORCE CONSTANT MATRIX
      DO 101 I=1,NCOOD
      DO 101 J=1,NCOOD
      JJ=NDIF+J
      DELC(I,J)=SCOOD(I,JJ)-SCOOD(I,NPLUS)
      DELC(I,J)=DELC(I,J)*FKILO
  101 CONTINUE
      IF(IPRNT.LE.0) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DELC,NCOOD,NCOOD,NCOOD,NCOOD,6)
  201 DO 102 I=1,NCOOD
      DO 102 J=1,NCOOD
      JJ=NDIF+J
      DELG(I,J)=SENG(I,JJ)-SENG(I,NPLUS)
  102 CONTINUE
      IF(IPRNT.LE.0) GO TO 202
      WRITE(6,2)
      CALL MATOUT(DELG,NCOOD,NCOOD,NCOOD,NCOOD,6)
  202 DO 103 I=1,NCOOD
      DO 103 J=1,NCOOD
      FC(I,J)=DELC(I,J)
  103 CONTINUE
      CALL MATINV(FC,EE,PIVOT,INDEX,NCOOD,NCOOD,DETERM,NCOOD)
      IF(IPRNT.LE.0) GO TO 203
      WRITE(6,3)
      CALL MATOUT(FC,NCOOD,NCOOD,NCOOD,NCOOD,6)
  203 WRITE(6,4) DETERM
      CALL MTXMPY(DELC,NCOOD,FC,NCOOD,EE,NCOOD,EE,NCOOD,NCOOD,1)
      IF(IPRNT.LE.0) GO TO 204
      WRITE(6,5)
      CALL MATOUT(EE,NCOOD,NCOOD,NCOOD,NCOOD,6)
  204 CALL MTXMPY(FC,NCOOD,DELG,NCOOD,FF,NCOOD,EE,NCOOD,NCOOD,4)
      IF(IPRNT.LE.0) GO TO 205
      WRITE(6,6)
      CALL MATOUT(FF,NCOOD,NCOOD,NCOOD,NCOOD,6)
  205 DO 104 I=1,NCOOD
      DO 104 J=I,NCOOD
      EE(I,J)=(FF(I,J)+FF(J,I))*HALF
      IF(I.EQ.J) GO TO 104
      EE(J,I)=EE(I,J)
  104 CONTINUE
      WRITE(6,7)
      CALL MATOUT(EE,NCOOD,NCOOD,NCOOD,NCOOD,6)
C
      RETURN
      END
      SUBROUTINE OLDNEW(XOLD,XNEW,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XOLD(150),XNEW(150)
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM103/CHG(50),XX(50),YY(50),ZZ(50)
      COMMON/COM104/XT(50),YT(50),ZT(50)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      COMMON/COM109/XMAX,YMAX,ZMAX
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' OLD COORDINATES'/
     1 38X,' OLD X IN A.U.'/
     2 3X,4H NO.,4X,7H CHARGE,9X,2H X,14X,2H Y,14X,2H Z/)
    2 FORMAT(3X,I5,4F16.10)
    3 FORMAT(//,2X,' NEW COORDINATES'/
     1 38X,' NEW X IN A.U.'/
     2 3X,4H NO.,4X,7H CHARGE,9X,2H X,14X,2H Y,14X,2H Z/)
C
      WRITE(6,1)
      XMAX=A00
      YMAX=A00
      ZMAX=A00
      DO 101 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      IF(IFLAG.EQ.0) GO TO 201
      XDIF=XNEW(IX)-XOLD(IX)
      YDIF=XNEW(IY)-XOLD(IY)
      ZDIF=XNEW(IZ)-XOLD(IZ)
      IF(DABS(XDIF).GT.DABS(XMAX)) XMAX=XDIF
      IF(DABS(YDIF).GT.DABS(YMAX)) YMAX=YDIF
      IF(DABS(ZDIF).GT.DABS(ZMAX)) ZMAX=ZDIF
  201 CONTINUE
      WRITE(6,2) I,CHG(I),XOLD(IX),XOLD(IY),XOLD(IZ)
  101 CONTINUE
      WRITE(6,3)
      DO 102 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      WRITE(6,2) I,CHG(I),XNEW(IX),XNEW(IY),XNEW(IZ)
  102 CONTINUE
C
      DO 103 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      XT(I)=XNEW(IX)
      YT(I)=XNEW(IY)
      ZT(I)=XNEW(IZ)
  103 CONTINUE
C
C   CALCULATE INTERATOMIC DISTANCES FOR NEXT GEOMETRY
      CALL DIST(NATOM,XT,YT,ZT,NDIM)
      IF(NATOM.LE.2) GO TO 202
      CALL ANGLE(NATOM,XT,YT,ZT,NDIM)
C
  202 CONTINUE
      IF(IFLAG.EQ.0) GO TO 203
      DO 104 I=1,NATOM
      XX(I)=XT(I)
      YY(I)=YT(I)
      ZZ(I)=ZT(I)
  104 CONTINUE
C
  203 CONTINUE
      RETURN
      END
      SUBROUTINE METRIC(SX,SG,FX,HH,FT,EE,PIVOT,INDEX,NVAR,METHOD,
     1                  IHESS,UPDATE)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL UPDATE
      DIMENSION SX(N3N,NPLUS),SG(N3N,NPLUS),FX(N3N,N3N)
      DIMENSION HH(NVAR,NVAR),FT(NVAR,NVAR),EE(NVAR,NVAR)
      DIMENSION PIVOT(NVAR),INDEX(NVAR)
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM102/NSORT,NCOOD,NDIF,NPLUS,NCASE,NROOT
      COMMON/COM103/CHG(50),XX(50),YY(50),ZZ(50)
      COMMON/COM104/XT(150)
      COMMON/COM105/ENG0(150),ENG1(150)
      COMMON/COM106/ESCF(150),GNORM(150),SNORM(150)
      COMMON/COM107/X(150),D(150),DELX(150),DELG(150),HG(150),DUMA(525)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      COMMON/COM110/NSET(150),NORD(150),NXVAR(150)
      COMMON/COM112/XOLD(150),XNEW(150)
      DATA ITAP15 / 15 /
      DATA A00,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,'********************************'/
     1          2X,'***THE VARIABLE METRIC METHOD***'/
     2          2X,'********************************'//)
    2 FORMAT(2I5)
    3 FORMAT(3F20.10)
    4 FORMAT(//,2X,' FX MATRIX'/)
    5 FORMAT(//,2X,' EXTRACTED FX MATRIX'/)
    6 FORMAT(//,2X,' HH MATRIX'/)
    7 FORMAT(//,2X,' DETERM = ',D20.10/)
    8 FORMAT(//,2X,' FX * FX(-1) = E'/)
    9 FORMAT(///,2X,' ALGOR CYCLE = ',I5)
   10 FORMAT(//,2X,13H NEW X MATRIX/
     1 2X,4H NO.,5X,4H II.,6X,5H OLDX,18X,5H DELX,18X,5H NEWX/)
   11 FORMAT(3X,I2,4X,I5,3(3X,F20.10))
   12 FORMAT(//,2X,20H DELG AND HG VECTORS/)
   13 FORMAT(2X,I2,2(5X,F15.8))
   14 FORMAT(//,2X,7H GHG = ,F15.8/
     1 2X,7H DG  = ,F15.8)
   15 FORMAT(//,2X,' UPDATED H MATRIX'/)
   16 FORMAT(//,2X,' GEOMETRY CHANGE IS TOO LARGE---TRY AGAIN'/
     1          2X,' NALGOR,NMAX,NADD,XMAX = ',3I5,F10.5/)
   17 FORMAT(//,2X,' SUBROUTINE METRIC IS NOT ABLE TO FIND A RESONABLE
     1GEOMETRY GUESS'/)
C
      WRITE(6,1)
C
      XLIMIT=0.5D+00
      NADD=0
      NMAX=NPLUS
  200 CONTINUE
      IF(IHESS.EQ.0) GO TO 201
      REWIND ITAP15
      READ(ITAP15,2) NNATOM,NNC
      READ(ITAP15,3) ((FX(I,J),J=1,N3N),I=1,N3N)
      REWIND ITAP15
      GO TO 202
C
C   UNIT MATRIX AS AN INITIAL HESSIAN
  201 CONTINUE
      DO 101 I=1,N3N
      FX(I,I)=ONE
      DO 101 J=1,N3N
      IF(I.EQ.J) GO TO 101
      FX(I,J)=A00
  101 CONTINUE
C
  202 CONTINUE
      IF(IPRNT.LE.0) GO TO 203
      WRITE(6,4)
      CALL MATOUT(FX,N3N,N3N,N3N,N3N,6)
C
  203 CONTINUE
      DO 102 I=1,NVAR
      II=NXVAR(I)
      DO 102 J=1,NVAR
      JJ=NXVAR(J)
      HH(I,J)=FX(II,JJ)
      FT(I,J)=HH(I,J)
  102 CONTINUE
      IF(IPRNT.LE.0) GO TO 204
      WRITE(6,5)
      CALL MATOUT(HH,NVAR,NVAR,NVAR,NVAR,6)
  204 CONTINUE
      CALL MATINV(HH,EE,PIVOT,INDEX,NVAR,NVAR,DETERM,NVAR)
      IF(IPRNT.LE.0) GO TO 205
      WRITE(6,6)
      CALL MATOUT(HH,NVAR,NVAR,NVAR,NVAR,6)
  205 WRITE(6,7) DETERM
      IF(IPRNT.LE.0) GO TO 206
      CALL MTXMPY(FT,NVAR,HH,NVAR,EE,NVAR,EE,NVAR,NVAR,1)
      WRITE(6,8)
      CALL MATOUT(EE,NVAR,NVAR,NVAR,NVAR,6)
C
  206 CONTINUE
      DO 103 I=1,N3N
      X(I)=SX(I,NPLUS)
      XT(I)=X(I)
  103 CONTINUE
C
      NALGOR=1
      NPOS=NALGOR+NADD
      DO 104 I=1,NVAR
      II=NXVAR(I)
      ENG0(I)=SG(II,NPOS)
  104 CONTINUE
C
C   START ITERATION
  300 CONTINUE
      IF(IPRNT.LE.0) GO TO 301
      WRITE(6,9) NALGOR
C
C   CALCULATE D VECTOR
  301 DO 105 I=1,NVAR
      D(I)=A00
      DO 105 J=1,NVAR
      D(I)=D(I)-HH(I,J)*ENG0(J)
  105 CONTINUE
C
C   FIND ALPHA
      CALL INTER(ALPHA,D,ENG0,MDIM,NVAR)
C
C   ESTIMATE NEW COORDINATES
      IF(IPRNT.LE.0) GO TO 302
      WRITE(6,10)
  302 CONTINUE
      XMAX=A00
      DO 106 I=1,NVAR
      II=NXVAR(I)
      X00=X(II)
      DELX(I)=ALPHA*D(I)
      DMAX=DABS(DELX(I))
      IF(DMAX.GT.XMAX) XMAX=DMAX
      X11=X00+DELX(I)
      XT(II)=X11
      IF(IPRNT.LE.0) GO TO 106
      WRITE(6,11) I,II,X00,DELX(I),X11
  106 CONTINUE
C
      IF(XMAX.GT.XLIMIT) GO TO 310
      NALGOR=NALGOR+1
      NPOS=NALGOR+NADD
      IF(NALGOR.GT.NMAX) GO TO 320
      DO 107 I=1,NVAR
      II=NXVAR(I)
      ENG1(I)=SG(II,NPOS)
  107 CONTINUE
C
C   CALCULATION OF HH MATRIX FOR NEXT ITERATION
      DO 108 I=1,NVAR
      DELG(I)=ENG1(I)-ENG0(I)
  108 CONTINUE
C
      IF(METHOD-2) 401,403,405
C
C::::::::::::::::::::::::::::
C:::MURTAGH-SARGENT METHOD:::
C::::::::::::::::::::::::::::
  401 DO 110 I=1,NVAR
      HG(I)=DELX(I)
      DO 110 J=1,NVAR
      HG(I)=HG(I)-HH(I,J)*DELG(J)
  110 CONTINUE
      IF(IPRNT.LE.0) GO TO 402
      WRITE(6,12)
      DO 111 I=1,NVAR
      WRITE(6,13) I,DELG(I),HG(I)
  111 CONTINUE
  402 GHG=A00
      DG=A00
      DO 112 I=1,NVAR
      GHG=GHG+HG(I)*DELG(I)
      DG=DG+HG(I)*HG(I)
  112 CONTINUE
      DO 113 I=1,NVAR
      DO 113 J=1,NVAR
      HH(I,J)=HH(I,J)+(HG(I)*HG(J))/GHG
  113 CONTINUE
      IF(IPRNT.LE.0) GO TO 410
      WRITE(6,14) GHG,DG
      GO TO 410
C
C:::::::::::::::::::::
C:::FLETCHER METHOD:::
C:::::::::::::::::::::
  403 DO 120 I=1,NVAR
      HG(I)=A00
      DO 120 J=1,NVAR
      HG(I)=HG(I)+HH(I,J)*DELG(J)
  120 CONTINUE
      IF(IPRNT.LE.0) GO TO 404
      WRITE(6,12)
      DO 121 I=1,NVAR
      WRITE(6,13) I,DELG(I),HG(I)
  121 CONTINUE
  404 GHG=A00
      DG=A00
      DO 122 I=1,NVAR
      GHG=GHG+HG(I)*DELG(I)
      DG=DG+DELX(I)*DELG(I)
  122 CONTINUE
      DO 123 I=1,NVAR
      DO 123 J=1,NVAR
      HH(I,J)=HH(I,J)-(HG(I)*DELX(J)+HG(J)*DELX(I))/DG
     1 +(ONE+GHG/DG)*((DELX(I)*DELX(J))/DG)
  123 CONTINUE
      IF(IPRNT.LE.0) GO TO 410
      WRITE(6,14) GHG,DG
      GO TO 410
C
C::::::::::::::::::::::::::::::::::::
C:::DAVIDON-FLETCHER-POWELL METHOD:::
C::::::::::::::::::::::::::::::::::::
  405 DO 130 I=1,NVAR
      HG(I)=A00
      DO 130 J=1,NVAR
      HG(I)=HG(I)+HH(I,J)*DELG(J)
  130 CONTINUE
      IF(IPRNT.LE.0) GO TO 406
      WRITE(6,12)
      DO 131 I=1,NVAR
      WRITE(6,13) I,DELG(I),HG(I)
  131 CONTINUE
  406 GHG=A00
      DG=A00
      DO 132 I=1,NVAR
      GHG=GHG+HG(I)*DELG(I)
      DG=DG+DELX(I)*DELG(I)
  132 CONTINUE
      DO 133 I=1,NVAR
      DO 133 J=1,NVAR
      HH(I,J)=HH(I,J)-(HG(I)*HG(J))/GHG+(DELX(I)*DELX(J))/DG
  133 CONTINUE
      IF(IPRNT.LE.0) GO TO 410
      WRITE(6,14) GHG,DG
C
C#####################
C###UPDATE H MATRIX###
C#####################
  410 CONTINUE
      IF(IPRNT.LE.0) GO TO 415
      WRITE(6,15)
      CALL MATOUT(HH,NVAR,NVAR,NVAR,NVAR,6)
C
  415 DO 135 I=1,NVAR
      ENG0(I)=ENG1(I)
  135 CONTINUE
      GO TO 300
C
C   GEOMETRY CHANGE IS TOO LARGE
  310 CONTINUE
      WRITE(6,16) NALGOR,NMAX,NADD,XMAX
      NMAX=NMAX-1
      NADD=NADD+1
      IF(NMAX.LE.0) GO TO 315
      GO TO 200
C
C   YOU CANNOT FIND NEXT GEOMETRY
  315 WRITE(6,17)
      RETURN
C
  320 CONTINUE
      DO 136 I=1,N3N
      XOLD(I)=SX(I,NPLUS)
      XNEW(I)=XT(I)
  136 CONTINUE
      IFLAG=0
      IF(UPDATE) IFLAG=1
      CALL OLDNEW(XOLD,XNEW,IFLAG)
C
      RETURN
      END
      SUBROUTINE INTER(ALPHA,D,ENG0,NND,NN)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D(NND),ENG0(NND)
      DATA A00,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
      DATA FDEL / 1.0D+00 /
C
      GXS=A00
      DO 101 I=1,NN
      GXS=GXS+D(I)*ENG0(I)
  101 CONTINUE
      FX0=-(TWO*FDEL)/GXS
      ALPHA=DMIN1(ONE,FX0)
      RETURN
      END
      SUBROUTINE AGHESS(SX,SG,FX,ELX,EE,FT,VALU,EIGN,FV1,FV2,FC,
     1                  N3N1,N3NTRI)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SX(N3N,NPLUS),SG(N3N,NPLUS),FX(N3N,N3N)
      DIMENSION ELX(N3N1,N3N1),EE(N3N1,N3N1),FT(N3N1,N3N1)
      DIMENSION VALU(N3N1),EIGN(N3N1),FV1(N3N1),FV2(N3N1),FC(N3NTRI)
      COMMON/COM101/NATOM,N3N,NINT
      COMMON/COM102/NSORT,NCOOD,NDIF,NPLUS,NCASE,NROOT
      COMMON/COM103/CHG(50),XX(50),YY(50),ZZ(50)
      COMMON/COM104/EX(50),EY(50),EZ(50)
      COMMON/COM107/AGX(150),AGENG(150),DELX(150),DUMA(825)
      COMMON/COM108/LDIM,MDIM,NDIM,IPRNT
      COMMON/COM112/XOLD(150),XNEW(150)
      DATA ITAP15 / 15 /
      DATA DLIMIT / 1.0D-06 /
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,'**********************************'/
     1          2X,'***THE AUGMENTED HESSIAN METHOS***'/
     2          2X,'**********************************'//)
    2 FORMAT(2I5)
    3 FORMAT(3F20.10)
    4 FORMAT(//,2X,' HESSIAN MATRIX'/)
    5 FORMAT(//,2X,' HESSIAN MATRIX IN TRIANGULAR FORM'/)
    6 FORMAT(//,2X,' EIGENVALUES'/)
    7 FORMAT(2X,I5,F20.10)
    8 FORMAT(//,2X,' EIGENVECTORS '/)
    9 FORMAT(//,2X,' ELX * ELX(-1) = 1'/)
   10 FORMAT(//,2X,' U(-1) * FX * U = FT'/)
   11 FORMAT(//,2X,' AUGMENTED HESSIAN MATRIX'/)
   12 FORMAT(//,2X,' AUGMENTED HESSIAN MATRIX IN TRIANGLE FORM'/)
   13 FORMAT(//,2X,' ELT * ELT(-1) = 1'/)
   14 FORMAT(//,2X,' AUGMENTED X MATRIX'/)
   15 FORMAT(2X,I5,2F20.10)
   16 FORMAT(//,2X,' DELX MATRIX'/)
C
      WRITE(6,1)
C
      REWIND ITAP15
      READ(ITAP15,2) NNATOM,NNC
      READ(ITAP15,3) ((FX(I,J),J=1,N3N),I=1,N3N)
      REWIND ITAP15
      IF(IPRNT.LE.0) GO TO 201
      WRITE(6,4)
      CALL MATOUT(FX,N3N,N3N,N3N,N3N,6)
C
C   DIAGONALIZE HESSIAN MATRIX
  201 CONTINUE
      IJ=0
      DO 101 I=1,N3N
      DO 101 J=1,I
      IJ=IJ+1
      FC(IJ)=FX(I,J)
  101 CONTINUE
      IF(IPRNT.LE.0) GO TO 202
      WRITE(6,5)
      CALL PRINT(FC,N3NTRI,N3N,6)
  202 CONTINUE
      CALL RSP(N3N1,N3N,N3NTRI,FC,VALU,1,ELX,FV1,FV2)
      IF(IPRNT.LE.0) GO TO 203
      WRITE(6,6)
      DO 102 I=1,N3N
  102 WRITE(6,7) I,VALU(I)
      WRITE(6,8)
      CALL MATOUT(ELX,N3N1,N3N1,N3N,N3N,6)
      CALL MTXMPY(ELX,N3N1,ELX,N3N1,EE,N3N1,EE,N3N1,N3N,3)
      WRITE(6,9)
      CALL MATOUT(EE,N3N1,N3N1,N3N,N3N,6)
C
C   UNITARY ROTATION OF FX MATRIX FOR A TEST
      CALL MTXMPY(ELX,N3N1,FX,N3N,FT,N3N1,EE,N3N1,N3N,5)
      WRITE(6,10)
      CALL MATOUT(FT,N3N1,N3N1,N3N,N3N,6)
C
  203 CONTINUE
      DO 103 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      EX(I)=SG(IX,NPLUS)
      EY(I)=SG(IY,NPLUS)
      EZ(I)=SG(IZ,NPLUS)
  103 CONTINUE
      DO 104 I=1,N3N1
      DO 104 J=1,N3N1
  104 FT(I,J)=A00
      DO 105 I=2,N3N1
  105 FT(I,I)=VALU(I-1)
      DO 107 I=1,N3N
      VAL=A00
      DO 106 J=1,NATOM
      JX=(J-1)*3+1
      JY=JX+1
      JZ=JX+2
      VAL=VAL+ELX(JX,I)*EX(J)+ELX(JY,I)*EY(J)+ELX(JZ,I)*EZ(J)
  106 CONTINUE
      AGENG(I)=VAL
      FT(I+1,1)=VAL
      FT(1,I+1)=VAL
  107 CONTINUE
      IF(IPRNT.LE.0) GO TO 204
      WRITE(6,11)
      CALL MATOUT(FT,N3N1,N3N1,N3N1,N3N1,6)
C
  204 CONTINUE
      IJ=0
      DO 108 I=1,N3N1
      DO 108 J=1,I
      IJ=IJ+1
      FC(IJ)=FT(I,J)
  108 CONTINUE
      IF(IPRNT.LE.0) GO TO 205
      WRITE(6,12)
      CALL PRINT(FC,N3NTRI,N3N1,6)
  205 CONTINUE
      CALL RSP(N3N1,N3N1,N3NTRI,FC,EIGN,1,ELX,FV1,FV2)
      WRITE(6,6)
      DO 109 I=1,N3N1
  109 WRITE(6,7) I,EIGN(I)
      IF(IPRNT.LE.0) GO TO 206
      WRITE(6,8)
      CALL MATOUT(ELX,N3N1,N3N1,N3N1,N3N1,6)
      CALL MTXMPY(ELX,N3N1,ELX,N3N1,EE,N3N1,EE,N3N1,N3N1,3)
      WRITE(6,13)
      CALL MATOUT(EE,N3N1,N3N1,N3N1,N3N1,6)
C
C   ESTIMATE NEXT GEOMETRY
      WRITE(6,14)
  206 DO 110 I=1,N3N
      AGX(I)=A00
      DEN=VALU(I)-EIGN(NROOT)
      IF(DABS(DEN).LE.DLIMIT) GO TO 207
      AGX(I)=-AGENG(I)/DEN
  207 IF(IPRNT.LE.0) GO TO 110
      WRITE(6,15) I,DEN,AGX(I)
  110 CONTINUE
      IF(IPRNT.LE.0) GO TO 208
      WRITE(6,16)
  208 DO 112 I=1,N3N
      VAL=A00
      DO 111 J=1,N3N
  111 VAL=VAL+ELX(I,J)*AGX(J)
      DELX(I)=VAL
      IF(IPRNT.LE.0) GO TO 112
      WRITE(6,15) I,VAL
  112 CONTINUE
      DO 113 I=1,NATOM
      IX=(I-1)*3+1
      IY=IX+1
      IZ=IX+2
      X0=SX(IX,NPLUS)
      Y0=SX(IY,NPLUS)
      Z0=SX(IZ,NPLUS)
      XNEW(IX)=X0+DELX(IX)
      XNEW(IY)=Y0+DELX(IY)
      XNEW(IZ)=Z0+DELX(IZ)
  113 CONTINUE
      IFLAG=0
      CALL OLDNEW(XOLD,XNEW,IFLAG)
C
      RETURN
      END
      SUBROUTINE MTXMPY(A,NAD,B,NBD,C,NCD,D,NDD,N,IMPY)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NAD,NAD),B(NBD,NBD),C(NCD,NCD),D(NDD,NDD)
      DATA A00 / 0.0D+00 /
C
      DO 101 I=1,NCD
      DO 101 J=1,NCD
  101 C(I,J)=A00
      GO TO (201,202,203,204,205,206),IMPY
C     C=A*B
  201 DO 102 I=1,N
      DO 102 J=1,N
      DO 102 K=1,N
  102 C(I,J)=C(I,J)+A(I,K)*B(K,J)
      RETURN
C     C=TA*B
  202 DO 103 I=1,N
      DO 103 J=1,N
      DO 103 K=1,N
  103 C(I,J)=C(I,J)+A(K,I)*B(K,J)
      RETURN
C     C=A*TB
  203 DO 104 I=1,N
      DO 104 J=1,N
      DO 104 K=1,N
  104 C(I,J)=C(I,J)+A(I,K)*B(J,K)
      RETURN
C     C=TA*TB
  204 DO 105 I=1,N
      DO 105 J=1,N
      DO 105 K=1,N
  105 C(I,J)=C(I,J)+A(K,I)*B(J,K)
      RETURN
C     C=TA*B*A
  205 DO 106 I=1,N
      DO 106 J=1,N
      D(I,J)=A00
      DO 106 K=1,N
  106 D(I,J)=D(I,J)+A(K,I)*B(K,J)
      DO 107 I=1,N
      DO 107 J=1,N
      DO 107 K=1,N
  107 C(I,J)=C(I,J)+D(I,K)*A(K,J)
      RETURN
C     C=A*B*TA
  206 DO 108 I=1,N
      DO 108 J=1,N
      D(I,J)=A00
      DO 108 K=1,N
  108 D(I,J)=D(I,J)+A(I,K)*B(K,J)
      DO 109 I=1,N
      DO 109 J=1,N
      DO 109 K=1,N
  109 C(I,J)=C(I,J)+D(I,K)*A(J,K)
      RETURN
      END
