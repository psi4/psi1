      PROGRAM NCCSD9
C
C   ******************************************************
C   **  THE NEW CLOSED-SHELL COUPLED  CLUSTER  PROGRAM  **
C   **             JULY  17  , 1988  BY GES             **
C   **      CISD IS 1/4 O2 V4 + 2 O3 V3 + 1/4 O4 V2     **
C   **      CCSD IS 1/4 O2 V4 + 4 O3 V3 + 1/2 O4 V2     **
C   **      VERSION 9, FINAL FORM SEP 2, 1988           **
C   ******************************************************
C
C     USING NEW SET OF RE-SORTED B INTS.
C     2 N**5 LOOPS ELIMINATED
C     VERSION WITH ALL LOOPS SYMMETRY ADAPTED.
C     INTEGRALS AND T2 VECTOR ARE SYMMETRY-PACKED.
C     FROZEN ORBITALS WORKING.
C     DIIS WORKING.
C     RESTART VECTOR FROM FILE69 WORKING.
C
C***********************************************************************
C  NOTICE OF PROGRAM MODIFICATION
C***********************************************************************
c Moved to PSI area on 2/4/89 by clj.
C***********************************************************************
C      BY:  GUSTAVO E. SCUSERIA
C
C    DATE:  OCTOBER 3, 1988
C  REASON:  INCLUDE REFORMULATED CCSDT-1A OPTION.
C
C    DATE:  SEPTEMBER 16, 1988
C  REASON:  FORCE NBFAO=NBF FOR NEW GCINTS CODE.
C
C***********************************************************************
      IMPLICIT INTEGER (A-Z)
      REAL*8 TIMLIM,CC,ENUC,ESCF,ECORR
      REAL*4 EECPU,EETIME,EETCPU
      CHARACTER*32 DATTIM
      CHARACTER*4 LABEL(20),CASE,OPTION,RSTR,CHAR
      COMMON/TIEMPO/EECPU,EETIME,EETCPU
      COMMON/RESTAR/TIMLIM
      COMMON /PARAM/ ESCF,ENUC,ECORR,
     .               EPSI,NGO,NMIN ,MINDIM,MAXDIM,MAXIT,CONVI,
     .               NO,NV,NT,NOV,NM,NV2,NT2,IMX,NONO,NVNV,NDIMT2,NTIN,
     .               NSYMHF,NIRRED,MAXOO,MAXVV,MAXOV,
     .               LEVEL,INTBUF,DIISFL,ITAP69,ITAP98,ITAP99,RSTR
      COMMON/INTS/NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO
      INTEGER NLAMDA(8),ITEMP(1),NC(8),ITYP(8),FLOV(8,4),ITEP(8),
     .        NOSYM(8),NVSYM(8),NFZO(8),NFZV(8),NDOC(8),NUOC(8),NT3(8)
C     DIMENSION CC(1),IC(3480000)
      DIMENSION CC(1),IC(1200000)
      EQUIVALENCE (CC,IC)
      CALL NOUNFL
C     MXCOR=1740000
      MXCOR= 600000
      CALL DATETM(DATTIM,EECPU,EETIME,EETCPU)
      CALL TSTART(6)
      INPUT=5
      IW = 6
      ITAP30=30
      ITAP60=60
      ITAP61=61
      ITAP62=62
      ITAP63=63
      ITAP64=64
      ITAP65=65
      ITAP66=66
      ITAP69=69
      ITAP78=78
      ITAP98=98
      ITAP99=99
      WRITE(IW,6000)
      INTBUF=SEC2I(100)/INTOWP(1)
      CALL RFILE(ITAP30)
      CALL RFILE(ITAP78)
      CALL RFILE(ITAP60)
      CALL RFILE(ITAP61)
      CALL RFILE(ITAP62)
      CALL RFILE(ITAP63)
      CALL RFILE(ITAP64)
      CALL RFILE(ITAP65)
      CALL RFILE(ITAP66)
      CALL RFILE(ITAP98)
      CALL RFILE(ITAP99)
      CALL WREADW(ITAP30,IC,200,101,LWORD)
      MPOINT=IC(2)
      MCONST=IC(3)
      MCALCS=IC(4)
      NCALCS=IC(5)
      NT=IC(18)
      NATOM=IC(19)
      NTAO=IC(22)
C GCINTS
      NTAO=NT
      NSHELL=IC(27)
      NIRRED=IC(28)
      NPRIM =IC(32)
      NSYMHF=IC(41)
      MXCOEF=IC(42)
      IOPEN =IC(43)
      WRITE (*,*) ' MPOINT=',MPOINT
      WRITE (*,*) ' MCONST=',MCONST
      WRITE (*,*) ' MCALCS=',MCALCS
      WRITE (*,*) ' NCALCS=',NCALCS
      WRITE (*,*) ' NT    =',NT
      WRITE (*,*) ' NATOM =',NATOM
      WRITE (*,*) ' NTAO  =',NTAO
      WRITE (*,*) ' NSHELL=',NSHELL
      WRITE (*,*) ' NIRRED=',NIRRED
      WRITE (*,*) ' NPRIM =',NPRIM
      WRITE (*,*) ' NSYMHF=',NSYMHF
      WRITE (*,*) ' MXCOEF=',MXCOEF
      WRITE (*,*) ' IOPEN =',IOPEN
      CALL ZERO(CC,MXCOR)
      WTEMP=1
      COORD=WTEMP+NT
      ZAN=COORD+3*NATOM
      DVEC=ZAN+NATOM
      WVEC=DVEC+NT*NT
      XVEC=WVEC+NT*NT
      XARR=XVEC+NT*NT
      EEE=XARR+NT
      PTOCC=WPADTI(EEE+NT)
      ORBSYM=PTOCC+NT
      FZO=ORBSYM+NT
      CALL READ30(ITAP30,MPOINT,MCONST,MCALCS,NCALCS,NT,NSYMHF,
     .  MXCOEF,CC(EEE),NLAMDA,ITEMP,6,NC,NO,CC(WTEMP),IC(PTOCC),ITYP,
     .  IC(ORBSYM),FLOV,NIRRED,ITEP,ENUC,ESCF,NATOM,NSHELL,
     .  NPRIM,IOPEN,CHAR,NORD,CC(ZAN),CC(COORD))
      FZV=FZO+NO
      NV=NT-NO
      TOP=FZV+NV
      WRITE(IW,6020)
 6020 FORMAT(//,2X,'I',3X,'IRREP',10X,'SCF MO ENERGY',/)
 6021 FORMAT(I3,4X,A4,5X,F18.12)
      DO 556 I=EEE,EEE+NT-1
      WRITE (IW,6021) I-EEE+1,ITEP(IC(ORBSYM+I-EEE)+1),CC(I)
  556 CONTINUE
C
      CALL LOCATE (INPUT,'# CCSD ###',IERR)
      IF(IERR.NE.0) THEN
      WRITE (IW,6007)
      WRITE ( 4,6007)
 6007 FORMAT(//,2X,' WARNING! NO INPUT TO CCSD HAS BEEN FOUND.',/,
     .          2X,'          DEFAULT PARAMETERS WILL BE USED.')
      EPSI=5
      NGO=2
      NMIN =2
      MINDIM=2
      MAXDIM=8
      MAXIT=20
      CONVI=7
      LEVEL=0
      RSTR='NO  '
      CASE='CS  '
      DO 622 I=1,NIRRED
      NFZO(I)=0
  622 NFZV(I)=0
      ELSE
      READ(5,6004)LABEL
 6004 FORMAT(20A4)
      WRITE(6,6024)LABEL
 6024 FORMAT(//,'# CCSD ###  LABEL :  ',20A4)
      READ(5,6002)EPSI,NGO,NMIN ,MINDIM,MAXDIM,FLDIIS,IRSTR
      IF(EPSI  .EQ.0)EPSI  =5
      IF(NGO   .EQ.0)NGO   =2
      IF(NMIN  .EQ.0)NMIN  =2
      IF(MINDIM.EQ.0)MINDIM=2
      IF(MAXDIM.EQ.0)MAXDIM=8
      IF(IRSTR.EQ.1)THEN
      RSTR='YES '
      ELSE
      RSTR='NO '
      ENDIF
      READ(5,6002)CONVI,MAXIT,LEVEL
      IF(CONVI .EQ.0)CONVI =7
      IF(MAXIT .EQ.0)MAXIT =20
 6002 FORMAT(16I5)
      DO 623 I=1,NIRRED
  623 READ(INPUT,6051)NFZO(I),NFZV(I)
 6051 FORMAT(I2,1X,I2)
      READ(5,6004)OPTION
 6006 FORMAT(A4,1X,2I5)
      END IF
      IF(FLDIIS.EQ.2)THEN
      WRITE(6,6005)
C     GO TO 749
      ENDIF
 6005 FORMAT(/, '****** FLDIIS=2, NO DIIS! *****',/)
      WRITE(IW,6003)EPSI,NGO,NMIN ,MINDIM,MAXDIM,CONVI,MAXIT,LEVEL,
     .              OPTION,RSTR
 6003 FORMAT(//,2X,'***** DIIS PARAMETERS *****',
     .        /,2X,'EPSI   =',I5,
     .        /,2X,'NGO    =',I5,
     .        /,2X,'NMIN   =',I5,
     .        /,2X,'MINDIM =',I5,
     .        /,2X,'MAXDIM =',I5,
     .       //,2X,'***** CC   PARAMETERS *****',
     .        /,2X,'CONVI  =',I5,
     .        /,2X,'MAXIT  =',I5,
     .        /,2X,'LEVEL  =',I5,
     .        /,2X,'OPTION =',1X,A4,
     .        /,2X,'RSTR   =',1X,A4)
  749 CONTINUE
      CALL FROZEN (FLOV,NOSYM,NVSYM,NFZO,NFZV,NDOC,NUOC,IC(FZO),IC(FZV),
     .             ITEP,NIRRED,NO,NV,IW,NOACT,NVACT)
      CALL NCOUNT(IC(ORBSYM),FLOV,NIRRED,NO,NV,NT,IC(FZO),IC(FZV),
     .            NDIMT1,NDIMT2,NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO,
     .        NT3,NTAU,OPTION,MAXOO,MAXVV,MAXOV,DIMAR,NDIMT3,MAXO,MAXV)
      NO2=(NO*(NO+1))/2
      NV2=(NV*(NV+1))/2
      NT2=(NT*(NT+1))/2
      NONO=NO*NO
      NVNV=NV*NV
      NM =NO*NV
      NMNM=NM*NM
      NTNT=NT*NT
      NM2=(NM*(NM+1))/2
      NGOO=(NO2*(NO2+1))/2
      NGVV=(NV2*(NV2+1))/2
      NGOV=(NM*(NO+1)*(NV+1))/4
      NHOV=(NM*(NM+1))/2
      NLOV=NO2*NM
      NLVO=NV2*NM
      NINT=NGOO+NGVV+NGOV+NHOV+NLOV+NLVO
      NSINT=NSGOO+NSGVV+NSGOV+NSHOV+NSLOV+NSLVO
C     MAXAR=NSGOO
C     IF(NSGVV.GT.MAXAR)MAXAR=NSGVV
C     IF(NSGOV.GT.MAXAR)MAXAR=NSGOV
C     IF(NSHOV.GT.MAXAR)MAXAR=NSHOV
C     IF(NSLOV.GT.MAXAR)MAXAR=NSLOV
C     IF(NSLVO.GT.MAXAR)MAXAR=NSLVO
C     NSTIN= MAXAR
      NSTIN=NSGOO+      NSGOV+NSHOV+NSLOV+NSLVO
      NONO2=NO*NO2
      NONV2=NO*NV2
      NONM=NO*NM
      NVNO2=NV*NO2
      NVNV2=NV*NV2
      NVNM=NV*NM
      NOV2=MAX0(NO2,NV2)
      NOV =MAX0(NO ,NV )
      IMX=MAX0(NM,NV2)
      NOVNOV=NOV*NOV
      WRITE(IW,6030)NO,NV,NT,NM,NO2,NV2,NT2,NM2
      WRITE(6,*)'NGOO =',NGOO,'NSGOO =',NSGOO
      WRITE(6,*)'NGVV =',NGVV,'NSGVV =',NSGVV
      WRITE(6,*)'NGOV =',NGOV,'NSGOV =',NSGOV
      WRITE(6,*)'NHOV =',NHOV,'NSHOV =',NSHOV
      WRITE(6,*)'NLOV =',NLOV,'NSLOV =',NSLOV
      WRITE(6,*)'NLVO =',NLVO,'NSLVO =',NSLVO
      WRITE(6,*)'NINT =',NINT,'NSINT =',NSINT
      WRITE(6,*)
      WRITE(6,*) 'REQUIRED CORE FOR INTEGRALS',NSTIN
      WRITE(IW,6042)
      WRITE(IW,6013)NDIMT1
      WRITE(IW,6014)NSHOV
      NDIMTT=1+NDIMT1+NSHOV
      IF(OPTION.EQ.'SDT1')THEN
      WRITE(IW,6016)NDIMT3
      NDIMTT=1+NDIMT1+NDIMT2+NDIMT3
      ENDIF
      WRITE(IW,6015)NDIMTT
 6042 FORMAT(//,2X,'*****  # WALKS  *******************',/)
 6013 FORMAT(2X,'THE NUMBER OF SINGLE EXCITATIONS IS',I12)
 6014 FORMAT(2X,'THE NUMBER OF DOUBLE EXCITATIONS IS',I12)
 6016 FORMAT(2X,'THE NUMBER OF TRIPLE EXCITATIONS IS',I12)
 6015 FORMAT(2X,'THE TOTAL NUMBER OF S & D WALKS  IS',I12)
C
C  CORE ALLOCATION
C
      IPV=TOP
      IPO=IPV+NM
      ITRV=IPO+NM
      ITRT=ITRV+NM
      ITR=ITRT+NM
      IPL=ITR+NV
      IPQ=IPL+NT
      ITRO=IPQ+NT2
      ITV=ITRO+IMX
      UOFF=ITV+NV
      VADD=UOFF+NO*NO*2
      ZLX= VADD+NV*NV
      IOUT=ZLX+NV*NV
      AOFF=IOUT+NT
      AADD=AOFF+NONO
      BOFF=AADD+NONO
      BADD=BOFF+NVNV
      COFF=BADD+NVNV
      CADD=COFF+NVNV
      DOFF=CADD+NONO
      DADD=DOFF+NM
      EOFF=DADD+NM
      EADD=EOFF+NM
      FOFF=EADD+NONO
      FADD=FOFF+NVNV
      ININ=FADD+NM
      IF(OPTION.EQ.'SDT1')THEN
      T3OFF=ININ
      T3ADD=T3OFF+NO*NO*2*NIRRED
      ININ=T3ADD+NV*NV*NIRRED
      ELSE
      T3OFF=1
      T3ADD=1
      ENDIF
      AIN=IADTWP(ININ)
      BIN=AIN+NSGOO
C     CIN=BIN+NSGVV
      CIN=BIN+NV*NV
      DIN=CIN+NSGOV
      EIN=DIN+NSHOV
      FIN=EIN+NSLOV
      BUF=FIN+NSLVO
      IBUF=WPADTI(BUF)
      TOPBUF=BUF+INTBUF
      T2O=TOPBUF
      T2=T2O+NDIMT2
      FOCK=T2+NDIMT2
      DVEC=FOCK+NT2
      WVEC=DVEC+NT*NT
      XVEC=WVEC+NT*NT
      XARR=XVEC+NT*NT
      ICC=XARR+NT
      IBB=ICC+MAXDIM
      IB2=IBB+(MAXDIM+1)*(MAXDIM+2)
      ILAST=IB2+(MAXDIM+1)*(MAXDIM+2)
C
C     ALLOCATE CORE FOR NEW CCSD INTERMEDIATES
C
      AR1=ILAST
      AR3=AR1
      AR5=AR1
      AR2=AR1+DIMAR
      AR4=AR2
      AR6=AR2
      GGO=AR2+DIMAR
      GGV=GGO+NO*NO
      HO =GGV+NV*NV
      HV = HO+NO*NO
      T1O= HV+NV*NV
      T1=T1O+NO*NV
      FFO=T1+NO*NV
      SFO=FFO
      FFV=FFO+NO*NO
      SFV=FFV
      AUX1=FFV+NV*NV
      SUX1=AUX1
      AUX2=AUX1+NO*NV
      SUX2=AUX2
      AUX3=AUX2+NO*NV
      SUX3=AUX3
      JAR =AUX3+NV*NV
      KAR =JAR +NO*NV
      XVAL=KAR +NO*NV
      VVAL=XVAL+NT
      VPAL=VVAL+NT
      BFT=VPAL+NT
      ILAST=BFT+NV*NV
      IF(OPTION.EQ.'SDT1')THEN
      EXTRA=NTAU+NO*NO*NIRRED+NV*NV*NIRRED/2
      WRITE(6,*)
      WRITE(6,*)' ALLOCATING ',EXTRA,' EXTRA WORDS FOR CCSDT-1A'
      WRITE(6,*)
      TAU=ILAST
      ILAST=TAU+NTAU
      ELSE
      TAU=1
      ENDIF
C
      IMCOR=MXCOR*8/1000
      REQCOR=MAX0(TOPBUF,ILAST)
      IF(REQCOR.GT.MXCOR) THEN
      ICOR =REQCOR *8/1000
      WRITE(IW,6001)IMCOR,MXCOR,ICOR,REQCOR
      STOP 'NOT ENOUGH CORE '
      END IF
      IF(FLDIIS.EQ.2)THEN
      DIISFL=2
      ELSE
       DIISFL=0
      ENDIF
      ICOR =REQCOR *8/1000
      WRITE(IW,6001)IMCOR,MXCOR,ICOR,REQCOR
C
C********* CONSTRUCT INDICES TO BE USED
C
      DO 140  I=1,NM
      I1=I-1
      IC(IPV+I1)=NO+1+I1/NO
      IC(IPO+I1)=I-(IC(IPV+I1)-NO-1)*NO
      IC(ITRV+I1)=I1*NV2
  140 IC(ITRT+I1)=I1*NM
      DO 141 I=1,NV
      I1=I-1
  141 IC(ITR+I1)=I1*NO
      DO 142 I=1,NT
      I1=I-1
  142 IC(IPL+I1)=I1*NT
      IC(IPQ)=0
      DO 143 I=1,NT2-1
  143 IC(IPQ+I)=IC(IPQ+I-1)+I
      DO 144 I=1,IMX
      I1=I-1
  144 IC(ITRO+I1)=I1*NO2
      DO 145 I=1,NV
      I1=I-1
  145 IC(ITV+I1)=I1*NV
C    .
      CALL SYMARR(IC(ORBSYM),FLOV,NIRRED,NO,NV,NT,NOV,NM,
     .            IC(FZO),IC(FZV),NFZO,NFZV,
     .            IC(UOFF),IC(VADD),IC(ZLX),IC(ITR),IC(ITV),NONO,NVNV,
     .            IC(AOFF),IC(AADD),IC(BOFF),IC(BADD),IC(COFF),IC(CADD),
     .            IC(DOFF),IC(DADD),IC(EOFF),IC(EADD),IC(FOFF),IC(FADD),
     .            IC(T3OFF),IC(T3ADD),OPTION)
C
C     CALL ZERO(CC(II),NTIN)
C     CALL RINTS(ITAP78,CC(II),NTIN,NT,6,CC(BUF),IC(IBUF),INTBUF,
C    .            IC(IPQ),NT2)
C     WRITE(IW,*)  '2E INTS'
C     WRITE(IW,6070) (I,CC(I-1+II),I=1,NTIN)
C     WRITE(IW,6040)
C********CLOSED-SHELL COUPLED CLUSTER CALCULATION
      IF(OPTION.EQ.'CISD'.OR.OPTION.EQ.'BOTH')THEN
      CALL PLUS9(CC(II),IC(IPQ),IC(IPL),IC(ITR),IC(ITRO),IC(ITRV),
     .          IC(ITRT),IC(ITV),CC(EEE),IC(ORBSYM),FLOV,
     .          IC(UOFF),IC(VADD),IC(ZLX),CC(T2O),CC(T2),
     .          CC(ICC),CC(IBB),CC(IB2),
     .        IC(FZO),IC(FZV),CC(FOCK),CC(FFO),CC(FFV),CC(SFO),CC(SFV),
     .          CC(DVEC),CC(XVEC),CC(WVEC),CC(XARR),IC(IOUT),
     .                  CC(AR1),CC(AR2),CC(AR3),CC(AR4),CC(AR5),CC(AR6),
     .          CC(JAR),CC(KAR),CC(GGO),CC(GGV),CC(T1O),CC(T1),
     .          CC(AUX1),CC(AUX2),CC(AUX3),CC(XVAL),CC(VVAL),CC(VPAL),
     .          CC(SUX1),CC(SUX2),CC(SUX3),
     .          IC(AOFF),IC(AADD),IC(BOFF),IC(BADD),IC(COFF),IC(CADD),
     .          IC(DOFF),IC(DADD),IC(EOFF),IC(EADD),IC(FOFF),IC(FADD),
     .          CC(BUF),IC(IBUF),
     .          CC(AIN),CC(BIN),CC(CIN),CC(DIN),CC(EIN),CC(FIN),CC(BFT),
     .          NIT)
      WRITE(IW,6074)
      WRITE(IW,6071) ESCF
      WRITE( 4,6071) ESCF
      WRITE(IW,6072) ECORR
      WRITE( 4,6072) ECORR
      ESCF=ESCF+ECORR
      WRITE(IW,6073) ESCF
      WRITE( 4,6073) ESCF
      ENDIF
C
C     IF(OPTION.EQ.'CCSD'.OR.OPTION.EQ.'SDT1')THEN
      CALL CLUS9(CC(II),IC(IPQ),IC(IPL),IC(ITR),IC(ITRO),IC(ITRV),
     .          IC(ITRT),IC(ITV),CC(EEE),IC(ORBSYM),FLOV,
     .          IC(UOFF),IC(VADD),IC(ZLX),CC(T2O),CC(T2),
     .          CC(ICC),CC(IBB),CC(IB2),
     .        IC(FZO),IC(FZV),CC(FOCK),CC(FFO),CC(FFV),CC(SFO),CC(SFV),
     .          CC(DVEC),CC(XVEC),CC(WVEC),CC(XARR),IC(IOUT),
     .          CC(AR1),CC(AR2),CC(AR3),CC(AR4),CC(AR5),CC(AR6),
     .          CC(JAR),CC(KAR),CC(GGO),CC(GGV),CC(T1O),CC(T1),
     .          CC(AUX1),CC(AUX2),CC(AUX3),CC(XVAL),CC(VVAL),CC(VPAL),
     .          CC(SUX1),CC(SUX2),CC(SUX3),
     .          IC(AOFF),IC(AADD),IC(BOFF),IC(BADD),IC(COFF),IC(CADD),
     .          IC(DOFF),IC(DADD),IC(EOFF),IC(EADD),IC(FOFF),IC(FADD),
     .          CC(BUF),IC(IBUF),
     .          CC(AIN),CC(BIN),CC(CIN),CC(DIN),CC(EIN),CC(FIN),
     .          CC(HO),CC(HV),CC(BFT),NIT,IC(T3OFF),IC(T3ADD),CC(TAU),
     .          OPTION,NT3,CC(AR1),CC(AR2),NOACT,NVACT,MAXO,MAXV)
      WRITE(IW,6074)
      WRITE(IW,6071) ESCF
      WRITE( 4,6071) ESCF
      WRITE(IW,6072) ECORR
      WRITE( 4,6072) ECORR
      ESCF=ESCF+ECORR
      WRITE(IW,6073) ESCF
      WRITE( 4,6073) ESCF
C     ENDIF
 6071 FORMAT('  SCF  ENERGY = ',F22.12)
 6072 FORMAT(' CORR. ENERGY = ',F22.12)
 6073 FORMAT(' TOTAL ENERGY = ',F22.12)
 6074 FORMAT(//,'CALCULATION RESULTS',/)
C
      CALL RCLOSE(ITAP60,3)
      CALL RCLOSE(ITAP61,3)
      CALL RCLOSE(ITAP62,3)
      CALL RCLOSE(ITAP63,3)
      CALL RCLOSE(ITAP64,3)
      CALL RCLOSE(ITAP65,3)
      CALL RCLOSE(ITAP66,3)
      IF(NIT.GT.1.AND.DIISFL.NE.2)THEN
      CALL RCLOSE(ITAP98,4)
      CALL RCLOSE(ITAP99,4)
      ELSE
      CALL RCLOSE(ITAP98,3)
      CALL RCLOSE(ITAP99,3)
      ENDIF
      CALL TSTOP (6)
C
 6000 FORMAT(//,42('-'),/,42('-'),/,
     .' THE CLOSED-SHELL COUPLED CLUSTER PROGRAM',/,
     .'      REFORMULATED VERSION JUNE 1988     ',/,
     .'       WRITTEN BY GUSTAVO SCUSERIA       ',/,
     .'         VERSION 9. SEP 2, 1988     ',/,42('-'),/,42('-'),//)
 6001 FORMAT(//,' MAXIMUM  CORE = ',I7,2X,'K BYTES  OR  ',I9 ,' REAL',
     .         ' WORDS',/,
     .          ' REQUIRED CORE = ',I7,2X,'K BYTES  OR  ',I9 ,' REAL',
     .         ' WORDS')
 6030 FORMAT(//,'NO  =',I8,6X,'NV  =',I8,6X,'NT  =',I8,6X,'NM  =',I8,/,
     .          'NO2 =',I8,6X,'NV2 =',I8,6X,'NT2 =',I8,6X,'NM2 =',I8 )
 6040 FORMAT(//)
 6070 FORMAT(6(1X,I6,2X,F12.6))
      RETURN
      END
C
C-----------------------------------------------------------------------
C
      SUBROUTINE CLUS9(II,IPQ,IPL,ITR,ITRO,ITRV,ITRT,ITV,
     .                EIG,ORBSYM,FLOV,TOFF,TADD,ZLX,T2O,T2,
     .                CCC,BBB,BB2,FZO,FZV,
     .                FOCK,FFO,FFV,SFO,SFV,DVEC,XVEC,WVEC,XARR,IOUT,
     .                    AR1,AR2,AR3,AR4,AR5,AR6,JAR,KAR,GGO,GGV,
     .                T1O,T1,AUX1,AUX2,AUX3,XVAL,VVAL,VPAL,
     .                SUX1,SUX2,SUX3,
     .                AOFF,AADD,BOFF,BADD,COFF,CADD,
     .                DOFF,DADD,EOFF,EADD,FOFF,FADD,
     .                BUF,IBUF,
     .                AIN,BIN,CIN,DIN,EIN,FIN,HO,HV,BUFINT,NIT,
     .                T3OFF,T3ADD,TAU,OPTION,NT3,
     .                XAR1,XAR2,NOACT,NVACT,MAXO,MAXV)
      IMPLICIT INTEGER (A-Z)
      COMMON/INTS/NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO
      COMMON/PARAM/ ESCF,ENUC,NXE,
     .              EPSI,NGO,NMIN ,MINDIM,MAXDIM,MAXIT,CONVI,
     .              NO,NV,NT,NOV,NM,NV2,NT2,IMX,NONO,NVNV,NDIMT2,NTIN,
     .              NSYMHF,NIRRED,MAXOO,MAXVV,MAXOV,
     .               LEVEL,INTBUF,DIISFL,ITAP69,ITAP98,ITAP99,RSTR
      CHARACTER*4 OPTION,RSTR
      REAL*8    GOO,GVV,GOV,HOV,LOV,LVO,AX,BX,CX,DX,        XE,
     .          XEO,CONV,II
      REAL*8 FOCK(NT2),FFO(NO,NO),FFV(NV,NV),SFO(NO*NO),SFV(NV*NV)
      REAL*8 EREF,ESCF,ENUC,NXE,NXEO
      REAL*8 DVEC(NT*NT),XVEC(NT*NT),WVEC(NT*NT),XARR(NT)
      REAL*8 VAL,VAL1,VAL2,VAL3,DELTA,VALA,PAL,TMP,TMV,T1NORM,DELT2,
     .       DELT,INT1,INT2,XES,TFAC1,TFAC2,XEOS,VALJ,VALK,
     .       VVAL(NT),VPAL(NT),XVAL(NT),VALP,VALM,TAU(*)
C
      REAL*8 AR1(MAXOV,MAXOV),AR2(MAXOV,MAXOV),
     .       AR3(MAXVV,MAXOO),AR4(MAXVV,MAXOO),
     .       AR5(MAXOO,MAXVV),AR6(MAXOO,MAXVV),
     .       JAR(NV*NO),KAR(NV*NO),GGO(NO,NO),GGV(NV,NV),
     .       T1O(NO,NV),T1(NO,NV),AUX1(NV,NO),AUX2(NV,NO),
     .       HO(NO,NO),HV(NV,NV),
     .       SUX1(NV*NO),SUX2(NV*NO),
     .       AUX3(NV,NV),SUX3(NV*NV)
      REAL*8 XAR1(*),XAR2(*)
      REAL*8 EIG(NT),BUF(INTBUF)
C     REAL*8 AIN(NSGOO),BIN(NSGVV),CIN(NSGOV),
      REAL*8 AIN(NSGOO),BIN(NV,NV),CIN(NSGOV),
     .       DIN(NSHOV),EIN(NSLOV),FIN(NSLVO)
      REAL*8 T2O(NDIMT2),T2(NDIMT2),BUFINT(NV*NV)
      INTEGER IBUF(INTBUF*2),NAB(8),NT3(8)
      INTEGER AOFF(2),BOFF(2),COFF(2),DOFF(2),EOFF(2),FOFF(2),
     .        AADD(2),BADD(2),CADD(2),DADD(2),EADD(2),FADD(2)
      REAL*8 CCC(MAXDIM),BBB(MAXDIM+1,MAXDIM+2),
     .                   BB2(MAXDIM+1,MAXDIM+2)
      INTEGER IPQ(NT2),IPL(NT),ITR(NOV),ITRO(IMX),
     .        ITRV(NM),ITRT(NM),ITV(NV),
     .        TOFF(NO,NO,2),TADD(NV,NV),ZLX(NV,NV),
     .        ORBSYM(NT),FLOV(NIRRED,4),FZO(NO),FZV(NV),IOUT(NT),
     .        T3OFF(NO,NO,2,NIRRED),T3ADD(NV,NV,NIRRED)
C
      NIT=0
      CONV=10.D0**(-CONVI)
      NXEO=0.0D0
C
      IT=0
      IFLAG=0
      NCOUNT=0
C
C     READ SYMMETRY-PACKED INTEGRALS
C
      CALL RDINTS(60,AIN,NSGOO,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            AOFF,AADD,NONO,NONO,ITR,NOV,ITR,NOV)
C     CALL RDINTS(61,BIN,NSGVV,1,6,BUF,IBUF,INTBUF,
C    .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
C    .            BOFF,BADD,NVNV,NVNV,ITV, NV,ITV, NV)
      CALL RDINTS(62,CIN,NSGOV,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            COFF,CADD,NVNV,NONO,ITV, NV ,ITR, NOV)
      CALL RDINTS(63,DIN,NSHOV,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            DOFF,DADD,NM  ,NM  ,ITR, NOV,ITR, NOV)
      CALL RDINTS(64,EIN,NSLOV,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            EOFF,EADD,NM  ,NONO,ITR, NOV,ITR, NOV)
      CALL RDINTS(65,FIN,NSLVO,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            FOFF,FADD,NVNV,NM  ,ITV, NV,ITR, NOV)
C
C     FOCK MATRIX IN MO BASIS
C
      CALL LOCATE (5,'# MONGO ###',IERR)
      IF(IERR.NE.0) THEN
      WRITE ( 6,6007)
      WRITE ( 4,6007)
 6007 FORMAT(//,2X,' NO INPUT TO MONGO HAS BEEN FOUND.',/,
     .          2X,' DIAGONAL FOCK MATRIX IS ASSUMED. ',//)
      FLAG=0
      ELSE
      READ(5,6004)FLAG
 6004 FORMAT(I5)
      END IF
      CALL ZERO (FOCK,NT2)
C
C     FLAG=0 (DEFAULT) USE MO ENERGIES IN THE FOCK MATRIX
C
      IF (FLAG.EQ.0) THEN
      EREF=ESCF
      DO 42 I=1,NT
      IJ=IPQ(I)+I
   42 FOCK(IJ)=EIG(I)
      ELSE
      CALL ZERO (FOCK,NT2)
      WRITE(*,*)'NON-DIAGONAL FOCK MATRIX IS CONSTRUCTED '
      CALL FOCKI (DVEC,IOUT,XVEC,WVEC,XARR,NT,Z,FLAG,FOCK,EREF,ENUC,
     .                 II,NTIN,BUF,IBUF,INTBUF,
     .       NSGOO,NSGOV,NSHOV,NSLOV,IPQ,ITR,ITV,ITRO,ITRV,FZO,FZV,
     .            NT2,NO,NV,NM,IMX,NONO,NVNV,NOV)
      ESCF=EREF
      ENDIF
C
C     SET INITIAL VALUES OF T1 AND T2
C
      IF(RSTR.EQ.'YES ')THEN
      CALL RFILE(ITAP69)
      CALL SREAD(ITAP69,JU,1)
      CALL SREAD(ITAP69,JU,1)
      CALL SREAD(ITAP69,T1,INTOWP(NO*NV))
      CALL SREAD(ITAP69,T2,INTOWP(NDIMT2))
      CALL RCLOSE(ITAP69,3)
C
      ELSE
C
      CALL ZERO(T1,NO*NV)
      DO 13496 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13496
      ISYM=ORBSYM(I)
      IY=IPQ(I)+I
      DO 13486 J=1,NO
      IF(FZO(J).EQ.1)GO TO 13486
      JSYM=ORBSYM(J)
      JISYM=IEOR(JSYM,ISYM)
      JJ=IPQ(J)+J
      DO 13476 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13476
      ASYM=ORBSYM(A+NO)
      BSYM=IEOR(ASYM,JISYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      AA=IPQ(A+NO)+A+NO
      IA=ITR(A)+I
      IF(LB.GT.A)LB=A
      DO 13466 B=FB,LB
      BY=IPQ(B+NO)+B+NO
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IJAB=TOFF(I,J,1)+TADD(A,B)
      VAL=FOCK(IY)+FOCK(JJ)-FOCK(AA)-FOCK(BY)
      T2(IJAB)=DIN(IAJB)/VAL
13466 CONTINUE
13476 CONTINUE
13486 CONTINUE
13496 CONTINUE
      ENDIF
C
C     MP2 (OR RESTART) CORRELATION ENERGY
C
      WRITE(6,*)' '
      CALL ECORR(T2,T1,DIN,NXE,TOFF,TADD,IPQ,ORBSYM,FLOV,
     .           NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .           DOFF,DADD,NM,ITR)
C
      IF(OPTION.EQ.'SDT1'.AND.RSTR.EQ.'YES ')THEN
      CALL CCSDT1     (T2,T1,T2 ,T1 ,TAU,NO,NV,NDIMT2,NIT,
     .                 ORBSYM,FLOV,NIRRED,T3OFF,T3ADD,ZLX,FZO,FZV,
     .                 TOFF,TADD,OPTION,RSTR,NT3,DOFF,DADD,EOFF,EADD,
     .                 FOFF,FADD,ITV,ITR,IPQ,DIN,EIN,FIN,SORT,FOCK,
     .                 AUX1,AUX2,AUX3,SUX1,SUX2,SUX3,
     .                 XAR1,XAR2,NOACT,NVACT,MAXO,MAXV,MAXOV,
     .                 AR1,AR2,SFV,AUX3,AR1,AR2,AUX3,AUX1)
      ENDIF
C
   50 CONTINUE
C
      NIT=NIT+1
C
C     TRANSFER T1 TO BEGIN NEW ITERATION
C
      DO 90 U=1,NO
      USYM=ORBSYM(U)
      FBE=FLOV(USYM+1,3)-NO
      LBE=FLOV(USYM+1,4)-NO
      DO 90 BE=FBE,LBE
      T1O(U,BE)=T1(U,BE)
   90 CONTINUE
C
C     TRANSFER T2
C
      DO 33491 I=1,NDIMT2
      T2O(I)=T2(I)
33491 CONTINUE
C
      NXEO=NXE
      CALL ZERO(T1,NO*NV)
      CALL ZERO(T2,NDIMT2)
C
 9000 FORMAT(////)
      CALL TIMIT(4,6)
C
C     HO INTERMEDIATE
C
      DO 13352 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13352
      USYM=ORBSYM(U)
      FI=FLOV(USYM+1,1)
      LI=FLOV(USYM+1,2)
      DO 13351 I=FI,LI
      VAL=0.0D0
      UI=IPQ(MAX0(U,I))+MIN0(U,I)
CFOK  IF(I.NE.U)VAL=VAL+FOCK(UI)
      HO(U,I)=VAL
13351 CONTINUE
13352 CONTINUE
      DO 13393 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13393
      ASYM=ORBSYM(A+NO)
      DO 13383 B=1,NV
      IF(FZV(B).EQ.1)GO TO 13383
      BSYM=ORBSYM(B+NO)
      BASYM=IEOR(BSYM,ASYM)
      ZL=ZLX(A,B)
      DO 13373 J=1,NO
      IF(FZO(J).EQ.1)GO TO 13373
      JSYM=ORBSYM(J)
      USYM=IEOR(JSYM,BASYM)+1
      FU=FLOV(USYM,1)
      LU=FLOV(USYM,2)
      JA=ITR(A)+J
      JB=ITR(B)+J
      DO 13343 U=FU,LU
      UJAB=TOFF(U,J,ZL)+TADD(A,B)
C     XVAL(U)=T2O(UJAB)
      XVAL(U)=T2O(UJAB)+T1O(U,A)*T1O(J,B)
13343 CONTINUE
      DO 13363 I=FU,LU
      IA=ITR(A)+I
      IB=ITR(B)+I
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IBJA=DOFF(MAX0(IB,JA))+DADD(MIN0(IB,JA))
      TMP=DIN(IAJB)+DIN(IAJB)-DIN(IBJA)
      DO 13353 U=FU,LU
      HO(U,I)=HO(U,I)+TMP*XVAL(U)
13353 CONTINUE
13363 CONTINUE
13373 CONTINUE
13383 CONTINUE
13393 CONTINUE
C
C     HV INTERMEDIATE
C
      DO 13452 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13452
      BESYM=ORBSYM(BE+NO)
      FA=FLOV(BESYM+1,3)-NO
      LA=FLOV(BESYM+1,4)-NO
      DO 13451 A=FA,LA
      VAL=0.0D0
      ABE=IPQ(MAX0(A,BE)+NO)+MIN0(A,BE)+NO
CFOK  IF(A.NE.BE)VAL=VAL+FOCK(ABE)
      HV(BE,A)=VAL
13451 CONTINUE
13452 CONTINUE
      DO 13459 B=1,NV
      IF(FZV(B).EQ.1)GO TO 13459
      BSYM=ORBSYM(B+NO)
      DO 13458 J=1,NO
      IF(FZO(J).EQ.1)GO TO 13458
      JSYM=ORBSYM(J)
      JBSYM=IEOR(JSYM,BSYM)
      JB=ITR(B)+J
      DO 13457 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13457
      ISYM=ORBSYM(I)
      BESYM=IEOR(ISYM,JBSYM)+1
      FBE=FLOV(BESYM,3)-NO
      LBE=FLOV(BESYM,4)-NO
      IB=ITR(B)+I
      DO 13453 BE=FBE,LBE
      ZL=ZLX(BE,B)
      IJBEB=TOFF(I,J,ZL)+TADD(BE,B)
      XVAL(BE)=T2O(IJBEB)+T1O(I,BE)*T1O(J,B)
C     XVAL(BE)=T2O(IJBEB)
13453 CONTINUE
      DO 13455 A=FBE,LBE
      IA=ITR(A)+I
      JA=ITR(A)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IBJA=DOFF(MAX0(IB,JA))+DADD(MIN0(IB,JA))
      TMP=DIN(IAJB)+DIN(IAJB)-DIN(IBJA)
      DO 13454 BE=FBE,LBE
      HV(BE,A)=HV(BE,A)-TMP*XVAL(BE)
13454 CONTINUE
13455 CONTINUE
13457 CONTINUE
13458 CONTINUE
13459 CONTINUE
C
C     HIA INTERMEDIATE
C
      DO 13557 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13557
      ASYM=ORBSYM(A+NO)
      FI=FLOV(ASYM+1,1)
      LI=FLOV(ASYM+1,2)
      DO 13556 I=FI,LI
      VAL=0.0D0
      IA=ITR(A)+I
      DO 13554 J=1,NO
      IF(FZO(J).EQ.1)GO TO 13554
      JSYM=ORBSYM(J)
      FB=FLOV(JSYM+1,3)-NO
      LB=FLOV(JSYM+1,4)-NO
      JA=ITR(A)+J
      DO 13550 B=FB,LB
      JB=ITR(B)+J
      IB=ITR(B)+I
      IAJB=DOFF(MAX0(JB,IA))+DADD(MIN0(JB,IA))
      IBJA=DOFF(MAX0(IB,JA))+DADD(MIN0(IB,JA))
      VAL=VAL+(DIN(IAJB)+DIN(IAJB)-DIN(IBJA))*T1O(J,B)
13550 CONTINUE
13554 CONTINUE
      AUX3(I,A)=VAL
CFOK .            +FOCK(IA)
13556 CONTINUE
13557 CONTINUE
C
C     HO, HV, HIA * T1
C
      DO 13291 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13291
      USYM=ORBSYM(U)
      FBE=FLOV(USYM+1,3)-NO
      LBE=FLOV(USYM+1,4)-NO
      FI=FLOV(USYM+1,1)
      LI=FLOV(USYM+1,2)
      DO 13271 BE=FBE,LBE
      BEU=ITR(BE)+U
      VAL=0.0D0
      DO 13235 I=FI,LI
      VAL=VAL-HO(U,I)*T1O(I,BE)
13235 CONTINUE
      DO 13238 A=FBE,LBE
      VAL=VAL+HV(BE,A)*T1O(U,A)
13238 CONTINUE
      DO 13248 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13248
      IU=ITR(MAX0(I,U))+MIN0(I,U)
      ISYM=ORBSYM(I)
      FA=FLOV(ISYM+1,3)-NO
      LA=FLOV(ISYM+1,4)-NO
      DO 13245 A=FA,LA
      ZL=ZLX(A,BE)
      IA=ITR(A)+I
      BEUIA=DOFF(MAX0(BEU,IA))+DADD(MIN0(BEU,IA))
      BEA=ITV(MAX0(BE,A))+MIN0(BE,A)
      IUBEA=COFF(BEA)+CADD(IU)
      VAL=VAL+(2.0D0*DIN(BEUIA)-CIN(IUBEA))*T1O(I,A)
      IUABE=TOFF(I,U,ZL)+TADD(A,BE)
      UIABE=TOFF(U,I,ZL)+TADD(A,BE)
      VAL1=T2O(IUABE)
C     VAL2=T2O(UIABE)+T1O(U,A)*T1O(I,BE)
      VAL2=T2O(UIABE)-T1O(U,A)*T1O(I,BE)
      VAL=VAL+AUX3(I,A)*(VAL1+VAL1-VAL2)
13245 CONTINUE
13248 CONTINUE
CFOK  VAL=VAL+FOCK(BEU)
      T1(U,BE)=T1(U,BE)+VAL
13261 CONTINUE
13271 CONTINUE
13281 CONTINUE
13291 CONTINUE
C
C     E * T2
C
      CALL ZERO(AUX1,NO*NV)
      DO 13691 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13691
      ISYM=ORBSYM(I)
      DO 13681 J=1,NO
      IF(FZO(J).EQ.1)GO TO 13681
      JSYM=ORBSYM(J)
      JISYM=IEOR(JSYM,ISYM)
      DO 13671 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13671
      ASYM=ORBSYM(A+NO)
      IA=ITR(A)+I
      BESYM=IEOR(ASYM,JISYM)+1
      FBE=FLOV(BESYM,3)-NO
      LBE=FLOV(BESYM,4)-NO
      FU=FLOV(BESYM,1)
      LU=FLOV(BESYM,2)
      DO 13601 BE=FBE,LBE
      ZL=ZLX(A,BE)
      IJABE=TOFF(I,J,ZL)+TADD(A,BE)
      JIABE=TOFF(J,I,ZL)+TADD(A,BE)
      VAL1=T2O(IJABE)+T1O(I,A)*T1O(J,BE)
      VAL2=T2O(JIABE)+T1O(J,A)*T1O(I,BE)
      XVAL(BE)=VAL1+VAL1-VAL2
13601 CONTINUE
      DO 13661 U=FU,LU
      JU=ITR(MAX0(J,U))+MIN0(J,U)
      IAJU=EOFF(IA)+EADD(JU)
      TMP = -EIN(IAJU)
      DO 13651 BE=FBE,LBE
      tmv = aux1(be,u)
      tmv       = tmv      + tmp    *XVAL(BE)
      aux1(be,u) = tmv
13651 CONTINUE
13661 CONTINUE
13671 CONTINUE
13681 CONTINUE
13691 CONTINUE
clj Transpose aux1(1:nv,1:no)
      do 102 i = 1, nv
          do 202 j = 1, no
             aux3(j,i) = aux1(i,j)
202          continue
102       continue
C
C     F * T2
C
      DO 13791 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13791
      ISYM=ORBSYM(I)
      DO 13781 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13781
      ASYM=ORBSYM(A+NO)
      IA=IPQ(A+NO)+I
      AISYM=IEOR(ASYM,ISYM)
      IA=ITR(A)+I
      DO 13771 B=1,NV
      IF(FZV(B).EQ.1)GO TO 13771
      BSYM=ORBSYM(B+NO)
      USYM=IEOR(BSYM,AISYM)+1
      FU=FLOV(USYM,1)
      LU=FLOV(USYM,2)
      FBE=FLOV(USYM,3)-NO
      LBE=FLOV(USYM,4)-NO
      ZL=ZLX(A,B)
      DO 13711 U=FU,LU
      IUAB=TOFF(I,U,ZL)+TADD(A,B)
      UIAB=TOFF(U,I,ZL)+TADD(A,B)
      VAL1=T2O(IUAB)+T1O(I,A)*T1O(U,B)
      VAL2=T2O(UIAB)+T1O(U,A)*T1O(I,B)
      XVAL(U)=VAL1+VAL1-VAL2
13711 CONTINUE
      DO 13761 BE=FBE,LBE
      BEB=ITV(MAX0(BE,B))+MIN0(BE,B)
      IABEB=FOFF(BEB)+FADD(IA)
      DO 13751 U=FU,LU
      tmv = aux3(u,be)
      TMV = TMV       +FIN(IABEB)*XVAL(U)
      aux3(u,be) = tmv
13751 CONTINUE
13761 CONTINUE
13771 CONTINUE
13781 CONTINUE
13791 CONTINUE
C
C     ADD INTO T1
C
      DO 13891 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13891
      USYM=ORBSYM(U)
      FBE=FLOV(USYM+1,3)-NO
      LBE=FLOV(USYM+1,4)-NO
      DO 13871 BE=FBE,LBE
      T1(U,BE)=T1(U,BE)+AUX3(U,BE)
13871 CONTINUE
13891 CONTINUE
C
C     GO INTERMEDIATE
C
      CALL ZERO(GGO,NO*NO)
      DO 12190 U=1,NO
      IF(FZO(U).EQ.1)GO TO 12190
      USYM=ORBSYM(U)
      DO 12180 I=1,NO
      IF(FZO(I).EQ.1)GO TO 12180
      ISYM=ORBSYM(I)
      IF(USYM.NE.ISYM)GO TO 12180
      VAL=0.0D0
      IU=ITR(MAX0(I,U))+MIN0(I,U)
      VAL=VAL+HO(U,I)
      FA=FLOV(ISYM+1,3)-NO
      LA=FLOV(ISYM+1,4)-NO
      DO 12120 A=FA,LA
      IA=IPQ(A+NO)+I
CFOK  VAL=VAL+FOCK(IA)*T1O(U,A)
12120 CONTINUE
      DO 12170 A=1,NV
      IF(FZV(A).EQ.1)GO TO 12170
      ASYM=ORBSYM(A+NO)
      IA=ITR(A)+I
      FJ=FLOV(ASYM+1,1)
      LJ=FLOV(ASYM+1,2)
      DO 12160 J=FJ,LJ
      JA=ITR(A)+J
      IUJA=EOFF(JA)+EADD(IU)
      JU=ITR(MAX0(J,U))+MIN0(J,U)
      JUIA=EOFF(IA)+EADD(JU)
      VAL=VAL+(EIN(IUJA)+EIN(IUJA)-EIN(JUIA))*T1O(J,A)
12160 CONTINUE
12170 CONTINUE
      GGO(U,I)=VAL
12180 CONTINUE
12190 CONTINUE
C
C     GV INTERMEDIATE
C
      CALL ZERO(GGV,NV*NV)
      DO 12290 A=1,NV
      IF(FZV(A).EQ.1)GO TO 12290
      ASYM=ORBSYM(A+NO)
      DO 12280 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 12280
      BESYM=ORBSYM(BE+NO)
      IF(BESYM.NE.ASYM)GO TO 12280
      VAL=0.0D0
      BEA=ITV(MAX0(A,BE))+MIN0(A,BE)
      VAL=VAL+HV(BE,A)
      FI=FLOV(ASYM+1,1)
      LI=FLOV(ASYM+1,2)
      DO 12210 I=FI,LI
      IA=IPQ(A+NO)+I
CFOK  VAL=VAL-FOCK(IA)*T1O(I,BE)
12210 CONTINUE
      DO 12270 I=1,NO
      IF(FZO(I).EQ.1)GO TO 12270
      ISYM=ORBSYM(I)
      IA=ITR(A)+I
      FB=FLOV(ISYM+1,3)-NO
      LB=FLOV(ISYM+1,4)-NO
      DO 12260 B=FB,LB
      IB=ITR(B)+I
      BEAIB=FOFF(BEA)+FADD(IB)
      BEB=ITV(MAX0(B,BE))+MIN0(B,BE)
      BEBIA=FOFF(BEB)+FADD(IA)
      VAL=VAL+(FIN(BEAIB)+FIN(BEAIB)-FIN(BEBIA))*T1O(I,B)
12260 CONTINUE
12270 CONTINUE
      GGV(BE,A)=VAL
12280 CONTINUE
12290 CONTINUE
C
C     B*TAU TERM
C
      ITAP71=71
      CALL RFILE(ITAP71)
      POINT=1
      DO 14092 TSYM=1,NIRRED
C
C    NAB MUST INCLUDE FROZEN PAIRS
C
        LAB=0
        DO 7623 A=1,NV
C       IF(FZV(A).EQ.1)GO TO 7623
        ASYM=ORBSYM(A+NO)
C       BSYM=IEOR(ASYM,TSYM-1)
C       FB=FLOV(BSYM+1,3)-NO
C       LB=FLOV(BSYM+1,4)-NO
C       DO 7621 B=FB,LB
        DO 7621 B=1,NV
        BSYM=ORBSYM(B+NO)
        ABSYM=IEOR(ASYM,BSYM)
        IF(ABSYM.NE.TSYM-1)GO TO 7621
        LAB=LAB+1
 7621   CONTINUE
 7623   CONTINUE
        NAB(TSYM)=LAB
C       WRITE(*,*)'TSYM',TSYM, ' NAB(TSYM)=',NAB(TSYM)
      XAB=0
      DO 19490 A=1,NV
      IF(FZV(A).EQ.1)GO TO 19490
      ASYM=ORBSYM(A+NO)
      DO 19480 B=1,A
      IF(FZV(B).EQ.1)GO TO 19480
      BSYM=ORBSYM(B+NO)
      BASYM=IEOR(BSYM,ASYM)
      IF(BASYM.NE.TSYM-1)GO TO 19480
      XAB=XAB+1
      XIJ=0
      DO 19470 I=1,NO
      IF(FZO(I).EQ.1)GO TO 19470
      ISYM=ORBSYM(I)
      JSYM=IEOR(ISYM,BASYM)+1
      FJ=FLOV(JSYM,1)
      LJ=FLOV(JSYM,2)
      IF(LJ.GT.I)LJ=I
      DO 19460 J=FJ,LJ
      XIJ=XIJ+1
      IJAB=TOFF(I,J,1)+TADD(A,B)
      JIAB=TOFF(J,I,1)+TADD(A,B)
      VAL1=T2O(IJAB)+T1O(I,A)*T1O(J,B)
      VAL2=T2O(JIAB)+T1O(I,B)*T1O(J,A)
      AR3(XAB,XIJ)=VAL1+VAL2
      AR4(XAB,XIJ)=VAL1-VAL2
19460 CONTINUE
19470 CONTINUE
19480 CONTINUE
19490 CONTINUE
      LIMO=XIJ
      LIMV=XAB
C     WRITE(*,*)'TSYM=',TSYM,' XIJ=',XIJ,' XAB=',XAB,'   ',XIJ*XAB
C
      DO 14091 BE=1,NV
C     IF(FZV(BE).EQ.1)GO TO 14091
      BESYM=ORBSYM(BE+NO)
      FI1=FLOV(BESYM+1,1)
      LI1=FLOV(BESYM+1,2)
      DO 14081 GA=1,BE
C     IF(FZV(GA).EQ.1)GO TO 14081
      GASYM=ORBSYM(GA+NO)
      FI2=FLOV(GASYM+1,1)
      LI2=FLOV(GASYM+1,2)
      BEGAS=IEOR(GASYM,BESYM)
      IF(BEGAS.NE.TSYM-1)GO TO 14081
C
C NOTE THAT FILE71 CONTAINS (VV,VV) INTEGRALS FOR ALL PAIRS
C   POINTER MUST BE INCREMENTED ALSO FOR FROZEN PAIRS!
C
        LAB=NAB(TSYM)
        IF(FZV(BE).EQ.1.OR.FZV(GA).EQ.1)THEN
        POINT=POINT+INTOWP(LAB)
        GO TO 14081
        ENDIF
        CALL WREADW(ITAP71,BUFINT,INTOWP(LAB),POINT,POINT)
        CALL ZERO(BIN,NV*NV)
        NADD=0
        DO 14925 A=1,NV
C         IF(FZV(A).EQ.1)GO TO 14925
          ASYM=ORBSYM(A+NO)
C         BSYM=IEOR(ASYM,BEGAS)
C         FB=FLOV(BSYM+1,3)-NO
C         LB=FLOV(BSYM+1,4)-NO
C         DO 14920 B=FB,LB
          DO 14920 B=1,NV
          BSYM=ORBSYM(B+NO)
          ABSYM=IEOR(ASYM,BSYM)
          IF(ABSYM.NE.TSYM-1)GO TO 14920
             NADD=NADD+1
             BIN(A,B)=BUFINT(NADD)
C            WRITE(*,*)BE,A,GA,B,BIN(A,B)
14920        CONTINUE
14925     CONTINUE
C
          XBA=0
          DO 14025 A=1,NV
          IF(FZV(A).EQ.1)GO TO 14025
          ASYM=ORBSYM(A+NO)
          BEA=ITV(MAX0(BE,A)   )+MIN0(BE,A)
          GAA=ITV(MAX0(GA,A)   )+MIN0(GA,A)
          BSYM=IEOR(ASYM,BEGAS)
          FB=FLOV(BSYM+1,3)-NO
          LB=FLOV(BSYM+1,4)-NO
          IF(LB.GT. A)LB = A
             DO 14020 B=FB,LB
             XBA=XBA+1
             GAB=ITV(MAX0(GA,B)   )+MIN0(GA,B)
             BEB=ITV(MAX0(BE,B)   )+MIN0(BE,B)
C            BEAGAB=BOFF(BEA)+BADD(GAB)
C            BEBGAA=BOFF(MAX0(BEB,GAA))+BADD(MIN0(BEB,GAA))
C            TMP=BIN(BEAGAB)+BIN(BEBGAA)
C            TMV=BIN(BEAGAB)-BIN(BEBGAA)
             TMP=BIN(A,B)+BIN(B,A)
             TMV=BIN(A,B)-BIN(B,A)
             VAL1=0.0D0
             VAL2=0.0D0
                DO 14008 I=FI2,LI2
                IA=ITR(A)+I
                IABEB=FOFF(BEB)+FADD(IA)
              VAL2=VAL2-FIN(IABEB)*T1O(I,GA)
                IB=ITR(B)+I
                IBBEA=FOFF(BEA)+FADD(IB)
              VAL1=VAL1-FIN(IBBEA)*T1O(I,GA)
14008           CONTINUE
                DO 14010 I=FI1,LI1
                IA=ITR(A)+I
                IAGAB=FOFF(GAB)+FADD(IA)
              VAL1=VAL1-FIN(IAGAB)*T1O(I,BE)
                IB=ITR(B)+I
                IBGAA=FOFF(GAA)+FADD(IB)
              VAL2=VAL2-FIN(IBGAA)*T1O(I,BE)
14010           CONTINUE
             SFV(XBA)=(TMP+VAL1+VAL2)*0.5D0
            SUX3(XBA)=(TMV+VAL1-VAL2)*0.5D0
14020        CONTINUE
             IF(ASYM.EQ.BSYM)SFV(XBA)=SFV(XBA)*0.5D0
14025 CONTINUE
      DO 14077 UV=1,LIMO
      TMP = 0.0D0
      TMV = 0.0D0
      DO 14029 AB=1,LIMV
      TMP=TMP+ SFV(AB)* AR3(AB,UV)
      TMV=TMV+SUX3(AB)* AR4(AB,UV)
14029 CONTINUE
      SUX1(UV)=TMP
      SUX2(UV)=TMV
14077 CONTINUE
      UV=0
      DO 14068 U=1,NO
      IF(FZO(U).EQ.1)GO TO 14068
      USYM=ORBSYM(U)
      VSYM=IEOR(USYM,BEGAS)+1
      SV=FLOV(VSYM,1)
      LV=FLOV(VSYM,2)
      IF(LV.GT.U )LV=U
      DO 14063 V=SV,LV
      UV=UV+1
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+SUX1(UV)+SUX2(UV)
      IF(U.NE.V)THEN
      VUBEGA=TOFF(V,U,1)+TADD(BE,GA)
      T2(VUBEGA)=T2(VUBEGA)+SUX1(UV)-SUX2(UV)
      ENDIF
14063 CONTINUE
14068 CONTINUE
14081 CONTINUE
14091 CONTINUE
14092 CONTINUE
      CALL RCLOSE(ITAP71,3)
C
C     J & K  LOOPS
C
      CALL RFILE(91)
      PON=1
      DO 15695 TSYM=1,NIRRED
      XAI=0
      DO 15790 I=1,NO
      IF(FZO(I).EQ.1)GO TO 15790
      ISYM=ORBSYM(I)
      DO 15770 A=1,NV
      IF(FZV(A).EQ.1)GO TO 15770
      ASYM=ORBSYM(A+NO)
      IASYM=IEOR(ISYM,ASYM)
      IF(IASYM.NE.TSYM-1)GO TO 15770
      IA=ITR(A)+I
      XAI=XAI+1
      XBJ=0
      DO 15750 J=1,NO
      IF(FZO(J).EQ.1)GO TO 15750
      JA=ITR(A)+J
      JSYM=ORBSYM(J)
      BSYM=IEOR(JSYM,IASYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      DO 15730 B=FB,LB
      XBJ=XBJ+1
      IB=ITR(B)+I
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IBJA=DOFF(MAX0(IB,JA))+DADD(MIN0(IB,JA))
      AR1(XBJ,XAI)=-DIN(IAJB)-DIN(IAJB)+DIN(IBJA)
      AR2(XBJ,XAI)=-DIN(IBJA)
15730 CONTINUE
15750 CONTINUE
15770 CONTINUE
15790 CONTINUE
C
      DO 15690 U=1,NO
      IF(FZO(U).EQ.1)GO TO 15690
      USYM=ORBSYM(U)
      DO 15680 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 15680
      BESYM=ORBSYM(BE+NO)
      BEUSYM=IEOR(BESYM,USYM)
      IF(BEUSYM.NE.TSYM-1)GO TO 15680
C
      BEU=ITR(BE)+U
      XAI=0
      DO 12490 I=1,NO
      IF(FZO(I).EQ.1)GO TO 12490
      ISYM=ORBSYM(I)
      ASYM=IEOR(ISYM,BEUSYM)+1
      FA=FLOV(ASYM,3)-NO
      LA=FLOV(ASYM,4)-NO
      IU=ITR(MAX0(I,U))+MIN0(I,U)
      DO 12470 A=FA,LA
      IA=ITR(A)+I
      BEUIA=DOFF(MAX0(BEU,IA))+DADD(MIN0(BEU,IA))
      VALJ=DIN(BEUIA)
      BEA=ITV(MAX0(BE,A))+MIN0(BE,A)
      BEAIU=COFF(BEA)+CADD(IU)
      VALK=CIN(BEAIU)
C
      FB=FLOV(USYM+1,3)-NO
      LB=FLOV(USYM+1,4)-NO
      DO 12450 B=FB,LB
      BEB=ITV(MAX0(BE,B))+MIN0(BE,B)
      BEBIA=FOFF(BEB)+FADD(IA)
      IB=ITR(B)+I
      BEAIB=FOFF(BEA)+FADD(IB)
      VALJ=VALJ+FIN(BEBIA)*T1O(U,B)
      VALK=VALK+FIN(BEAIB)*T1O(U,B)
12450 CONTINUE
C
      FJ=FLOV(BESYM+1,1)
      LJ=FLOV(BESYM+1,2)
      DO 12455 J=FJ,LJ
      JU=ITR(MAX0(J,U))+MIN0(J,U)
      JUIA=EOFF(IA)+EADD(JU)
      JA=ITR(A)+J
      IUJA=EOFF(JA)+EADD(IU)
      VALJ=VALJ-EIN(JUIA)*T1O(J,BE)
      VALK=VALK-EIN(IUJA)*T1O(J,BE)
12455 CONTINUE
      XAI=XAI+1
      JAR(XAI)=VALJ+VALJ-VALK
      KAR(XAI)=VALK
12470 CONTINUE
12490 CONTINUE
C
         XBJ=0
         DO 15180 J=1,NO
         IF(FZO(J).EQ.1)GO TO 15180
         JSYM=ORBSYM(J)
         BSYM=IEOR(JSYM,BEUSYM)+1
         FB=FLOV(BSYM,3)-NO
         LB=FLOV(BSYM,4)-NO
           DO 15170 B=FB,LB
           ZL=ZLX(B,BE)
           UJBBE=TOFF(U,J,ZL)+TADD(B,BE)
           JUBBE=TOFF(J,U,ZL)+TADD(B,BE)
           XBJ=XBJ+1
           SUX1(XBJ)=0.5D0*T2O(UJBBE)+T1O(U,B)*T1O(J,BE)
           SUX2(XBJ)=SUX1(XBJ)-T2O(JUBBE)
15170      CONTINUE
15180    CONTINUE
         LIM=XBJ
C
      DO 15472 AI=1,LIM
      VALJ=0.0D0
      VALK=0.0D0
      DO 15442 BJ=1,LIM
      VALJ=VALJ+AR1(BJ,AI)*SUX2(BJ)
      VALK=VALK+AR2(BJ,AI)*SUX1(BJ)
15442 CONTINUE
      JAR(AI)=JAR(AI)+VALJ
      KAR(AI)=KAR(AI)+VALK
15472 CONTINUE
C
C     CALL WWRITW(91,JAR,INTOWP(MAXOV),PON,PON)
C     CALL WWRITW(91,KAR,INTOWP(MAXOV),PON,PON)
      CALL WWRITW(91,JAR,INTOWP(LIM),PON,PON)
      CALL WWRITW(91,KAR,INTOWP(LIM),PON,PON)
C
15680 CONTINUE
15690 CONTINUE
15695 CONTINUE
C
      PON=1
      DO 16695 TSYM=1,NIRRED
      XVG=0
      DO 16790 V=1,NO
      IF(FZO(V).EQ.1)GO TO 16790
      VSYM=ORBSYM(V)
      DO 16770 GA=1,NV
      IF(FZV(GA).EQ.1)GO TO 16770
      GASYM=ORBSYM(GA+NO)
      VGASYM=IEOR(VSYM,GASYM)
      IF(VGASYM.NE.TSYM-1)GO TO 16770
      XVG=XVG+1
      XAI=0
      DO 16750 I=1,NO
      IF(FZO(I).EQ.1)GO TO 16750
      ISYM=ORBSYM(I)
      ASYM=IEOR(ISYM,VGASYM)+1
      FA=FLOV(ASYM,3)-NO
      LA=FLOV(ASYM,4)-NO
      DO 16730 A=FA,LA
      XAI=XAI+1
      ZL=ZLX(A,GA)
      IVAGA=TOFF(I,V,ZL)+TADD(A,GA)
      VIAGA=TOFF(V,I,ZL)+TADD(A,GA)
      AR1(XAI,XVG)=T2O(IVAGA)+T2O(IVAGA)-T2O(VIAGA)
      AR2(XAI,XVG)=T2O(VIAGA)
16730 CONTINUE
16750 CONTINUE
16770 CONTINUE
16790 CONTINUE
      LIM=XVG
C
      DO 16690 U=1,NO
      IF(FZO(U).EQ.1)GO TO 16690
      USYM=ORBSYM(U)
      DO 16680 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 16680
      BESYM=ORBSYM(BE+NO)
      BEUSYM=IEOR(BESYM,USYM)
      IF(BEUSYM.NE.TSYM-1)GO TO 16680
C     CALL WREADW(91,JAR,INTOWP(MAXOV),PON,PON)
C     CALL WREADW(91,KAR,INTOWP(MAXOV),PON,PON)
      CALL WREADW(91,JAR,INTOWP(LIM),PON,PON)
      CALL WREADW(91,KAR,INTOWP(LIM),PON,PON)
C
      DO 15661 VGA=1,LIM
      VAL1=0.0D0
      VAL2=0.0D0
      DO 15391 AI=1,LIM
      VAL1=VAL1+JAR(AI)*AR1(AI,VGA)
      VAL2=VAL2+KAR(AI)*AR2(AI,VGA)
15391 CONTINUE
      SUX1(VGA)= 0.5D0*VAL1
      SUX2(VGA)=-0.5D0*VAL2
15661 CONTINUE
C
      VGA=0
      DO 15660 V=1,NO
      IF(FZO(V).EQ.1)GO TO 15660
      VSYM=ORBSYM(V)
      GASYM=IEOR(VSYM,BEUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      DO 15410  GA=FGA,LGA
      VGA=VGA+1
      ZL=ZLX(BE,GA)
C
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+SUX1(VGA)+SUX2(VGA)
      VUBEGA=TOFF(V,U,1)+TADD(BE,GA)
      T2(VUBEGA)=T2(VUBEGA)+SUX2(VGA)+SUX2(VGA)
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+SUX1(VGA)+SUX2(VGA)
      UVGABE=TOFF(U,V,1)+TADD(GA,BE)
      T2(UVGABE)=T2(UVGABE)+SUX2(VGA)+SUX2(VGA)
      ENDIF
15410 CONTINUE
C
15660 CONTINUE
16680 CONTINUE
16690 CONTINUE
16695 CONTINUE
      CALL RCLOSE(91,3)
C
C     A*TAU TERM
C
      CALL RFILE(91)
      PON=1
      DO 12393 TSYM=1,NIRRED
      XJI=0
      DO 19790 I=1,NO
      IF(FZO(I).EQ.1)GO TO 19790
      ISYM=ORBSYM(I)
      DO 19780 J=1,I
      IF(FZO(J).EQ.1)GO TO 19780
      JSYM=ORBSYM(J)
      JISYM=IEOR(JSYM,ISYM)
      IF(JISYM.NE.TSYM-1)GO TO 19780
      XJI=XJI+1
      XBA=0
      DO 19770 A=1,NV
      IF(FZV(A).EQ.1)GO TO 19770
      IA=ITR(A)+I
      JA=ITR(A)+J
      ASYM=ORBSYM(A+NO)
      BSYM=IEOR(ASYM,JISYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      IF(LB.GT.A)LB=A
      DO 19760 B=FB,LB
      XBA=XBA+1
      IB=ITR(B)+I
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IBJA=DOFF(MAX0(IB,JA))+DADD(MIN0(IB,JA))
      VAL1=DIN(IAJB)
      VAL2=DIN(IBJA)
      AR3(XBA,XJI)=VAL1+VAL2
      AR4(XBA,XJI)=VAL1-VAL2
19760 CONTINUE
19770 CONTINUE
19780 CONTINUE
19790 CONTINUE
      LIMO=XJI
      LIMV=XBA
C
      DO 12390 U=1,NO
      IF(FZO(U).EQ.1)GO TO 12390
      USYM=ORBSYM(U)
      FA1=FLOV(USYM+1,3)-NO
      LA1=FLOV(USYM+1,4)-NO
      DO 12380 V=1,U
      IF(FZO(V).EQ.1)GO TO 12380
      VSYM=ORBSYM(V)
      FA2=FLOV(VSYM+1,3)-NO
      LA2=FLOV(VSYM+1,4)-NO
      VUSYM=IEOR(VSYM,USYM)
      IF(VUSYM.NE.TSYM-1)GO TO 12380
             BA=0
             DO 12305 A=1,NV
             IF(FZV(A).EQ.1)GO TO 12305
             ASYM=ORBSYM(A+NO)
             BSYM=IEOR(ASYM,VUSYM)
             FB=FLOV(BSYM+1,3)-NO
             LB=FLOV(BSYM+1,4)-NO
             IF(LB.GT.A)LB=A
             DO 12304 B=FB,LB
             BA=BA+1
             UVAB=TOFF(U,V,1)+TADD(A,B)
             VUAB=TOFF(V,U,1)+TADD(A,B)
             TMP=T2O(UVAB)+T1O(U,A)*T1O(V,B)
             TMV=T2O(VUAB)+T1O(V,A)*T1O(U,B)
             SUX3(BA)=TMP+TMV
              SFV(BA)=TMP-TMV
12304        CONTINUE
             IF(ASYM.EQ.BSYM)SUX3(BA)=SUX3(BA)*0.5D0
12305        CONTINUE
C            LIMV=BA
C
      JI=0
      DO 12340 I=1,NO
      IF(FZO(I).EQ.1)GO TO 12340
      ISYM=ORBSYM(I)
      IU=ITR(MAX0(I,U))+MIN0(I,U)
      IV=ITR(MAX0(I,V))+MIN0(I,V)
      JSYM=IEOR(ISYM,VUSYM)
      FJ=FLOV(JSYM+1,1)
      LJ=FLOV(JSYM+1,2)
      IF(LJ.GT.I)LJ=I
      DO 12330 J=FJ,LJ
      JI=JI+1
      JV=ITR(MAX0(J,V))+MIN0(J,V)
      JU=ITR(MAX0(J,U))+MIN0(J,U)
      IUJV=AOFF(MAX0(IU,JV))+AADD(MIN0(IU,JV))
      IVJU=AOFF(MAX0(IV,JU))+AADD(MIN0(IV,JU))
      TMP=AIN(IUJV)+AIN(IVJU)
      TMV=AIN(IUJV)-AIN(IVJU)
         VAL1=0.0D0
         VAL2=0.0D0
         DO 12315 A=FA2,LA2
         JA=ITR(A)+J
         IA=ITR(A)+I
         JUIA=EOFF(IA)+EADD(JU)
         IUJA=EOFF(JA)+EADD(IU)
        VAL1=VAL1+EIN(IUJA)*T1O(V,A)
        VAL2=VAL2+EIN(JUIA)*T1O(V,A)
12315    CONTINUE
         DO 12318 A=FA1,LA1
         IA=ITR(A)+I
         JA=ITR(A)+J
         IAJV=EOFF(IA)+EADD(JV)
         JAIV=EOFF(JA)+EADD(IV)
        VAL1=VAL1+EIN(IAJV)*T1O(U,A)
        VAL2=VAL2+EIN(JAIV)*T1O(U,A)
12318    CONTINUE
      VALP=0.0D0
      VALM=0.0D0
      DO 12320 BA=1,LIMV
      VALP=VALP+AR3(BA,JI)*SUX3(BA)
      VALM=VALM+AR4(BA,JI)* SFV(BA)
12320 CONTINUE
       SFO(JI)=(TMP+VAL1+VAL2+VALP)*0.5D0
      SUX1(JI)=(TMV+VAL1-VAL2+VALM)*0.5D0
12330 CONTINUE
      IF(ISYM.EQ.JSYM) SFO(JI)= SFO(JI)*0.5D0
12340 CONTINUE
      CALL WWRITW(91, SFO,INTOWP(MAXOO),PON,PON)
      CALL WWRITW(91,SUX1,INTOWP(MAXOO),PON,PON)
12380 CONTINUE
12390 CONTINUE
12393 CONTINUE
C
      PON=1
      DO 12392 TSYM=1,NIRRED
      XAB=0
      DO 33590 A=1,NV
      IF(FZV(A).EQ.1)GO TO 33590
      ASYM=ORBSYM(A+NO)
      DO 33580 B=1,A
      IF(FZV(B).EQ.1)GO TO 33580
      BSYM=ORBSYM(B+NO)
      ABSYM=IEOR(ASYM,BSYM)
      IF(ABSYM.NE.TSYM-1)GO TO 33580
      XAB=XAB+1
      XIJ=0
      DO 33570 I=1,NO
      IF(FZO(I).EQ.1)GO TO 33570
      ISYM=ORBSYM(I)
      JSYM=IEOR(ISYM,ABSYM)+1
      FJ=FLOV(JSYM,1)
      LJ=FLOV(JSYM,2)
      IF(LJ.GT.I)LJ=I
      DO 33560 J=FJ,LJ
      XIJ=XIJ+1
      IJAB=TOFF(I,J,1)+TADD(A,B)
      JIAB=TOFF(J,I,1)+TADD(A,B)
      VAL1=T2O(IJAB)+T1O(I,A)*T1O(J,B)
      VAL2=T2O(JIAB)+T1O(I,B)*T1O(J,A)
      AR5(XIJ,XAB)=VAL1+VAL2
      AR6(XIJ,XAB)=VAL1-VAL2
33560 CONTINUE
33570 CONTINUE
33580 CONTINUE
33590 CONTINUE
      LIMO=XIJ
      LIMV=XAB
C
      DO 12391 U=1,NO
      IF(FZO(U).EQ.1)GO TO 12391
      USYM=ORBSYM(U)
      FA1=FLOV(USYM+1,3)-NO
      LA1=FLOV(USYM+1,4)-NO
      DO 12381 V=1,U
      IF(FZO(V).EQ.1)GO TO 12381
      VSYM=ORBSYM(V)
      FA2=FLOV(VSYM+1,3)-NO
      LA2=FLOV(VSYM+1,4)-NO
      VUSYM=IEOR(VSYM,USYM)
      IF(VUSYM.NE.TSYM-1)GO TO 12381
      CALL WREADW(91, SFO,INTOWP(MAXOO),PON,PON)
      CALL WREADW(91,SUX1,INTOWP(MAXOO),PON,PON)
C
      DO 14370 BEGA=1,LIMV
      TMP=0.0D0
      TMV=0.0D0
      DO 14350 IJ=1,LIMO
      TMP=TMP+ SFO(IJ)* AR5(IJ,BEGA)
      TMV=TMV+SUX1(IJ)* AR6(IJ,BEGA)
14350 CONTINUE
      SUX3(BEGA)=TMP
       SFV(BEGA)=TMV
14370 CONTINUE
C
      BEGA=0
      DO 52374 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 52374
      BESYM=ORBSYM(BE+NO)
      GASYM=IEOR(BESYM,VUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      IF(LGA.GT.BE)LGA=BE
      DO 52364 GA=FGA,LGA
      BEGA=BEGA+1
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+SUX3(BEGA)+SFV(BEGA)
      IF(U.NE.V)THEN
      VUBEGA=TOFF(V,U,1)+TADD(BE,GA)
      T2(VUBEGA)=T2(VUBEGA)+SUX3(BEGA)-SFV(BEGA)
      ENDIF
52364 CONTINUE
52374 CONTINUE
C
12381 CONTINUE
12391 CONTINUE
12392 CONTINUE
      CALL RCLOSE(91,3)
C
C     ADD D INTEGRAL
C
      DO 13091 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13091
      USYM=ORBSYM(U)
      DO 13081 V=1,NO
      IF(FZO(V).EQ.1)GO TO 13081
      VSYM=ORBSYM(V)
      VUSYM=IEOR(VSYM,USYM)
      DO 13071 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13071
      BESYM=ORBSYM(BE+NO)
      GASYM=IEOR(BESYM,VUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      BEU=ITR(BE)+U
      IF(LGA.GT.BE)LGA=BE
      DO 13061 GA=FGA,LGA
      GAV=ITR(GA)+V
      BEUGAV=DOFF(MAX0(BEU,GAV))+DADD(MIN0(BEU,GAV))
      VVAL(GA)=DIN(BEUGAV)
13061 continue
      DO 13062 GA=FGA,LGA
      TMP = VVAL(GA)
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+TMP
13062 CONTINUE
13063 CONTINUE
13071 CONTINUE
13081 CONTINUE
13091 CONTINUE
C
C     C T1 T1  &  D T1 T1  TERMS
C
      DO 13991 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13991
      USYM=ORBSYM(U)
      FA1=FLOV(USYM+1,3)-NO
      LA1=FLOV(USYM+1,4)-NO
      DO 13981 V=1,NO
      IF(FZO(V).EQ.1)GO TO 13981
      VSYM=ORBSYM(V)
      FA2=FLOV(VSYM+1,3)-NO
      LA2=FLOV(VSYM+1,4)-NO
      VUSYM=IEOR(VSYM,USYM)
      DO 13971 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13971
      BESYM=ORBSYM(BE+NO)
      ISYM=IEOR(BESYM,VUSYM)+1
      FI=FLOV(ISYM,1)
      LI=FLOV(ISYM,2)
      FGA=FLOV(ISYM,3)-NO
      LGA=FLOV(ISYM,4)-NO
      BEU=ITR(BE)+U
      DO 13934 I=FI,LI
      XVAL(I)=0.0D0
      DO 13931 A=FA2,LA2
      IA=ITR(A)+I
      BEUIA=DOFF(MAX0(BEU,IA))+DADD(MIN0(BEU,IA))
      XVAL(I)=XVAL(I)-DIN(BEUIA)*T1O(V,A)
13931 CONTINUE
      IV=ITR(MAX0(I,V))+MIN0(I,V)
      DO 13933 A=FA1,LA1
      BEA=ITV(MAX0(BE,A))+MIN0(BE,A)
      IVBEA=COFF(BEA)+CADD(IV)
      XVAL(I)=XVAL(I)-CIN(IVBEA)*T1O(U,A)
13933 CONTINUE
13934 CONTINUE
      DO 13961 GA=FGA,LGA
      VAL=0.0D0
      DO 13943 I=FI,LI
      VAL=VAL+XVAL(I)*T1O(I,GA)
13943 CONTINUE
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+VAL
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+VAL
      ENDIF
13961 CONTINUE
13971 CONTINUE
13981 CONTINUE
13991 CONTINUE
C
C     E INT * T1
C
      DO 13491 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13491
      USYM=ORBSYM(U)
      DO 13481 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13481
      BESYM=ORBSYM(BE+NO)
      BEUSYM=IEOR(BESYM,USYM)
      BEU=ITR(BE)+U
      DO 13441 V=1,NO
      IF(FZO(V).EQ.1)GO TO 13441
      VSYM=ORBSYM(V)
      GASYM=IEOR(VSYM,BEUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      FI=FLOV(GASYM,1)
      LI=FLOV(GASYM,2)
      DO 13443 GA=FGA,LGA
      XVAL(GA) = 0.D0
13443 CONTINUE
      DO 13431 I=FI,LI
      IV=ITR(MAX0(I,V))+MIN0(I,V)
      BEUIV=EOFF(BEU)+EADD(IV)
      TMP = -EIN(BEUIV)
      DO 13421 GA=FGA,LGA
      TMV = XVAL(GA)
      TMV = TMV     +  TMP    *T1O(I,GA)
      xval(ga) = tmv
13421 CONTINUE
13431 CONTINUE
      DO 13435 GA=FGA,LGA
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+XVAL(GA)
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+XVAL(GA)
      ENDIF
13435 CONTINUE
13441 CONTINUE
13481 CONTINUE
13491 CONTINUE
C
C     GGO * T2
C
      DO 25791 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 25791
      BESYM=ORBSYM(BE+NO)
      DO 25781 GA=1,NV
      IF(FZV(GA).EQ.1)GO TO 25781
      GASYM=ORBSYM(GA+NO)
      BEGAS=IEOR(BESYM,GASYM)
      ZL=ZLX(BE,GA)
      DO 25721  V=1,NO
      IF(FZO(V).EQ.1)GO TO 25721
      VSYM=ORBSYM(V)
      ISYM=IEOR(VSYM,BEGAS)+1
      FI=FLOV(ISYM,1)
      LI=FLOV(ISYM,2)
      DO 25711 I=FI,LI
      IVBEGA=TOFF(I,V,ZL)+TADD(BE,GA)
      AUX1(I,V)=T2O(IVBEGA)
25711 CONTINUE
25721 CONTINUE
      DO 25751 U=1,NO
      IF(FZO(U).EQ.1)GO TO 25751
      USYM=ORBSYM(U)
      FI=FLOV(USYM+1,1)
      LI=FLOV(USYM+1,2)
      DO 25725 I=FI,LI
      XVAL(I)=-GGO(U,I)
25725 CONTINUE
      VSYM=IEOR(USYM,BEGAS)+1
      FV=FLOV(VSYM,1)
      LV=FLOV(VSYM,2)
      DO 25741 V=FV,LV
      TMP=0.0D0
      DO 25731 I=FI,LI
      TMP=TMP+AUX1(I,V)*XVAL(I)
25731 CONTINUE
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+TMP
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+TMP
      ENDIF
25741 CONTINUE
25751 CONTINUE
25781 CONTINUE
25791 CONTINUE
C
C     FIN * T1
C
      DO 13591 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13591
      USYM=ORBSYM(U)
      DO 13581 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13581
      BESYM=ORBSYM(BE+NO)
      BEUSYM=IEOR(BESYM,USYM)
      BEU=ITR(BE)+U
      DO 13541 GA=1,NV
      IF(FZV(GA).EQ.1)GO TO 13541
      GASYM=ORBSYM(GA+NO)
      VSYM=IEOR(GASYM,BEUSYM)+1
      SV=FLOV(VSYM,1)
      LV=FLOV(VSYM,2)
      FA=FLOV(VSYM,3)-NO
      LA=FLOV(VSYM,4)-NO
      DO 23521 V=SV,LV
      xval(v) = 0.d0
23521 continue
      DO 13531 A=FA,LA
      GAA=ITV(MAX0(GA,A))+MIN0(GA,A)
      BEUGAA=FOFF(GAA)+FADD(BEU)
      TMV=FIN(BEUGAA)
      DO 13521 V=SV,LV
      TMP = XVAL(V)
      TMP    =TMP    +TMV       *T1O(V,A)
      XVAL(V) = TMP
13521 CONTINUE
13531 CONTINUE
      DO 13535 V=SV,LV
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+XVAL(V)
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+XVAL(V)
      ENDIF
13535 CONTINUE
13541 CONTINUE
13581 CONTINUE
13591 CONTINUE
C
C     GGV * T2
C
      DO 15791 U=1,NO
      IF(FZO(U).EQ.1)GO TO 15791
      USYM=ORBSYM(U)
      DO 15781 V=1,NO
      IF(FZO(V).EQ.1)GO TO 15781
      VSYM=ORBSYM(V)
      VUSYM=IEOR(VSYM,USYM)
      DO 15721 GA=1,NV
      IF(FZV(GA).EQ.1)GO TO 15721
      GASYM=ORBSYM(GA+NO)
      ASYM=IEOR(GASYM,VUSYM)+1
      FA=FLOV(ASYM,3)-NO
      LA=FLOV(ASYM,4)-NO
      DO 15711 A=FA,LA
      ZL=ZLX(A,GA)
      UVAGA=TOFF(U,V,ZL)+TADD(A,GA)
      AUX3(A,GA)=T2O(UVAGA)
15711 CONTINUE
15721 CONTINUE
      DO 15751 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 15751
      BESYM=ORBSYM(BE+NO)
      FA=FLOV(BESYM+1,3)-NO
      LA=FLOV(BESYM+1,4)-NO
      DO 15725 A=FA,LA
      XVAL(A)=GGV(BE,A)
15725 CONTINUE
      GASYM=IEOR(BESYM,VUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      DO 15741 GA=FGA,LGA
      TMP=0.0D0
      DO 15731 A=FA,LA
      TMP=TMP+AUX3(A,GA)*XVAL(A)
15731 CONTINUE
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+TMP
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+TMP
      ENDIF
15741 CONTINUE
15751 CONTINUE
15781 CONTINUE
15791 CONTINUE
C
 5050 CONTINUE
      IF(OPTION.EQ.'SDT1')THEN
      CALL CCSDT1     (T2,T1,T2O,T1O,TAU,NO,NV,NDIMT2,NIT,
     .                 ORBSYM,FLOV,NIRRED,T3OFF,T3ADD,ZLX,FZO,FZV,
     .                 TOFF,TADD,OPTION,RSTR,NT3,DOFF,DADD,EOFF,EADD,
     .                 FOFF,FADD,ITV,ITR,IPQ,DIN,EIN,FIN,SORT,FOCK,
     .                 AUX1,AUX2,AUX3,SUX1,SUX2,SUX3,
     .                 XAR1,XAR2,NOACT,NVACT,MAXO,MAXV,MAXOV,
     .                 AR1,AR2,SFV,AUX3,AR1,AR2,AUX3,AUX1)
      ENDIF
C
C     DIVIDE BY MO ENERGIES
C
      DO 13391 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13391
      USYM=ORBSYM(U)
      UU=IPQ(U)+U
      DO 13381 V=1,NO
      IF(FZO(V).EQ.1)GO TO 13381
      VSYM=ORBSYM(V)
      VUSYM=IEOR(VSYM,USYM)
      VV=IPQ(V)+V
      DO 13371 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13371
      BESYM=ORBSYM(BE+NO)
      GASYM=IEOR(BESYM,VUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      BEBE=IPQ(BE+NO)+BE+NO
      IF(LGA.GT.BE)LGA=BE
      DO 13361 GA=FGA,LGA
      GAGA=IPQ(GA+NO)+GA+NO
      DELTA=FOCK(UU)+FOCK(VV)-FOCK(BEBE)-FOCK(GAGA)
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)/DELTA
13361 CONTINUE
13371 CONTINUE
13381 CONTINUE
13391 CONTINUE
C
      DO 14291 U=1,NO
      IF(FZO(U).EQ.1)GO TO 14291
      USYM=ORBSYM(U)
      FBE=FLOV(USYM+1,3)-NO
      LBE=FLOV(USYM+1,4)-NO
      UU=IPQ(U)+U
      DO 14281 BE=FBE,LBE
      BEBE=IPQ(BE+NO)+BE+NO
      DELTA=FOCK(UU)-FOCK(BEBE)
      T1(U,BE)=T1(U,BE)/DELTA
14281 CONTINUE
14291 CONTINUE
C
C     CORRELATION ENERGY
C
      WRITE(6,*)' '
      CALL ECORR(T2,T1,DIN,NXE,TOFF,TADD,IPQ,ORBSYM,FLOV,
     .           NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .           DOFF,DADD,NM,ITR)
C
C     WRITE OUT T1,T2 TO FILE69
C
      CALL RFILE(ITAP69)
      CALL SWRIT(ITAP69,NO*NV,1)
      CALL SWRIT(ITAP69,NDIMT2,1)
      CALL SWRIT(ITAP69,T1,INTOWP(NO*NV))
      CALL SWRIT(ITAP69,T2,INTOWP(NDIMT2))
      CALL SWRIT(ITAP69,EREF,INTOWP(1))
      CALL SWRIT(ITAP69,NXE,INTOWP(1))
      CALL RCLOSE(ITAP69,3)
C
C     CHECK CONVERGENCE
C
      CALL TDIFF(T2,T1,T2O,T1O,T1NORM,DELT,NO,NV,NDIMT2,
     .           ORBSYM,FLOV,NIRRED,TOFF,TADD,ZLX,FZO,FZV,NXE,NXEO)
      WRITE(6,6011)T1NORM,DELT
      WRITE(4,6011)T1NORM,DELT
 6011 FORMAT(13X,'T1 NORM =',D15.8,5X,'DELT=',D15.8)
      IF(DELT.LT.CONV) THEN
      WRITE(6,9020) CONV
 9020 FORMAT(///,32('*'),/,'* CORRELATION ENERGY CONVERGED *',3X,D12.2,
     . /,32('*'))
      RETURN
      END IF
C
      IF(NIT.GE.MAXIT)THEN
      WRITE(6,9030)
 9030 FORMAT(///,32('*'),/,'* ITERATIONS EXHAUSTED *',/,32('*'))
      RETURN
      ENDIF
C
C     DIIS EXTRAPOLATION
C
      IF(DIISFL.EQ.2) GO TO 1490
      CALL DIISD (T1O,T1,T2O,T2,NO,NV,NDIMT2,NIT,IT,IFLAG,
     .            EPSI,NGO,NDIIS,MINDIM,MAXDIM,
     .            CCC,BBB,ITAP98,ITAP99,ITC,BB2)
      CALL ECORR(T2,T1,DIN,NXE,TOFF,TADD,IPQ,ORBSYM,FLOV,
     .           NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .           DOFF,DADD,NM,ITR)
 1490 CONTINUE
C
      GO TO 50
C
      END
C
C---------------------------------------------------------------------
C
      SUBROUTINE FROZEN (FLOV,NOSYM,NVSYM,NFZO,NFZV,NDOC,NUOC,FZO,FZV,
     .                   ITEP,NIRRED,NO,NV,IW,NOACT,NVACT)
      IMPLICIT INTEGER(A-Z)
      DIMENSION FLOV(NIRRED,4),NOSYM(NIRRED),NVSYM(NIRRED),NFZO(NIRRED),
     .          NFZV(NIRRED),NDOC(NIRRED),NUOC(NIRRED),FZO(NO),FZV(NV),
     .          ITEP(NIRRED)
C     DO 558 I=1,NIRRED
C     WRITE(*,*)'IRREP=',I,'F1',FLOV(I,1)
C     WRITE(*,*)'IRREP=',I,'F2',FLOV(I,2)
C     WRITE(*,*)'IRREP=',I,'F3',FLOV(I,3)
C 558 WRITE(*,*)'IRREP=',I,'F4',FLOV(I,4)
      DO 625 I=1,NIRRED
      NOSYM(I)=FLOV(I,2)-FLOV(I,1)+1
C     WRITE(*,*)'I=',I,'NOSYM(I)=',NOSYM(I)
      IF(FLOV(I,2).LT.FLOV(I,1))NOSYM(I)=0
      NVSYM(I)=FLOV(I,4)-FLOV(I,3)+1
C     WRITE(*,*)'I=',I,'NVSYM(I)=',NVSYM(I)
      IF(FLOV(I,4).LT.FLOV(I,3))NVSYM(I)=0
  625 CONTINUE
      WRITE(IW,6000)
 6000 FORMAT(2X,//,'******* CORES & VIRTUALS *******',/)
      NOACT=0
      NVACT=0
      DO 627 I=1,NIRRED
      NDOC(I)=NOSYM(I)-NFZO(I)
      NUOC(I)=NVSYM(I)-NFZV(I)
      NOACT=NOACT+NDOC(I)
      NVACT=NVACT+NUOC(I)
      WRITE(IW,6052)ITEP(I),NFZO(I),NDOC(I),NUOC(I),NFZV(I)
  627 CONTINUE
 6052 FORMAT(2X,A4,3X,I3,'COR',I3,'DOC',I3,'UOC',I3,'VIR')
      WRITE(6,*)
      WRITE(6,*)'NOACT=',NOACT,'  NVACT=',NVACT
      WRITE(6,*)
      JO=0
      DO 633 IS=1,NIRRED
      LIM=NFZO(IS)
      DO 631 I=1,LIM
C     DO 631 I=1,NFZO(IS)
      JO=JO+1
      FZO(JO)=1
  631 CONTINUE
      LIM=NDOC(IS)
C     DO 632 I=1,NDOC(IS)
      DO 632 I=1,LIM
      JO=JO+1
      FZO(JO)=0
  632 CONTINUE
  633 CONTINUE
      JV=0
      DO 636 IS=1,NIRRED
      DO 634 I=1,NUOC(IS)
      JV=JV+1
  634 FZV(JV)=0
      DO 635 I=1,NFZV(IS)
      JV=JV+1
  635 FZV(JV)=1
  636 CONTINUE
C     DO 650 I=1,NO
C 650 WRITE(*,*)'I=',I,'FZO(I)=',FZO(I)
C     DO 660 I=1,NV
C 660 WRITE(*,*)'I=',I,'FZV(I)=',FZV(I)
      DO 670 I=1,NIRRED
C     WRITE(*,*)I,FLOV(I,1),FLOV(I,2)
      FLOV(I,1)=FLOV(I,1)+NFZO(I)
C     WRITE(*,*)I,FLOV(I,1),FLOV(I,2)
C     WRITE(*,*)I,FLOV(I,3),FLOV(I,4)
      FLOV(I,4)=FLOV(I,4)-NFZV(I)
C     WRITE(*,*)I,FLOV(I,3),FLOV(I,4)
  670 CONTINUE
      RETURN
      END
C
C=======================================================================
C
      SUBROUTINE NCOUNT(ORBSYM,FLOV,NIRRED,NO,NV,NT,FZO,FZV,NT1,NT2,
     .                  NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO,NT3,NTAU,
     .                  OPTION,MAXOO,MAXVV,MAXOV,DIMAR,XT3,MAXO,MAXV)
      IMPLICIT INTEGER (A-Z)
      DIMENSION FLOV(NIRRED,4),ORBSYM(NT),FZO(NO),FZV(NV),NT3(8),MT1(8)
      CHARACTER*4 OPTION
C
C     DO 9876 I=1,NIRRED
C     WRITE(6,*) I,FLOV(I,1),FLOV(I,2),FLOV(I,3),FLOV(I,4)
C9876 CONTINUE
C     WRITE(6,*)'OCC.'
C     DO 9877 I=1,NO
C     WRITE(6,*)I,ORBSYM(I),FZO(I)
C9877 CONTINUE
C     WRITE(6,*)'VIR.'
C     DO 9878 I=1,NV
C     WRITE(6,*)I,ORBSYM(I+NO),FZV(I)
C9878 CONTINUE
C
      WRITE(6,*)
      WRITE(6,*)'SUBROUTINE NCOUNT, OPTION=',OPTION
C
C
C     COUNT THE NON-ZERO SYMMETRY AND ACTIVE T COEFFICIENTS AND
C     2E MO INTS ONLY FOR ALLOCATION PURPOSES
C
      NT1=0
      DO 100 USYM=1,NIRRED
      FU=FLOV(USYM,1)
      LU=FLOV(USYM,2)
      DO 100  U=FU,LU
      FBE=FLOV(USYM,3)-NO
      LBE=FLOV(USYM,4)-NO
      DO 100 BE=FBE,LBE
      NT1=NT1+1
  100 CONTINUE
C
      NT2=0
      DO 230 TSYM=1,NIRRED
      DO 230 USYM=1,NIRRED
      DO 230 VSYM=1,NIRRED
      UVSYM=IEOR(USYM-1,VSYM-1)+1
      IF(UVSYM.NE.TSYM) GO TO 225
      DO 220 U=FLOV(USYM,1),FLOV(USYM,2)
      DO 220 V=FLOV(VSYM,1),FLOV(VSYM,2)
      DO 218 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 218
      BESYM=ORBSYM(BE+NO)
      DO 217 GA=1,BE
      IF(FZV(GA).EQ.1)GO TO 217
      GASYM=ORBSYM(GA+NO)
      BEGSYM=IEOR(BESYM,GASYM)+1
      IF(BEGSYM.NE.TSYM)GO TO 215
      NT2=NT2+1
  215 CONTINUE
  217 CONTINUE
  218 CONTINUE
  220 CONTINUE
  225 CONTINUE
  230 CONTINUE
C
C     DIMENSION OF AR1-6
C
      MAXOO=0
      MAXVV=0
      MAXOV=0
      WRITE(6,*)' '
C
      DO 20000 TSYM=1,NIRRED
      XAB=0
      DO 19490 A=1,NV
      IF(FZV(A).EQ.1)GO TO 19490
      ASYM=ORBSYM(A+NO)
      DO 19480 B=1,A
      IF(FZV(B).EQ.1)GO TO 19480
      BSYM=ORBSYM(B+NO)
      BASYM=IEOR(BSYM,ASYM)
      IF(BASYM.NE.TSYM-1)GO TO 19480
      XAB=XAB+1
      XIJ=0
      DO 19470 I=1,NO
      IF(FZO(I).EQ.1)GO TO 19470
      ISYM=ORBSYM(I)
      JSYM=IEOR(ISYM,BASYM)+1
      FJ=FLOV(JSYM,1)
      LJ=FLOV(JSYM,2)
      IF(LJ.GT.I)LJ=I
      DO 19460 J=FJ,LJ
      XIJ=XIJ+1
19460 CONTINUE
19470 CONTINUE
19480 CONTINUE
19490 CONTINUE
      IF(XIJ.GT.MAXOO)MAXOO=XIJ
      IF(XAB.GT.MAXVV)MAXVV=XAB
      WRITE(6,*)'TSYM=',TSYM,' XIJ=',XIJ,' XAB=',XAB,'   ',XIJ*XAB
20000 CONTINUE
C
      DO 20001 TSYM=1,NIRRED
      XAI=0
      DO 15790 I=1,NO
      IF(FZO(I).EQ.1)GO TO 15790
      ISYM=ORBSYM(I)
      DO 15770 A=1,NV
      IF(FZV(A).EQ.1)GO TO 15770
      ASYM=ORBSYM(A+NO)
      IASYM=IEOR(ISYM,ASYM)
      IF(IASYM.NE.TSYM-1)GO TO 15770
      XAI=XAI+1
      XBJ=0
      DO 15750 J=1,NO
      IF(FZO(J).EQ.1)GO TO 15750
      JSYM=ORBSYM(J)
      BSYM=IEOR(JSYM,IASYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      DO 15730 B=FB,LB
      XBJ=XBJ+1
15730 CONTINUE
15750 CONTINUE
15770 CONTINUE
15790 CONTINUE
      IF(XAI.GT.MAXOV)MAXOV=XAI
      WRITE(6,*)'TSYM=',TSYM,' XBJ=',XBJ,' XAI=',XAI,'   ',XAI*XBJ
C
20001 CONTINUE
C
      WRITE(6,*)'MAXOV=',MAXOV
      WRITE(6,*)'MAXOO=',MAXOO,' MAXVV=',MAXVV
      DIMAR=MAX0(MAXOO*MAXVV,MAXOV*MAXOV)
      WRITE(6,*)'DIMAR=', DIMAR
 
C
C     COUNT SYMMETRY NON-ZERO T3
C
      NTAU=NT2
      IF(OPTION.EQ.'SDT1')THEN
      WRITE(6,*)
      DO 440 KCSYM=1,NIRRED
      NPFF=0
      DO 430 U=1,NO
      IF(FZO(U).EQ.1)GO TO 430
      USYM=ORBSYM(U)
      DO 420 V=1,NO
      IF(FZO(V).EQ.1)GO TO 420
      VSYM=ORBSYM(V)
      UVSYM=IEOR(USYM,VSYM)
      DO 418 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 418
      BESYM=ORBSYM(BE+NO)
      DO 417 GA=1,BE
      IF(FZV(GA).EQ.1)GO TO 417
      GASYM=ORBSYM(GA+NO)
      BEGSYM=IEOR(BESYM,GASYM)
      TSYM=IEOR(UVSYM,BEGSYM)
      IF((KCSYM-1).NE.TSYM)GO TO 415
      NPFF=NPFF+1
CC    WRITE(*,657)U,V,BE,GA,NPFF
C 657 FORMAT(' U=',I3,' V=',I3,' BE=',I3,' GA=',I3,'NPFF= ',I6)
  415 CONTINUE
  417 CONTINUE
  418 CONTINUE
  420 CONTINUE
  430 CONTINUE
      NT3(KCSYM)=NPFF
  440 CONTINUE
      WRITE(6,7)NT3(1)
    7 FORMAT(1X,'NT3(1) =',I6)
      IF(NT3(1).NE.NT2)WRITE(*,*)'WARNING ...   NT3(1).NE.NT2'
      NTAU=NT3(1)
      DO 455 I=2,NIRRED
      IF(NT3(I).GT.NT3(1))THEN
      WRITE(*,*)'WARNING !!!  SOME NT3.GT.NT2'
      NTAU=NT3(I)
      ENDIF
      WRITE(6,8)I,NT3(I)
    8 FORMAT(1X,'NT3(',I1,') =',I6)
  455 CONTINUE
C
      DO 1008 I=1,NIRRED
 1008 MT1(I)=0
      DO 1010 I=1,NO
      ISYM=ORBSYM(I)
      IF(FZO(I).EQ.1)GO TO 1010
      DO 1009 A=1,NV
      ASYM=ORBSYM(A+NO)
      IF(FZV(A).EQ.1)GO TO 1009
      IASYM=IEOR(ISYM,ASYM)+1
      MT1(IASYM)=MT1(IASYM)+1
 1009 CONTINUE
 1010 CONTINUE
C
      MT3=0
      DO 1020 I=1,NIRRED
      MT3=MT3+NT3(I)*MT1(I)
 1020 CONTINUE
      WRITE(*,*)'THE NUMBER OF T3 AMPLITUDES NEEDED IN DISK IS ',MT3
C
      XT3=0
      DO 1031 I=1,NO
      IF(FZO(I).EQ.1)GO TO 1031
      ISYM=ORBSYM(I)
      DO 1032 J=1,I
      IF(FZO(J).EQ.1)GO TO 1032
      JSYM=ORBSYM(J)
      IJS=IEOR(ISYM,JSYM)
      DO 1033 K=1,J
      IF(FZO(K).EQ.1)GO TO 1033
      KSYM=ORBSYM(K)
      IJKS=IEOR(IJS,KSYM)
      DO 1034 A=1,NV
      IF(FZV(A).EQ.1)GO TO 1034
      ASYM=ORBSYM(A+NO)
      IJKAS=IEOR(IJKS,ASYM)
      DO 1035 B=1,A
      IF(FZV(B).EQ.1)GO TO 1035
      BSYM=ORBSYM(B+NO)
      IJKABS=IEOR(IJKAS,BSYM)
      DO 1036 C=1,B
      IF(FZV(C).EQ.1)GO TO 1036
      CSYM=ORBSYM(C+NO)
      TSYM=IEOR(IJKABS,CSYM)+1
      IF(TSYM.EQ.1)XT3=XT3+1
 1036 CONTINUE
 1035 CONTINUE
 1034 CONTINUE
 1033 CONTINUE
 1032 CONTINUE
 1031 CONTINUE
C     WRITE(6,*)' '
C     WRITE(6,*)'THE NUMBER OF TRIPLE EXCITATIONS IS     ',XT3
C     WRITE(6,*)' '
C
      WRITE(6,*)
      WRITE(6,*)'VOV ARRAYS FOR CCSDT-1A'
      MAXCNT=0
      MAXO=0
      MAXV=0
      DO 2390 TSYM=1,NIRRED
      NOSYM=FLOV(TSYM,2)-FLOV(TSYM,1)+1
      NVSYM=FLOV(TSYM,4)-FLOV(TSYM,3)+1
      IF(MAXO.LT.NOSYM)MAXO=NOSYM
      IF(MAXV.LT.NVSYM)MAXV=NVSYM
      ICNT=0
      DO 2380 A=1,NV
      IF(FZV(A).EQ.1)GO TO 2380
      ASYM=ORBSYM(A+NO)
      DO 2370 I=1,NO
      IF(FZO(I).EQ.1)GO TO 2370
      AISYM=IEOR(ASYM,ISYM)
      BSYM=IEOR(TSYM-1,AISYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      DO 2360 B=FB,LB
      ICNT=ICNT+1
 2360 CONTINUE
 2370 CONTINUE
 2380 CONTINUE
      IF(MAXCNT.LT.ICNT)MAXCNT=ICNT
      WRITE(6,*)'TSYM=',TSYM,'  ICNT=',ICNT
 2390 CONTINUE
      IF(MAXCNT.LT.MAXOV*MAXV)THEN
      WRITE(6,*)'ERROR  IN INE NCOUNT, MAXOV*MAXV.GT.MAXOV*MAXOV'
      STOP
      ENDIF
      WRITE(6,*)
      WRITE(6,*)'MAXO=',MAXO,'  MAXV=',MAXV
      WRITE(6,*)
      ENDIF
C
      NSGOO=0
      DO 390 I=1,NO
      IF(FZO(I).EQ.1)GO TO 390
      ISYM=ORBSYM(I)
      DO 380 J=1,I
      IF(FZO(J).EQ.1)GO TO 380
      JSYM=ORBSYM(J)
      IJSYM=IEOR(ISYM,JSYM)
      DO 370 K=1,I
      IF(FZO(K).EQ.1)GO TO 370
      KSYM=ORBSYM(K)
      LL=K
      IF(K.EQ.I)LL=J
      DO 360 L=1,LL
      IF(FZO(L).EQ.1)GO TO 360
      LSYM=ORBSYM(L)
      KLSYM=IEOR(KSYM,LSYM)
      IF(IJSYM.NE.KLSYM) GO TO 350
      NSGOO=NSGOO+1
  350 CONTINUE
  360 CONTINUE
  370 CONTINUE
  380 CONTINUE
  390 CONTINUE
C
      NSGVV=0
      DO 490 I=1,NV
      IF(FZV(I).EQ.1)GO TO 490
      ISYM=ORBSYM(I+NO)
      DO 480 J=1,I
      IF(FZV(J).EQ.1)GO TO 480
      JSYM=ORBSYM(J+NO)
      IJSYM=IEOR(ISYM,JSYM)
      DO 470 K=1,I
      IF(FZV(K).EQ.1)GO TO 470
      KSYM=ORBSYM(K+NO)
      LL=K
      IF(K.EQ.I)LL=J
      DO 460 L=1,LL
      IF(FZV(L).EQ.1)GO TO 460
      LSYM=ORBSYM(L+NO)
      KLSYM=IEOR(KSYM,LSYM)
      IF(IJSYM.NE.KLSYM) GO TO 450
      NSGVV=NSGVV+1
  450 CONTINUE
  460 CONTINUE
  470 CONTINUE
  480 CONTINUE
  490 CONTINUE
C
      NSGOV=0
      DO 590 I=1,NO
      IF(FZO(I).EQ.1)GO TO 590
      ISYM=ORBSYM(I)
      DO 580 J=1,I
      IF(FZO(J).EQ.1)GO TO 580
      JSYM=ORBSYM(J)
      IJSYM=IEOR(ISYM,JSYM)
      DO 570 K=1,NV
      IF(FZV(K).EQ.1)GO TO 570
      KSYM=ORBSYM(K+NO)
      DO 560 L=1,K
      IF(FZV(L).EQ.1)GO TO 560
      LSYM=ORBSYM(L+NO)
      KLSYM=IEOR(KSYM,LSYM)
      IF(IJSYM.NE.KLSYM) GO TO 550
      NSGOV=NSGOV+1
  550 CONTINUE
  560 CONTINUE
  570 CONTINUE
  580 CONTINUE
  590 CONTINUE
C
      NSHOV=0
      DO 690 I=1,NV
      IF(FZV(I).EQ.1)GO TO 690
      ISYM=ORBSYM(I+NO)
      DO 680 J=1,NO
      IF(FZO(J).EQ.1)GO TO 680
      JSYM=ORBSYM(J)
      IJSYM=IEOR(ISYM,JSYM)
      DO 670 K=1,I
      IF(FZV(K).EQ.1)GO TO 670
      KSYM=ORBSYM(K+NO)
      LL=NO
      IF(K.EQ.I)LL=J
      DO 660 L=1,LL
      IF(FZO(L).EQ.1)GO TO 660
      LSYM=ORBSYM(L)
      KLSYM=IEOR(KSYM,LSYM)
      IF(IJSYM.NE.KLSYM) GO TO 650
      NSHOV=NSHOV+1
  650 CONTINUE
  660 CONTINUE
  670 CONTINUE
  680 CONTINUE
  690 CONTINUE
C
      NSLOV=0
      DO 790 I=1,NV
      IF(FZV(I).EQ.1)GO TO 790
      ISYM=ORBSYM(I+NO)
      DO 780 J=1,NO
      IF(FZO(J).EQ.1)GO TO 780
      JSYM=ORBSYM(J)
      IJSYM=IEOR(ISYM,JSYM)
      DO 770 K=1,NO
      IF(FZO(K).EQ.1)GO TO 770
      KSYM=ORBSYM(K)
      DO 760 L=1,K
      IF(FZO(L).EQ.1)GO TO 760
      LSYM=ORBSYM(L)
      KLSYM=IEOR(KSYM,LSYM)
      IF(IJSYM.NE.KLSYM) GO TO 750
      NSLOV=NSLOV+1
  750 CONTINUE
  760 CONTINUE
  770 CONTINUE
  780 CONTINUE
  790 CONTINUE
C
      NSLVO=0
      DO 890 I=1,NV
      IF(FZV(I).EQ.1)GO TO 890
      ISYM=ORBSYM(I+NO)
      DO 880 J=1,I
      IF(FZV(J).EQ.1)GO TO 880
      JSYM=ORBSYM(J+NO)
      IJSYM=IEOR(ISYM,JSYM)
      DO 870 K=1,NV
      IF(FZV(K).EQ.1)GO TO 870
      KSYM=ORBSYM(K+NO)
      DO 860 L=1,NO
      IF(FZO(L).EQ.1)GO TO 860
      LSYM=ORBSYM(L)
      KLSYM=IEOR(KSYM,LSYM)
      IF(IJSYM.NE.KLSYM) GO TO 850
      NSLVO=NSLVO+1
  850 CONTINUE
  860 CONTINUE
  870 CONTINUE
  880 CONTINUE
  890 CONTINUE
      END
C
C
      SUBROUTINE SYMARR(ORBSYM,FLOV,NIRRED,NO,NV,NT,NOV,NM,
     .                  FZO,FZV,NFZO,NFZV,
     .                  UOFF,VADD,ZLX,ITR,ITV,NONO,NVNV,
     .                  AOFF,AADD,BOFF,BADD,COFF,CADD,
     .                  DOFF,DADD,EOFF,EADD,FOFF,FADD,TOFF,TADD,OPTION)
      IMPLICIT INTEGER (A-Z)
      COMMON/INTS/NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO
      DIMENSION FLOV(NIRRED,4),ORBSYM(NT),UOFF(NO,NO,2),VADD(NV,NV),
     .          ZLX(NV,NV),FZO(NO),FZV(NV),NFZO(NIRRED),NFZV(NIRRED)
      DIMENSION AOFF(NONO),AADD(NONO),BOFF(NVNV),BADD(NVNV),COFF(NVNV),
     .          CADD(NONO),DOFF(NM)  ,DADD(NM)  ,EOFF(NM)  ,EADD(NONO),
     .          FOFF(NVNV),FADD(NM)
      DIMENSION TOFF(NO,NO,2,NIRRED),TADD(NV,NV,NIRRED)
      DIMENSION ITR(NOV),ITV(NV)
      CHARACTER*4 OPTION
C
C     SET UP ARRAYS TO ADRESS T COEFF. AND 2E MO INTS.
C
      NOFF=0
      DO 130 TSYM=1,NIRRED
      DO 130 USYM=1,NIRRED
      DO 130 VSYM=1,NIRRED
      UVSYM=IEOR(USYM-1,VSYM-1)+1
      IF(UVSYM.NE.TSYM) GO TO 125
      DO 120 U=FLOV(USYM,1),FLOV(USYM,2)
      DO 120 V=FLOV(VSYM,1),FLOV(VSYM,2)
      NADD=0
      UOFF(U,V,1)=NOFF
      DO 119 BE=1,NV
      BESYM=ORBSYM(BE+NO)
      IF(FZV(BE).EQ.1) GO TO 119
      DO 118 GA=1,BE
      IF(FZV(GA).EQ.1) GO TO 118
      GASYM=ORBSYM(GA+NO)
      BEGSYM=IEOR(BESYM,GASYM)+1
      IF(BEGSYM.NE.TSYM)GO TO 115
      NOFF=NOFF+1
      NADD=NADD+1
      VADD(BE,GA)=NADD
      TOT=UOFF(U,V,1)+VADD(BE,GA)
C     WRITE(6,657) U,V,UOFF(U,V,1),BE,GA,VADD(BE,GA),TOT
  115 CONTINUE
  118 CONTINUE
  119 CONTINUE
  120 CONTINUE
  125 CONTINUE
  130 CONTINUE
      DO 150 U=1,NO
      DO 150 V=1,NO
  150 UOFF(V,U,2)=UOFF(U,V,1)
      DO 160 A=1,NV
      DO 160 B=1,A
      ZLX(B,A)=2
      ZLX(A,B)=1
  160 VADD(B,A)=VADD(A,B)
  657 FORMAT(' U=',I3,' V=',I3,' UOFF=',I6,' BE=',I3,' GA=',I3,
     .                        ' VADD=',I6,' TOT= ',I6)
C
C     FORM ARRAYS FOR T3
C
      IF(OPTION.EQ.'SDT1')THEN
      DO 890 T3SYM=1,NIRRED
C     WRITE(6,*)'T3SYM',T3SYM
      NOFF=0
      DO 880 TSYM=1,NIRRED
      DO 875 USYM=1,NIRRED
      DO 870 VSYM=1,NIRRED
      UVSYM=IEOR(USYM-1,VSYM-1)
      IF(UVSYM.NE.TSYM-1)GO TO 870
      DO 865 U=FLOV(USYM,1),FLOV(USYM,2)
      DO 860 V=FLOV(VSYM,1),FLOV(VSYM,2)
      NADD=0
      TOFF(U,V,1,T3SYM)=NOFF
      DO 850 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 850
      BESYM=ORBSYM(BE+NO)
      DO 840 GA=1,BE
      IF(FZV(GA).EQ.1)GO TO 840
      GASYM=ORBSYM(GA+NO)
      BEGSYM=IEOR(BESYM,GASYM)
      XSYM=IEOR(UVSYM,BEGSYM)+1
      IF(XSYM.NE.T3SYM)GO TO 820
      NOFF=NOFF+1
      NADD=NADD+1
      TADD(BE,GA,T3SYM)=NADD
C     TOT=TOFF(U,V,1,T3SYM)+TADD(BE,GA,T3SYM)
C     WRITE(6,657) U,V,TOFF(U,V,1,T3SYM),BE,GA,TADD(BE,GA,T3SYM),TOT
  820 CONTINUE
  840 CONTINUE
  850 CONTINUE
  860 CONTINUE
  865 CONTINUE
  870 CONTINUE
  875 CONTINUE
  880 CONTINUE
      DO 885 U=1,NO
      DO 885 V=1,NO
  885 TOFF(V,U,2,T3SYM)=TOFF(U,V,1,T3SYM)
      DO 887 BE=1,NV
      DO 887 GA=1,BE
  887 TADD(GA,BE,T3SYM)=TADD(BE,GA,T3SYM)
  890 CONTINUE
      ENDIF
C
C     A INTS  (OO,OO)
C
      NOFF=0
      DO 280 TSYM=1,NIRRED
      DO 270 ISYM=1,NIRRED
      DO 260 JSYM=1,ISYM
      IJSYM=IEOR(ISYM-1,JSYM-1)+1
      IF(IJSYM.NE.TSYM) GO TO 260
      FI=FLOV(ISYM,1)-NFZO(ISYM)
      DO 250 I=FI,FLOV(ISYM,2)
      JLIM=FLOV(JSYM,2)
      IF(ISYM.EQ.JSYM)JLIM=I
      FJ=FLOV(JSYM,1)-NFZO(JSYM)
      DO 250 J=FJ,JLIM
      NADD=0
      IJ=ITR(I)+J
      IF(FZO(I).EQ.1.OR.FZO(J).EQ.1)THEN
      AOFF(IJ)=NSGOO+1
      GO TO 202
      END IF
      AOFF(IJ)=NOFF
  202 CONTINUE
      DO 230 K=1,I
      KSYM=ORBSYM(K)
      LL=K
      IF(K.EQ.I)LL=J
      DO 220 L=1,LL
      LSYM=ORBSYM(L)
      KL=ITR(K)+L
      KLSYM=IEOR(KSYM,LSYM)+1
      IF(KLSYM.NE.TSYM)GO TO 210
      IF(FZO(I).EQ.1.OR.FZO(J).EQ.1)GO TO 205
      IF(FZO(K).EQ.1.OR.FZO(L).EQ.1)THEN
      AADD(KL)=NSGOO+1
      GO TO 205
      END IF
      NOFF=NOFF+1
      NADD=NADD+1
      AADD(KL)=NADD
  205 CONTINUE
C     TOT=AOFF(IJ)+AADD(KL)
C     WRITE(6,657) I,J,AOFF(IJ),K,L,AADD(KL),TOT
  210 CONTINUE
  220 CONTINUE
  230 CONTINUE
  240 CONTINUE
  250 CONTINUE
  260 CONTINUE
  270 CONTINUE
  280 CONTINUE
C
C     B INTS   (VV,VV)
      NOFF=0
      DO 380 TSYM=1,NIRRED
      DO 370 ISYM=1,NIRRED
      DO 360 JSYM=1,ISYM
      IJSYM=IEOR(ISYM-1,JSYM-1)+1
      IF(IJSYM.NE.TSYM) GO TO 360
      FI=FLOV(ISYM,3)-NO
      LI=FLOV(ISYM,4)+NFZV(ISYM)-NO
      DO 350 I=FI,LI
      JLIM=FLOV(JSYM,4) +NFZV(JSYM)-NO
      IF(ISYM.EQ.JSYM)JLIM=I
      DO 350 J=FLOV(JSYM,3)-NO,JLIM
      NADD=0
      IJ=ITV(I)+J
      IF(FZV(I).EQ.1.OR.FZV(J).EQ.1)THEN
      BOFF(IJ)=NSGVV+1
      GO TO 302
      END IF
      BOFF(IJ)=NOFF
  302 CONTINUE
      DO 330 K=1,I
      KSYM=ORBSYM(K+NO)
      LL=K
      IF(K.EQ.I)LL=J
      DO 320 L=1,LL
      LSYM=ORBSYM(L+NO)
      KL=ITV(K)+L
      KLSYM=IEOR(KSYM,LSYM)+1
      IF(KLSYM.NE.TSYM)GO TO 310
      IF(FZV(I).EQ.1.OR.FZV(J).EQ.1)GO TO 305
      IF(FZV(K).EQ.1.OR.FZV(L).EQ.1)THEN
      BADD(KL)=NSGVV+1
      GO TO 305
      END IF
      NOFF=NOFF+1
      NADD=NADD+1
      BADD(KL)=NADD
  305 CONTINUE
      TOT=BOFF(IJ)+BADD(KL)
C     WRITE(6,657) I,J,BOFF(IJ),K,L,BADD(KL),TOT
  310 CONTINUE
  320 CONTINUE
  330 CONTINUE
  340 CONTINUE
  350 CONTINUE
  360 CONTINUE
  370 CONTINUE
  380 CONTINUE
C
C     C INTS   (VV,OO)
      NOFF=0
      DO 460 TSYM=1,NIRRED
      DO 460 ISYM=1,NIRRED
      DO 460 JSYM=1,ISYM
      IJSYM=IEOR(ISYM-1,JSYM-1)+1
      IF(IJSYM.NE.TSYM) GO TO 460
      FI=FLOV(ISYM,3)-NO
      LI=FLOV(ISYM,4)+NFZV(ISYM)-NO
      DO 450 I=FI,LI
      FJ=FLOV(JSYM,3)-NO
      LJ=FLOV(JSYM,4)+NFZV(JSYM)-NO
      IF(ISYM.EQ.JSYM)LJ=I
      DO 450 J=FJ,LJ
      NADD=0
      IJ=ITV(I)+J
      IF(FZV(I).EQ.1.OR.FZV(J).EQ.1)THEN
      COFF(IJ)=NSGOV+1
      GO TO 402
      END IF
      COFF(IJ)=NOFF
  402 CONTINUE
      DO 430 K=1,NO
      KSYM=ORBSYM(K)
      DO 420 L=1,K
      LSYM=ORBSYM(L)
      KL=ITR(K)+L
      KLSYM=IEOR(KSYM,LSYM)+1
      IF(KLSYM.NE.TSYM)GO TO 410
      IF(FZV(I).EQ.1.OR.FZV(J).EQ.1)GO TO 405
      IF(FZO(K).EQ.1.OR.FZO(L).EQ.1)THEN
      CADD(KL)=NSGOV+1
      GO TO 405
      END IF
      NOFF=NOFF+1
      NADD=NADD+1
      CADD(KL)=NADD
  405 CONTINUE
C     TOT=COFF(IJ)+CADD(KL)
C     WRITE(6,657) I,J,COFF(IJ),K,L,CADD(KL),TOT
  410 CONTINUE
  420 CONTINUE
  430 CONTINUE
  440 CONTINUE
  450 CONTINUE
  460 CONTINUE
  470 CONTINUE
  480 CONTINUE
C
C     D INTS   (VO,VO)
      NOFF=0
      DO 560 TSYM=1,NIRRED
      DO 560 ISYM=1,NIRRED
      DO 560 JSYM=1,NIRRED
      IJSYM=IEOR(ISYM-1,JSYM-1)+1
      IF(IJSYM.NE.TSYM) GO TO 560
      FI=FLOV(ISYM,3)-NO
      LI=FLOV(ISYM,4)+NFZV(ISYM)-NO
      DO 550 I=FI,LI
      FJ=FLOV(JSYM,1)-NFZO(JSYM)
      LJ=FLOV(JSYM,2)
      DO 550 J=FJ,LJ
      NADD=0
      IJ=ITR(I)+J
      IF(FZV(I).EQ.1.OR.FZO(J).EQ.1)THEN
      DOFF(IJ)=NSHOV+1
      GO TO 502
      END IF
      DOFF(IJ)=NOFF
  502 CONTINUE
      DO 530 K=1,I
      KSYM=ORBSYM(K+NO)
      LL=NO
      IF(K.EQ.I)LL=J
      DO 520 L=1,LL
      LSYM=ORBSYM(L)
      KL=ITR(K)+L
      KLSYM=IEOR(KSYM,LSYM)+1
      IF(KLSYM.NE.TSYM)GO TO 510
      IF(FZV(I).EQ.1.OR.FZO(J).EQ.1)GO TO 505
      IF(FZV(K).EQ.1.OR.FZO(L).EQ.1)THEN
      DADD(KL)=NSHOV+1
      GO TO 505
      END IF
      NOFF=NOFF+1
      NADD=NADD+1
      DADD(KL)=NADD
  505 CONTINUE
C     TOT=DOFF(IJ)+DADD(KL)
C     WRITE(6,657) I,J,DOFF(IJ),K,L,DADD(KL),TOT
  510 CONTINUE
  520 CONTINUE
  530 CONTINUE
  540 CONTINUE
  550 CONTINUE
  560 CONTINUE
  570 CONTINUE
  580 CONTINUE
C
C     E INTS   (VO,OO)
      NOFF=0
      DO 660 TSYM=1,NIRRED
      DO 660 ISYM=1,NIRRED
      DO 660 JSYM=1,NIRRED
      IJSYM=IEOR(ISYM-1,JSYM-1)+1
      IF(IJSYM.NE.TSYM) GO TO 660
      FI=FLOV(ISYM,3)-NO
      LI=FLOV(ISYM,4)+NFZV(ISYM)-NO
      DO 650 I=FI,LI
      FJ=FLOV(JSYM,1)-NFZO(JSYM)
      LJ=FLOV(JSYM,2)
      DO 650 J=FJ,LJ
      NADD=0
      IJ=ITR(I)+J
      IF(FZV(I).EQ.1.OR.FZO(J).EQ.1)THEN
      EOFF(IJ)=NSLOV+1
      GO TO 602
      END IF
      EOFF(IJ)=NOFF
  602 CONTINUE
      DO 630 K=1,NO
      KSYM=ORBSYM(K)
      DO 620 L=1,K
      LSYM=ORBSYM(L)
      KL=ITR(K)+L
      KLSYM=IEOR(KSYM,LSYM)+1
      IF(KLSYM.NE.TSYM)GO TO 610
      IF(FZV(I).EQ.1.OR.FZO(J).EQ.1)GO TO 605
      IF(FZO(K).EQ.1.OR.FZO(L).EQ.1)THEN
      EADD(KL)=NSLOV+1
      GO TO 605
      END IF
      NOFF=NOFF+1
      NADD=NADD+1
      EADD(KL)=NADD
  605 CONTINUE
C     TOT=EOFF(IJ)+EADD(KL)
C     WRITE(6,657) I,J,EOFF(IJ),K,L,EADD(KL),TOT
  610 CONTINUE
  620 CONTINUE
  630 CONTINUE
  640 CONTINUE
  650 CONTINUE
  660 CONTINUE
  670 CONTINUE
  680 CONTINUE
C
C     F INTS   (VV,VO)
      NOFF=0
      DO 760 TSYM=1,NIRRED
      DO 760 ISYM=1,NIRRED
      DO 760 JSYM=1,ISYM
      IJSYM=IEOR(ISYM-1,JSYM-1)+1
      IF(IJSYM.NE.TSYM) GO TO 760
      FI=FLOV(ISYM,3)-NO
      LI=FLOV(ISYM,4)+NFZV(ISYM)-NO
      DO 750 I=FI,LI
      FJ=FLOV(JSYM,3)-NO
      LJ=FLOV(JSYM,4)+NFZV(JSYM)-NO
      IF(ISYM.EQ.JSYM)LJ=I
      DO 750 J=FJ,LJ
      NADD=0
      IJ=ITV(I)+J
      IF(FZV(I).EQ.1.OR.FZV(J).EQ.1)THEN
      FOFF(IJ)=NSLVO+1
      GO TO 702
      END IF
      FOFF(IJ)=NOFF
  702 CONTINUE
      DO 730 K=1,NV
      KSYM=ORBSYM(K+NO)
      DO 720 L=1,NO
      LSYM=ORBSYM(L)
      KL=ITR(K)+L
      KLSYM=IEOR(KSYM,LSYM)+1
      IF(KLSYM.NE.TSYM)GO TO 710
      IF(FZV(I).EQ.1.OR.FZV(J).EQ.1)GO TO 705
      IF(FZV(K).EQ.1.OR.FZO(L).EQ.1)THEN
      FADD(KL)=NSLVO+1
      GO TO 705
      END IF
      NOFF=NOFF+1
      NADD=NADD+1
      FADD(KL)=NADD
  705 CONTINUE
C     TOT=FOFF(IJ)+FADD(KL)
C     WRITE(6,657) I,J,FOFF(IJ),K,L,FADD(KL),TOT
  710 CONTINUE
  720 CONTINUE
  730 CONTINUE
  740 CONTINUE
  750 CONTINUE
  760 CONTINUE
  770 CONTINUE
  780 CONTINUE
      END
C
C
      SUBROUTINE RDINTS (IDISK,MOINTS,LENINT,IDIM,JOUT,BUF,IBUF,LENBUF,
     .                   IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .                   IOFF,IADD,NIOFF,NIADD,IPP,NPP,IQQ,NQQ)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 MOINTS(LENINT),BUF(LENBUF)
      COMMON/INTS/NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO
      INTEGER FZO(NO),FZV(NV)
      DIMENSION IBUF(2*LENBUF)
      DIMENSION IPQ(NT2),ITR(NV),ITRO(IMX),ITRV(NM)
      DIMENSION IOFF(NIOFF),IADD(NIADD),IPP(NPP),IQQ(NQQ)
      CALL SREW(IDISK)
      CALL ZERO(MOINTS,LENINT)
   29 FORMAT (4I3,F20.12)
      ITEMP=255
      INTLEN=(INTOWP(LENBUF)-2)/INTOWP(1)
      MAXVAL=INTOWP(INTLEN)/(1+INTOWP(1))
      IBOFF=(MAXVAL+2)/INTOWP(1)
C***  A INTS  **** (OO|OO) *****
      IF (IDISK.NE.60) GOTO 110
C     WRITE(4,*)'NSGOO=',NSGOO
  111 CALL SREAD(IDISK,BUF,INTOWP(LENBUF))
      CALL SETMBF(IFLG,IBUF(1))
      CALL SETMBF(MBUF,IBUF(2))
C     WRITE(4,*)'A INTS MBUF=',MBUF
C     WRITE(4,*)'A INTS IFLG=',IFLG
      DO 12 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)
         J=IAND(ITEMP,ISHFT(IJKL,-16))
         IJ=IPP(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,-8))
         L=IAND(ITEMP,IJKL)
         KL=IQQ(K)+L
         IJKL=IOFF(IJ)+IADD(KL)
         IF(IJKL.GT.NSGOO) GO TO 12
         MOINTS(IJKL)=BUF(II+IBOFF)
C     WRITE(*,*)I,J,K,L,IJKL,MOINTS(IJKL)
   12 CONTINUE
      IF (IFLG.EQ.0) GOTO 111
  110 CONTINUE
C***  B INTS  **** (VV|VV) *****
      IF (IDISK.NE.61) GOTO 120
C     WRITE(4,*)'NSGVV=',NSGVV
  112 CALL SREAD(IDISK,BUF,INTOWP(LENBUF))
      CALL SETMBF(IFLG,IBUF(1))
      CALL SETMBF(MBUF,IBUF(2))
C     WRITE(4,*)'B INTS MBUF=',MBUF
C     WRITE(4,*)'B INTS IFLG=',IFLG
      DO 22 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)-NO
         J=IAND(ITEMP,ISHFT(IJKL,-16))-NO
         IJ=IPP(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,-8))-NO
         L=IAND(ITEMP,IJKL)-NO
         KL=IPP(K)+L
         IJKL=IOFF(IJ)+IADD(KL)
         IF(IJKL.GT.NSGVV)GO TO 22
         MOINTS(IJKL)=BUF(II+IBOFF)
C     WRITE(*,*)I,J,K,L,IJ,KL,IJKL,MOINTS(IJKL)
   22 CONTINUE
      IF (IFLG.EQ.0) GOTO 112
  120 CONTINUE
C***  C INTS  **** (VV|OO) *****
      IF (IDISK.NE.62) GOTO 130
  113 CALL SREAD(IDISK,BUF,INTOWP(LENBUF))
      CALL SETMBF(IFLG,IBUF(1))
      CALL SETMBF(MBUF,IBUF(2))
      DO 32 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)-NO
         J=IAND(ITEMP,ISHFT(IJKL,-16))-NO
         IJ=IPP(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,-8))
         L=IAND(ITEMP,IJKL)
         KL=IQQ(K)+L
         IJKL=IOFF(IJ)+IADD(KL)
         IF(IJKL.GT.NSGOV)GO TO 32
         MOINTS(IJKL)=BUF(II+IBOFF)
C     WRITE(*,*)I,J,K,L,IJKL,MOINTS(IJKL)
   32 CONTINUE
      IF (IFLG.EQ.0) GOTO 113
  130 CONTINUE
C***  D INTS  **** (VO|VO) *****
      IF (IDISK.NE.63) GOTO 140
  114 CALL SREAD(IDISK,BUF,INTOWP(LENBUF))
      CALL SETMBF(IFLG,IBUF(1))
      CALL SETMBF(MBUF,IBUF(2))
      DO 42 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)-NO
         J=IAND(ITEMP,ISHFT(IJKL,-16))
         IJ=IPP(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,-8))-NO
         L=IAND(ITEMP,IJKL)
         KL=IQQ(K)+L
         IJKL=IOFF(IJ)+IADD(KL)
         IF(IJKL.GT.NSHOV)GO TO 42
         MOINTS(IJKL)=BUF(II+IBOFF)
C     WRITE(*,*)I,J,K,L,IJKL,MOINTS(IJKL)
   42 CONTINUE
      IF (IFLG.EQ.0) GOTO 114
  140 CONTINUE
C***  E INTS  **** (VO|OO) *****
      IF (IDISK.NE.64) GOTO 150
  115 CALL SREAD(IDISK,BUF,INTOWP(LENBUF))
      CALL SETMBF(IFLG,IBUF(1))
      CALL SETMBF(MBUF,IBUF(2))
      DO 52 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)-NO
         J=IAND(ITEMP,ISHFT(IJKL,-16))
         IJ=IPP(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,-8))
         L=IAND(ITEMP,IJKL)
         KL=IQQ(K)+L
         IJKL=IOFF(IJ)+IADD(KL)
         IF(IJKL.GT.NSLOV)GO TO 52
         MOINTS(IJKL)=BUF(II+IBOFF)
C     WRITE(*,*)I,J,K,L,IJKL,MOINTS(IJKL)
   52 CONTINUE
      IF (IFLG.EQ.0) GOTO 115
  150 CONTINUE
C
      IF (IDISK.NE.65) GOTO 160
      CALL SREW(IDISK+1)
C     WRITE(4,*)'NSLVO=',NSLVO
C***  F INTS  **** (VV|VO) *****
  116 CALL SREAD(IDISK,BUF,INTOWP(LENBUF))
      CALL SETMBF(IFLG,IBUF(1))
      CALL SETMBF(MBUF,IBUF(2))
C     WRITE(4,*)'F INTS MBUF FI65=',MBUF
C     WRITE(4,*)'F INTS IFLG FI65=',IFLG
      DO 62 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)-NO
         J=IAND(ITEMP,ISHFT(IJKL,-16))-NO
         IJ=IPP(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,-8))-NO
         L=IAND(ITEMP,IJKL)
         KL=IQQ(K)+L
         IJKL=IADD(KL)+IOFF(IJ)
         IF(IJKL.GT.NSLVO)GO TO 62
         MOINTS(IJKL)=BUF(II+IBOFF)
C     WRITE(*,*)I,J,K,L,IJKL,MOINTS(IJKL)
   62 CONTINUE
      IF (IFLG.EQ.0) GOTO 116
C***  F INTS  **** (VO|VV) *****
  117 CALL SREAD(IDISK+1,BUF,INTOWP(LENBUF))
      CALL SETMBF(IFLG,IBUF(1))
      CALL SETMBF(MBUF,IBUF(2))
C     WRITE(4,*)'F INTS MBUF FI66=',MBUF
C     WRITE(4,*)'F INTS IFLG FI66=',IFLG
      DO 72 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)-NO
         J=IAND(ITEMP,ISHFT(IJKL,-16))
         IJ=IQQ(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,-8))-NO
         L=IAND(ITEMP,IJKL)-NO
         KL=IPP(K)+L
         IJKL=IADD(IJ)+IOFF(KL)
         IF(IJKL.GT.NSLVO)GO TO 72
         MOINTS(IJKL)=BUF(II+IBOFF)
C     WRITE(*,*)I,J,K,L,IJKL,MOINTS(IJKL)
   72 CONTINUE
      IF (IFLG.EQ.0) GOTO 117
  160 CONTINUE
C     CALL MATOUT(MOINTS,IDIM,IDIM,IDIM,IDIM,JOUT)
      RETURN
      END
C
C=======================================================================
C
      SUBROUTINE READ30(ITAP30,MPOINT,MCONST,MCALCS,NCALCS,NT,
     .                  NSYMHF,MXCOEF,EIGVAL,NLAMDA,ITEMP,JOUT,NC,NO,
     .                  WTEMP,PTOCC,ITYP,ORBSYM,FLOV,NIRRED,ITEP,
     .                  ENUC,ESCF,NAT,NSHELL,NPRIM,IOPEN,
     .                  CHAR,NORD,ZAN,COORD)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*4 ITYP(NSYMHF),ICSYM,ITEP(NIRRED)
      CHARACTER*4 CHAR,LABEL(20)
      INTEGER NORD
      REAL*8 EIGVAL(NT),WTEMP(NT),ZAN(NAT),COORD(3,NAT)
      INTEGER NLAMDA(NSYMHF),ITEMP(MCALCS),NC(NSYMHF),PTOCC(NT),
     .        ORBSYM(NT),FLOV(NIRRED,4),SYMORB
C
      JPOINT = 101 + MCONST + MPOINT
      CALL WREADW (ITAP30,ITEMP,MCALCS,JPOINT,JPOINT)
      LOCCAL = ITEMP(NCALCS)
      JPOINT = LOCCAL + 60
      CALL WREADW (ITAP30,LOCVEC,1,JPOINT,JPOINT)
      LOCVEC=LOCVEC+INTOWP(MXCOEF)
      CALL WREADW (ITAP30,EIGVAL,INTOWP(NT),LOCVEC,LOCVEC)
      CALL WREADW (ITAP30,ITYP,NSYMHF,LOCVEC,LOCVEC)
C     LOCVEC = LOCVEC + NSYMHF
C     WRITE(*,*) ' LOCVEC,MXCOEF = ',LOCVEC,MXCOEF
      CALL WREADW (ITAP30,NLAMDA,NSYMHF,LOCVEC,LOCVEC)
      CALL WREADW (ITAP30,NC,NSYMHF,LOCVEC,LOCVEC)
      NO=0
      DO 555 I=1,NSYMHF
         NO=NO+NC(I)
C        WRITE (6,*) ' I,NC=',I,NC(I)
  555 CONTINUE
      ICNT=0
      IOF = 0
      DO 558 I=1,NSYMHF
      IF(I.NE.1) IOF = IOF + NLAMDA(I-1)
      NOI=NC(I)
      DO 557 J=1,NOI
      ICNT=ICNT+1
      IPT=IOF+J
C     WRITE(6,*)'IPT=',IPT,ICNT
  557 PTOCC(IPT)=ICNT
  558 CONTINUE
C     WRITE(*,*) '  VIRTUALS'
      IOF = 0
      DO 658 I=1,NSYMHF
      IF(I.NE.1) IOF = IOF + NLAMDA(I-1)
      NVI=NLAMDA(I)-NC(I)
      DO 657 J=1,NVI
      ICNT=ICNT+1
      IPT=IOF+NC(I) + J
C     WRITE(6,*) IOF,NC(I),J
C     WRITE(6,*)'IPT=',IPT,ICNT
  657 PTOCC(IPT)=ICNT
  658 CONTINUE
      DO 559 I=1,NT
      IPT=PTOCC(I)
  559 WTEMP(IPT)=EIGVAL(I)
      DO 569 I=1,NT
      EIGVAL(I)=WTEMP(I)
C     WRITE(6,*)'I=',I,'E(I)=',EIGVAL(I)
  569 CONTINUE
C
      DO 805 ISYM = 1,NIRRED
      FLOV(ISYM,1) = 0
      FLOV(ISYM,2) = -1
      FLOV(ISYM,3) = 0
      FLOV(ISYM,4) = -1
  805 CONTINUE
C
C     GET SYMMETRY LABEL FROM INPUT
C
      CALL LOCATE (5,'# INPUT ###',IERR)
      IF(IERR.NE.0) THEN
      WRITE (6,*)'NO INPUT WAS FOUND!'
      STOP
      ELSE
      READ(5,6004)LABEL
      READ(5,6004)LABEL
 6004 FORMAT(20A4)
 6005 FORMAT(A4,5X,I1)
      READ(5,6005)CHAR,NORD
      END IF
C
      ICNT=0
      DO 705 ISYM=1,NSYMHF
      ICSYM=ITYP(ISYM)
      ICNTH=ICNT+1
      NOI=NC(ISYM)
      DO 700 I=1,NOI
      ICNT=ICNT+1
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A2  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'A   ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B   ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'A''  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A"  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1G ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2G ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3G ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=4
      IF(ICSYM.EQ.'B1U ')ORBSYM(ICNT)=5
      IF(ICSYM.EQ.'B2U ')ORBSYM(ICNT)=6
      IF(ICSYM.EQ.'B3U ')ORBSYM(ICNT)=7
      IF(NIRRED.GT.4)GO TO 690
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'BG  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'BU  ')ORBSYM(ICNT)=3
  690 CONTINUE
      IF(CHAR.EQ.'DN  '.AND.NORD.EQ.2)THEN
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3  ')ORBSYM(ICNT)=3
      ENDIF
  700 CONTINUE
      IF(ICNTH-1.NE.ICNT) THEN
      SYMORB = ORBSYM(ICNT) + 1
      FLOV(SYMORB,1)=ICNTH
      FLOV(SYMORB,2)=ICNT
      END IF
C     WRITE(*,*)'ISYM',ISYM,'F1',FLOV(ISYM,1)
C     WRITE(*,*)'ISYM',ISYM,'F2',FLOV(ISYM,2)
  705 CONTINUE
      DO 715 ISYM=1,NSYMHF
      ICSYM=ITYP(ISYM)
      ICNTH=ICNT+1
      NVI=NLAMDA(ISYM)-NC(ISYM)
      DO 710 I=1,NVI
      ICNT=ICNT+1
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A2  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'A   ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B   ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'A''  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A"  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1G ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2G ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3G ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=4
      IF(ICSYM.EQ.'B1U ')ORBSYM(ICNT)=5
      IF(ICSYM.EQ.'B2U ')ORBSYM(ICNT)=6
      IF(ICSYM.EQ.'B3U ')ORBSYM(ICNT)=7
      IF(NIRRED.GT.4)GO TO 691
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'BG  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'BU  ')ORBSYM(ICNT)=3
  691 CONTINUE
      IF(CHAR.EQ.'DN  '.AND.NORD.EQ.2)THEN
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3  ')ORBSYM(ICNT)=3
      ENDIF
  710 CONTINUE
      IF(ICNTH-1.NE.ICNT) THEN
      SYMORB = ORBSYM(ICNT) + 1
      FLOV(SYMORB,3)=ICNTH
      FLOV(SYMORB,4)=ICNT
      END IF
C     WRITE(*,*)'ISYM',ISYM,'F3',FLOV(ISYM,3)
C     WRITE(*,*)'ISYM',ISYM,'F4',FLOV(ISYM,4)
  715 CONTINUE
C     WRITE(*,*)'ORBSYM',ORBSYM
      DO 800 ISYM=1,NSYMHF
      ICSYM=ITYP(ISYM)
      IF(ICSYM.EQ.'A1  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'A2  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'B1  ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'B2  ')ITEP(4)=ICSYM
      IF(ICSYM.EQ.'A   ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'B   ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'A''  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'A"  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'AG  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'B1G ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'B2G ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'B3G ')ITEP(4)=ICSYM
      IF(ICSYM.EQ.'AU  ')ITEP(5)=ICSYM
      IF(ICSYM.EQ.'B1U ')ITEP(6)=ICSYM
      IF(ICSYM.EQ.'B2U ')ITEP(7)=ICSYM
      IF(ICSYM.EQ.'B3U ')ITEP(8)=ICSYM
      IF(NIRRED.GT.4)GO TO 692
      IF(ICSYM.EQ.'AG  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'BG  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'AU  ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'BU  ')ITEP(4)=ICSYM
  692 CONTINUE
      IF(CHAR.EQ.'DN  '.AND.NORD.EQ.2)THEN
      IF(ICSYM.EQ.'A1  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'B1  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'B2  ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'B3  ')ITEP(4)=ICSYM
      ENDIF
  800 CONTINUE
      CALL RFI30(ENUC,ESCF,ZAN,COORD,NAT)
      END
C
C
      SUBROUTINE RFI30 (ENUC,ESCF,ZAN,GEOM,NAT)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 A30(100)
      INTEGER IA30(400),IPTR30(400)
      INTEGER IALBEL(20),IBLBEL(20),LBLDRT(26)
      DIMENSION ZAN(NAT),GEOM(3,NAT)
      EQUIVALENCE (IA30,A30)
      ITAP11 = 11
      IT30 = 30
      NOUT = 6
C
C     ----- GET CONSTANTS FROM TAPE30 -----
C
      CALL SREW(IT30)
      CALL WREADW(IT30,IA30,200,101,JUNK)
C
      IEND   =  IA30(1)
      MPOINT =  IA30(2)
      MCONST =  IA30(3)
      MCALCS =  IA30(4)
      NCALCS =  IA30(5)
      NAT    = IA30(19)
      NUM    = IA30(22)
C GCINTS
      NUM=IA30(18)
      NNP    = IA30(23)
      NSHELL = IA30(27)
      NIRRED = IA30(28)
      NT     = IA30(29)
      NPRIM  = IA30(32)
      MXT    = IA30(36)
      NISO   = IA30(40)
C
C     ----- READ POINTERS FROM TAPE30 -----
C
      JUNK   = 101+MCONST
      CALL WREADW(IT30,IPTR30,MPOINT,JUNK,JUNK)
      CALL WREADW(IT30,   ZAN,    INTOWP(NAT),IPTR30(1),JUNK)
      JUNK   = 101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(IT30, LOCCAL, 1,JUNK,JUNK)
      CALL WREADW(IT30, IA30, 60,LOCCAL,LOCCAL)
      DO 500  ILBL=1,20
         IALBEL(ILBL) =  IA30(ILBL)
  500 CONTINUE
      WRITE(NOUT,905)IALBEL
  905 FORMAT(1X,/,'  LABEL FROM FILE30 : ',20A4,/)
      LOCCAL=LOCCAL+20
      CALL WREADW(IT30,  GEOM,  INTOWP(3*NAT),LOCCAL,LOCCAL)
      WRITE(NOUT,*)' GEOMETRY FROM FILE30'
      WRITE(NOUT,*)'                     '
      DO 523 I=1,NAT
      WRITE(NOUT,909)I,ZAN(I),GEOM(1,I),GEOM(2,I),GEOM(3,I)
  909 FORMAT(1X,I4,3X,F5.2,5X,3(4X,F13.10))
  523 CONTINUE
C
C     ----- GET ENERGIES AND WRITE OUT -----
C
      CALL WREADW(IT30,IA30,INTOWP(10),LOCCAL,LOCCAL)
      ESCF = A30(2)
      ENUC=A30(1)
      EE=ESCF-ENUC
      WRITE (NOUT,900)
  900 FORMAT (/,2X,'ENERGIES FROM FILE30 ',/)
      WRITE (NOUT,901) ENUC
  901 FORMAT (1X,' NUCLEAR REPULSION ENERGY =',F20.12)
      WRITE (NOUT,902) ESCF
  902 FORMAT (1X,' SCF ENERGY               =',F20.12)
      WRITE (NOUT,903) EE
  903 FORMAT (1X,' TOTAL ELECTRONIC  ENERGY =',F20.12)
      CALL RCLOSE(IT30,3)
      RETURN
      END
C
C
C=======================================================================
C
      SUBROUTINE RINTS (IDISK,MOINTS,LENINT,IDIM,JOUT,BUF,IBUF,LENBUF,
     .                   IPQ,NT2)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 MOINTS(LENINT),BUF(LENBUF)
      DIMENSION IBUF(2*LENBUF),IPQ(NT2)
      COMMON/PAKQ/I1,I2,I3
      CALL SREW(IDISK)
      ITEMP=255
      INTLEN=(INTOWP(LENBUF)-2)/INTOWP(1)
C     WRITE (JOUT,*) ' LENBUF=',LENBUF
      MAXVAL=INTOWP(INTLEN)/(1+INTOWP(1))
      IBOFF=(MAXVAL+2)/INTOWP(1)
  111 CALL SREAD(IDISK,BUF,INTOWP(LENBUF))
C     WRITE (JOUT,*) ' SREAD 78'
      CALL SETMBF(IFLG,IBUF(1))
C     WRITE (JOUT,*) ' IFLG',IFLG,IBUF(1)
      CALL SETMBF(MBUF,IBUF(2))
      DO 12 II=1,MBUF
      CALL SETMBF(IJKL,IBUF(II+2))
         I=ISHFT(IJKL,-24)
         J=IAND(ITEMP,ISHFT(IJKL,-16))
         IJ=IPQ(I)+J
         K=IAND(ITEMP,ISHFT(IJKL,- 8))
         L=IAND(ITEMP,IJKL)
         KL=IPQ(K)+L
         IJKL=IPQ(IJ)+KL
         MOINTS(IJKL)=BUF(II+IBOFF)
   12 CONTINUE
      IF (IFLG.EQ.0) GOTO 111
C     CALL MATOUT(MOINTS,IDIM,IDIM,IDIM,IDIM,JOUT)
      RETURN
      END
C
C=======================================================================
C
      SUBROUTINE PAK
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON /PAKQ/ IX(2),I5(2)
C
      INTEGER*2 I5
C     LOGICAL*4 TRANS(2)
C     EQUIVALENCE (IX(1),TRANS(1))
C
      DO 1 I=1,2
         IF (IX(I) .GT. 65535) STOP ' PACKING PROBLEM '
         I5(I)=IX(I)
    1 CONTINUE
C     I5=ITEMP
C
      RETURN
C
C----UNPAK-----------------------------------------------UNPAK
C
      ENTRY UNPAK
C
C     ITEMP=I5
      DO 2 I=1,2
         IX(I)=I5(I)
    2 CONTINUE
C
      RETURN
      END
C
C=======================================================================
C
      SUBROUTINE SETMBF(MBUF,IBUF)
      IMPLICIT REAL*8 (A-H,O-Z)
      MBUF=IBUF
      RETURN
      END
C
C=======================================================================
C
      SUBROUTINE DIISC (T1O,T1,T2,S,NO,NV,NDIMT2,NIT,IT,IECORR,
     .                  EPSI,NGO,NDIIS,MINDIM,MAXDIM,
     .                  CC,BB,TT1,DT1,TT2,DT2)
      IMPLICIT INTEGER (A-Z)
      REAL * 16 DET
      REAL * 8 BB,TT1,TT2,EPS,CC,ONE,XM,XMAX,XEN,DT1,DT2,XON,XLAM
      REAL * 8 T1,T1O,S,T2,ZERO,XFAC,XADD
      DIMENSION CC(MAXDIM),BB(MAXDIM+1,MAXDIM+2),
     .          TT1(MAXDIM,NO,NV),DT1(MAXDIM,NO,NV),
     .          TT2(MAXDIM,NDIMT2),DT2(MAXDIM,NDIMT2)
      DIMENSION T1O(NO,NV),T1(NO,NV),T2(NDIMT2),S(NDIMT2)
C
      ZERO=0.0D0
      ONE=1.D0
      EPS=10.D0 **(-EPSI)
      IECORR=0
C
C     DIIS EXTRAPOLATION
C
      IF(NIT.LT.NDIIS) GO TO 2400
      IF(IFLAG.EQ.1) THEN
      IFLAG=0
      NCOUNT=0
      GO TO 2400
      END IF
      NCOUNT=NCOUNT+1
      IT=IT+1
      IF(IT.LE.MAXDIM) GO TO 2040
      DO 2030 N=1,MAXDIM-1
      DO 2010 I=1,NO
      DO 2010 A=1,NV
      DT1(N,I,A)=DT1(N+1,I,A)
 2010 TT1(N,I,A)=TT1(N+1,I,A)
      DO 2020 UVBG=1,NDIMT2
      DT2(N,UVBG)=DT2(N+1,UVBG)
 2020 TT2(N,UVBG)=TT2(N+1,UVBG)
 2030 CONTINUE
      IT=MAXDIM
 2040 CONTINUE
      DO 2050 I=1,NO
      DO 2050 A=1,NV
      DT1(IT,I,A)=T1(I,A)-T1O(I,A)
 2050 TT1(IT,I,A)=T1O(I,A)
      DO 2060 UVBG=1,NDIMT2
      DT2(IT,UVBG)=S(UVBG)-T2(UVBG)
 2060 TT2(IT,UVBG)=T2(UVBG)
      IF(IT.LT.MINDIM) GO TO 2400
      DO 2090 N=1,IT
      DO 2090 M=1,N
      BB(N,M)=ZERO
      DO 2070 I=1,NO
      DO 2070 A=1,NV
 2070 BB(N,M)=BB(N,M)+DT1(N,I,A)*DT1(M,I,A)
      DO 2080 UVBG=1,NDIMT2
 2080 BB(N,M)=BB(N,M)+DT2(N,UVBG)*DT2(M,UVBG)
      BB(M,N)=BB(N,M)
 2090 CONTINUE
C     FIND THE MAXIMUM AND SCALE
      XM=DABS(BB(1,1))
      DO 2094 N=1,IT
      DO 2094 M=1,N
      XFAC=DABS(BB(N,M))
      XMAX=DMAX1(XM,XFAC)
      XM=XMAX
 2094 CONTINUE
      DO 2095 N=1,IT
      DO 2095 M=1,IT
 2095 BB(N,M)=BB(N,M)/XM
      IT1=IT+1
      IT2=IT+2
      DO 2100 N=1,IT
      BB(N,IT1)=-ONE
 2100 BB(IT1,N)=-ONE
      BB(IT1,IT1)= ZERO
      DO 2110 N=1,IT
 2110 BB(N,IT2)= ZERO
      BB(IT1,IT2)=-ONE
      CALL FLINQ(BB,9,IT1,1,DET)
C     WRITE(6,*)'DET=',DET
C     WRITE(4,*)'DET=',DET
      XADD=ZERO
      DO 2120 N=1,IT
      CC(N)= BB(N,IT2)
      XADD=XADD+CC(N)
C     WRITE(6,*)'N=',N,'CC(N)=',CC(N)
 2120 CONTINUE
      XEN=BB(IT1,IT2)*XM
      XEN=DSQRT(XEN)
      XON=ZERO
C     WRITE(6,*)'CSUM=',XADD
C     WRITE(4,*)'CSUM=',XADD
      DO 2124 I=1,NO
      DO 2124 A=1,NV
      XON = XON + DT1(IT,I,A)*DT1(IT,I,A)
 2124 CONTINUE
      DO 2125 UVBG=1,NDIMT2
      XON = XON + DT2(IT,UVBG)*DT2(IT,UVBG)
 2125 CONTINUE
      XON=DSQRT(XON)
      WRITE(6,*)'XEN =',XEN
      WRITE(4,*)'XEN =',XEN
      WRITE(6,*)'XON =',XON
      WRITE(4,*)'XON =',XON
      IF(DABS(XEN).GT.EPS) GO TO 2400
      IF(NCOUNT.LE.NGO) GO TO 2400
      DO 2140 I=1,NO
      DO 2140 A=1,NV
 2140 T1(I,A)= ZERO
      DO 2160 UVBG=1,NDIMT2
 2160 S(UVBG)= ZERO
      DO 2200 N=1,IT
      DO 2170 I=1,NO
      DO 2170 A=1,NV
 2170 T1(I,A)= T1(I,A)+CC(N)*TT1(N,I,A)
      DO 2180 UVBG=1,NDIMT2
 2180 S(UVBG)= S(UVBG)+CC(N)*TT2(N,UVBG)
 2200 CONTINUE
      IFLAG=1
      IECORR=1
 2400 CONTINUE
C
      END
C
C=======================================================================
C
      SUBROUTINE ECORR(    T2,T1,II,XE,UOFF,VADD,IPQ,ORBSYM,FLOV,
     .                 NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .                 DOFF,DADD,NM,ITR)
      IMPLICIT INTEGER (A-Z)
      REAL * 8 XE,    II,T2,T1,FOCK(NT2),VAL1,VAL2
      DIMENSION ORBSYM(NT),FLOV(NIRRED,4),IPQ(NT2),UOFF(NO,NO,2),
     .          VADD(NV,NV),II(NTIN),            T2(NDIMT2),
     .          T1(NO,NV),FZO(NO),FZV(NV),DOFF(NM),DADD(NM),ITR(NV)
C
C     CALCULATE THE CORRELATION ENERGY
C
      XE=0.0D0
      DO 81 I=1,NO
      IF(FZO(I).EQ.1)GO TO 81
      ISYM=ORBSYM(I)
      DO 80 J=1,NO
      IF(FZO(J).EQ.1)GO TO 80
      JSYM=ORBSYM(J)
      IJSYM=IEOR(ISYM,JSYM)
      DO 78 A=1,NV
      IF(FZV(A).EQ.1)GO TO 78
      ASYM=ORBSYM(A+NO)
      BSYM=IEOR(IJSYM,ASYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      IF(LB.GT.A-1)LB=A-1
      IA=ITR(A)+I
      DO 76 B=FB,LB
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IJAB=UOFF(I,J,1)+VADD(A,B)
      JIAB=UOFF(J,I,1)+VADD(A,B)
      VAL1=T2(IJAB)+T1(I,A)*T1(J,B)
      VAL2=T2(JIAB)+T1(J,A)*T1(I,B)
      XE=XE+II(IAJB)*(VAL1+VAL1-VAL2)
   76 CONTINUE
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      IF(FB.LT.A)FB=A
      DO 77 B=FB,LB
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IJAB=UOFF(J,I,1)+VADD(B,A)
      JIAB=UOFF(I,J,1)+VADD(B,A)
      VAL1=T2(IJAB)+T1(I,A)*T1(J,B)
      VAL2=T2(JIAB)+T1(J,A)*T1(I,B)
      XE=XE+II(IAJB)*(VAL1+VAL1-VAL2)
   77 CONTINUE
   78 CONTINUE
   80 CONTINUE
   81 CONTINUE
C
C     ADD FOCK MATRIX DEPENDENT TERMS
C
C     DO 95 I=1,NO
C     IF(FZO(I).EQ.1)GO TO 95
C     DO 93 A=1,NV
C     IF(FZV(A).EQ.1)GO TO 93
C     IA=IPQ(A+NO)+I
C     XE=XE+2.D0*FOCK(IA)*T1(I,A)
C  93 CONTINUE
C  95 CONTINUE
C
C     WRITE(6,9000)
      WRITE(6,9010) NIT,XE,XE
      WRITE(4,9010) NIT,XE,XE
 9000 FORMAT(/)
 9010 FORMAT('NIT =',I3,5X,'CORREL.ENERGY =',F16.12,3X,D23.16)
      END
C
C=======================================================================
C
      SUBROUTINE PCORR(    T2,T1,II,XE,UOFF,VADD,IPQ,ORBSYM,FLOV,
     .                 NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .                 DOFF,DADD,NM,ITR)
      IMPLICIT INTEGER (A-Z)
      REAL * 8 XE,    II,T2,T1,FOCK(NT2),VAL1,VAL2
      DIMENSION ORBSYM(NT),FLOV(NIRRED,4),IPQ(NT2),UOFF(NO,NO,2),
     .          VADD(NV,NV),II(NTIN),            T2(NDIMT2),
     .          T1(NO,NV),FZO(NO),FZV(NV),DOFF(NM),DADD(NM),ITR(NV)
C
C
C     CALCULATE THE CORRELATION ENERGY
C
      XE=0.0D0
      DO 81 I=1,NO
      IF(FZO(I).EQ.1)GO TO 81
      ISYM=ORBSYM(I)
      DO 80 J=1,NO
      IF(FZO(J).EQ.1)GO TO 80
      JSYM=ORBSYM(J)
      IJSYM=IEOR(ISYM,JSYM)
      DO 78 A=1,NV
      IF(FZV(A).EQ.1)GO TO 78
      ASYM=ORBSYM(A+NO)
      BSYM=IEOR(IJSYM,ASYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      IF(LB.GT.A-1)LB=A-1
      IA=ITR(A)+I
      DO 76 B=FB,LB
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IJAB=UOFF(I,J,1)+VADD(A,B)
      JIAB=UOFF(J,I,1)+VADD(A,B)
      VAL1=T2(IJAB)
      VAL2=T2(JIAB)
      XE=XE+II(IAJB)*(VAL1+VAL1-VAL2)
   76 CONTINUE
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      IF(FB.LT.A)FB=A
      DO 77 B=FB,LB
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IJAB=UOFF(J,I,1)+VADD(B,A)
      JIAB=UOFF(I,J,1)+VADD(B,A)
      VAL1=T2(IJAB)
      VAL2=T2(JIAB)
      XE=XE+II(IAJB)*(VAL1+VAL1-VAL2)
   77 CONTINUE
   78 CONTINUE
   80 CONTINUE
   81 CONTINUE
C
C     ADD FOCK MATRIX DEPENDENT TERMS
C
C     DO 95 I=1,NO
C     DO 95 A=1,NV
C     IA=IPQ(A+NO)+I
C  95 XE=XE+2.D0*FOCK(IA)*T1(I,A)
C
C     WRITE(6,9000)
      WRITE(6,9010) NIT,XE,XE
      WRITE(4,9010) NIT,XE,XE
 9000 FORMAT(/)
 9010 FORMAT('NIT =',I3,5X,'CORREL.ENERGY =',F16.12,3X,D23.16)
      END
C
C=======================================================================
C
      SUBROUTINE FOCKI (D,IOUT,XVEC,WVEC,XARR,NT,Z,FLAG,FOCK,EREF,ENUC,
     .                 II,NTIN,BUF,IBUF,INTBUF,
     .            NGOO,NGOV,NHOV,NLOV,IPQ,ITR,ITV,ITRO,ITRV,FZO,FZV,
     .            NT2,NO,NV,NM,IMX,NONO,NVNV,NOV)
      IMPLICIT INTEGER (A-Z)
      REAL * 8 D(NT,NT),XVEC(NT,NT),WVEC(NT*NT),ACRCY
      REAL * 8 EREF,ENUC,FOCK(NT2)
      REAL * 8 Z(NO*NV),XARR(NT)
      REAL * 8 DUM,DAM,VAL,BUF
      REAL * 8  II(NTIN)
      DIMENSION IPQ(NT2),ITR(NOV),ITRO(IMX),ITRV(NM),
     .          ITV(NV)
      DIMENSION FZO(NO),FZV(NV)
      DIMENSION BUF(INTBUF),IBUF(INTBUF*2)
      DIMENSION IOUT(NT)
      CHARACTER*4 IREWR
      ITAP67=67
      ACRCY=1.D-15
C
C     GET VECTOR FROM FILE30
C
      IREWR='READ'
      CALL VECS(D,IOUT,ACRCY,XVEC,WVEC,IREWR,NT,NT)
      WRITE(*,*)'EIGENVECTOR TO CONSTRUCT GENERALIZED FOCK MATRIX'
      CALL MATOUT(D,NT,NT,NT,NT,6)
C
C     GET S AND H FROM FILE67
C
      CALL RFILE(ITAP67)
      CALL SREAD (ITAP67,WVEC,INTOWP(NT2))
C     WRITE(*,*)'AO OVERLAP MATRIX'
C     CALL PRINT(WVEC,NT2,NT,6)
      CALL SREAD (ITAP67,WVEC,INTOWP(NT2))
      CALL RCLOSE(ITAP67,3)
C     WRITE(*,*)'AO ONE E H MATRIX'
C     CALL PRINT(WVEC,NT2,NT,6)
      CALL ZERO (FOCK,NT2)
      DO 148  I=1,NT
      DO 146  J=1,I
      DO 140 MU=1,NT
      DO 140 NU=1,NT
      MA=MAX0(MU,NU)
      MI=MIN0(MU,NU)
      MUNU=(MA*(MA-1))/2+MI
      IJ=IPQ(I)+J
      FOCK(IJ)=FOCK(IJ)+D(MU,I)*D(NU,J)*WVEC(MUNU)
  140 CONTINUE
  146 CONTINUE
  148 CONTINUE
C     WRITE(*,*)'ONE E HAMILTONIAN MO BASIS'
C     CALL PRINT(FOCK,NT2,NT,6)
      EREF=0.0D0
      DO 200 I=1,NO
      FII=IPQ(I)+I
      EREF=EREF+FOCK(FII)
  200 CONTINUE
C
C     CALL RDINTS(60,II,NTIN,NGOO,6,BUF,IBUF,INTBUF,
C    .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
C    .            AOFF,AADD,NONO,NONO,ITR,NOV,ITR,NOV)
C     WRITE(*,645)(II(I),I=1,NGOO)
  645 FORMAT(7(2X,F8.4))
      DO 248  I=1,NO
      DO 246  M=1,I
      IM=IPQ(MAX0(I,M))+MIN0(I,M)
      FIM=IPQ(I)+M
      DO 240  J=1,NO
      IJ=IPQ(MAX0(I,J))+MIN0(I,J)
      MJ=IPQ(MAX0(M,J))+MIN0(M,J)
      JJ=IPQ(J)+J
      IMJJ=IPQ (MAX0(IM,JJ))+    (MIN0(IM,JJ))
      IJMJ=IPQ (MAX0(IJ,MJ))+    (MIN0(IJ,MJ))
      FOCK(FIM)=FOCK(FIM)+2.D0*II(IMJJ)-II(IJMJ)
  240 CONTINUE
  246 CONTINUE
  248 CONTINUE
C
C     CALL RDINTS(64,II,NTIN,NLOV,6,BUF,IBUF,INTBUF,
C    .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
C    .            EOFF,EADD,NM  ,NONO,ITR,NOV,ITR,NOV)
C     DO 348  I=1,NO
C     DO 346  M=1,NV
C     IM=ITR(M)+I
C     FIM=IP
C     DO 340  J=1,NO
C     IJ=ITR(MAX0(I,J))+MIN0(I,J)
C     MJ=ITR(M)+J
C     JJ=ITR(J)+J
C     IMJJ=EOFF(IM)+EADD(JJ)
C     IJMJ=EOFF(MJ)+EADD(IJ)
C     FOCK(I,M+NO)=FOCK(I,M+NO)+2.D0*II(IMJJ)-II(IJMJ)
C 340 CONTINUE
C 346 CONTINUE
C 348 CONTINUE
      DO 448  I=1,NV
      DO 446  M=1,NO
      IM=IPQ(I+NO)+M
      FIM=IPQ(I+NO)+M
      DO 440  J=1,NO
      IJ=IPQ(I+NO)+J
      MJ=IPQ(MAX0(M,J))+MIN0(M,J)
      JJ=IPQ(J)+J
      IMJJ=IPQ(MAX0(IM,JJ))+MIN0(IM,JJ)
      IJMJ=IPQ(MAX0(IJ,MJ))+MIN0(IJ,MJ)
      FOCK(FIM)=FOCK(FIM)+2.D0*II(IMJJ)-II(IJMJ)
  440 CONTINUE
  446 CONTINUE
  448 CONTINUE
C
C     CALL RDINTS(62,II,NTIN,NGOV,6,BUF,IBUF,INTBUF,
C    .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
C    .            COFF,CADD,NVNV,NONO,ITV,NV,ITR,NOV)
C     WRITE(*,*)'NGOV',NGOV
C     CALL MATOUT(FOCK,NT,NT,NT,NT,6)
C     WRITE(*,645)(II(I),I=1,NGOV)
      DO 548  I=1,NV
      DO 546  M=1,I
      FIM=IPQ(I+NO)+M+NO
      IM=IPQ(MAX0(I,M)+NO)+MIN0(I,M)+NO
      DO 540  J=1,NO
      JJ=IPQ(J)+J
      IMJJ=IPQ(MAX0(IM,JJ))+MIN0(IM,JJ)
      FOCK(FIM)=FOCK(FIM)+2.D0*II(IMJJ)
  540 CONTINUE
  546 CONTINUE
  548 CONTINUE
C
C     CALL RDINTS(63,II,NTIN,NHOV,6,BUF,IBUF,INTBUF,
C    .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
C    .            DOFF,DADD,NM  ,NM  ,ITR,NOV,ITR,NOV)
C     WRITE(*,*)'NHOV',NHOV
C     CALL MATOUT(FOCK,NT,NT,NT,NT,6)
C     WRITE(*,645)(II(I),I=1,NHOV)
      DO 648  I=1,NV
      DO 646  M=1,I
      FIM=IPQ(I+NO)+M+NO
      DO 640  J=1,NO
      IJ=IPQ(I+NO)+J
      MJ=IPQ(M+NO)+J
      IJMJ=IPQ(MAX0(IJ,MJ))+MIN0(IJ,MJ)
      FOCK(FIM)=FOCK(FIM)-II(IJMJ)
  640 CONTINUE
  646 CONTINUE
  648 CONTINUE
C
      WRITE(*,*)'FOCK MATRIX IN MO BASIS'
      CALL PRINT(FOCK,NT2,NT,6)
C
      DO 700 I=1,NO
      FII=IPQ(I)+I
      EREF=EREF+FOCK(FII)
  700 CONTINUE
      EREF=EREF+ENUC
      WRITE(*,*)'NEW MO EREF', EREF
      RETURN
      END
C
      SUBROUTINE VECS(D,IOUT,ACRCY,XVEC,WVEC,IREWR,NBF,NBFAO)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER IOUT(NBF),NLAMDA(8),OUT,CHK
      REAL*8 D(NBFAO,NBF),XVEC(1),WVEC(NBFAO,NBFAO),ACRCY
      CHARACTER * 4 IREWR
      DIMENSION I30(200)
      OUT=6
C
C     WRITE(OUT,701) ACRCY
  701 FORMAT (1X,'THRESHOLD FOR ELIMINATION OF VECTOR ELEMENTS = ',
     #1PE10.2,/)
      CALL ZERO(D,NBF**2)
C
C     ----- OPEN TAPE30 AND GET CONSTANTS AND POINTER TO CALC ----
C
      IT30=30
      CALL RFILE(IT30)
      CALL WREADW(IT30,I30,200,101,JUNK)
      MPOINT=I30(2)
      MCONST=I30(3)
      MCALCS=I30(4)
      NCALCS=I30(5)
      MSFRU = I30(18)
      NUM = I30(22)
C GCINTS
      NUM=MSFRU
      NSYMHF=I30(41)
      MXCF=I30(42)
C
      JUNK=101+MCONST+MPOINT
      CALL WREADW(IT30,I30,MCALCS,JUNK,JUNK)
C
      LOCCAL=I30(NCALCS)
      JUNK=LOCCAL+60
      CALL WREADW(IT30,LOCVEC,1,JUNK,JUNK)
C
C     ----- READ OR WRITE VECTOR -----
C
      IF(IREWR.EQ.'WRIT')THEN
      CALL WWRITW(IT30,WVEC,INTOWP(NBF*NBF),LOCVEC,LOCVEC)
      CALL RCLOSE(IT30,3)
      WRITE(*,*)'WRITING NEW MO VECTOR IN FILE 30'
      CALL MATOUT(WVEC,NBFAO,NBF,NBFAO,NBF,6)
      RETURN
      ENDIF
      CALL WREADW(IT30,XVEC,INTOWP(MXCF),LOCVEC,LOCVEC)
COUT  WRITE(*,*)'EIGENVECTOR FROM TAPE 30'
COUT  CALL MATOUT(XVEC,NBFAO,NBF,NBFAO,NBF,6)
C
      LOCVEC=LOCVEC+INTOWP(NBF)+NSYMHF
      CALL WREADW(IT30,NLAMDA,NSYMHF,LOCVEC,LOCVEC)
C
C     ----- TRANSFER VECTOR TO D MATRIX -----
C
      DO 1 I=1,MXCF
           IF (ABS(XVEC(I)).LT.ACRCY) XVEC(I)=0.0D+00
    1 CONTINUE
      IOF=0
      IJ=0
      DO 10 ISYM=1,NSYMHF
           N=NLAMDA(ISYM)
           DO 9 J=1,N
                DO 8 I=1,N
                     IJ=IJ+1
                     D(IOF+I,IOF+J)=XVEC(IJ)
    8           CONTINUE
    9      CONTINUE
           IOF=IOF+N
   10 CONTINUE
C
      JUNK=101+MCONST
      CALL WREADW(IT30,I30,MPOINT,JUNK,JUNK)
C
      LAOTSO=I30(29)
      CALL WREADW(IT30,XVEC,INTOWP(NUM*MSFRU),LAOTSO,LAOTSO)
CGES  WRITE(*,*) ' SO TO AO TRANSFORMATION MATRIX '
CGES  CALL MATOUT(XVEC,NBFAO,NBF,NBFAO,NBF,6)
C
      CALL ZERO(WVEC,NBFAO*NBFAO)
      CALL MXMB(XVEC,1,NBFAO,D,1,NBF,WVEC,1,NBFAO,NBFAO,NBF,NBF)
CGES  WRITE(*,*) ' AO TO MO EIGENVECTOR FROM TAPE 30 '
CGES  CALL MATOUT(WVEC,NBFAO,NBF,NBFAO,NBF,6)
C
      DO 20 IBF = 1,NBF
      NIBF = IOUT(IBF)
      DO 30 IAO = 1,NBFAO
      D(IAO,NIBF) = WVEC(IAO,IBF)
   30 CONTINUE
   20 CONTINUE
C
COUT  WRITE(*,*) ' AO TO MO EIGENVECTOR FROM TAPE 30 '
COUT  CALL MATOUT(D,NBFAO,NBF,NBFAO,NBF,6)
      CALL RCLOSE(IT30,3)
      RETURN
      END
C
      SUBROUTINE DIISD (T1O,T1N,T2,S,NO,NV,NDIMT2,NIT,IT,IECORR,
     .                  EPSI,NGO,NDIIS,MINDIM,MAXDIM,
     .                  CC,BB,ITAP98,ITAP99,ITC,BB2)
      IMPLICIT INTEGER (A-Z)
      REAL * 16 DET
      REAL*8 BB,EPS,CC,ONE,XM,XMAX,XEN,XON,XLAM,BB2
      REAL*8 T1N,T1O,S,T2,A0,XFAC,XADD
      DIMENSION CC(MAXDIM),BB(MAXDIM+1,MAXDIM+2),BB2(MAXDIM+1,MAXDIM+2)
      DIMENSION T1O(NO,NV),T1N(NO,NV),T2(NDIMT2),S(NDIMT2)
C
      A0 = 0.0D0
      ONE=1.D0
      EPS=10.D0 **(-EPSI)
      IECORR=0
C
C     DIIS EXTRAPOLATION
C
      IFLAG=0
      NCOUNT=0
      NCOUNT=NCOUNT+1
      IT=IT+1
      IF(IT.GT.MAXDIM) IT = MAXDIM
      ITC = ITC + 1
      IF(ITC.GT.MAXDIM) ITC = 1
C
      DO 2050 I=1,NO
      DO 2051 A=1,NV
      T1O(I,A) = T1N(I,A) - T1O(I,A)
 2051 CONTINUE
 2050 CONTINUE
C
      PT1 = (ITC-1)*INTOWP(NO*NV + NDIMT2) + 1
      PT2 = PT1 + INTOWP(NO*NV)
      CALL WWRITW(ITAP99,T1O,INTOWP(NO*NV),PT1,JUNK)
      CALL WWRITW(ITAP98,T1N,INTOWP(NO*NV),PT1,JUNK)
C
      DO 2060 UVBG=1,NDIMT2
      T2(UVBG) = S(UVBG) - T2(UVBG)
 2060 CONTINUE
C
      CALL WWRITW(ITAP99,T2,INTOWP(NDIMT2),PT2,JUNK)
      CALL WWRITW(ITAP98,S,INTOWP(NDIMT2),PT2,JUNK)
C
      DO 2090 N=1,IT
C
      PT1 = (N-1)*INTOWP(NO*NV + NDIMT2) + 1
      PT2 = PT1 + INTOWP(NO*NV)
      CALL WREADW(ITAP99,T1N,INTOWP(NO*NV),PT1,JUNK)
      CALL WREADW(ITAP99,S,INTOWP(NDIMT2),PT2,JUNK)
C
      BB2(N,ITC) = A0
C
      DO 2070 I=1,NO
      DO 2071 A=1,NV
      BB2(N,ITC) = BB2(N,ITC) + T1N(I,A)*T1O(I,A)
 2071 CONTINUE
 2070 CONTINUE
C
      DO 2080 UVBG=1,NDIMT2
      BB2(N,ITC) = BB2(N,ITC) + S(UVBG)*T2(UVBG)
 2080 CONTINUE
      BB2(ITC,N) = BB2(N,ITC)
 2090 CONTINUE
C
C  TRANSFER INTO THE BB ARRAY
C
      DO 10 N = 1,IT
      DO 20 M = 1,N-1
      BB(N,M) = BB2(N,M)
      BB(M,N) = BB2(M,N)
  20  CONTINUE
      BB(N,N) = BB2(N,N)
  10  CONTINUE
C
C     FIND THE MAXIMUM AND SCALE
      XM=DABS(BB(1,1))
      DO 2094 N=1,IT
      DO 2094 M=1,N
      XFAC=DABS(BB(N,M))
      XMAX=DMAX1(XM,XFAC)
      XM=XMAX
 2094 CONTINUE
      DO 2095 N=1,IT
      DO 2095 M=1,IT
 2095 BB(N,M)=BB(N,M)/XM
      IT1=IT+1
      IT2=IT+2
      DO 2100 N=1,IT
      BB(N,IT1)=-ONE
 2100 BB(IT1,N)=-ONE
      BB(IT1,IT1)= A0
      DO 2110 N=1,IT
 2110 BB(N,IT2)= A0
      BB(IT1,IT2)=-ONE
      CALL FLINQ(BB,9,IT1,1,DET)
C     WRITE(6,*)'DET=',DET
C     WRITE(4,*)'DET=',DET
      XADD=A0
      DO 2120 N=1,IT
      CC(N)= BB(N,IT2)
      XADD=XADD+CC(N)
C     WRITE(6,*)'N=',N,'CC(N)=',CC(N)
 2120 CONTINUE
      XEN=BB(IT1,IT2)*XM
      XEN=DSQRT(XEN)
      XON=A0
C     WRITE(6,*)'CSUM=',XADD
C     WRITE(4,*)'CSUM=',XADD
COUT  WRITE(6,*)'  XEN = ',XEN,'  XON = ',XON
C
      CALL ZERO(T1N,NO*NV)
      CALL ZERO(S,NDIMT2)
C
      DO 2200 N=1,IT
C
      PT1 = (N-1)*INTOWP(NO*NV + NDIMT2) + 1
      PT2 = PT1 + INTOWP(NO*NV)
      CALL WREADW(ITAP98,T1O,INTOWP(NO*NV),PT1,JUNK)
      CALL WREADW(ITAP98,T2,INTOWP(NDIMT2),PT2,JUNK)
C
      DO 2170 I=1,NO
      DO 2171 A=1,NV
      T1N(I,A) = T1N(I,A) + CC(N)*T1O(I,A)
 2171 CONTINUE
 2170 CONTINUE
C
      DO 2180 UVBG=1,NDIMT2
      S(UVBG) = S(UVBG) + CC(N)*T2(UVBG)
 2180 CONTINUE
C
 2200 CONTINUE
      IFLAG=1
      IECORR=1
 2400 CONTINUE
      RETURN
      END
C---------------------------------------------------------------------
      SUBROUTINE PLUS9(II,IPQ,IPL,ITR,ITRO,ITRV,ITRT,ITV,
     .                EIG,ORBSYM,FLOV,TOFF,TADD,ZLX,T2O,T2,
     .                CCC,BBB,BB2,FZO,FZV,
     .                FOCK,FFO,FFV,SFO,SFV,DVEC,XVEC,WVEC,XARR,IOUT,
     .                    AR1,AR2,AR3,AR4,AR5,AR6,JAR,KAR,GGO,GGV,
     .                T1O,T1,AUX1,AUX2,AUX3,XVAL,VVAL,VPAL,
     .                SUX1,SUX2,SUX3,
     .                AOFF,AADD,BOFF,BADD,COFF,CADD,
     .                DOFF,DADD,EOFF,EADD,FOFF,FADD,
     .                BUF,IBUF,
     .                AIN,BIN,CIN,DIN,EIN,FIN,BUFINT,NIT)
      IMPLICIT INTEGER (A-Z)
      COMMON/INTS/NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO
      COMMON/PARAM/ ESCF,ENUC,NXE,
     .              EPSI,NGO,NMIN ,MINDIM,MAXDIM,MAXIT,CONVI,
     .              NO,NV,NT,NOV,NM,NV2,NT2,IMX,NONO,NVNV,NDIMT2,NTIN,
     .              NSYMHF,NIRRED,MAXOO,MAXVV,MAXOV,
     .               LEVEL,INTBUF,DIISFL,ITAP69,ITAP98,ITAP99,RSTR
      CHARACTER*4 OPTION,RSTR
      REAL*8    GOO,GVV,GOV,HOV,LOV,LVO,AX,BX,CX,DX,        XE,
     .          XEO,CONV,II
      REAL*8 FOCK(NT2),FFO(NO,NO),FFV(NV,NV),SFO(NO*NO),SFV(NV*NV)
      REAL*8 EREF,ESCF,ENUC,NXE,NXEO
      REAL*8 DVEC(NT*NT),XVEC(NT*NT),WVEC(NT*NT),XARR(NT)
      REAL*8 VAL,VAL1,VAL2,VAL3,DELTA,VALA,PAL,DELT,T1NORM,
     .       INT1,INT2,XES,TFAC1,TFAC2,XEOS,VALJ,VALK,
     .       VVAL(NT), VPAL(NT), AUX3(NV,NV),SUX3(NV*NV),
     .       TMP, TMV
C
      REAL*8 AR1(MAXOV,MAXOV),AR2(MAXOV,MAXOV),
     .       AR3(MAXVV,MAXOO),AR4(MAXVV,MAXOO),
     .       AR5(MAXOO,MAXVV),AR6(MAXOO,MAXVV),
     .       JAR(NV*NO),KAR(NV*NO),GGO(NO,NO),GGV(NV,NV),
     .       T1O(NO,NV),T1(NO,NV),AUX1(NV,NO),AUX2(NV,NO),XVAL(NT),
     .       SUX1(NV*NO),SUX2(NV*NO),BUFINT(NV*NV)
      REAL*8 EIG(NT),BUF(INTBUF)
C     REAL*8 AIN(NSGOO),BIN(NSGVV),CIN(NSGOV),
      REAL*8 AIN(NSGOO),BIN(NV,NV),CIN(NSGOV),
     .       DIN(NSHOV),EIN(NSLOV),FIN(NSLVO)
      REAL*8 T2O(NDIMT2),T2(NDIMT2)
      INTEGER IBUF(INTBUF*2),NAB(8)
      INTEGER AOFF(1),BOFF(1),COFF(1),DOFF(1),EOFF(1),FOFF(1),
     .        AADD(1),BADD(1),CADD(1),DADD(1),EADD(1),FADD(1)
      REAL*8  CCC(MAXDIM),BBB(MAXDIM+1,MAXDIM+2),
     .                    BB2(MAXDIM+1,MAXDIM+2)
      INTEGER IPQ(NT2),IPL(NT),ITR(NOV),ITRO(IMX),
     .        ITRV(NM),ITRT(NM),ITV(NV),
     .        TOFF(NO,NO,2),TADD(NV,NV),ZLX(NV,NV),
     .        ORBSYM(NT),FLOV(NIRRED,4),FZO(NO),FZV(NV),IOUT(NT)
C
      NIT=0
      CONV=10.D0**(-CONVI)
      NXEO=0.0D0
C
      IT=0
      IFLAG=0
      NCOUNT=0
C
C     READ SYMMETRY-PACKED INTEGRALS
C
      CALL RDINTS(60,AIN,NSGOO,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            AOFF,AADD,NONO,NONO,ITR,NOV,ITR,NOV)
C     CALL RDINTS(61,BIN,NSGVV,1,6,BUF,IBUF,INTBUF,
C    .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
C    .            BOFF,BADD,NVNV,NVNV,ITV, NV,ITV, NV)
      CALL RDINTS(62,CIN,NSGOV,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            COFF,CADD,NVNV,NONO,ITV, NV ,ITR, NOV)
      CALL RDINTS(63,DIN,NSHOV,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            DOFF,DADD,NM  ,NM  ,ITR, NOV,ITR, NOV)
      CALL RDINTS(64,EIN,NSLOV,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            EOFF,EADD,NM  ,NONO,ITR, NOV,ITR, NOV)
      CALL RDINTS(65,FIN,NSLVO,1,6,BUF,IBUF,INTBUF,
     .            IPQ,NT2,ITR,NV,ITRO,IMX,ITRV,NM,NO,FZO,FZV,
     .            FOFF,FADD,NVNV,NM  ,ITV, NV,ITR, NOV)
C
C     FOCK MATRIX IN MO BASIS
C
      CALL LOCATE (5,'# MONGO ###',IERR)
      IF(IERR.NE.0) THEN
      WRITE ( 6,6007)
      WRITE ( 4,6007)
 6007 FORMAT(//,2X,' NO INPUT TO MONGO HAS BEEN FOUND.',/,
     .          2X,' DIAGONAL FOCK MATRIX IS ASSUMED. ',//)
      FLAG=0
      ELSE
      READ(5,6004)FLAG
 6004 FORMAT(I5)
      END IF
      CALL ZERO (FOCK,NT2)
C
C     FLAG=0 (DEFAULT) USE MO ENERGIES IN THE FOCK MATRIX
C
      IF (FLAG.EQ.0) THEN
      EREF=ESCF
      DO 42 I=1,NT
      IJ=IPQ(I)+I
   42 FOCK(IJ)=EIG(I)
      ELSE
      CALL ZERO (FOCK,NT2)
      WRITE(*,*)'NON-DIAGONAL FOCK MATRIX IS CONSTRUCTED '
      CALL FOCKI (DVEC,IOUT,XVEC,WVEC,XARR,NT,Z,FLAG,FOCK,EREF,ENUC,
     .                 II,NTIN,BUF,IBUF,INTBUF,
     .       NSGOO,NSGOV,NSHOV,NSLOV,IPQ,ITR,ITV,ITRO,ITRV,FZO,FZV,
     .            NT2,NO,NV,NM,IMX,NONO,NVNV,NOV)
      ESCF=EREF
      ENDIF
C
C     SET INITIAL VALUES OF T1 AND T2
C
      IF(RSTR.EQ.'YES ')THEN
      CALL RFILE(ITAP69)
      CALL SREAD(ITAP69,JU,1)
      CALL SREAD(ITAP69,JU,1)
      CALL SREAD(ITAP69,T1,INTOWP(NO*NV))
      CALL SREAD(ITAP69,T2,INTOWP(NDIMT2))
      CALL RCLOSE(ITAP69,3)
C
      ELSE
C
      CALL ZERO(T1,NO*NV)
      DO 13496 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13496
      ISYM=ORBSYM(I)
      IY=IPQ(I)+I
      DO 13486 J=1,NO
      IF(FZO(J).EQ.1)GO TO 13486
      JSYM=ORBSYM(J)
      JISYM=IEOR(JSYM,ISYM)
      JJ=IPQ(J)+J
      DO 13476 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13476
      ASYM=ORBSYM(A+NO)
      BSYM=IEOR(ASYM,JISYM)+1
      FB=FLOV(BSYM,3)-NO
      LB=FLOV(BSYM,4)-NO
      AA=IPQ(A+NO)+A+NO
      IA=ITR(A)+I
      IF(LB.GT.A)LB=A
      DO 13466 B=FB,LB
      BY=IPQ(B+NO)+B+NO
      JB=ITR(B)+J
      IAJB=DOFF(MAX0(IA,JB))+DADD(MIN0(IA,JB))
      IJAB=TOFF(I,J,1)+TADD(A,B)
      VAL=FOCK(IY)+FOCK(JJ)-FOCK(AA)-FOCK(BY)
      T2(IJAB)=DIN(IAJB)/VAL
13466 CONTINUE
13476 CONTINUE
13486 CONTINUE
13496 CONTINUE
      ENDIF
C
C     MP2 CORRELATION ENERGY
C
      CALL PCORR(    T2,T1,DIN,NXE,TOFF,TADD,IPQ,ORBSYM,FLOV,
     .           NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .           DOFF,DADD,NM,ITR)
C
   50 CONTINUE
C
      NIT=NIT+1
C
C     TRANSFER T1 TO BEGIN NEW ITERATION
C
      DO 90 U=1,NO
      USYM=ORBSYM(U)
      FBE=FLOV(USYM+1,3)-NO
      LBE=FLOV(USYM+1,4)-NO
      DO 90 BE=FBE,LBE
      T1O(U,BE)=T1(U,BE)
   90 CONTINUE
C
C     TRANSFER T2
C
      DO 33491 I=1,NDIMT2
      T2O(I)=T2(I)
33491 CONTINUE
C
      NXEO=NXE
      CALL ZERO(T1,NO*NV)
      CALL ZERO(T2,NDIMT2)
      CALL TIMIT(4,6)
C
C     GO INTERMEDIATE
C
      CALL ZERO(GGO,NO*NO)
      DO 12190 U=1,NO
      IF(FZO(U).EQ.1)GO TO 12190
      USYM=ORBSYM(U)
      DO 12180 I=1,NO
      IF(FZO(I).EQ.1)GO TO 12180
      ISYM=ORBSYM(I)
      IF(USYM.NE.ISYM)GO TO 12180
      VAL=0.0D0
      IU=ITR(MAX0(I,U))+MIN0(I,U)
CFOK  IF(U.NE.I)VAL=VAL+FOCK(UI)
      GGO(U,I)=VAL
12180 CONTINUE
12190 CONTINUE
C
C     GV INTERMEDIATE
C
      CALL ZERO(GGV,NV*NV)
      DO 12290 A=1,NV
      IF(FZV(A).EQ.1)GO TO 12290
      ASYM=ORBSYM(A+NO)
      DO 12280 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 12280
      BESYM=ORBSYM(BE+NO)
      IF(BESYM.NE.ASYM)GO TO 12280
      VAL=0.0D0
      BEA=ITV(MAX0(A,BE))+MIN0(A,BE)
CFOK  IF(A.NE.BE)VAL=VAL+FOCK(BEA)
      GGV(BE,A)=VAL
12280 CONTINUE
12290 CONTINUE
C
C     B*TAU TERM
C
      ITAP71=71
      CALL RFILE(ITAP71)
      POINT=1
      DO 14092 TSYM=1,NIRRED
        LAB=0
        DO 7623 A=1,NV
C       IF(FZV(A).EQ.1)GO TO 7623
        ASYM=ORBSYM(A+NO)
C       BSYM=IEOR(ASYM,TSYM-1)
C       FB=FLOV(BSYM+1,3)-NO
C       LB=FLOV(BSYM+1,4)-NO
C       DO 7621 B=FB,LB
        DO 7621 B=1,NV
        BSYM=ORBSYM(B+NO)
        ABSYM=IEOR(ASYM,BSYM)
        IF(ABSYM.NE.TSYM-1)GO TO 7621
        LAB=LAB+1
 7621   CONTINUE
 7623   CONTINUE
        NAB(TSYM)=LAB
C       WRITE(*,*)'TSYM',TSYM, ' NAB(TSYM)=',NAB(TSYM)
C
      XAB=0
      DO 19490 A=1,NV
      IF(FZV(A).EQ.1)GO TO 19490
      ASYM=ORBSYM(A+NO)
      DO 19480 B=1,A
      IF(FZV(B).EQ.1)GO TO 19480
      BSYM=ORBSYM(B+NO)
      BASYM=IEOR(BSYM,ASYM)
      IF(BASYM.NE.TSYM-1)GO TO 19480
      XAB=XAB+1
      XIJ=0
      DO 19470 I=1,NO
      IF(FZO(I).EQ.1)GO TO 19470
      ISYM=ORBSYM(I)
      JSYM=IEOR(ISYM,BASYM)+1
      FJ=FLOV(JSYM,1)
      LJ=FLOV(JSYM,2)
      IF(LJ.GT.I)LJ=I
      DO 19460 J=FJ,LJ
      XIJ=XIJ+1
      IJAB=TOFF(I,J,1)+TADD(A,B)
      JIAB=TOFF(J,I,1)+TADD(A,B)
      VAL1=T2O(IJAB)
      VAL2=T2O(JIAB)
      AR3(XAB,XIJ)=VAL1+VAL2
      AR4(XAB,XIJ)=VAL1-VAL2
19460 CONTINUE
19470 CONTINUE
19480 CONTINUE
19490 CONTINUE
      LIMO=XIJ
      LIMV=XAB
C
      DO 14091 BE=1,NV
C     IF(FZV(BE).EQ.1)GO TO 14091
      BESYM=ORBSYM(BE+NO)
      DO 14081 GA=1,BE
C     IF(FZV(GA).EQ.1)GO TO 14081
      GASYM=ORBSYM(GA+NO)
      BEGAS=IEOR(GASYM,BESYM)
      IF(BEGAS.NE.TSYM-1)GO TO 14081
        LAB=NAB(TSYM)
        IF(FZV(BE).EQ.1.OR.FZV(GA).EQ.1)THEN
        POINT=POINT+INTOWP(LAB)
        GO TO 14081
        ENDIF
        CALL WREADW(ITAP71,BUFINT,INTOWP(LAB),POINT,POINT)
C       WRITE(*,*)'PAIR READ'
        NADD=0
        DO 14925 A=1,NV
C         IF(FZV(A).EQ.1)GO TO 14925
          ASYM=ORBSYM(A+NO)
C         BSYM=IEOR(ASYM,BEGAS)
C         FB=FLOV(BSYM+1,3)-NO
C         LB=FLOV(BSYM+1,4)-NO
C         DO 14920 B=FB,LB
          DO 14920 B=1,NV
          BSYM=ORBSYM(B+NO)
          ABSYM=IEOR(ASYM,BSYM)
          IF(ABSYM.NE.TSYM-1)GO TO 14920
             NADD=NADD+1
             BIN(A,B)=BUFINT(NADD)
C            WRITE(*,*)BE,A,GA,B,BIN(A,B)
14920        CONTINUE
14925     CONTINUE
C
          XBA=0
          DO 14025 A=1,NV
          IF(FZV(A).EQ.1)GO TO 14025
          ASYM=ORBSYM(A+NO)
          BEA=ITV(MAX0(BE,A)   )+MIN0(BE,A)
          GAA=ITV(MAX0(GA,A)   )+MIN0(GA,A)
          BSYM=IEOR(ASYM,BEGAS)
          FB=FLOV(BSYM+1,3)-NO
          LB=FLOV(BSYM+1,4)-NO
          IF(LB.GT. A)LB = A
             DO 14020 B=FB,LB
             XBA=XBA+1
             GAB=ITV(MAX0(GA,B)   )+MIN0(GA,B)
             BEB=ITV(MAX0(BE,B)   )+MIN0(BE,B)
C            BEAGAB=BOFF(BEA)+BADD(GAB)
C            BEBGAA=BOFF(MAX0(BEB,GAA))+BADD(MIN0(BEB,GAA))
C            TMP=BIN(BEAGAB)+BIN(BEBGAA)
C            TMV=BIN(BEAGAB)-BIN(BEBGAA)
             TMP=BIN(A,B)+BIN(B,A)
             TMV=BIN(A,B)-BIN(B,A)
C$
C         XBA=0
C         DO 14025 A=1,NV
C     IF(FZV(A).EQ.1)GO TO 14025
C         ASYM=ORBSYM(A+NO)
C         BEA=ITV(MAX0(BE,A)   )+MIN0(BE,A)
C         GAA=ITV(MAX0(GA,A)   )+MIN0(GA,A)
C         BSYM=IEOR(ASYM,BEGAS)
C         FB=FLOV(BSYM+1,3)-NO
C         LB=FLOV(BSYM+1,4)-NO
C         IF(LB.GT. A)LB = A
C            DO 14020 B=FB,LB
C            XBA=XBA+1
C            GAB=ITV(MAX0(GA,B)   )+MIN0(GA,B)
C            BEB=ITV(MAX0(BE,B)   )+MIN0(BE,B)
C            BEAGAB=BOFF(     BEA     )+BADD(         GAB )
C            BEBGAA=BOFF(MAX0(BEB,GAA))+BADD(MIN0(BEB,GAA))
C            TMP=BIN(BEAGAB)+BIN(BEBGAA)
C            TMV=BIN(BEAGAB)-BIN(BEBGAA)
             SFV(XBA)= TMP*0.5D0
            SUX3(XBA)= TMV*0.5D0
14020        CONTINUE
             IF(ASYM.EQ.BSYM)SFV(XBA)=SFV(XBA)*0.5D0
14025 CONTINUE
      DO 14077 UV=1,LIMO
      TMP = 0.0D0
      TMV = 0.0D0
      DO 14029 AB=1,LIMV
      TMP=TMP+ SFV(AB)* AR3(AB,UV)
      TMV=TMV+SUX3(AB)* AR4(AB,UV)
14029 CONTINUE
      SUX1(UV)=TMP
      SUX2(UV)=TMV
14077 CONTINUE
      UV=0
      DO 14068 U=1,NO
      IF(FZO(U).EQ.1)GO TO 14068
      USYM=ORBSYM(U)
      VSYM=IEOR(USYM,BEGAS)+1
      SV=FLOV(VSYM,1)
      LV=FLOV(VSYM,2)
      IF(LV.GT.U )LV=U
      DO 14063 V=SV,LV
      UV=UV+1
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+SUX1(UV)+SUX2(UV)
      IF(U.NE.V)THEN
      VUBEGA=TOFF(V,U,1)+TADD(BE,GA)
      T2(VUBEGA)=T2(VUBEGA)+SUX1(UV)-SUX2(UV)
      ENDIF
14063 CONTINUE
14068 CONTINUE
14081 CONTINUE
14091 CONTINUE
14092 CONTINUE
      CALL RCLOSE (ITAP71,3)
C
C     NEW J&K LOOPS
C
      DO 16695 TSYM=1,NIRRED
      XVG=0
      DO 16790 V=1,NO
      IF(FZO(V).EQ.1)GO TO 16790
      VSYM=ORBSYM(V)
      DO 16770 GA=1,NV
      IF(FZV(GA).EQ.1)GO TO 16770
      GASYM=ORBSYM(GA+NO)
      VGASYM=IEOR(VSYM,GASYM)
      IF(VGASYM.NE.TSYM-1)GO TO 16770
      XVG=XVG+1
      XAI=0
      DO 16750 I=1,NO
      IF(FZO(I).EQ.1)GO TO 16750
      ISYM=ORBSYM(I)
      ASYM=IEOR(ISYM,VGASYM)+1
      FA=FLOV(ASYM,3)-NO
      LA=FLOV(ASYM,4)-NO
      DO 16730 A=FA,LA
      XAI=XAI+1
      ZL=ZLX(A,GA)
      IVAGA=TOFF(I,V,ZL)+TADD(A,GA)
      VIAGA=TOFF(V,I,ZL)+TADD(A,GA)
      AR1(XAI,XVG)= T2O(IVAGA)+T2O(IVAGA)-T2O(VIAGA)
      AR2(XAI,XVG)=-T2O(VIAGA)
16730 CONTINUE
16750 CONTINUE
16770 CONTINUE
16790 CONTINUE
      LIM=XVG
C
      DO 16690 U=1,NO
      IF(FZO(U).EQ.1)GO TO 16690
      USYM=ORBSYM(U)
      DO 16680 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 16680
      BESYM=ORBSYM(BE+NO)
      BEUSYM=IEOR(BESYM,USYM)
      IF(BEUSYM.NE.TSYM-1)GO TO 16680
C
      BEU=ITR(BE)+U
      XAI=0
      DO 12490 I=1,NO
      IF(FZO(I).EQ.1)GO TO 12490
      ISYM=ORBSYM(I)
      ASYM=IEOR(ISYM,BEUSYM)+1
      FA=FLOV(ASYM,3)-NO
      LA=FLOV(ASYM,4)-NO
      IU=ITR(MAX0(I,U))+MIN0(I,U)
      DO 12470 A=FA,LA
      IA=ITR(A)+I
      BEUIA=DOFF(MAX0(BEU,IA))+DADD(MIN0(BEU,IA))
      VALJ=DIN(BEUIA)
      BEA=ITV(MAX0(BE,A))+MIN0(BE,A)
      BEAIU=COFF(BEA)+CADD(IU)
      VALK=CIN(BEAIU)
      XAI=XAI+1
      JAR(XAI)=VALJ+VALJ-VALK
      KAR(XAI)=VALK
12470 CONTINUE
12490 CONTINUE
C
      DO 15661 VGA=1,LIM
      VAL1=0.0D0
      VAL2=0.0D0
      DO 15391 AI=1,LIM
      VAL1=VAL1+JAR(AI)*AR1(AI,VGA)
      VAL2=VAL2+KAR(AI)*AR2(AI,VGA)
15391 CONTINUE
      SUX1(VGA)=VAL1*0.5D0
      SUX2(VGA)=VAL2*0.5D0
15661 CONTINUE
C
      VGA=0
      DO 15660 V=1,NO
      IF(FZO(V).EQ.1)GO TO 15660
      VSYM=ORBSYM(V)
      GASYM=IEOR(VSYM,BEUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      DO 15410  GA=FGA,LGA
      VGA=VGA+1
      ZL=ZLX(BE,GA)
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+SUX1(VGA)+SUX2(VGA)
      VUBEGA=TOFF(V,U,1)+TADD(BE,GA)
      T2(VUBEGA)=T2(VUBEGA)+SUX2(VGA)+SUX2(VGA)
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+SUX1(VGA)+SUX2(VGA)
      UVGABE=TOFF(U,V,1)+TADD(GA,BE)
      T2(UVGABE)=T2(UVGABE)+SUX2(VGA)+SUX2(VGA)
      ENDIF
15410 CONTINUE
15660 CONTINUE
C
16680 CONTINUE
16690 CONTINUE
16695 CONTINUE
C
C     A*TAU TERM
C
      DO 12392 TSYM=1,NIRRED
      XAB=0
      DO 33590 A=1,NV
      IF(FZV(A).EQ.1)GO TO 33590
      ASYM=ORBSYM(A+NO)
      DO 33580 B=1,A
      IF(FZV(B).EQ.1)GO TO 33580
      BSYM=ORBSYM(B+NO)
      ABSYM=IEOR(ASYM,BSYM)
      IF(ABSYM.NE.TSYM-1)GO TO 33580
      XAB=XAB+1
      XIJ=0
      DO 33570 I=1,NO
      IF(FZO(I).EQ.1)GO TO 33570
      ISYM=ORBSYM(I)
      JSYM=IEOR(ISYM,ABSYM)+1
      FJ=FLOV(JSYM,1)
      LJ=FLOV(JSYM,2)
      IF(LJ.GT.I)LJ=I
      DO 33560 J=FJ,LJ
      XIJ=XIJ+1
      IJAB=TOFF(I,J,1)+TADD(A,B)
      JIAB=TOFF(J,I,1)+TADD(A,B)
      VAL1=T2O(IJAB)
      VAL2=T2O(JIAB)
      AR5(XIJ,XAB)=VAL1+VAL2
      AR6(XIJ,XAB)=VAL1-VAL2
33560 CONTINUE
33570 CONTINUE
33580 CONTINUE
33590 CONTINUE
      LIMO=XIJ
      LIMV=XAB
C
      DO 12390 U=1,NO
      IF(FZO(U).EQ.1)GO TO 12390
      USYM=ORBSYM(U)
      DO 12380 V=1,U
      IF(FZO(V).EQ.1)GO TO 12380
      VSYM=ORBSYM(V)
      VUSYM=IEOR(VSYM,USYM)
      IF(VUSYM.NE.TSYM-1)GO TO 12380
C
      JI=0
      DO 12340 I=1,NO
      IF(FZO(I).EQ.1)GO TO 12340
      ISYM=ORBSYM(I)
      IU=ITR(MAX0(I,U))+MIN0(I,U)
      IV=ITR(MAX0(I,V))+MIN0(I,V)
      JSYM=IEOR(ISYM,VUSYM)
      FJ=FLOV(JSYM+1,1)
      LJ=FLOV(JSYM+1,2)
      IF(LJ.GT.I)LJ=I
      DO 12330 J=FJ,LJ
      JI=JI+1
      JV=ITR(MAX0(J,V))+MIN0(J,V)
      JU=ITR(MAX0(J,U))+MIN0(J,U)
      IUJV=AOFF(MAX0(IU,JV))+AADD(MIN0(IU,JV))
      IVJU=AOFF(MAX0(IV,JU))+AADD(MIN0(IV,JU))
      TMP=AIN(IUJV)+AIN(IVJU)
      TMV=AIN(IUJV)-AIN(IVJU)
       SFO(JI)= TMP*0.5D0
      SUX1(JI)= TMV*0.5D0
12330 CONTINUE
      IF(ISYM.EQ.JSYM) SFO(JI)= SFO(JI)*0.5D0
12340 CONTINUE
C
      DO 14370 BEGA=1,LIMV
      TMP=0.0D0
      TMV=0.0D0
      DO 14350 IJ=1,LIMO
      TMP=TMP+ SFO(IJ)* AR5(IJ,BEGA)
      TMV=TMV+SUX1(IJ)* AR6(IJ,BEGA)
14350 CONTINUE
      SUX3(BEGA)=TMP
       SFV(BEGA)=TMV
14370 CONTINUE
C
      BEGA=0
      DO 52374 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 52374
      BESYM=ORBSYM(BE+NO)
      GASYM=IEOR(BESYM,VUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      IF(LGA.GT.BE)LGA=BE
      DO 52364 GA=FGA,LGA
      BEGA=BEGA+1
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+SUX3(BEGA)+SFV(BEGA)
      IF(U.NE.V)THEN
      VUBEGA=TOFF(V,U,1)+TADD(BE,GA)
      T2(VUBEGA)=T2(VUBEGA)+SUX3(BEGA)-SFV(BEGA)
      ENDIF
52364 CONTINUE
52374 CONTINUE
C
12380 CONTINUE
12390 CONTINUE
12392 CONTINUE
C
C     ADD D INTEGRAL
C
      DO 13091 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13091
      USYM=ORBSYM(U)
      DO 13081 V=1,NO
      IF(FZO(V).EQ.1)GO TO 13081
      VSYM=ORBSYM(V)
      VUSYM=IEOR(VSYM,USYM)
      DO 13071 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13071
      BESYM=ORBSYM(BE+NO)
      GASYM=IEOR(BESYM,VUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      BEU=ITR(BE)+U
      IF(LGA.GT.BE)LGA=BE
      DO 13061 GA=FGA,LGA
      GAV=ITR(GA)+V
      BEUGAV=DOFF(MAX0(BEU,GAV))+DADD(MIN0(BEU,GAV))
      VVAL(GA)=DIN(BEUGAV)
13061 continue
      DO 13062 GA=FGA,LGA
      TMP = VVAL(GA)
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      VAL=T2O(UVBEGA)*NXE
      T2(UVBEGA)=T2(UVBEGA)+TMP-VAL
13062 CONTINUE
13063 CONTINUE
13071 CONTINUE
13081 CONTINUE
13091 CONTINUE
C
C     E INT * T1
C
      DO 13491 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13491
      USYM=ORBSYM(U)
      DO 13481 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13481
      BESYM=ORBSYM(BE+NO)
      BEUSYM=IEOR(BESYM,USYM)
      BEU=ITR(BE)+U
      DO 13441 V=1,NO
      IF(FZO(V).EQ.1)GO TO 13441
      VSYM=ORBSYM(V)
      GASYM=IEOR(VSYM,BEUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      FI=FLOV(GASYM,1)
      LI=FLOV(GASYM,2)
      DO 13443 GA=FGA,LGA
      XVAL(GA) = 0.D0
13443 CONTINUE
      DO 13431 I=FI,LI
      IV=ITR(MAX0(I,V))+MIN0(I,V)
      BEUIV=EOFF(BEU)+EADD(IV)
      TMP = -EIN(BEUIV)
      DO 13421 GA=FGA,LGA
      TMV = XVAL(GA)
      TMV = TMV     +  TMP    *T1O(I,GA)
      xval(ga) = tmv
13421 CONTINUE
13431 CONTINUE
      DO 13435 GA=FGA,LGA
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+XVAL(GA)
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+XVAL(GA)
      ENDIF
13435 CONTINUE
13441 CONTINUE
13481 CONTINUE
13491 CONTINUE
C
C     GGO * T2
C
C     DO 25791 BE=1,NV
C     BESYM=ORBSYM(BE+NO)
C     DO 25781 GA=1,NV
C     GASYM=ORBSYM(GA+NO)
C     BEGAS=IEOR(BESYM,GASYM)
C     ZL=ZLX(BE,GA)
C     DO 25721  V=1,NO
C     VSYM=ORBSYM(V)
C     ISYM=IEOR(VSYM,BEGAS)+1
C     FI=FLOV(ISYM,1)
C     LI=FLOV(ISYM,2)
C     DO 25711 I=FI,LI
C     IVBEGA=TOFF(I,V,ZL)+TADD(BE,GA)
C     AUX1(I,V)=T2O(IVBEGA)
25711 CONTINUE
25721 CONTINUE
C     DO 25751 U=1,NO
C     USYM=ORBSYM(U)
C     FI=FLOV(USYM+1,1)
C     LI=FLOV(USYM+1,2)
C     DO 25725 I=FI,LI
C     XVAL(I)=-GGO(U,I)
25725 CONTINUE
C     VSYM=IEOR(USYM,BEGAS)+1
C     FV=FLOV(VSYM,1)
C     LV=FLOV(VSYM,2)
C     DO 25741 V=FV,LV
C     TMP=0.0D0
C     DO 25731 I=FI,LI
C     TMP=TMP+AUX1(I,V)*XVAL(I)
25731 CONTINUE
C     IF(BE.GE.GA)THEN
C     UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
C     T2(UVBEGA)=T2(UVBEGA)+TMP
C     ENDIF
C     IF(BE.LE.GA)THEN
C     VUGABE=TOFF(V,U,1)+TADD(GA,BE)
C     T2(VUGABE)=T2(VUGABE)+TMP
C     ENDIF
25741 CONTINUE
25751 CONTINUE
25781 CONTINUE
25791 CONTINUE
C
C     FIN * T1
C
      DO 13591 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13591
      USYM=ORBSYM(U)
      DO 13581 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13581
      BESYM=ORBSYM(BE+NO)
      BEUSYM=IEOR(BESYM,USYM)
      BEU=ITR(BE)+U
      DO 13541 GA=1,NV
      IF(FZV(GA).EQ.1)GO TO 13541
      GASYM=ORBSYM(GA+NO)
      VSYM=IEOR(GASYM,BEUSYM)+1
      SV=FLOV(VSYM,1)
      LV=FLOV(VSYM,2)
      FA=FLOV(VSYM,3)-NO
      LA=FLOV(VSYM,4)-NO
      DO 23521 V=SV,LV
      xval(v) = 0.d0
23521 continue
      DO 13531 A=FA,LA
      GAA=ITV(MAX0(GA,A))+MIN0(GA,A)
      BEUGAA=FOFF(GAA)+FADD(BEU)
      TMV=FIN(BEUGAA)
      DO 13521 V=SV,LV
      TMP = XVAL(V)
      TMP    =TMP    +TMV       *T1O(V,A)
      XVAL(V) = TMP
13521 CONTINUE
13531 CONTINUE
      DO 13535 V=SV,LV
      IF(BE.GE.GA)THEN
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)=T2(UVBEGA)+XVAL(V)
      ENDIF
      IF(BE.LE.GA)THEN
      VUGABE=TOFF(V,U,1)+TADD(GA,BE)
      T2(VUGABE)=T2(VUGABE)+XVAL(V)
      ENDIF
13535 CONTINUE
13541 CONTINUE
13581 CONTINUE
13591 CONTINUE
C
C     GGV * T2
C
C     DO 15791 U=1,NO
C     USYM=ORBSYM(U)
C     DO 15781 V=1,NO
C     VSYM=ORBSYM(V)
C     VUSYM=IEOR(VSYM,USYM)
C     DO 15721 GA=1,NV
C     GASYM=ORBSYM(GA+NO)
C     ASYM=IEOR(GASYM,VUSYM)+1
C     FA=FLOV(ASYM,3)-NO
C     LA=FLOV(ASYM,4)-NO
C     DO 15711 A=FA,LA
C     ZL=ZLX(A,GA)
C     UVAGA=TOFF(U,V,ZL)+TADD(A,GA)
C     AUX3(A,GA)=T2O(UVAGA)
15711 CONTINUE
15721 CONTINUE
C     DO 15751 BE=1,NV
C     BESYM=ORBSYM(BE+NO)
C     FA=FLOV(BESYM+1,3)-NO
C     LA=FLOV(BESYM+1,4)-NO
C     DO 15725 A=FA,LA
C     XVAL(A)=GGV(BE,A)
15725 CONTINUE
C     GASYM=IEOR(BESYM,VUSYM)+1
C     FGA=FLOV(GASYM,3)-NO
C     LGA=FLOV(GASYM,4)-NO
C     DO 15741 GA=FGA,LGA
C     TMP=0.0D0
C     DO 15731 A=FA,LA
C     TMP=TMP+AUX3(A,GA)*XVAL(A)
15731 CONTINUE
C     IF(BE.GE.GA)THEN
C     UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
C     T2(UVBEGA)=T2(UVBEGA)+TMP
C     ENDIF
C     IF(BE.LE.GA)THEN
C     VUGABE=TOFF(V,U,1)+TADD(GA,BE)
C     T2(VUGABE)=T2(VUGABE)+TMP
C     ENDIF
15741 CONTINUE
15751 CONTINUE
15781 CONTINUE
15791 CONTINUE
C
C     DIVIDE BY MO ENERGIES
C
      DO 13391 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13391
      USYM=ORBSYM(U)
      UU=IPQ(U)+U
      DO 13381 V=1,NO
      IF(FZO(V).EQ.1)GO TO 13381
      VSYM=ORBSYM(V)
      VUSYM=IEOR(VSYM,USYM)
      VV=IPQ(V)+V
      DO 13371 BE=1,NV
      IF(FZV(BE).EQ.1)GO TO 13371
      BESYM=ORBSYM(BE+NO)
      GASYM=IEOR(BESYM,VUSYM)+1
      FGA=FLOV(GASYM,3)-NO
      LGA=FLOV(GASYM,4)-NO
      BEBE=IPQ(BE+NO)+BE+NO
      IF(LGA.GT.BE)LGA=BE
      DO 13361 GA=FGA,LGA
      GAGA=IPQ(GA+NO)+GA+NO
      DELTA=FOCK(UU)+FOCK(VV)-FOCK(BEBE)-FOCK(GAGA)
      UVBEGA=TOFF(U,V,1)+TADD(BE,GA)
      T2(UVBEGA)= T2(UVBEGA)/DELTA
13361 CONTINUE
13371 CONTINUE
13381 CONTINUE
13391 CONTINUE
C
C     GGO FOR T1
C
C     DO 13352 U=1,NO
C     USYM=ORBSYM(U)
C     FI=FLOV(USYM+1,1)
C     LI=FLOV(USYM+1,2)
C     DO 13351 I=FI,LI
C     VAL=0.0D0
C     UI=IPQ(MAX0(U,I))+MIN0(U,I)
CFOK  IF(I.NE.U)VAL=VAL+FOCK(UI)
C     GGO(U,I)=VAL
13351 CONTINUE
13352 CONTINUE
C
C     GGV FOR T1
C
C     DO 13452 BE=1,NV
C     BESYM=ORBSYM(BE+NO)
C     FA=FLOV(BESYM+1,3)-NO
C     LA=FLOV(BESYM+1,4)-NO
C     DO 13451 A=FA,LA
C     VAL=0.0D0
C     ABE=IPQ(MAX0(A,BE)+NO)+MIN0(A,BE)+NO
CFOK  IF(A.NE.BE)VAL=VAL+FOCK(ABE)
C     GGV(BE,A)=VAL
13451 CONTINUE
13452 CONTINUE
C
C     HIA
C
C     DO 13557 A=1,NV
C     ASYM=ORBSYM(A+NO)
C     FI=FLOV(ASYM+1,1)
C     LI=FLOV(ASYM+1,2)
C     DO 13556 I=FI,LI
C     VAL=0.0D0
C     IA=ITR(A)+I
CFOK  AUX3(I,A)=VAL+FOCK(IA)
13556 CONTINUE
13557 CONTINUE
C
C     GGO, GGV, HIA & (2D-C) * T1
C
      DO 13291 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13291
      USYM=ORBSYM(U)
      FBE=FLOV(USYM+1,3)-NO
      LBE=FLOV(USYM+1,4)-NO
      FI=FLOV(USYM+1,1)
      LI=FLOV(USYM+1,2)
      UU=IPQ(U)+U
      DO 13271 BE=FBE,LBE
      BEBE=IPQ(BE+NO)+BE+NO
      BEU=ITR(BE)+U
      VAL=0.0D0
C     DO 13235 I=FI,LI
C     VAL=VAL-GGO(U,I)*T1O(I,BE)
13235 CONTINUE
C     DO 13238 A=FBE,LBE
C     VAL=VAL+GGV(BE,A)*T1O(U,A)
13238 CONTINUE
      DO 13248 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13248
      IU=ITR(MAX0(I,U))+MIN0(I,U)
      ISYM=ORBSYM(I)
      FA=FLOV(ISYM+1,3)-NO
      LA=FLOV(ISYM+1,4)-NO
      DO 13245 A=FA,LA
      ZL=ZLX(A,BE)
      IA=ITR(A)+I
      BEUIA=DOFF(MAX0(BEU,IA))+DADD(MIN0(BEU,IA))
      BEA=ITV(MAX0(BE,A))+MIN0(BE,A)
      IUBEA=COFF(BEA)+CADD(IU)
      VAL=VAL+(2.0D0*DIN(BEUIA)-CIN(IUBEA))*T1O(I,A)
C     IUABE=TOFF(I,U,ZL)+TADD(A,BE)
C     UIABE=TOFF(U,I,ZL)+TADD(A,BE)
C     VAL1=T2O(IUABE)
C     VAL2=T2O(UIABE)
C     VAL=VAL+AUX3(I,A)*(VAL1+VAL1-VAL2)
13245 CONTINUE
13248 CONTINUE
CFOK  VAL=VAL+FOCK(BEU)
      T1(U,BE)=T1(U,BE)+VAL
13261 CONTINUE
13271 CONTINUE
13281 CONTINUE
13291 CONTINUE
C
C     E * T2
C
      CALL ZERO(AUX1,NO*NV)
      DO 13691 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13691
      ISYM=ORBSYM(I)
      DO 13681 J=1,NO
      IF(FZO(J).EQ.1)GO TO 13681
      JSYM=ORBSYM(J)
      JISYM=IEOR(JSYM,ISYM)
      DO 13671 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13671
      ASYM=ORBSYM(A+NO)
      IA=ITR(A)+I
      BESYM=IEOR(ASYM,JISYM)+1
      FBE=FLOV(BESYM,3)-NO
      LBE=FLOV(BESYM,4)-NO
      FU=FLOV(BESYM,1)
      LU=FLOV(BESYM,2)
      DO 13601 BE=FBE,LBE
      ZL=ZLX(A,BE)
      IJABE=TOFF(I,J,ZL)+TADD(A,BE)
      JIABE=TOFF(J,I,ZL)+TADD(A,BE)
      VAL1=T2O(IJABE)
      VAL2=T2O(JIABE)
      XVAL(BE)=VAL1+VAL1-VAL2
13601 CONTINUE
      DO 13661 U=FU,LU
      JU=ITR(MAX0(J,U))+MIN0(J,U)
      IAJU=EOFF(IA)+EADD(JU)
      TMP = -EIN(IAJU)
      DO 13651 BE=FBE,LBE
      tmv = aux1(be,u)
      tmv       = tmv      + tmp    *XVAL(BE)
      aux1(be,u) = tmv
13651 CONTINUE
13661 CONTINUE
13671 CONTINUE
13681 CONTINUE
13691 CONTINUE
clj Transpose aux1(1:nv,1:no)
      do 102 i = 1, nv
          do 202 j = 1, no
             aux3(j,i) = aux1(i,j)
202          continue
102       continue
C
C     F * T2
C
      DO 13791 I=1,NO
      IF(FZO(I).EQ.1)GO TO 13791
      ISYM=ORBSYM(I)
      DO 13781 A=1,NV
      IF(FZV(A).EQ.1)GO TO 13781
      ASYM=ORBSYM(A+NO)
      IA=IPQ(A+NO)+I
      AISYM=IEOR(ASYM,ISYM)
      IA=ITR(A)+I
      DO 13771 B=1,NV
      IF(FZV(B).EQ.1)GO TO 13771
      BSYM=ORBSYM(B+NO)
      USYM=IEOR(BSYM,AISYM)+1
      FU=FLOV(USYM,1)
      LU=FLOV(USYM,2)
      FBE=FLOV(USYM,3)-NO
      LBE=FLOV(USYM,4)-NO
      ZL=ZLX(A,B)
      DO 13711 U=FU,LU
      IUAB=TOFF(I,U,ZL)+TADD(A,B)
      UIAB=TOFF(U,I,ZL)+TADD(A,B)
      VAL1=T2O(IUAB)
      VAL2=T2O(UIAB)
      XVAL(U)=VAL1+VAL1-VAL2
13711 CONTINUE
      DO 13761 BE=FBE,LBE
      BEB=ITV(MAX0(BE,B))+MIN0(BE,B)
      IABEB=FOFF(BEB)+FADD(IA)
      DO 13751 U=FU,LU
      tmv = aux3(u,be)
      TMV = TMV       +FIN(IABEB)*XVAL(U)
      aux3(u,be) = tmv
13751 CONTINUE
13761 CONTINUE
13771 CONTINUE
13781 CONTINUE
13791 CONTINUE
C
C     DIVIDE BY MO ENERGIES
C
      DO 13891 U=1,NO
      IF(FZO(U).EQ.1)GO TO 13891
      USYM=ORBSYM(U)
      FBE=FLOV(USYM+1,3)-NO
      LBE=FLOV(USYM+1,4)-NO
      UU=IPQ(U)+U
      DO 13871 BE=FBE,LBE
      BEBE=IPQ(BE+NO)+BE+NO
      DELTA=FOCK(UU)-FOCK(BEBE)
      AUX3(U,BE)=AUX3(U,BE)-T1O(U,BE)*NXE
      T1(U,BE)=(T1(U,BE)+AUX3(U,BE))/DELTA
13871 CONTINUE
13891 CONTINUE
C
C     CORRELATION ENERGY
C
      WRITE(6,*)' '
      CALL PCORR(T2,T1,DIN,NXE,TOFF,TADD,IPQ,ORBSYM,FLOV,
     .           NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .           DOFF,DADD,NM,ITR)
C
C     WRITE OUT T1,T2 TO FILE69
C
      CALL RFILE(ITAP69)
      CALL SWRIT(ITAP69,NO*NV,1)
      CALL SWRIT(ITAP69,NDIMT2,1)
      CALL SWRIT(ITAP69,T1,INTOWP(NO*NV))
      CALL SWRIT(ITAP69,T2,INTOWP(NDIMT2))
      CALL SWRIT(ITAP69,EREF,INTOWP(1))
      CALL SWRIT(ITAP69,NXE,INTOWP(1))
      CALL RCLOSE(ITAP69,3)
C
C     CHECK CONVERGENCE
C
      CALL TDIFF(T2,T1,T2O,T1O,T1NORM,DELT,NO,NV,NDIMT2,
     .           ORBSYM,FLOV,NIRRED,TOFF,TADD,ZLX,FZO,FZV,NXE,NXEO)
      WRITE(6,6011)T1NORM,DELT
      WRITE(4,6011)T1NORM,DELT
 6011 FORMAT(13X,'T1 NORM =',D15.8,5X,'DELT=',D15.8)
      IF(DELT.LT.CONV) THEN
      WRITE(6,9020) CONV
 9020 FORMAT(///,32('*'),/,'* CORRELATION ENERGY CONVERGED *',3X,D12.2,
     . /,32('*'))
      RETURN
      END IF
C
      IF(NIT.GE.MAXIT)THEN
      WRITE(6,9030)
 9030 FORMAT(///,32('*'),/,'* ITERATIONS EXHAUSTED *',/,32('*'))
      RETURN
      ENDIF
C
C     DIIS EXTRAPOLATION
C
      IF(DIISFL.EQ.2) GO TO 1490
      CALL DIISD (T1O,T1,T2O,T2,NO,NV,NDIMT2,NIT,IT,IFLAG,
     .            EPSI,NGO,NDIIS,MINDIM,MAXDIM,
     .            CCC,BBB,ITAP98,ITAP99,ITC,BB2)
      CALL PCORR(T2,T1,DIN,NXE,TOFF,TADD,IPQ,ORBSYM,FLOV,
     .           NIT,NO,NV,NT,NT2,NTIN,NDIMT2,NIRRED,FZO,FZV,FOCK,
     .           DOFF,DADD,NM,ITR)
 1490 CONTINUE
C
      GO TO 50
C
      END
C
C---------------------------------------------------------------------
C
      SUBROUTINE TDIFF(T2,T1,T2O,T1O,T1NORM,DELT,NO,NV,NDIMT2,
     .                 ORBSYM,FLOV,NIRRED,TOFF,TADD,ZLX,FZO,FZV,XE,XEO)
      IMPLICIT INTEGER(A-Z)
      REAL*8 T2(NDIMT2),T1(NO,NV),T2O(NDIMT2),T1O(NO,NV),
     .       XE,XEO,DELE,T1NORM,DELT
      INTEGER ORBSYM(NO+NV),FLOV(NIRRED,4),TOFF(NO,NO,2),TADD(NV,NV),
     .        ZLX(NV,NV),FZO(NO),FZV(NV)
C
      T1NORM=0.0D+00
      DELT=0.0D+00
      DO 10 U=1,NO
      IF(FZO(U).EQ.1)GO TO 10
      USYM=ORBSYM(U)
         DO 20 BE=1,NV
         IF(FZV(BE).EQ.1)GO TO 20
         BESYM=ORBSYM(BE+NO)
            IF(USYM.EQ.BESYM)THEN
            DELT=DELT+(T1(U,BE)-T1O(U,BE))*(T1(U,BE)-T1O(U,BE))
            T1NORM=T1NORM+T1(U,BE)*T1(U,BE)
            ENDIF
         UBESYM=IEOR(USYM,BESYM)
            DO 30 V=1,NO
            IF(FZO(V).EQ.1)GO TO 30
            VSYM=ORBSYM(V)
            GASYM=IEOR(UBESYM,VSYM)+1
            FGA=FLOV(GASYM,3)-NO
            LGA=FLOV(GASYM,4)-NO
               DO 40 GA=FGA,LGA
               ZL=ZLX(BE,GA)
               UVBEGA=TOFF(U,V,ZL)+TADD(BE,GA)
                  DELT=DELT
     .   +      (T2O(UVBEGA)-T2(UVBEGA))*(T2O(UVBEGA)-T2(UVBEGA))
   40          CONTINUE
   30       CONTINUE
   20    CONTINUE
   10 CONTINUE
      DELT=DSQRT(DELT)
      T1NORM=DSQRT(T1NORM)
      RETURN
      END
