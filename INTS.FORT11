      subroutine fentry(ra,ia,maxcor)
C***********************************************************************
C  NOTICE OF PROGRAM MODIFICATIONS                                     *
C***********************************************************************
c Set up run-time memory allocation 2/13/89 - clj. Key: clj021389
C***********************************************************************
c Moved to PSI distribution disk on 011889 by clj.
C***********************************************************************
C       DATE: August 18, 1988                      Search:  C8-18-88   *
C         BY: RBR                                                      *
C     REASON: Change output format to print within 132 character line. *
C             Decrease core just a bit more.                           *
C***********************************************************************
C       DATE: MARCH  12, 1988     17:30          C3-12-88              *
C         BY: RBR                                                      *
C     REASON: DECREASE CORE TO RUN IN 7MB ON 9370                      *
C***********************************************************************
C       DATE: MARCH 8, 1987                                            *
C         BY: RBR                                                      *
C     REASON: INCREASE (DOUBLE SIZE) ARRAYS MPRU, MCCU, AND MBLU.      *
C***********************************************************************
C       DATE: FEBRUARY 13, 1987                                        *
C         BY: RBR                                                      *
C     REASON: MAKE OUTPUT CHANGES TO WRITE IN LESS THAN 133 LRECL'S.   *
C***********************************************************************
C       DATE: JANUARY 14, 1987       1:00 PM                           *
C         BY: RBR                                                      *
C     REASON: GET MORE CORE FOR LARGE CASES  ! ! ! ! !!!!!!!!!!!!!!    *
C***********************************************************************
C       DATE: MARCH 19, 1985                                           *
C         BY: WDA ??????????                                           *
C     REASON: ADD OPTION TO WRITE OUT TAPE30 INFO AND INTEGRAL TAPE    *
C             HEADER WITHOUT COMPUTING ANY INTEGRALS.                  *
C***********************************************************************
C       DATE: FEBRUARY 5, 1985       1:00 PM                           *
C         BY: RBR                                                      *
C     REASON: CHANGE TO NEW UNIT NUMBERS ! ! ! ! ! ! !!!!!!!!!!!!!!    *
C***********************************************************************
C   NOTICE OF PROGRAM MODIFICATION                                     *
C       DATE: NOVEMBER 8, 1984      10:00 PM                           *
C         BY: TJL                                                      *
C     REASON: CONVERT TO NEW IO SYSTEM                                 *
C***********************************************************************
C
C  THIS PROGRAM CALCULATES ONE- AND TWO-ELECTRON INTEGRALS IN TERMS OF
C  SYMMETRY ORBITALS AND FORMS THE SYMMETRY ORBITAL INTEGRALS IN RANDOM
C  ORDER. THE POINT GROUPS ARE LIMITED TO D2H AND ITS SUBGROUPS.
C           BY RUSSELL M. PITZER AND H. F. SCHAEFER
C
      IMPLICIT INTEGER (A-Z)
      REAL*8 RA(maxcor),SEC
c8-18-88  REAL*8 RA(710000),SEC
C3-12-88  REAL*8 RA(725000),SEC  IS TOO BIG FOR THE 9370/7M LIMIT
CRBR  REAL*8 RA(1000000),SEC  THIS IS THE NORMAL SETTING FOR 3090/15M
CRBR  REAL*8 RA(1750000) THIS IS THE 3090 LIMIT FOR RUNNING IN 15M
      INTEGER FCB10(16)
C
      COMMON /INPUT/  I24,NGEN,NAORDS,NCONS,ITOL,ICUT,LABEL(26)
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/   KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU
     1,               MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU
     2,               MSTU,  MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON /DIM21/  IPQ(256)
      COMMON /TAPE/   NTAPE
      COMMON /SALCS/  NIRRED
      COMMON /SYMTRY/ NTRANS
      COMMON /PSIZE/  MSQ,KAORDQ,MCONSQ,MGCSQ,MSTQ,MRQ,MCSQ,MCTQ,
     #MCONQ,MCQ,MSFQ,MGQ,MSFRQ,MNSFQ,MPRQ,MCXQ,
     #MCCQ,MBLQ
      COMMON /INFOA/  NAT,ICH,MUL,NUM,NQ,NX,NE,NA,NB
      COMMON /NSHEL/  NSHELL
      COMMON /MAXDIM/ MXAT,MXTRN,MXPR,MXSH,MXSYM,MXCF,MXT,MXISO,
     #MXPSYM
      COMMON /TAPE30/ I10(200),ITAP30
C
C***********************************************************************
C*                                                                     *
clj021389     COMMON /CORE/   RA
C
      DIMENSION IA(1)
clj021389     EQUIVALENCE (RA,IA)
C*                                                                     *
C*    ----- NOTE ABOVE EQUIVALENCE, CRUCIAL TO DIVIDING CORE.          *
C*          IA SHOULD BE DIMENSIONED TWICE AS LARGE AS RA, AND         *
C*          CORTOP SHOULD BE DIMENSION OF RA                    -----  *
C***********************************************************************
C
C
      CALL TSTART(3)
      CALL TSTART(6)
      CALL NOUNFL
C
C     ----- PERKIN-ELMER SPECIFIC CALL TO ELIMINATE UNDERFLOWS -----
C
      NASK=360
      CALL IZERO(I24,32)
      CALL IZERO(KAORDS,61)
      NTAPE=0
      NIRRED=0
      NTRANS=0
      CALL IZERO(MSQ,18)
      CALL IZERO(NAT,9)
      NSHELL=0
      CALL IZERO(MXAT,9)
      CALL IZERO(I10,201)
C
      IFLAG3 = 1
      ICHECK = 3
      IOUT   = 6
CWA   LINES ADDED BY WA TO ALLOW EXIT AFTER WRITING INPUT.
      ITAP5=5
      CALL LOCATE (ITAP5,'# INTS ###',IERLOC)
      IF(IERLOC.NE.0) THEN
          NWRTFG=0
          GO TO 3333
      END IF
      READ(ITAP5,3332) NWRTFG
 3332 FORMAT(I5)
 3333 CONTINUE
CENDWA
C
      NINTS=0
      NSECT=0
C
C     ----- READ IN HONDO ARRAYS -----
C
C     REWIND (10)
C     READ (10) MSQ,KAORDQ,MCONSQ,MGCSQ,MSTQ,MRQ,MCSQ,MCTQ,MCONQ,
C    #           MCQ,MSFQ,MGQ,MSFRQ,NAT,ICH,MUL,NUM,NQ,NX,NE,NB,
C    #           NSHELL,NIRRED,NTRANS,MXAT,MXTRN,MXPR,MXSH,MXSYM,
C    #           MXCF,MXT,MXISO,MXPSYM
      ITAP30=30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I10,200,101,JUNK)
C
      MSQ=I10(6)
      KAORDQ=I10(7)
      MCONSQ=I10(8)
      MGCSQ=I10(9)
      MSTQ=I10(10)
      MRQ=I10(11)
      MCSQ=I10(12)
      MCTQ=I10(13)
      MCONQ=I10(14)
      MCQ=I10(15)
      MSFQ=I10(16)
      MGQ=I10(17)
      MSFRQ=I10(18)
      NAT=I10(19)
      ICH=I10(20)
      MUL=I10(21)
      NUM=I10(22)
      NQ=I10(23)
      NX=I10(24)
      NE=I10(25)
      NB=I10(26)
      NSHELL=I10(27)
      NIRRED=I10(28)
      NTRANS=I10(29)
      MXAT=NAT
      MXTRN=NTRANS
      MXPR=I10(32)
      MXSH=NSHELL
      MXSYM=NIRRED
      MXCF=I10(35)
      MXT=I10(36)
      MXISO=I10(40)
      MXPSYM=I10(39)
C
      WRITE(ICHECK,997)MSQ,KAORDQ,MCONSQ,MGCSQ,MSTQ,MRQ,MCSQ,MCTQ,MCONQ,
     #MCQ,MSFQ,MGQ,MSFRQ,NAT,ICH,MUL,NUM,NQ,NX,NE,NB,
     #NSHELL,NIRRED,NTRANS,MXAT,MXTRN,MXPR,MXSH,MXSYM,
     #MXCF,MXT,MXISO,MXPSYM
  997 FORMAT(10I5)
C
      MSU=MSQ
      KAORDS=KAORDQ
      MCONSU=MCONSQ
      MGCSU=MGCSQ
      MSTU=MSTQ
      MRU=MRQ
      MCSU=MCSQ
      MCTU=MCTQ
      MCONU=MCONQ
      MCU=MCQ
      MSFU=MSFQ
      MGU=MGQ
      MSFRU=MSFRQ
      MNSFU=MSFU*(MSFU+1)/2
      MPRU=22000
      MCCU=364
      MBLU=30000
CRBR  MPRU=11000
CRBR  MCCU=182
CRBR  MBLU=15000
C
      NS=MSU
      NAORDS=KAORDS
      NCONS=MCONSU
      NGCS=MGCSU
      NST=MSTU
      NGEN=MGU
      NG=MGU
C
C
      IF (IFLAG3.GT.0) WRITE (ICHECK,104) NGEN,NS,NAORDS,NCONS,NGCS,ITOL
     #,                              ICUT,NTAPE,MCONU,MCTU,MSFU,MSFRU
CCCC  WRITE (IOUT,104) NGEN,NS,NAORDS,NCONS,NGCS,ITOL,ICUT,NTAPE,MCONU
CCCC #,                MCTU,MSFU,MSFRU
 
      ITOL=20
      NCUT=9
      NTAPE=34
C
C     ----- ARRANGE CORE STORAGE BASED ON ABOVE PARAMETERS -----
C
CSEL  CALL MAXCOR(CORLEN)
CSEL  CORLEN=(CORLEN-1000)
CSEL  CALL GETCOR(CORLEN,CORADD)
CSEL  CORLEN=CORLEN/INTOWP(1)
CSEL  CALL LOCF(RA,RADD)
CCSEL WRITE (IOUT,'(//,' CORADD=',I9,' RADD=',I9)') CORADD,RADDA
CSEL  CORADD=CORADD/INTOWP(1)
CSEL  RADD=RADD/INTOWP(1)
CSEL  CORBOT=CORADD-RADD+1
CSEL  CORTOP=CORBOT+CORLEN-1
c
C3-12-88 CORTOP=1000000
C8-18-88 CORTOP= 710000
clj021389 Run time memory allocation:
      CORTOP =   maxcor
C^^^^^^^^^^^^^^^^^^^^^^
C
C     ----- ZERO CORE NOW -----
C
      CALL ZERO(RA,CORTOP)
C
      NF=1
      NC=NF+MSU
      NIR=NC+MSU
      NCON=NIR+KAORDS
      LMNP1=NCON+MCONSU
      MAORDS=LMNP1+MCONSU
      ICXSV1=MAORDS+MGCSU
      ICXSV2=ICXSV1+MGCSU
      NSO=ICXSV2+MGCSU**2
      ND=NSO+MSTU
      NSOPR=ND+MSTU
      NBLPR=NSOPR+MSTU
      LA=NBLPR+MSTU
      NTL=LA+MRU*KAORDS
      NTU=NTL+MSFU
      NT=NTU+MSFU
      NCT=NT+MSFU
      MCONS=NCT+MSFU
      MGCS=MCONS+MSFU
      ICA=MGCS+MSFU
      LB=ICA+MCU*MSU*MGU
      MS=LB+MSFRU
      MNL=MS+MSFRU
      IPRST=MNL+MSFRU
      NPAIR=IPRST+MNSFU
      NFCT=NPAIR+MNSFU
      NGW=NFCT+MCCU
      ICB=NGW+MCCU
      NPRIR=ICB+4*MGU*MCCU
      IDP=NPRIR+MSTU*MNSFU
      MTYPE=IDP+MSTU**3
      ITYP=MTYPE+2*MSU
      IL=ITYP+MSTU
      ICXST=IL+MPRU
      NIRL=ICXST+MNSFU
      INTTOP=NIRL+KAORDS
C
C     ----- NOW WORK FOR REAL ARRAYS, STARTING AT REALST (JUST ABOVE
C                                            INTEGER ARRAYS) -----
      REALST=IADTWP(INTTOP)
      IGC=REALST
      CHG=IGC+MCSU*MCTU*MGCSU
      ZET=CHG+MSU
      ETA=ZET+MCONU*MCONSU
      X=ETA+MCONU*MCONSU
      Y=X+MCU*MSU
      Z=Y+MCU*MSU
      AJ=Z+MCU*MSU
      CX=AJ+MBLU
C
C     ----- CX CAN NOW TAKE REST OF CORE, SO -----
C
      MCXU=CORTOP-CX-2
      IF (IFLAG3.GT.0) WRITE(ICHECK,105) INTTOP,REALST,CX,MCXU
CCCC  WRITE (IOUT,105) INTTOP,REALST,CX,MCXU
      IF (MCXU.LE.0) WRITE (IOUT,106) CORTOP,CX
      IF (MCXU.LE.0) THEN
         WRITE(ICHECK,*) ' NOT ENOUGH CORE SPACE TO CONTINUE, CX'
C***     CALL M:ABORT
         call mabort
      STOP
      END IF
C
C        SET UP IPQ(I)=(I*(I-1))/2 ARRAY
C
      IPQ(1)=0
      DO 80 I=1,255
   80 IPQ(I+1)=IPQ(I)+I
C
C     ----- ALLOCATE SPACE FOR HONDO ARRAYS. NOTE OVERLAP
C                AJ AND CX
C
C     ----- REAL ARRAYS FIRST -----
C
      EX=AJ
      CSPD=EX+MXPR
      CC=CSPD+MXPR*3
      ZAN=CC+MXCF
      C=ZAN+MXAT
      USOTAO=C+3*MXAT
C
C     ---- INTEGER EQUIVALENTS -----
C
      REX=WPADTI(EX)
      RCSPD=WPADTI(CSPD)
      RCC=WPADTI(CC)
      RZAN=WPADTI(ZAN)
      RC=WPADTI(C)
      RSOTAO=WPADTI(USOTAO)
C
C     ----- INTEGER ARRAYS -----
C
      ICT=WPADTI(USOTAO+NUM*MSFRU)
      NSQ=ICT+MXAT*MXTRN
      KS=NSQ+MXAT
      KSTART=KS+MXAT
      KATOM=KSTART+MXSH
      KTYPE=KATOM+MXSH
      KNG=KTYPE+MXSH
      KMIN=KNG+MXSH
      KMAX=KMIN+MXSH
      ISC=KMAX+MXSH
      IPC=ISC+MXSH*MXPSYM
      SLAB=IPC+MXSH*MXPSYM
      LAB=SLAB+MXSYM
      LOC=LAB+MXCF
      LOC2=LOC+MXAT*3
      KLASS=LOC2+MXAT*3
      LAMBDA=KLASS+MXAT
      IADDR=LAMBDA+MXSYM
      TITLE=IADDR+MXSYM
      LBLAT=TITLE+20
      ITRNAO=LBLAT+2*MXAT
      NSOT=ITRNAO+MSFRU
      NEED=NSOT+MSTU
C
      IF (NEED.GT.INTOWP(CORTOP)) THEN
         WRITE(ICHECK,*) ' NOT ENOUGH CORE FOR HONDO'
C***     CALL M:ABORT
         call mabort
         STOP
      END IF
C
      CALL IN(IA(ICT),IA(NSQ),IA(KS),IA(REX),IA(RCSPD),IA(KSTART),
     #IA(KATOM),IA(KTYPE),IA(KNG),IA(KMIN),IA(KMAX),
     #IA(ISC),IA(IPC),IA(SLAB),IA(RCC),IA(LAB),IA(LOC),
     #IA(LOC2),IA(KLASS),IA(LAMBDA),IA(IADDR),IA(RZAN),IA(RC),
     #IA(TITLE),IA(LBLAT))
C
C
C
C     ----- FORM PITZER ARRAYS FROM HONDO INFO -----
C
      CALL TOPITZ(IA(NF),IA(NC),IA(NIR),IA(NCON),IA(LMNP1),IA(NSO),
     #IA(ND),IA(NSOPR),IA(NBLPR),IA(LA),RA(IGC),IA(NTL),
     #IA(NTU),IA(NT),IA(NCT),IA(MCONS),IA(MAORDS),
     #IA(MGCS),IA(ICA),IA(LB),IA(MS),IA(MNL),IA(IDP),
     #IA(MTYPE),IA(ITYP),RA(CHG),RA(ZET),RA(ETA),RA(X),
     #IA(NIRL),RA(ZAN),RA(C),IA(ICT),IA(NSQ),IA(KS),
     #RA(EX),RA(CSPD),IA(KSTART),IA(KATOM),IA(KTYPE),
     #IA(KNG),IA(KMIN),IA(KMAX),IA(ISC),IA(IPC),
     #IA(SLAB),RA(CC),IA(LAB),IA(LOC),IA(LOC2),
     #IA(KLASS),IA(LAMBDA),IA(IADDR),IA(LBLAT))
C
C
C
      CALL SYMINP(RA(CHG),RA(ETA),IA(ICA),IA(IDP),RA(IGC),IA(ITYP)
     #,           IA(LA),IA(LB),IA(LMNP1),IA(MAORDS),IA(MCONS),IA(MGCS)
     #,           IA(MNL),IA(MS),IA(MTYPE),IA(NBLPR),IA(NC),IA(NCON)
     #,           IA(NCT),IA(ND),IA(NF),IA(NIR),IA(NSO),IA(NSOPR),IA(NT)
     #,           IA(NTL),IA(NTU),RA(X),RA(Y),RA(Z),RA(ZET),IA(TITLE))
C
C     ----- FORM SO-TO-AO TRANSFORMATION MATRIX -----
C
      CALL SOTOAO(IA(NC),IA(NF),IA(MCONS),IA(ITRNAO),IA(NSOT),
     #IA(NSO),RA(USOTAO),IA(MGCS),IA(MAORDS),IA(NIR),
     #IA(NCT),IA(LA),RA(IGC),IA(LMNP1),IA(RSOTAO))
C
C
C     ----- WRITE OUT INTER-ATOMIC DISTANCES -----
C
      CALL INTR(RA(C),MXAT,IOUT)
C
C
C
C
      CALL SOCFPD(RA(CX),IA(ICXST),IA(ICXSV1),IA(ICXSV2),IA(IDP),RA(IGC)
     #,           IA(IL),IA(IPRST),IA(LA),IA(LB),IA(MAORDS),IA(MGCS)
     #,           IA(NBLPR),IA(NC),IA(NCT),IA(ND),IA(NF),IA(NIR)
     #,           IA(NPAIR),IA(NPRIR),IA(NTL),IA(NTU))
C     PRINT '(//,' RETURNED FROM SOCFPD',//)'
C
C
CWA  SKIP COMPUTATION OF INTEGRALS IF DESIRED.
      IF(NWRTFG.EQ.1) GO TO 3334
CENDWA
      DO 10 N=1,3
C
C
C
C
C
C
   10 CALL ONEINT(RA(AJ),RA(CHG),RA(CX),RA(ETA),IA(ICA),IA(ICB)
     #,           IA(ICXST),IA(IL),IA(IPRST),IA(LMNP1),IA(MCONS),N
     #,           IA(NC),IA(NCON),IA(NF),IA(NFCT),IA(NGW),IA(NPAIR)
     #,           IA(NPRIR),IA(NT),IA(NTL),IA(NTU),RA(X),RA(Y),RA(Z)
     #,           RA(ZET))
C
      CALL TWOINT(RA(AJ),RA(CX),RA(ETA),IA(ICA),IA(ICB),IA(ICXST),IA(IL)
     #,           IA(IPRST),IA(LMNP1),IA(MCONS),IA(NC),IA(NCON),IA(NF)
     #,           IA(NFCT),IA(NGW),IA(NPAIR),IA(NPRIR),IA(NT),IA(NTL)
     #,           IA(NTU),RA(X),RA(Y),RA(Z),RA(ZET),MGU)
C
      WRITE(IOUT,222)NINTS,NSECT,NTAPE
      IF (IFLAG3.GT.0) WRITE(ICHECK,222)NINTS,NSECT,NTAPE
222   FORMAT(/' TOTAL OF ',I10,'  INTEGRALS IN',I10,' SECTORS ARE WRITTE
     1N ON TAPE ',I4)
C     CALL ETIME2(ENDD)
 3334 CONTINUE
      ITAPE1 = 93
      JCODE = 3
      CALL RCLOSE(ITAP30,JCODE)
CTJL  CALL RCLOSE(ITAPE1,JCODE)
      CALL RCLOSE(NTAPE,JCODE)
C
      CALL TSTOP(3)
      CALL TSTOP(6)
C
      CALL EXIT(0)
C
C
  101 FORMAT (26A3)
  102 FORMAT (1H1,26A3)
  103 FORMAT (26I3)
  104 FORMAT (1X,26I3)
  105 FORMAT (//,1X,I6,' WORDS USED FOR INTEGER ARRAYS, SO REAL ARRAYS '
     #,       'START AT',I7,/,7X,' CX STARTS AT',I7,' AND HAS SPACE FOR'
     #,       I7,' ELEMENTS')
  106 FORMAT (//,' ***** NOT ENOUGH CORE TO STORE ARRAYS (!). CORTOP:'
     #,       I7,' AND CX:',I7,//)
C
      CALL TSTOP(4)
      CALL TSTOP(6)
      END
      SUBROUTINE SYMINP(CHG,ETA,ICA,IDP,IGC,ITYP,LA,LB,LMNP1,MAORDS,
     1MCONS,MGCS,MNL,MS,MTYPE,NBLPR,NC,NCON,NCT,ND,NF,NIR,NSO,NSOPR,
     2NT,NTL,NTU,X,Y,Z,ZET,TITLE)
C
C     READ THE REST OF THE INPUT DECK AND SORT INTO ARRAYS FOR LATER USE
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY CHG,ETA,ICA,IDP,IGC,ITYP,LA,LB,LMNP1,MAORDS,
C*** 1MCONS,MGCS,MNL,MS,MTYPE,NBLPR,NC,NCON,NCT,ND,NF,NIR,NSO,NSOPR,
C*** 2NT,NTL,NTU,X,Y,Z,ZET,TITLE
C
      REAL*8 IGC
      INTEGER TITLE(20)
      INTEGER FCB34(16)
      INTEGER NUCREP(2)
C
      COMMON /INPUT/  I24,NGEN,NAORDS,NCONS,ITOL,ICUT,LABEL(26)
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/   KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU
     1,               MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU
     2,               MSTU, MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON /DIM21/  IPQ(256)
      COMMON /TAPE/   NTAPE
      COMMON /SHLT/   TOL,CUTOFF
      COMMON /TAPE30/ I10(200),ITAP30
C
      DIMENSION ICA(MCU,MSU,1),LA(MRU,1),LB(1),LMNP1(1),MAORDS(1),
     1MCONS(1),MGCS(1),MNL(1),MS(1),NBLPR(1),NC(1),NCON(1),NCT(1),
     2ND(1),NF(1),NIR(1),NSO(1),NSOPR(1),NT(1),NTL(1),NTU(1),
     3IGC(MCTU,MCSU,1),IDP(MSTU,MSTU,2)
      DIMENSION CHG(1),ETA(MCONU,1),ITYP(1),MTYPE(2,1),X(MCU,1),
     1Y(MCU,1),Z(MCU,1),ZET(MCONU,1)
      DIMENSION LBLSH(4)
      DIMENSION C(18),LBLA(18),LBLAO(20),LBLSO(18),LTYP(18)
C
      EQUIVALENCE (REPNUC,NUCREP)
C
      DATA IBL, ISK /1H ,1H0/, LBLSH /2H1S,2H2P,2H3D,2H4F/
      DATA LBLAO /3H 1S,3H  X,3H  Y,3H  Z,3H XX,3H YY,3H ZZ,3H XY,3H XZ,
     13H YZ,3HXXX,3HYYY,3HZZZ,3HXXY,3HXXZ,3HYYX,3HYYZ,3HZZX,3HZZY,3HXYZ/
      DATA A0,    A1S2,  A1,    A2,    ALN10,     A4,    A10
     1/0.0D0, 0.5D0, 1.0D0, 2.0D0, 2.30258D0, 4.0D0, 10.0D0/
C
  501 FORMAT (1X,'  NGEN   NS  NORDS NCONS  NGCS  ITOL  ICUT NTAPE
     * ',/,(8I6))
      ICUT=20
      WRITE(ICHECK,501) NGEN,NS,NAORDS,NCONS,NGCS,ITOL,ICUT,NTAPE
      IF(NS.LE.MSU) GO TO 2
      WRITE (ICHECK,970) NS
C***  CALL M:ABORT
      STOP
    2 IF(NAORDS.LE.KAORDS) GO TO 4
      WRITE (ICHECK,971) NAORDS
C***  CALL M:ABORT
      STOP
    4 IF(NCONS.LE.MCONSU) GO TO 6
      WRITE (ICHECK,972) NCONS
C***  CALL M:ABORT
      STOP
    6 IF(NGCS.LE.MGCSU) GO TO 8
      WRITE (ICHECK,973) NGCS
C***  CALL M:ABORT
      STOP
    8 CONTINUE
 80   IF(NTAPE.LE.0) NTAPE=34
CC    WRITE(ICHECK,*) ' NTAPE=',NTAPE
      CALL RFILE(NTAPE)
CC    WRITE(ICHECK,*) ' NTAPE=',NTAPE
C     CALL SREW(NTAPE)  THIS IS DONE IN RFILE
      IF(ICUT.LE.0) ICUT=9
      CUTOFF=A1/A10**ICUT
      IF(ITOL.LE.0) ITOL=20
      TOL=ALN10*ITOL
      NSOPR(1)=0
      NBLPR(1)=0
      IF(NST.EQ.1) GO TO 100
      DO 90 IST=2,NST
           NSOPR(IST)=NSOPR(IST-1)+NSO(IST-1)
   90 NBLPR(IST)=NBLPR(IST-1)+IPQ(NSO(IST-1) + 1)
C
C     ----- CHANGE CONTRACTION COEFFICIENTS BACK TO NORMAL FORM ----
C
  100 CONTINUE
      DO 93 ICONS=1,NCONS
           ICONU=NCON(ICONS)
           DO 92 ICON=1,ICONU
                T=A4*ZET(ICON,ICONS)
                ETA(ICON,ICONS)=ETA(ICON,ICONS)/DSQRT(T**LMNP1(ICONS)/
     #          A2*DSQRT(T/A2)) * DSQRT(5.5683279968317D+00)
   92      CONTINUE
   93 CONTINUE
C
C     ----- CALCULATE NUCLEAR REPULSION ENERGY -----
C
      REPNUC=A0
      DO 210 IS=1,NS
           IC=NC(IS)
           T=DBLE(IC)*CHG(IS)
           DO 210 JS=1,IS
                CHGPRD=T*CHG(JS)
                JCU=NC(JS)
                IF(JS.NE.IS) GO TO 190
                CHGPRD=A1S2*CHGPRD
                JCU=JCU-1
                IF(JCU.EQ.0) GO TO 210
  190           DO 200 JC=1,JCU
  200           REPNUC=REPNUC+CHGPRD/DSQRT((X(IC,IS)-X(JC,JS))**2+
     1          (Y(IC,IS)-Y(JC,JS))**2+(Z(IC,IS)-Z(JC,JS))**2)
  210 CONTINUE
C     CALL GCENTR(ICA,NC)
C     NGP1=NG+1
C     IF(NGP1.LE.MGU) GO TO 214
C     WRITE(ICHECK,982) NGP1
C     STOP
  214 CONTINUE
C
C     ----- PUT NUCLEAR REPULSION ENERGY ON TAPE30 -----
C
CC    WRITE(ICHECK,*) ' POINT ONE, ITAP30 IN SYMINP = ',ITAP30
      CALL WREADW(ITAP30,I10,200,101,JUNK)
C
      MPOINT=I10(2)
      MCONST=I10(3)
      MCALCS=I10(4)
      NCALCS=I10(5)
      NAT=I10(19)
C
      JUNK=101+MCONST+MPOINT
      CALL WREADW(ITAP30,I10,MCALCS,JUNK,JUNK)
C
C     ----- POINTER TO CALCULATION DATA IS I10(NCALC) -----
C
      LOCCAL=I10(NCALCS)
      JUNK=LOCCAL+60+20+INTOWP(3*NAT)
C
      CALL WWRITW(ITAP30,NUCREP,INTOWP(1),JUNK,JUNK)
CC    WRITE(ICHECK,*) ' POINT TWO, JUNK AFTER WWRITW =',JUNK
C
C------------------------------------------------------------
C
      WRITE (ICHECK,983) TITLE
CC    WRITE (ICHECK,*) ' CHECK 2 ,NST=',NST
      WRITE(IOUT,948)
      WRITE (IOUT,983)TITLE
      WRITE (IOUT,502) REPNUC
  502 FORMAT (' NUCLEAR REPULSION ENERGY ',F20.12)
      WRITE(IOUT,503) (IST, IST=1,NST)
  503 FORMAT(//27H IRREDUCIBLE REPRESENTATION,12(I4,4X))
      WRITE(IOUT,951) (ND(IST), IST=1,NST)
      WRITE(IOUT,952) (ITYP(IST), IST=1,NST)
      WRITE(ICHECK,950) (LABEL(I), I=1,26), (IST, IST=1,NST)
      WRITE(ICHECK,951) (ND(IST), IST=1,NST)
      WRITE(ICHECK,952) (ITYP(IST), IST=1,NST)
CC    WRITE(ICHECK,*) ' POINT THREE IN SYMINP'
      WRITE(ICHECK,965)
CRBR  WRITE(IOUT,965)
      DO 218 IST=1,NST
           DO 218 JST=1,NST
                DO 218 KST=1,NST
CRBR  IF(IDP(IST,JST,KST).EQ.1) WRITE(IOUT,990) ITYP(IST),ITYP(JST),
CRBR 1ITYP(KST)
  218 IF(IDP(IST,JST,KST).EQ.1) WRITE(ICHECK,990) ITYP(IST),ITYP(JST),
     1ITYP(KST)
      IF (IFLAG3.GT.0) WRITE(ICHECK,949) REPNUC, ITOL, ICUT, NTAPE
      ISF=0
      ISFR=0
      DO 360 IS=1,NS
           ICU=NC(IS)
           WRITE(ICHECK,953) MTYPE(1,IS),MTYPE(2,IS),CHG(IS),
     1     (IC, X(IC,IS), Y(IC,IS), Z(IC,IS), IC=1,ICU)
           WRITE (IOUT,953) MTYPE(1,IS),MTYPE(2,IS),CHG(IS),(IC,X(IC,IS)
     *     ,Y(IC,IS),Z(IC,IS),IC=1,ICU)
           IF(ICU.EQ.1) GO TO 240
CRBR       WRITE(IOUT,954) (ICA(IC,IS,1), IC=1,ICU)
           WRITE(ICHECK,954) (ICA(IC,IS,1), IC=1,ICU)
           DO 220 IG=2,NG
  220      WRITE(ICHECK,955) IG, (ICA(IC,IS,IG), IC=1,ICU)
C     IF(NG.EQ.NGENP1) GO TO 240
C     NGENP2=NGENP1+1
C     DO 230 IG=NGENP2,NG
C 230 WRITE(ICHECK,956) IG, (ICA(IC,IS,IG), IC=1,ICU)
  240      IFU=NF(IS)
           IF(IFU.EQ.0) GO TO 360
           DO 350 IF=1,IFU
                ISF=ISF+1
                ICONS=MCONS(ISF)
                ICONU=NCON(ICONS)
                WRITE (IOUT,958) LBLSH(LMNP1(ICONS)), (ZET(ICON,ICONS),
     *          ICON=1,ICONU)
                WRITE(ICHECK,958) LBLSH(LMNP1(ICONS)), (ZET(ICON,ICONS),
     *          ICON=1,ICONU)
                WRITE(IOUT,959) (ETA(ICON,ICONS), ICON=1,ICONU)
                WRITE(ICHECK,959) (ETA(ICON,ICONS), ICON=1,ICONU)
                WRITE(IOUT,960)
                WRITE(ICHECK,960)
                ITL=NTL(ISF)
                ITU=NTU(ISF)
                IGCS=MGCS(ISF)
                IAORDS=MAORDS(IGCS)
                IRU=NIR(IAORDS)
                ICTU=NCT(ISF)
                ICS=0
                ICSR=0
                IPC=IBL
                NCOL=0
                DO 350 IR=1,IRU
                     ISFR=ISFR+1
                     LAI=LA(IR,IAORDS)
                     ISO=NSOPR(LAI)+LB(ISFR)
                     MS(ISO)=IS
                     MNL(ISO)=(LMNP1(ICONS)+1)**2/4
CC                   WRITE(ICHECK,*)' 350 LOOP MNL(ISO)=',MNL(ISO)
                     IF(MNL(ISO)-4) 310,280,250
C        DISTINGUISH 4P FROM 4F.
  250                DO 260 ICT=1,ICTU,10
  260                IF((IGC(ICT  ,ICS+1,IGCS).NE.0.AND.
     1               IGC(ICT  ,ICS+1,IGCS).EQ.IGC(ICT+5,ICS+1,IGCS).AND.
     2               IGC(ICT+5,ICS+1,IGCS).EQ.IGC(ICT+7,ICS+1,IGCS)).OR.
     3               (IGC(ICT+1,ICS+1,IGCS).NE.0.AND.
     4               IGC(ICT+1,ICS+1,IGCS).EQ.IGC(ICT+3,ICS+1,IGCS).AND.
     5               IGC(ICT+3,ICS+1,IGCS).EQ.IGC(ICT+8,ICS+1,IGCS)).OR.
     6               (IGC(ICT+2,ICS+1,IGCS).NE.0.AND.
     7               IGC(ICT+2,ICS+1,IGCS).EQ.IGC(ICT+4,ICS+1,IGCS).AND.
     8               IGC(ICT+4,ICS+1,IGCS).EQ.IGC(ICT+6,ICS+1,IGCS))) GO
     *                TO 270
                     GO TO 310
  270                MNL(ISO)=5
                     GO TO 310
C        DISTINGUISH 3S FROM 3D.
  280                DO 290 ICT=1,ICTU,6
  290                IF(IGC(ICT  ,ICS+1,IGCS).NE.0.AND.
     1               IGC(ICT  ,ICS+1,IGCS).EQ.IGC(ICT+1,ICS+1,IGCS).AND.
     2               IGC(ICT+1,ICS+1,IGCS).EQ.IGC(ICT+2,ICS+1,IGCS)) GO
     *               TO 300
                     GO TO 310
  300                MNL(ISO)=3
  310                IAU=ND(LAI)
CC                   WRITE(ICHECK,*)' LAI=',LAI,' ND ',ND
                     DO 340 IA=1,IAU
CC                        WRITE(ICHECK,*) ' INSIDE 340 LOOP  IAU=',IAU
                          NCOL=NCOL+1
                          LBLSO(NCOL)=LB(ISFR)
                          LTYP(NCOL)=ITYP(LAI)
                          LBLA(NCOL)=IA
c8-18-88                  IF(NCOL.NE.18.AND.(IR.NE.IRU.OR.IA.NE.IAU))
                          IF(NCOL.NE.15.AND.(IR.NE.IRU.OR.IA.NE.IAU))
     *                     GO TO 340
CC                        WRITE(ICHECK,*) ' ABOUT TO 961 '
                          WRITE (IOUT,961)IPC, (LBLSO(ICOL),LTYP(ICOL),
     *                    LBLA(ICOL), ICOL=1,NCOL)
                          WRITE(ICHECK,961)IPC, (LBLSO(ICOL),LTYP(ICOL)
     *                    ,LBLA(ICOL), ICOL=1,NCOL)
                          ICT=0
                          DO 330 IC=1,ICU
                               DO 330 IT=ITL,ITU
                                    ICT=ICT+1
                                    DO 320 ICOL=1,NCOL
                                         C(ICOL)=IGC(ICT,ICSR+ICOL,IGCS)
  320                               CONTINUE
CC                        WRITE(ICHECK,*) ' ABOUT TO 962 '
                          WRITE (IOUT,962) IC, LBLAO(IT), (C(ICOL),
     *                    ICOL=1,NCOL)
  330                     WRITE(ICHECK,962) IC, LBLAO(IT), (C(ICOL),
     *                    ICOL=1,NCOL)
                          ICSR=ICSR+NCOL
                          NCOL=0
                          IPC=ISK
  340                CONTINUE
  350      ICS=ICS+IAU
  360 CONTINUE
      NKIND=1
      NSECT=NSECT+10
      ICLOS=0
C     PRINT '(' *** ',26A3)',LABEL
CC    WRITE(NTAPE)NKIND,ICLOS,LABEL,REPNUC, NST, (ND(IST),IST=1,NST),
CC   1(ITYP(IST),IST=1,NST),(NSO(IST),IST=1,NST),NS,(MTYPE(1,IS),
CC   2IS=1,NS),ISFR, (MS(ISO),ISO=1,ISFR), (MNL(ISO),ISO=1,ISFR)
CSEL  CALL RSETSA(NTAPE,10)
C
C     ----- WRITE HEADER INFORMATION ON INTEGRAL TAPE ----
CTJL  NTAPES=93
CTJL  CALL RFILE(NTAPES)
      CALL WWRITW (NTAPE,NKIND,1,1,IEND)
      CALL WWRITW (NTAPE,ICLOS,1,IEND,IEND)
      CALL WWRITW(NTAPE,TITLE,20,IEND,IEND)
      CALL WWRITW (NTAPE,NUCREP,INTOWP (1),IEND,IEND)
      CALL WWRITW (NTAPE,NST,1,IEND,IEND)
      CALL WWRITW(NTAPE,ND,NST,IEND,IEND)
      CALL WWRITW(NTAPE,ITYP,NST,IEND,IEND)
      CALL WWRITW(NTAPE,NSO,NST,IEND,IEND)
      CALL WWRITW (NTAPE,NS,1,IEND,IEND)
      CALL WWRITW(NTAPE,MTYPE,2*NS,IEND,IEND)
      CALL WWRITW (NTAPE,ISFR,1,IEND,IEND)
      CALL WWRITW(NTAPE,MS,ISFR,IEND,IEND)
      CALL WWRITW(NTAPE,MNL,ISFR,IEND,IEND)
      ITOT = 25 + INTOWP(1) + 3*NST + 2*NS + 2*ISFR
      ISADR = I2SEC(ITOT) + 1
      CALL RSETSA(NTAPE,ISADR)
CTJL  WRITE(*,*) ' SETTING THE SECTOR ADDRESS OF ITAP34 TO ',ISADR
CTJL  WRITE(*,*) ' ACTUALLY SET AT SECTOR ',ISADRA
C************* TJL
C
CC    WRITE(ICHECK,*) ' POINT FIVE IN SYMINP -- AFTER WWRITW'
C
C        MULTIPLY NORMALIZATION CONSTANTS INTO CONTRACTION COEFFICIENTS
C
      DO 370 ICONS=1,NCONS
           ICONU=NCON(ICONS)
           DO 370 ICON=1,ICONU
                T=A4*ZET(ICON,ICONS)
  370 ETA(ICON,ICONS)=DSQRT(T**LMNP1(ICONS)/A2*DSQRT(T/A2))*
     1ETA(ICON,ICONS)
C
CC    WRITE(ICHECK,*) ' ******* RETURNING FROM SYMINP *******'
      RETURN
C
  790 FORMAT(1H1,26A3)
  800 FORMAT(1X,26I3)
  801 FORMAT(I3,12(I2,A3,1X))
  803 FORMAT(I4,I3/(1X,2G14.8))
  804 FORMAT(1X,A3,2I3,F3.0)
  805 FORMAT(1X,3F14.8)
  890 FORMAT(26A3)
  900 FORMAT(26I3)
  901 FORMAT(I3,12(I2,A3,1X))
  903 FORMAT(2I3/(2G14.8))
  904 FORMAT(A3,1X,2I3,F3.0)
  905 FORMAT(3F14.8)
  948 FORMAT(/,13X,55HTHIS PROGRAM COMPUTES INTEGRALS OVER SYMMETRY ORBI
     1TALS./14X,53HTHE ATOMIC ORBITALS ARE CONTRACTED GAUSSIAN ORBITALS.
     2/14X,54HTHE POINT GROUPS ARE LIMITED TO D2H AND ITS SUBGROUPS.//
     335X,12HR. M. PITZER/34X,14HH. F. SCHAEFER/)
  949 FORMAT(6(/),25H NUCLEAR REPULSION ENERGY,F14.8/////68H PRIMITIVE A
     1O INTEGRALS NEGLECTED IF EXPONENTIAL FACTOR BELOW 10**(-,I2,1H)/63
     2H CONTRACTED AO AND SO INTEGRALS NEGLECTED IF VALUE BELOW 10**(-,I
     32,1H)/43H SYMMETRY ORBITAL INTEGRALS WRITTEN ON UNIT,I3)
  950 FORMAT(1H ,12X,55HTHIS PROGRAM COMPUTES INTEGRALS OVER SYMMETRY OR
     1BITALS./14X,53HTHE ATOMIC ORBITALS ARE CONTRACTED GAUSSIAN ORBITAL
     2S./14X,54HTHE POINT GROUPS ARE LIMITED TO D2H AND ITS SUBGROUPS.//
     335X,12HR. M. PITZER/34X,14HH. F. SCHAEFER////12H REFERENCES //6X,4
     40HSYMMETRY ANALYSIS (EQUAL CONTRIBUTIONS),/6X,45HR. M. PITZER, J.
     5CHEM. PHYS. 58, 3111 (1973).//6X,31HAO INTEGRAL EVALUATION (HONDO)
     6,/6X,65HM. DUPUIS, J. RYS, AND H. F. KING, J. CHEM. PHYS. 65, 111
     7(1976).,14(/),13X,26A3/////27H IRREDUCIBLE REPRESENTATION,12(I4,4X
     8))
  951 FORMAT(11H DEGENERACY,12X,12I8)
  952 FORMAT(6H LABEL,23X,12(A3,5X))
  953 FORMAT(//,9X,22('*'),/,9X,4H**  ,2A4,10H ATOMS  **,/,9X,22('*'),/,
     1/,15H NUCLEAR CHARGE,F7.2//7H CENTER,12X,1HX,15X,1HY,15X,1HZ,/
     2,(I4,7X,3F16.8))
  954 FORMAT(/9H OPERATOR,6X,19HCENTER INTERCHANGES/2X,6H1(ID.),6X,24I3)
  955 FORMAT(I3,6H(GEN.),5X,24I3)
  956 FORMAT(I3,11X,24I3)
  958 FORMAT(//10X,A2,9H ORBITALS/18H ORBITAL EXPONENTS,7X,7(1PG15.7))
  959 FORMAT(25H CONTRACTION COEFFICIENTS,7(1PG15.7))
  960 FORMAT(/,10X,19H SYMMETRY ORBITALS )
C8-18-88  961 FORMAT(A1,5HCR-AO,18(I3,A3,I1))
  961 FORMAT(/,A1,11HCenter  AO ,(15(I3,A4,I1)))
C8-18-88  962 FORMAT(I3,A3,18F7.3)
  962 FORMAT(I5,3H   ,A4,(15(F8.4)))
  965 FORMAT(/21H DIRECT PRODUCT TABLE,/)
  970 FORMAT(14H MSU TOO SMALL,I3)
  971 FORMAT(17H KAORDS TOO SMALL,I3)
  972 FORMAT(17H MCONSU TOO SMALL,I4)
  973 FORMAT(16H MGCSU TOO SMALL,I4)
  974 FORMAT(15H MSTU TOO SMALL,I3)
  975 FORMAT(14H MRU TOO SMALL,I3)
  976 FORMAT(15H MCSU TOO SMALL,I3)
  977 FORMAT(15H MCTU TOO SMALL,I3)
  978 FORMAT(16H MCONU TOO SMALL,I3)
  979 FORMAT(14H MCU TOO SMALL,I3)
  980 FORMAT(16H MSFRU TOO SMALL,I4)
  981 FORMAT(15H MSFU TOO SMALL,I4)
  982 FORMAT(14H MGU TOO SMALL,I3)
  983 FORMAT(//,' INTEGRAL LABEL:   ',20A4,///)
  990 FORMAT(4X,1H(,A3,3H) (,A3,4H) = ,A3)
      END
      SUBROUTINE TOPITZ(NF,NC,NIR,NCON,LMNP1,NSO,ND,NSOPR,
     #NBLPR,LA,IGC,NTL,NTU,NT,NCT,MCONS,
     #MAORDS,MGCS,ICA,LB,MS,MNL,IDP,MTYPE,ITYP,
     #CHG,ZET,ETA,XYZ,NIRL,ZAN,C,ICT,NS,KS,EX,
     #CSPD,KSTART,KATOM,KTYPE,KNG,KMIN,KMAX,ISC,
     #IPC,SLAB,CC,LAB,LOC,LOC2,KLASS,LAMBDA,IADDR,
     #LBLAT)
C
C CHANGE HONDO ARRAYS TO PITZER TYPE ARRAYS FOR USE IN PITZERS
C SYMMETRY INTEGRAL PROGRAM.                 PWS 15 JUNE 1983
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY NF,NC,NIR,NCON,LMNP1,NSO,ND,NSOPR,
C*** #NBLPR,LA,IGC,NTL,NTU,NT,NCT,MCONS,
C*** #MAORDS,MGCS,ICA,LB,MS,MNL,IDP,MTYPE,ITYP,
C*** #CHG,ZET,ETA,XYZ,NIRL,ZAN,C,ICT,NS,KS,EX,
C*** #CSPD,KSTART,KATOM,KTYPE,KNG,KMIN,KMAX,ISC,
C*** #IPC,SLAB,CC,LAB,LOC,LOC2,KLASS,LAMBDA,IADDR,
C*** #LBLAT
C
      REAL*8 IGC(MCTU,MCSU,MGCSU),CHG(MSU),ZET(MCONU,MCONSU)
      REAL*8 ETA(MCONU,MCONSU),XYZ(MCU,MSU,3)
      REAL*8 ZAN(MXAT),C(3,MXAT),EX(MXPR),CSPD(MXPR,3)
      REAL*8 CC(MXCF)
      INTEGER NF(MSU),NC(MSU),NIR(KAORDS),NCON(MCONSU),LMNP1(MCONSU)
      INTEGER NSO(MSTU),ND(MSTU),NSOPR(MSTU),NBLPR(MSTU)
      INTEGER LA(MRU,KAORDS),NTL(MSFU),NTU(MSFU),NT(MSFU),NCT(MSFU)
      INTEGER MCONS(MSFU),MAORDS(MGCSU),MGCS(MSFU),ICA(MCU,MSU,MGU)
      INTEGER LB(MSFRU),MS(MSFRU),MNL(MSFRU),IDP(MSTU,MSTU,MSTU)
      INTEGER MTYPE(2,MSU),ITYP(MSTU),NIRL(KAORDS),SLAB(MXSYM)
      INTEGER LBLAT(2,MXAT)
      INTEGER ICT(MXAT,MXTRN),NS(MXAT),KS(MXAT),KSTART(MXSH)
      INTEGER KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),KMIN(MXSH)
      INTEGER KMAX(MXSH),ISC(MXSH,MXPSYM),IPC(MXSH,MXPSYM),LAB(MXCF)
      INTEGER LOC(MXAT,3),LOC2(MXAT,3),KLASS(MXAT),LAMBDA(MXSYM)
      INTEGER IADDR(MXSYM)
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /PSIZE/  MSU,KAORDS,MCONSU,MGCSU,MSTU,MRU,MCSU,MCTU,
     #MCONU,MCU,MSFU,MGU,MSFRU,MNSFU,MPRU,MCXU,
     #MCCU,MBLU
      COMMON /MAXDIM/ MXAT,MXTRN,MXPR,MXSH,MXSYM,MXCF,MXT,MXISO,
     #MXPSYM
      COMMON /INFOA/  NAT,ICH,MUL,NUM,NQ,NX,NE,NA,NB
      COMMON /NSHEL/  NSHELL
C
CC    WRITE(ICHECK,900)
CC900 FORMAT (//,'    PITZER ARRAYS',//)
CC
CC    WRITE(ICHECK,920) ((ICT(IQ,IQQ),IQ=1,MXAT),IQQ=1,MXTRN)
CC920 FORMAT (/,'  ICT:',(20I4))
CC
C
      IATOM=1
      DO 3 ISU=1,MSU
           NC(ISU)=0
           DO 2 IT=1,MGU
                JATOM=ICT(IATOM,IT)
                DO 1 JT=1,IT-1
                     IF (JATOM.EQ.ICT(IATOM,JT)) GO TO 2
    1           CONTINUE
                NC(ISU)=NC(ISU)+1
    2      CONTINUE
           IATOM=IATOM+NC(ISU)
    3 CONTINUE
C
      IF (IATOM.NE.NAT+1) THEN
         WRITE(IOUT,200) IATOM-1,NAT
  200    FORMAT (//,' ERROR IN INTEGRALS(TOPITZ): IATOM--',I4,' NAT'
     #,          I4,//)
C***     CALL M:ABORT
      STOP
      END IF
C
      IBIAS=0
      DO 6 ISU=1,MSU
           DO 5 IATOM=IBIAS+1,IBIAS+NC(ISU)
                DO 4 IT=1,MGU
                     ICA(IATOM-IBIAS,ISU,IT)=ICT(IATOM,IT)-IBIAS
    4           CONTINUE
    5      CONTINUE
           IBIAS=IBIAS+NC(ISU)
    6 CONTINUE
CC
CC    WRITE(ICHECK,901)(NC(ISU),ISU=1,MSU)
CC901 FORMAT (/,' NC=',(20I5))
CC    DO 106 ISU=1,MSU
CC       WRITE(ICHECK,902) ISU
CC902    FORMAT (//,' ISU= ',I4)
CC       DO 105 IATOM=1,NC(ISU)
CC          WRITE(ICHECK,903) (ICA(IATOM,ISU,IGU),IGU=1,MGU)
CC903       FORMAT (1X,20I5)
CC105    CONTINUE
  106 CONTINUE
CC
      IATOM=1
      ISFU=0
      ICONSU=0
      IGCS=0
      DO 15 ISU=1,MSU
           IC=NC(ISU)
           NF(ISU)=NS(IATOM)
           ISTART=KS(IATOM)
           ITEST=-1
           DO 10 ISHELL=ISTART,ISTART+NS(IATOM)-1
                ISFU=ISFU+1
                ICONSU=ICONSU+1
                ITYPE=KTYPE(ISHELL)
                LMNP1(ICONSU)=KTYPE(ISHELL)
                IF (ITYPE.NE.ITEST) THEN
                     ITEST=ITYPE
                     IGCS=IGCS+1
                END IF
                MGCS(ISFU)=IGCS
                NCON(ICONSU)=KNG(ISHELL)
                NTL(ISFU)=KMIN(ISHELL)
                NTU(ISFU)=KMAX(ISHELL)
                NT(ISFU)=KMAX(ISHELL)-KMIN(ISHELL)+1
                NCT(ISFU)=NT(ISFU)*IC
                I1=KSTART(ISHELL)
                I2=I1+KNG(ISHELL)-1
                ICONU=0
                DO 9 I=I1,I2
                     ICONU=ICONU+1
                     ZET(ICONU,ICONSU)=EX(I)
                     ETA(ICONU,ICONSU)=CSPD(I,ITYPE)
    9           CONTINUE
   10      CONTINUE
           CHG(ISU)=ZAN(IATOM)
           MTYPE(1,ISU)=LBLAT(1,IATOM)
           MTYPE(2,ISU)=LBLAT(2,IATOM)
           DO 12 JATOM=IATOM,IATOM+IC-1
                DO 11 I=1,3
                     XYZ(JATOM-IATOM+1,ISU,I)=C(I,JATOM)
   11           CONTINUE
   12      CONTINUE
           IATOM=IATOM+IC
   15 CONTINUE
C
      IF (ISFU.NE.MSFU) THEN
         WRITE(ICHECK,*) ' ISFU.NE.MSFU IN TOPITZ'
C***     CALL M:ABORT
      STOP
      END IF
      IF (ICONSU.NE.MCONSU) THEN
         WRITE(ICHECK,*) ' ICONSU.NE.MCONSU IN TOPITZ'
C***     CALL M:ABORT
      STOP
      END IF
      IF (IGCS.NE.MGCSU) THEN
         WRITE(ICHECK,*) ' IGCS.NE.MGCSU IN TOPITZ'
C***     CALL M:ABORT
      STOP
      END IF
C
C     ----- AT THE MINUTE, THERE IS A ONE-TO-ONE CORRESPONDENCE
C           BETWEEN SHELLS ON ATOMS AND ORDER OF CONTRACTION SETS.
C           THEREFORE, MCONS IS A UNIT VECTOR. MAORDS IS ALSO.
C
      DO 16 I=1,MSFU
           MCONS(I)=I
   16 CONTINUE
      DO 17 I=1,MGCSU
           MAORDS(I)=I
   17 CONTINUE
CC
CC    WRITE(ICHECK,904) NF
CC    WRITE(ICHECK,905) LMNP1
CC    WRITE(ICHECK,906) NCON
CC    WRITE(ICHECK,907) NTL
CC    WRITE(ICHECK,908) NTU
CC    WRITE(ICHECK,909) NT
CC    WRITE(ICHECK,910) NCT
CC    WRITE(ICHECK,911) MGCS
CC904 FORMAT ('     NF:',(T10,20I4))
CC905 FORMAT ('  LMNP1:',(T10,20I4))
CC906 FORMAT ('   NCON:',(T10,20I4))
CC907 FORMAT ('    NTL:',(T10,20I4))
CC908 FORMAT ('    NTU:',(T10,20I4))
CC909 FORMAT ('     NT:',(T10,20I4))
CC910 FORMAT ('    NCT:',(T10,20I4))
CC911 FORMAT ('   MGCS:',(T10,20I4))
CC
CC    DO 110 ICONSU=1,MCONSU
CC       MX=NCON(ICONSU)
CC       WRITE(ICHECK,912) (ZET(I,ICONSU),ETA(I,ICONSU),I=1,MX)
CC110 CONTINUE
CC912 FORMAT (//,(1X,2F20.8))
CC    DO 111 ISU=1,MSU
CC       MX=NC(ISU)
CC       WRITE(ICHECK,913) ((XYZ(I,ISU,J),J=1,3),I=1,MX)
CC111 CONTINUE
CC913 FORMAT (//,(1X,3F12.6))
CC
C
C     ----- WORK ON SYMMETRY INFORMATION -----
C
      CALL TOGCS(IGC,LA,NIR,NIRL,ND,ITYP,LAMBDA,SLAB,ICT,KLASS,
     #KATOM,KTYPE,KMIN,ISC,IPC,LOC,LOC2,LAB,CC)
C
C     ----- FILL OUT ARRAYS TO DO WITH SO'S -----
C
      DO 20 I=1,MSTU
           NSO(I)=0
   20 CONTINUE
      DO 21 I=1,MSFRU
           LB(I)=-999999
   21 CONTINUE
C
      ISF=0
      ISFR=0
      DO 25 IS=1,MSU
           DO 24 IF=1,NF(IS)
                ISF=ISF+1
                IAORD=MAORDS(MGCS(ISF))
                DO 23 IR=1,NIR(IAORD)
                     ISFR=ISFR+1
                     NSO(LA(IR,IAORD))=NSO(LA(IR,IAORD))+1
                     LB(ISFR)=NSO(LA(IR,IAORD))
   23           CONTINUE
   24      CONTINUE
   25 CONTINUE
C
      IF (ISF.NE.MSFU) THEN
         WRITE(IOUT,700) ISF,MSFU
  700    FORMAT (//,' ERROR IN INTEGRALS(TOPITZ): ISF.NE.MSFU '
     #,          2I5,//)
C***     CALL M:ABORT
      STOP
      END IF
      IF (ISFR.NE.MSFRU) THEN
         WRITE(IOUT,701) ISFR,MSFRU
  701    FORMAT (//,' ERROR IN INTEGRALS(TOPITZ): ISFR.NE.MSFRU '
     #,          2I5,//)
C***     CALL M:ABORT
      STOP
      END IF
C
      I=0
      DO 26 ISTU=1,MSTU
           NSOPR(ISTU)=I
           I=I+NSO(ISTU)
   26 CONTINUE
C
C     ----- IDP IS SYMMETRY MULTIPLICATION TABLE ----
C
      DO 29 K=1,MSTU
           DO 28 J=1,MSTU
                DO 27 I=1,MSTU
                     IDP(I,J,K)=0
   27           CONTINUE
                I=IEOR(K-1,J-1)+1
                IDP(I,J,K)=1
   28      CONTINUE
   29 CONTINUE
C
C
CC    WRITE(ICHECK,'(/,'  NSOPR:',(20I5))') NSOPR
CC    WRITE(ICHECK,'(/,'     LB:',(20I5))') LB
CC    WRITE(ICHECK,'(/,'    NSO:',(20I5))') NSO
C
C
      RETURN
      END
      SUBROUTINE TOGCS(IGC,LA,NIR,NIRL,ND,ITYP,LAMBDA,SLAB,ICT,
     #KLASS,KATOM,KTYPE,KMIN,ISC,IPC,LOC,LOC2,
     #LAB,CC)
C
C  THIS ROUTINE CONVERTS HONDO SYMMETRY ARRAYS TO PITZERS
C  GENERAL CONTRACTION MATRICES (IGC), AS WELL AS FORMS OTHER
C  USEFUL ARRAYS.
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY IGC,LA,NIR,NIRL,ND,ITYP,LAMBDA,SLAB,ICT,
C*** #KLASS,KATOM,KTYPE,KMIN,ISC,IPC,LOC,LOC2,
C*** #LAB,CC
C
      REAL*8 IGC(MCTU,MCSU,MGCSU),CC(MXCF)
      INTEGER LA(MRU,KAORDS),NIR(KAORDS),NIRL(KAORDS)
      INTEGER ND(MSTU),LAMBDA(MXSYM),ICT(MXAT,MXTRN),KLASS(MXAT)
      INTEGER KATOM(MXSH),KTYPE(MXSH),KMIN(MXSH),ISC(MXSH,MXPSYM)
      INTEGER IPC(MXSH,MXPSYM),LOC(MXAT,3),LOC2(MXAT,3),LAB(MXCF)
      INTEGER ITYP(MSTU),SLAB(MXSYM)
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /PSIZE/  MSU,KAORDS,MCONSU,MGCSU,MSTU,MRU,MCSU,MCTU,
     #MCONU,MCU,MSFU,MGU,MSFRU,MNSFU,MPRU,MCXU,
     #MCCU,MBLU
      COMMON /MAXDIM/ MXAT,MXTRN,MXPR,MXSH,MXSYM,MXCF,MXT,MXISO,
     #MXPSYM
      COMMON /NSHEL/  NSHELL
      COMMON /SALCS/  NIRRED
      COMMON /SYMTRY/ NT
      COMMON /INFOA/  NAT
      COMMON /PACKQ/  I1,I2,I3,I4,I5
      COMMON /ISOPAC/ INDIN(120),INDOUT(30)
C
      DIMENSION II(30),CA(30,18),IA(3),A(10)
C
C
      DATA IA/0,1,4/
      DATA A/3H S ,3H X ,3H Y ,3H Z ,3H XX,3H YY,3H ZZ,
     13H XY,3H XZ,3H YZ/
C
      ITM=NT
      NTSAVE=NT
      NT=NIRRED
      NTD=(NT+3)/4
      IGCSU=0
      ISFRU=0
C
      DO 3 I=1,KAORDS
           NIR(I)=0
           NIRL(I)=0
           DO 2 J=1,MRU
                LA(J,I)=0
    2      CONTINUE
    3 CONTINUE
      DO 6 I=1,MGCSU
           DO 5 J=1,MCSU
                DO 4 K=1,MCTU
                     IGC(K,J,I)=0.0D+00
    4           CONTINUE
    5      CONTINUE
    6 CONTINUE
      DO 9 I=1,MSTU
           ND(I)=LAMBDA(I)
           ITYP(I)=SLAB(I)
    9 CONTINUE
C
C
      DO 300 NATOM=1,NAT
           DO 10 IT=1,ITM
                IF(ICT(NATOM,IT).GT.NATOM) GO TO 300
   10      CONTINUE
           ICLASS=KLASS(NATOM)
           DO 20 I=1,NAT
   20      II(I)=0
           DO 30 IT=1,ITM
                JCEN=ICT(NATOM,IT)
   30      II(JCEN)=1
           NP=0
           DO 200 KT=1,3
                NP=NP+KT
                DO 32 I=1,NSHELL
                     J=KATOM(I)
                     IF(J.NE.NATOM) GO TO 32
                     IF(KTYPE(I).EQ.KT) GO TO 35
                     IF(KT.EQ.1.AND.KTYPE(I).EQ.2.AND.KMIN(I).EQ.1)
     *                GO TO 34
   32           CONTINUE
                GO TO 200
   34           CONTINUE
                DO 334 IQ=1,NTD
                     INDOUT(IQ)=ISC(I,IQ)
  334           CONTINUE
                GO TO 36
   35           CONTINUE
                DO 335 IQ=1,NTD
                     INDOUT(IQ)=IPC(I,IQ)
  335           CONTINUE
C
   36           CALL ISOOUT
                ID=IA(KT)
                KA=LOC(ICLASS,KT)
                KAA=KA
                KB=LOC2(ICLASS,KT)
C
                IGCSU=IGCSU+1
                NSOL=0
                KSO=0
C
   25           I5=LAB(KA+1)
                CALL UNPAK
                IRP=I3
                IPA=I2+INDIN(IRP)-1
   40           LL=LAMBDA(IRP)
                MAX=NP*LL
C
                KSO=KSO+1
                LA(KSO,IGCSU)=IRP
C
                DO 50 I=1,MAX
   50           CA(NATOM,I)=CC(KA+I)
                DO 100 JCEN=1,NAT
                     IF(II(JCEN).EQ.0) GO TO 100
                     IF(JCEN.EQ.NATOM) GO TO 100
                     JCLASS=KLASS(JCEN)
                     KC=LOC(JCLASS,KT)+KA-KAA
                     DO 70 I=1,MAX
   70                CA(JCEN,I)=CC(KC+I)
  100           CONTINUE
                K=0
                DO 140 L=1,LL
C
                     NSOL=NSOL+1
                     NAO=0
C
                     DO 120 N=1,NAT
                          IF (II(N).EQ.0) GO TO 120
                          DO 110 I=1,NP
                               NAO=NAO+1
                               IGC(NAO,NSOL,IGCSU)=CA(N,K+I)
  110                     CONTINUE
  120                CONTINUE
C
C
  140           K=K+NP
                KA=KA+MAX
                IF(KA.LT.KB) GO TO 25
C
                NIR(IGCSU)=KSO
                NIRL(IGCSU)=NSOL
C
  200      CONTINUE
  300 CONTINUE
      NT=NTSAVE
C
C     ----- PRINT ARRAYS -----
C
CC
CC    WRITE(ICHECK,900)
CC900 FORMAT (//,'    SYMMETRY INFORMATION',//,'   NIR    LA')
CC    DO 410 JGC=1,MGCSU
CC       MXR=NIR(JGC)
CC       WRITE(ICHECK,901) NIR(JGC),(LA(I,JGC),I=1,MXR)
CC410 CONTINUE
CC901 FORMAT (1X,I3,(T10,24I3))
CC    WRITE(ICHECK,902)
CC902 FORMAT (//,'      IGC MATRICES ',/)
CC    DO 430 JGC=1,MGCSU
CC       IRL=NIRL(JGC)
CC       DO 420 JSO=1,IRL
CC          WRITE(ICHECK,903) (IGC(JAO,JSO,JGC),JAO=1,IRL)
CC420    CONTINUE
CC430 CONTINUE
CC903 FORMAT (1X,15F8.3)
CC    WRITE(ICHECK,904) ND
CC904 FORMAT (//,'    ND:',(20I5))
CC    WRITE(ICHECK,905) ITYP
CC905 FORMAT (/,'  ITYP:',(20I5))
CC
      RETURN
      END
      SUBROUTINE ISOOUT
C
C
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      LOGICAL*4 TRANS(120)
      LOGICAL*1 INDOUT
      EQUIVALENCE (INDIN(1),TRANS(1))
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /SYMTRY/ NT
      COMMON /ISOPAC/ INDIN(120),INDOUT(30)
C
C
      DO 20 J=1,NT
C     INDTEM=INDOUT(J)
C       DO 21 K=1,4
C       L=4*(J-1)+K
C       IDEN=10**(4-K)
C       INDIN(L)=INDTEM/IDEN
C       INDTEM=INDTEM-IDEN*INDIN(L)
C  21   CONTINUE
        TRANS(J)=INDOUT(J)
   20 CONTINUE
      RETURN
C
C--ISOIN-------------------------------------------------ISOIN
C
      ENTRY ISOIN
C
      DO 40 J=1,NT
         INDOUT(J)=TRANS(J)
   40 CONTINUE
      RETURN
      END
      SUBROUTINE PAK
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /PACKQ/  IX(4),I5(4)
C
      LOGICAL*1 I5
      LOGICAL*4 TRANS(4)
      EQUIVALENCE (IX(1),TRANS(1))
C
C     ITEMP=0
      DO 1 I=1,4
C        IF (IX(I).GT.255) THEN
C           WRITE(ICHECK,*) ' PACKING PROBLEM'
C***        CALL M:ABORT
C        END IF
C        IDEN=10**(4-I)
C        ITEM=IX(I)*IDEN
C        ITEMP=ITEMP+ITEM
         IF (IX(I) .GT. 255) STOP ' PACKING PROBLEM '
         I5(I)=TRANS(I)
    1 CONTINUE
C     I5=ITEMP
C
      RETURN
C
C----UNPAK-----------------------------------------------UNPAK
C
      ENTRY UNPAK
C
C     ITEMP=I5
      DO 2 I=1,4
C        IDEN=10**(4-I)
C        IX(I)=ITEMP/IDEN
C        ITEMP=ITEMP-IDEN*IX(I)
         TRANS(I)=I5(I)
    2 CONTINUE
C
      RETURN
      END
      SUBROUTINE INTR(C,NAT,IW)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY C
C
      REAL*8 C(3,NAT)
C
C
C     ----- CALCULATE ATOM-ATOM DISTANCES -----
C
      DIMENSION R(30)
C
      DATA ONE,UNIT /1.0D+00,0.52917706D+00/
C
      IPASS=1
      FAC=ONE
      WRITE(IW,9995)
 9995 FORMAT(//,10X,'INTERNUCLEAR DISTANCES ( A.U.)',/,10X,30(1H-))
 9996 FORMAT(/,10X,'INTERNUCLEAR DISTANCES (ANGS.)',/,10X,30(1H-))
    5 CONTINUE
      MAX=0
   10 MIN=MAX+1
      MAX=MAX+8
      IF(MAX.GT.NAT) MAX=NAT
      WRITE(IW,9999)
      WRITE(IW,9998) (J,J=MIN,MAX)
      WRITE(IW,9999)
      DO 30 I=1,NAT
         DO 20 J=MIN,MAX
            RR=(C(1,I)-C(1,J))**2+(C(2,I)-C(2,J))**2+(C(3,I)-C(3,J))**2
   20    R(J)=DSQRT(RR)*FAC
         WRITE(IW,9997) I,(R(J),J=MIN,MAX)
   30 CONTINUE
      IF(MAX.LT.NAT) GO TO 10
      FAC=UNIT
      WRITE(IW,9999)
      IF(IPASS.EQ.2) RETURN
      IPASS=2
      WRITE(IW,9996)
      GO TO 5
 9999 FORMAT(5X)
 9998 FORMAT(5X,8(7X,I2,6X))
 9997 FORMAT(I5,8F15.7)
      END
      SUBROUTINE SOTOAO(NC,NF,MCONS,ITRNAO,NSOT,NSO,USOTAO,MGCS,
     #MAORDS,NIR,NCT,LA,IGC,LMNP1,ISOTAO)
C
C         BRL        21 JULY 1983                      PWS
C
C  MODULE TO FORM THE SO-TO-AO TRANSFORMATION MATRIX GIVEN PITZER
C  ARRAYS. USOTAO(AO,SO) IS THE TRANSFORMATAION MATRIX.
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY NC,NF,MCONS,ITRNAO,NSOT,NSO,USOTAO,MGCS,
C*** #MAORDS,NIR,NCT,LA,IGC,LMNP1,ISOTAO
C
      REAL*8 IGC(MCTU,MCSU,MGCSU),USOTAO(NUM,MSFRU)
      INTEGER NC(MSU),NF(MSU),MCONS(MCONSU),ITRNAO(MSFRU)
      INTEGER NSOT(MSTU),NSO(MSTU),MGCS(MGCSU),MAORDS(KAORDS)
      INTEGER NIR(MGCSU),NCT(MSU),LA(MRU,KAORDS),LMNP1(MCONSU)
      INTEGER ISOTAO(1)
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /TAPE30/ I10(200),ITAP30
      COMMON /PSIZE/  MSU,KAORDS,MCONSU,MGCSU,MSTU,MRU,MCSU,MCTU,
     #MCONU,MCU,MSFU,MGU,MSFRU,MNSFU,MPRU,MCXU,
     #MCCU,MBLU
      COMMON /INFOA/  NAT,ICH,MUL,NUM,NQ,NX,NE,NA,NB
C
      DO 2 J=1,MSFRU
           DO 1 I=1,NUM
                USOTAO(I,J)=0.0D+00
    1      CONTINUE
    2 CONTINUE
C
      NSOT(1)=0
      DO 3 I=2,MSTU
           NSOT(I)=NSOT(I-1)+NSO(I-1)
    3 CONTINUE
C
C
C
      ISFXO=0
      ISFP=0
      IBFAO=0
C
      DO 14 IS=1,MSU
           ICU=NC(IS)
           IFU=NF(IS)
           DO 13 I=1,ICU
                ISFX=ISFXO
                ISF=ISFP
                IF (IFU.EQ.0) GO TO 15
                DO 12 J=1,IFU
                     ISF=ISF+1
                     ICONS=MCONS(ISF)
                     NBU=(LMNP1(ICONS)*(LMNP1(ICONS)+1)/2)
                     ISFT=ISFX+(I-1)*NBU
                     ISFX=ISFX+NBU*ICU
                     DO 11 K=1,NBU
                          IBFAO=IBFAO+1
                          ISFT=ISFT+1
                          ITRNAO(ISFT)=IBFAO
   11                CONTINUE
   12           CONTINUE
   15           CONTINUE
   13      CONTINUE
           ISFXO=ISFX
           ISFP=ISFP+IFU
   14 CONTINUE
C
C
C
      ISF=0
      ISFR=0
      ISFTX=0
      DO 7 IS=1,MSU
           IFU=NF(IS)
           IF (IFU.LE.0) GO TO 7
           DO 6 I=1,IFU
                ISF=ISF+1
                IGCS=MGCS(ISF)
                IAORD=MAORDS(IGCS)
                IRU=NIR(IAORD)
                ICTU=NCT(ISF)
                ICS=0
                DO 5 J=1,IRU
                     ISFR=ISFR+1
                     ISFT=ISFTX
                     LAI=LA(J,IAORD)
                     NSOT(LAI)=NSOT(LAI)+1
                     KSO=NSOT(LAI)
                     ICS=ICS+1
                     DO 4 L=1,ICTU
                          ISFT=ISFT+1
                          USOTAO(ITRNAO(ISFT),KSO)=IGC(L,ICS,IGCS)
    4                CONTINUE
    5           CONTINUE
                ISFTX=ISFTX+ICTU
    6      CONTINUE
    7 CONTINUE
C
C     ----- PUT SO-TO-AO TRANSFORMATION MATRIX ON TAPE30
C           AS 29TH MATRIX, ITRNAO AS 30TH
C
      CALL WREADW(ITAP30,I10,200,101,JUNK)
      IEND=I10(1)
      MPOINT=I10(2)
      MCONST=I10(3)
      IF (MSFRU.NE.I10(18)) THEN
  100      FORMAT(///,' IN SOTOAO, MSFRU=',I10,' ON TAPE30 IS',I10)
           WRITE(ICHECK,100) MSFRU,I10(18)
C***       CALL M:ABORT
      STOP
      END IF
      IF (NUM.NE.I10(22)) THEN
  101      FORMAT(///,' IN SOTOA, NUM=',I10,' ON TAPE30 IS',I10)
           WRITE(ICHECK,101) NUM,I10(22)
C***       CALL M:ABORT
      STOP
      END IF
C
      JUNK=101+MCONST
      CALL WREADW(ITAP30,I10,MPOINT,JUNK,JUNK1)
      IF (I10(29).LE.0) THEN
           I10(29)=IEND
           CALL WWRITW(ITAP30,ISOTAO,INTOWP(NUM*MSFRU),IEND,IEND)
           I10(30)=IEND
           CALL WWRITW(ITAP30,ITRNAO,MSFRU,IEND,IEND)
C
C        ----- REWRITE POINTERS BACK TO TAPE30 -----
C
           CALL WWRITW(ITAP30,I10,MPOINT,JUNK,JUNK1)
C
C        ----- UPDATE IEND -----
C
           CALL WWRITW(ITAP30,IEND,1,101,JUNK1)
CSEL       CALL WEOF(ITAP30)
C
  103      FORMAT(/,' SO-TO-AO TRANSFORMATION MATRIX WRITTEN TO',
     #     ' ITAP',I2,', ',/,'    EXTENDING IT TO',I6,' WORDS OR',I5,
     #     ' SECTORS',/)
           WRITE(ICHECK,103) ITAP30,IEND,I2SEC(IEND)
      END IF
C
C
C
      RETURN
      END
      SUBROUTINE IN(ICT,NS,KS,EX,CSPD,KSTART,KATOM,KTYPE,KNG,KMIN,
     #KMAX,ISC,IPC,SLAB,CC,LAB,LOC,LOC2,KLASS,LAMBDA,
     #IADDR,ZAN,C,TITLE,LBLAT)
C
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICT,NS,KS,EX,CSPD,KSTART,KATOM,KTYPE,KNG,KMIN,
C*** #KMAX,ISC,IPC,SLAB,CC,LAB,LOC,LOC2,KLASS,LAMBDA,
C*** #IADDR,ZAN,C,TITLE,LBLAT
C
      REAL*8 EX(MXPR),CSPD(MXPR,3),CC(MXCF)
      REAL*8 ZAN(MXAT),C(3,MXAT)
C     INTEGER EX(1),CSPD(1),CC(1),ZAN(1),C(1)
C
      INTEGER ICT(MXAT,MXTRN),NS(MXAT),KS(MXAT),KSTART(MXSH)
      INTEGER KATOM(MXSH),KTYPE(MXSH),KNG(MXSH),KMIN(MXSH)
      INTEGER KMAX(MXSH),ISC(MXSH,MXPSYM),IPC(MXSH,MXPSYM)
      INTEGER LAB(MXCF),LOC(MXAT,3),LOC2(MXAT,3),KLASS(MXAT)
      INTEGER LAMBDA(MXSYM),IADDR(MXSYM),SLAB(MXSYM),TITLE(20)
      INTEGER LBLAT(2,MXAT)
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /SALCS/  NIRRED
      COMMON /SYMTRY/ NT
      COMMON /PSIZE/  MSU,KAORDS,MCONSU,MGCSU,MSTU,MRU,MCSU,MCTU,
     #MCONU,MCU,MSFU,MGU,MSFRU,MNSFU,MPRU,MCXU,
     #MCCU,MBLU
      COMMON /INFOA/  NAT,ICH,MUL,NUM,NQ,NX,NE,NA,NB
      COMMON /NSHEL/  NSHELL
      COMMON /MAXDIM/ MXAT,MXTRN,MXPR,MXSH,MXSYM,MXCF,MXT,MXISO,
     #MXPSYM
      COMMON /TAPE30/ I10(200),ITAP30
C
      DIMENSION ZNUC(3)
C
C     WRITE(ICHECK,*) ' MXAT ' ,MXAT
C
      CALL WREADW(ITAP30,I10,200,101,JUNK)
      MPOINT=I10(2)
      MCONST=I10(3)
      MCALCS=I10(4)
      NCALCS=I10(5)
      JUNK=101+MCONST
CC    WRITE(ICHECK,*)I10
      CALL WREADW(ITAP30,I10,MPOINT,JUNK,JUNK)
C
CC    WRITE(ICHECK,*) ' POINTERS ',I10
C
      CALL WREADW(ITAP30,ZAN,INTOWP(NAT),I10(1),JUNK)
      CALL WREADW(ITAP30,ICT,NAT*NT,I10(2),JUNK)
CC    CALL WREADW(ITAP30,NS,NSHELL,I10(3),JUNK)
      CALL WREADW(ITAP30,NS,NAT,I10(3),JUNK)
CC    CALL WREADW(ITAP30,KS,NSHELL,I10(4),JUNK)
      CALL WREADW(ITAP30,KS,NAT,I10(4),JUNK)
      CALL WREADW(ITAP30,EX,INTOWP(MXPR),I10(5),JUNK)
      CALL WREADW(ITAP30,CSPD,INTOWP(MXPR*3),I10(6),JUNK)
      CALL WREADW(ITAP30,KSTART,NSHELL,I10(7),JUNK)
      CALL WREADW(ITAP30,KATOM,NSHELL,I10(8),JUNK)
      CALL WREADW(ITAP30,KTYPE,NSHELL,I10(9),JUNK)
      CALL WREADW(ITAP30,KNG,NSHELL,I10(10),JUNK)
      CALL WREADW(ITAP30,KMIN,NSHELL,I10(12),JUNK)
      CALL WREADW(ITAP30,KMAX,NSHELL,I10(13),JUNK)
      CALL WREADW(ITAP30,ISC,NSHELL*MXPSYM,I10(14),JUNK)
      CALL WREADW(ITAP30,IPC,NSHELL*MXPSYM,I10(15),JUNK)
      CALL WREADW(ITAP30,SLAB,NIRRED,I10(16),JUNK)
      CALL WREADW(ITAP30,CC,INTOWP(MXCF),I10(17),JUNK)
      CALL WREADW(ITAP30,LAB,MXCF,I10(18),JUNK)
CC    WRITE(ICHECK,*) ' LAB ',LAB
      CALL WREADW(ITAP30,LOC,NAT*3,I10(19),JUNK)
      CALL WREADW(ITAP30,LOC2,NAT*3,I10(20),JUNK)
      CALL WREADW(ITAP30,KLASS,NAT,I10(21),JUNK)
      CALL WREADW(ITAP30,LAMBDA,NIRRED,I10(22),JUNK)
      CALL WREADW(ITAP30,IADDR,NIRRED,I10(23),JUNK)
      CALL WREADW(ITAP30,LBLAT,2*NAT,I10(28),JUNK)
C
C     ----- FOR THE MINUTE PRESUME USING THE LAST CALCULATION ---
C
      JUNK=101+MCONST+MPOINT
      CALL WREADW(ITAP30,I10,MCALCS,JUNK,JUNK)
      CALL WREADW(ITAP30,TITLE,20,I10(NCALCS),LAST)
      LAST=LAST+60
      CALL WREADW(ITAP30,C,INTOWP(3*NAT),LAST,LAST)
C
CCCC  WRITE(ICHECK,*) ' ZAN  : ', ZAN
CCCC  WRITE(ICHECK,2929) TITLE
CCCC  WRITE(ICHECK,*) ' C : ' ,C
      WRITE(ICHECK,*) ' KSTART : ',KSTART
      WRITE(ICHECK,2929) KSTART
2929  FORMAT(20A4)
C
      RETURN
      END
      SUBROUTINE SOCFPD(CX,ICXST,ICXSV1,ICXSV2,IDP,IGC,IL,IPRST,LA,LB,
     1MAORDS,MGCS,NBLPR,NC,NCT,ND,NF,NIR,NPAIR,NPRIR,NTL,NTU)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY CX,ICXST,ICXSV1,ICXSV2,IDP,IGC,IL,IPRST,LA,LB,
C*** 1MAORDS,MGCS,NBLPR,NC,NCT,ND,NF,NIR,NPAIR,NPRIR,NTL,NTU
C
      REAL*8 IGC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU,
     1MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU, MSTU,
     2MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON /DIM21/ IPQ(256)
      DIMENSION ICXSV1(1),ICXSV2(MGCSU,1),IPRST(1),
     1LA(MRU,1),LB(1),MAORDS(1),MGCS(1),NBLPR(1),NC(1),NCT(1),
     2ND(1),NF(1),NIR(1),NPAIR(1),NTL(1),NTU(1),IGC(MCTU,MCSU,1),
     3IDP(MSTU,MSTU,2),NPRIR(MSTU,2)
      DIMENSION CX(1),IL(2),ICXST(1)
      DIMENSION MICS(1000), MJCS(1000), MAU(1000)
      DATA A0/0.0D0/, A1/1.0D0/
C        IJSF = ONE DIMENSIONALIZATION OF IS, JS, IF, JF
C        ISFR = ONE DIMENSIONALIZATION OF IS, IF, IR
C
C
C
C     PRINT '(//,' JUST IN SOCFPD',//)'
      ICX=0
      IPAIR=0
      IJSF=0
      ISF=0
      ISFR=0
      DO 10 IGCS=1,NGCS
           ICXSV1(IGCS)=0
           DO 10 JGCS=1,NGCS
   10 ICXSV2(JGCS,IGCS)=0
C     PRINT,'AFTER 10'
      DO 340 IS=1,NS
C     PRINT,'DO 340, IS=',IS
           IFU=NF(IS)
           IF(IFU.EQ.0) GO TO 340
           ICU=NC(IS)
           ISFIS=ISF
           ISFRIS=ISFR
           ASSIGN 50 TO JA
           JSF=0
           JSFR=0
           DO 330 JS=1,IS
C     PRINT,'DO 330, JS=',JS
                JSFJS=JSF
                JSFRJS=JSFR
                IF(JS.NE.IS) GO TO 20
                ASSIGN 40 TO JA
                GO TO 30
   20           JFU=NF(JS)
                JCU=NC(JS)
                IF(JFU.EQ.0) GO TO 330
   30           ISF=ISFIS
                ISFR=ISFRIS
                DO 320 IF=1,IFU
C     PRINT,'DO 320, IF=',IF
                     ISF=ISF+1
                     ISFRIF=ISFR
                     IGCS=MGCS(ISF)
                     IAORDS=MAORDS(IGCS)
                     IRU=NIR(IAORDS)
                     ITL=NTL(ISF)
                     ITU=NTU(ISF)
C        IF(JS.NE.IS) GO TO 50
C     PRINT,'GO TO ON JA'
                     GO TO JA, (40,50)
   40                JFU=IF
   50                ASSIGN 110 TO JB
                     ASSIGN 150 TO JD
                     ASSIGN 180 TO JW
                     ASSIGN 210 TO JX
                     JSF=JSFJS
                     JSFR=JSFRJS
                     DO 320 JF=1,JFU
C     PRINT,'DO 320, JF=',JF
                          JSF=JSF+1
                          JGCS=MGCS(JSF)
                          JAORDS=MAORDS(JGCS)
                          JTL=NTL(JSF)
                          JSFRJF=JSFR
                          IJSF=IJSF+1
C        IF(JS.NE.IS.OR.JF.NE.IF) GO TO 60
                          IF(ISF.NE.JSF) GO TO 60
                          ASSIGN 100 TO JB
                          ASSIGN 140 TO JD
                          ASSIGN 160 TO JW
                          ASSIGN 190 TO JX
                          ICXSV=ICXSV1(IGCS)
                          ICXSV1(IGCS)=IJSF
                          GO TO 70
   60                     JRU=NIR(JAORDS)
                          JTU=NTU(JSF)
                          ICXSV=ICXSV2(JGCS,IGCS)
                          ICXSV2(JGCS,IGCS)=IJSF
   70                     IPRST(IJSF)=IPAIR
                          NPR=0
                          DO 125 IST=1,NST
C     PRINT,'DO 125 IST=',IST
                               IPR=NPR
                               ICS=0
                               ISFR=ISFRIF
                               DO 120 IR=1,IRU
C     PRINT,'DO 120 IR=',IR
                                    ISFR=ISFR+1
                                    LAI=LA(IR,IAORDS)
                                    IAU=ND(LAI)
C     ILPR=(LAI-1).SHIFT.8.OR.LB(ISFR)
                                    ILPR=IOR(ISHFT(LAI-1,8),LB(ISFR))
C        IF(JS.NE.IS.OR.JF.NE.IF) GO TO 110
C     PRINT,'GO TO JB'
C     PRINT,'JB',JB
                                    GO TO JB, (100,110)
  100                               JRU=IR
  110                               JSFR=JSFRJF
                                    JCS=0
                                    DO 115 JR=1,JRU
C     PRINT,'DO 115 JR=',JR
                                         JSFR=JSFR+1
                                         IF (JSFR.LE.MSFRU) GO TO 111
                                         WRITE(ICHECK,901) MSFRU
  901                                    FORMAT (//,' *** MSFRU TOO SMAL
     *L IN SOCFPD:',I7,//)
C***                                     CALL M:ABORT
      STOP
  111                                    LAJ=LA(JR,JAORDS)
                                         IF(IDP(LAI,LAJ,IST)) 112,115,
     *                                   112
  112                                    IPAIR =IPAIR+1
                                         IF (IPAIR.LE.MPRU) GO TO 116
                                         WRITE(ICHECK,902) MPRU
  902                                    FORMAT (//,' *** MPRU TOO SMALL
     * IN SOCFPD:',I7,//)
C***                                     CALL M:ABORT
      STOP
  116                                    IF(LAI.GE.LAJ) GOTO 113
C     IL(IPAIR)=((LAJ-1).SHIFT.19.OR.LB(JSFR).SHIFT.11).OR.ILPR
                                         IL(IPAIR)=IOR(IOR(ISHFT(LAJ-1,
     *                                   19),ISHFT(LB(JSFR),11)),
     #                                   ILPR)
                                         GOTO 114
C 113 IL(IPAIR)=ILPR.SHIFT.11.OR.((LAJ-1).SHIFT.8.OR.LB(JSFR))
  113                                    IL(IPAIR)=IOR(ISHFT(ILPR,11),
     *                                   IOR(LB(JSFR),ISHFT(LAJ-1,8)))
  114                                    NPR=NPR+1
                                         IF (NPR.LE.1000) GO TO 117
                                         WRITE(IOUT,903) NPR
                                         WRITE(ICHECK,903) NPR
  903                                    FORMAT (//,' *** NPR TOO SMALL
     *IN SOCFPD',I7,//)
C***                                     CALL M:ABORT
      STOP
  117                                    MAU(NPR)=IAU
                                         MICS(NPR)=ICS
                                         MJCS(NPR)=JCS
  115                               JCS=JCS+ND(LAJ)
  120                          ICS=ICS+IAU
  125                     NPRIR(IST,IJSF)=NPR-IPR
                          NPAIR(IJSF)=NPR
                          IF(NPR.EQ.0) GOTO 320
                          IF(ICXSV.EQ.0) GO TO 130
                          ICXST(IJSF)=ICXST(ICXSV)
                          GO TO 320
  130                     ICXST(IJSF)=ICX
                          ICT=0
                          DO 290 IC=1,ICU
                               ICTIC=ICT
C        IF(JS.NE.IS.OR.JF.NE.IF.) GO TO 150
C     PRINT,'GO TO JD'
                               GO TO JD, (140,150)
  140                          JCU=IC
  150                          ASSIGN 220 TO JE
                               JCT=0
                               DO 290 JC=1,JCU
C     PRINT,'DO 290 JC=',JC
                                    JCTJC=JCT
C        IF(JS.NE.IS.OR.JF.NE.IF) GO TO 180
C     PRINT,'GO TO JW'
                                    GO TO JW, (160,180)
  160                               IF(JC.EQ.IC) ASSIGN 200 TO JE
  180                               ICT=ICTIC
                                    DO 290 IT=ITL,ITU
C     PRINT,'DO 290 IT=',IT
                                         ICT=ICT+1
C        IF(JS.NE.IS.OR.JF.NE.IF) GO TO 210
C     PRINT,'GO TO JX'
                                         GO TO JX, (190,210)
  190                                    ASSIGN 270 TO JN
C        IF(JC.NE.IC) GO TO 220
C     PRINT,'GO TO JE'
                                         GO TO JE, (200,220)
  200                                    JTU=IT
                                         ASSIGN 240 TO JM
                                         GO TO 230
  210                                    ASSIGN 280 TO JN
  220                                    ASSIGN 250 TO JM
  230                                    JCT=JCTJC
                                         DO 290 JT=JTL,JTU
C     PRINT,'DO 290 JT=',JT
                                              JCT=JCT+1
C        IF(JS.NE.IS.OR.JF.NE.IF.OR.JC.NE.IC) GO TO 250
C     PRINT,'GO TO JM'
                                              GO TO JM, (240,250)
  240                                         IF(JT.EQ.IT) ASSIGN 280 TO
     *                                         JN
  250                                         DO 290 IPR=1,NPR
C     PRINT,'DO 290 IPR=',IPR
                                                   ICX=ICX+1
                                                   IF (ICX.NE.MCXU)
     *                                              GO TO 260
                                                   WRITE(ICHECK,251)
                                                   WRITE(IOUT,251)
  251                                              FORMAT (//,' ****ICX'
     *,                                            ' GT MCXU IN SOCFPD,'
     *,                                           'INCREASE CORE ****',/
     *                                             /)
  260                                              CONTINUE
                                                   IF (ICX.GT.MCXU)
     #                                               GO TO 290
                                                   CX(ICX)= A0
                                                   IAU=MAU(IPR)
                                                   ICS=MICS(IPR)
                                                   JCS=MJCS(IPR)
                                                   DO 280 IA=1,IAU
C     PRINT,'DO 280 IA=',IA
                                                        ICS=ICS+1
                                                        JCS=JCS+1
                                                        CI=IGC(ICT,ICS,
     *                                                  IGCS)
                                                        CJ=IGC(JCT,JCS,
     *                                                  JGCS)
                                                        CX(ICX)=CX(ICX)+
     *                                                  CI*CJ
C        IF(JS.NE.IS.OR.JF.NE.IF.OR.(JC.EQ.IC.AND.JT.EQ.IT)) GO TO 280
C     PRINT,'GO TO JN'
                                                        GO TO JN, (270,
     *                                                  280)
  270                                                   CI=IGC(JCT,ICS,
     *                                                  IGCS)
                                                        CJ=IGC(ICT,JCS,
     *                                                  JGCS)
                                                        CX(ICX)=CX(ICX)+
     *                                                  CI*CJ
  280                                              CONTINUE
  290                     CONTINUE
  320           CONTINUE
  330      CONTINUE
  340 CONTINUE
      IF(IJSF.LE.MNSFU) GO TO 350
      WRITE(ICHECK,983) IJSF
C***  CALL M:ABORT
      STOP
  350 IF(IPAIR.LE.MPRU) GO TO 360
      WRITE(ICHECK,984) IPAIR
C***  CALL M:ABORT
      STOP
  360 IF(ICX.LE.MCXU) GO TO 370
      WRITE(ICHECK,985) ICX,MCXU
C***  CALL M:ABORT
      STOP
  370 WRITE(ICHECK,900) ICX, IJSF,IPAIR
C
      MNSFU=IJSF
      MPRU=IPAIR
      MCXU=ICX
C     PRINT '(//,' RETURNING FROM SOCFPD',//)'
      RETURN
C
  900 FORMAT(' MCXU= ',I8, ' MNSFU=',I7,' MPRU=',I7)
  983 FORMAT(16H MNSFU TOO SMALL,I5)
  984 FORMAT(15H MPRU TOO SMALL,I5)
  985 FORMAT(15H MCXU TOO SMALL,2I9)
      END
      SUBROUTINE PRINT2(AJ,CX,ETA,ICA,ICB,ICXST,IL,IPRST,LMNP1,
     #MCONS,NC,NCON,NF,NFCT,NGW,NPAIR,NPRIR,NT,NTL,
     #NTU,X,Y,Z,ZET,MGUX)
C
      REAL*8 AJ(MBLU),CX(MCXU),ETA(MCONU,MCONSU),ZET(MCONU,MCONSU)
      REAL*8 X(MCU,MSU),Y(MCU,MSU),Z(MCU,MSU)
C
      INTEGER ICA(MCU,MSU,MGU),ICB(4,MGU,MCCU),ICXST(MNSFU),IL(MPRU)
      INTEGER IPRST(MNSFU),MCONS(MSFU),NC(MSU),NCON(MCONSU)
      INTEGER NF(MSU),NFCT(MCCU),NGW(MCCU),NPAIR(MNSFU),NT(MSFU)
      INTEGER NTL(MSFU),NTU(MSFU),LMNP1(MSFU),NPRIR(MSTU,MNSFU)
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/   KAORDS,MCONSU,MGCSU,MRU,MCSU,MCTU,MSFU,
     #MGU,MSFRU,MNSFU,MPRU,MCXU,NGCS,MDUM(39),
     #MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
C
C     WRITE(ICHECK,*) ' AJ',AJ
      WRITE(ICHECK,*) ' CX ',CX
      WRITE(ICHECK,*) ' ETA ',ETA
      WRITE(ICHECK,*) ' ZET ',ZET
      WRITE(ICHECK,*) ' X ',X
      WRITE(ICHECK,*) ' Y ',Y
      WRITE(ICHECK,*) ' Z ',Z
      WRITE(ICHECK,*) ' ICA ',ICA
      WRITE(ICHECK,*) ' ICB ',ICB
      WRITE(ICHECK,*) ' ICXST ',ICXST
      WRITE(ICHECK,*) ' IL ',IL
      WRITE(ICHECK,*) ' IPRST ',IPRST
      WRITE(ICHECK,*) ' LMNP1 ',LMNP1
      WRITE(ICHECK,*) ' MCONS ',MCONS
      WRITE(ICHECK,*) ' NC ',NC
      WRITE(ICHECK,*) ' NCON ',NCON
      WRITE(ICHECK,*) ' NF ',NF
      WRITE(ICHECK,*) ' NFCT ',NFCT
      WRITE(ICHECK,*) ' NGW ',NGW
      WRITE(ICHECK,*) ' NPAIR ',NPAIR
      WRITE(ICHECK,*) ' NPRIR ',NPRIR
      WRITE(ICHECK,*) ' NT ',NT
      WRITE(ICHECK,*) ' NTL ',NTL
      WRITE(ICHECK,*) ' NTU ',NTU
C
      RETURN
      END
      SUBROUTINE ONEINT(AJ,CHG,CX,ETA,ICA,ICB,ICXST,IL,IPRST,LMNP1,
     1MCONS,N,NC,NCON,NF,NFCT,NGW,NPAIR,NPRIR,NT,NTL,NTU,X,Y,Z,ZET)
C
C     CALCULATE ONE-ELECTRON INTEGRALS (OVERLAP, KE OR PE)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY AJ,CHG,CX,ETA,ICA,ICB,ICXST,IL,IPRST,LMNP1,
C*** 1MCONS,  NC,NCON,NF,NFCT,NGW,NPAIR,NPRIR,NT,NTL,NTU,X,Y,Z,ZET
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/   KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU
     1,               MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU
     2,               MSTU, MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON /DIM21/  IPQ(256)
      COMMON /TAPE/   NTAPE
      COMMON /SHLT/   TOL, CUTOFF
      COMMON /OUTBUF/ IBLK, IBUF, LBL(2980), SPI(2980)
      COMMON /GOUT/   GOUT(10000)
C
      DIMENSION ICA(MCU,MSU,2),ICB(4,MGU,2),IPRST(2),LMNP1(2),
     1MCONS(2),NC(2),NCON(2),NF(2),NFCT(2),NGW(2),NPAIR(2),NT(2),
     2NTL(2),NTU(2),NAM(4),NPRIR(MSTU,2)
      DIMENSION AJ(1), CHG(1), CX(1), ETA(MCONU,1), X(MCU,1), Y(MCU,1),
     1Z(MCU,1), ZET(MCONU,1), IL(2), ICXST(2)
      DATA NAM/2H S,2H T,2H V,2H C/
      DATA IDTR/2980/, A0/0.0D0/
      IF(N-2) 299,298,297
  299 CALL SINTSA(ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET)
      GO TO 296
  298 CALL TINTSA(ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET)
      GO TO 296
  297 CALL VINTSA(CHG,ETA,LMNP1,MCONS,NC,NCON,NTL,NTU,X,Y,Z,ZET)
  296 NBFLD=0
      NSCTLD=0
      IBLK=0
      IBUF = 0
      IJSF = 0
      ISF = 0
      DO 460 IS = 1,NS
           IFU = NF(IS)
           IF(IFU.EQ.0) GO TO 460
           ISFIS=ISF
           ASSIGN 290 TO JB11
           ASSIGN 355 TO JB15
           JSF = 0
           DO 455 JS = 1,IS
                JSFJS=JSF
                IC=NC(IS)
                NCC = 0
                IF (JS .NE. IS) GO TO 10
C        CENTER COMBINATIONS FOR IS=JS
                ASSIGN 280 TO JB11
                ASSIGN 330 TO JB15
                DO 160 JC = 1, IC
                     IGW=0
                     DO 140 IG = 1, NG
                          IC1 = ICA(IC,IS,IG)
                          JC1 = ICA(JC,IS,IG)
                          IF(IC1.NE.IC.AND.JC1.NE.IC) GO TO 140
                          IC2=MAX0(IC1,JC1)
                          JC2=MIN0(IC1,JC1)
C        DO 130 ICC=NCC,1,-1
                          ICC = NCC
  120                     IF (ICC .EQ. 0) GO TO 135
                          IF(JC2-ICB(2,1,ICC)) 130,150,135
  130                     ICC = ICC - 1
                          GO TO 120
  135                     IF(JC2.NE.JC) GO TO 140
C        DO 139(-1) IGW1=IGW,1,-1
                          IGW1=IGW
  137                     IF(IGW1.EQ.0) GO TO 139
                          IF(IC1.EQ.ICB(1,IGW1,NCC+1).AND.JC1.EQ.ICB(2,
     *                    IGW1,NCC+1)) GO TO140
                          IGW1=IGW1-1
                          GO TO 137
  139                     IGW=IGW+1
                          ICB(1,IGW,NCC+1)=IC1
                          ICB(2,IGW,NCC+1)=JC1
  140                CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) = IC
                     NGW(NCC)=IGW
                     GO TO 160
  150                NFCT(ICC) = NFCT(ICC) + IC
  160           CONTINUE
                ICCU = NCC - 1
                IF (ICCU .EQ. 0 ) GO TO 270
                DO 170 ICC = 1, ICCU
  170           NFCT(ICC) = NFCT(ICC)/2
                GO TO 270
C        CENTER COMBINATIONS FOR IS>JS
   10           JFU = NF(JS)
                IF(JFU.EQ.0) GO TO 455
                JCU = NC(JS)
                DO 60 JC = 1, JCU
                     DO 40 IG = 1, NG
                          IF (ICA(IC,IS,IG) .NE. IC) GO TO 40
                          JC1 = ICA (JC,JS,IG)
C        DO 30 ICC=NCC,1,-1
                          ICC = NCC
   20                     IF (ICC .EQ. 0) GO TO 40
                          IF(JC1-ICB(2,1,ICC)) 30,50,40
   30                     ICC = ICC - 1
                          GO TO 20
   40                CONTINUE
                     NCC = NCC + 1
                     ICB(1,1,NCC)=IC
                     ICB(2,1,NCC)=JC
                     NFCT(NCC) = IC
                     GO TO 60
   50                NFCT(ICC) = NFCT(ICC) + IC
   60           CONTINUE
C        EVALUATE INTEGRALS
  270           IF(NCC.LE.MCCU) GO TO 272
                WRITE(ICHECK,988) NCC
C***            CALL M:ABORT
      STOP
  272           ISF=ISFIS
                DO 454 IF = 1, IFU
                     ISF = ISF + 1
                     ITL=NTL(ISF)
                     ITU=NTU(ISF)
                     JSF=JSFJS
C        IF(JS.NE.IS) GO TO 290
                     GO TO JB11, (280,290)
  280                JFU = IF
  290                DO 453 JF = 1, JFU
                          JSF = JSF + 1
                          IJSF = IJSF + 1
                          IPR=IPRST(IJSF)
                          NBLT = NPAIR(IJSF)
                          NBL=NPRIR(1,IJSF)
                          IF(NBL.EQ.0) GO TO 453
                          IF(NBL.LE.MBLU) GO TO 292
                          WRITE(ICHECK,989) NBL
C***                      CALL M:ABORT
      STOP
  292                     JTL=NTL(JSF)
                          JTU=NTU(JSF)
                          NTIJ=NT(ISF)*NT(JSF)*NBLT
                          ICXSK=NBLT-NBL
C        ZERO OUT SPACE FOR INTEGRAL ACCUMULATION
                          DO 320 IBL = 1,NBL
  320                     AJ(IBL)=A0
                          IF (JSF .NE. ISF) GO TO 325
C        ISF=JSF SECTION
                          ASSIGN 410 TO JB13
                          DO 430 ICC = 1, NCC
                               IC=ICB(1,1,ICC)
                               JC=ICB(2,1,ICC)
                               FNFCT=NFCT(ICC)
                               ICX=ICXST(IJSF)+IPQ((IC-1)*NT(ISF)+1)*
     *                         NBLT+(JC-1)*NTIJ
                               IF (N-2) 199,198,197
  199                          CALL SINTS(IS,ISF,IC,IS,ISF,JC)
                               GO TO 188
  198                          CALL TINTS(IS,ISF,IC,IS,ISF,JC)
                               GO TO 188
  197                          CALL VINTS(IS,ISF,IC,IS,ISF,JC)
  188                          NDX=0
                               IF(JC.EQ.IC) ASSIGN 400 TO JB13
                               DO 430 IT=ITL,ITU
C        IF(JC.NE.IC) GO TO 410
                                    GO TO JB13, (400,410)
  400                               JTU = IT
  410                               DO 425 JT=JTL,JTU
                                         NDX=NDX+1
                                         VAL=GOUT(NDX)
                                         IF(DABS(VAL).GT.CUTOFF) GO TO
     *                                   415
                                         ICX=ICX+NBLT
                                         GO TO 425
  415                                    VAL=FNFCT*VAL
                                         DO 420 IBL = 1, NBL
                                              ICX=ICX+1
  420                                    AJ(IBL)=AJ(IBL)+CX(ICX)*VAL
                                         ICX=ICX+ICXSK
  425                               CONTINUE
  430                     CONTINUE
                          GO TO 440
C        ISF>JSF SECTION
  325                     DO 390 ICC = 1, NCC
                               GO TO JB15, (330,355)
  330                          IGWUM1=NGW(ICC)-1
                               ASSIGN 350 TO IRTN2
                               ITST=0
C        DO 350(+3) IPRM=1,2
                               IPRM=1
                               INX=1
                               JNX=2
                               GO TO 340
  335                          INX=2
                               JNX=1
  340                          JC=ICB(JNX,1,ICC)
                               IF(JC.EQ.ITST) GO TO 390
                               IC=ICB(INX,1,ICC)
                               NWT=1
                               IF(IGWUM1.EQ.0) GO TO 360
                               IF(ICB(JNX,2,ICC).LT.JC) GO TO 390
                               NWT=2
                               GO TO 360
  350                          IF(IPRM.EQ.2) GO TO 390
                               ITST=JC
                               IPRM=2
                               GO TO 335
  355                          NWT=1
                               ASSIGN 390 TO IRTN2
                               IC=ICB(1,1,ICC)
                               JC=ICB(2,1,ICC)
  360                          FNFCT=DBLE(NWT*NFCT(ICC))
                               IF (N-2) 99,98,97
   99                          CALL SINTS(IS,ISF,IC,JS,JSF,JC)
                               GO TO 88
   98                          CALL TINTS(IS,ISF,IC,JS,JSF,JC)
                               GO TO 88
   97                          CALL VINTS(IS,ISF,IC,JS,JSF,JC)
   88                          NDX=0
                               ICX=ICXST(IJSF)+((IC-1)*NC(JS)+JC-1)*NTIJ
                               DO 380 IT=ITL,ITU
                                    DO 375 JT=JTL,JTU
                                         NDX=NDX+1
                                         VAL=GOUT(NDX)
                                         IF(DABS(VAL).GT.CUTOFF) GO TO
     *                                   365
                                         ICX=ICX+NBLT
                                         GO TO 375
  365                                    VAL=FNFCT*VAL
                                         DO 370 IBL = 1, NBL
                                              ICX=ICX+1
  370                                    AJ(IBL)=AJ(IBL)+CX(ICX)*VAL
                                         ICX=ICX+ICXSK
  375                               CONTINUE
  380                          CONTINUE
                               GO TO IRTN2, (350,390)
  390                     CONTINUE
C        WRITE OUT INTEGRALS
  440                     DO 450 IBL = 1, NBL
                               IPR=IPR+1
                               IF(DABS(AJ(IBL)).LE.CUTOFF) GO TO 450
                               IF(IBUF.NE.IDTR) GO TO 442
                               NBFLD=NBFLD+1
                               NSCTLD=NSCTLD+I2SEC(8924)
C                              CALL SWRIT(NTAPE,IBLK,8942)
                               IADR=0
C                              CALL RGETSA(NTAPE,IADR)
C                              CALL RWRIT(NTAPE,IBLK,8942,IADR)
                               CALL SWRIT(NTAPE,IBLK,8942)
C     WRITE (NTAPE) IBLK, IBUF, LBL, SPI
                               IBUF=0
 442                           IBUF = IBUF + 1
                               LBL(IBUF)=IL(IPR)
                               SPI(IBUF)=AJ(IBL)
 450                      CONTINUE
  453                CONTINUE
  454           CONTINUE
  455      CONTINUE
  460 CONTINUE
C
C
CC    WRITE(IOUT,920) (SPI(IQ),IQ=1,IBUF)
CC920 FORMAT (/,(1X,4Z18))
C
C
      IBLK=1
      NSCTLD=NSCTLD+I2SEC(8924)
C     CALL SWRIT(NTAPE,IBLK,8942)
      IADR=0
C     CALL RGETSA(NTAPE,IADR)
C     CALL RWRIT(NTAPE,IBLK,8942,IADR)
      CALL SWRIT(NTAPE,IBLK,8942)
C     WRITE (NTAPE) IBLK, IBUF, LBL, SPI
      NSECT=NSECT+NSCTLD
      IBUF=IDTR*NBFLD+IBUF
      NBFLD=NBFLD+1
      IF (IFLAG3.GT.0) WRITE(ICHECK,2) IBUF,NAM(N),NSCTLD
      WRITE (IOUT,2) IBUF, NAM(N), NSCTLD
      NINTS=NINTS+IBUF
      RETURN
    2 FORMAT(I19,A2,14H INTEGRALS IN ,I9,8H SECTORS)
  988 FORMAT(15H MCCU TOO SMALL,I4)
  989 FORMAT(15H MBLU TOO SMALL,I6)
      END
      SUBROUTINE SINTSA(ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET
C
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL IANDJ
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/   KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU
     1,               MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU
     2,               MSTU, MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON /STV/    XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
      COMMON /GOUT/   GOUT(10000)
      COMMON /SHLT/   TOL, CUTOFF
C
      DIMENSION LMNP1(1), MCONS(1), NCON(1), NTL(1), NTU(1)
      DIMENSION ETA(MCONU,1), X(MCU,1), Y(MCU,1), Z(MCU,1), ZET(MCONU,1)
      DIMENSION XIN(25), YIN(25), ZIN(25)
      DIMENSION IX(35), IY(35), IZ(35), JX(35), JY(35), JZ(35)
      DIMENSION IJX(225), IJY(225), IJZ(225)
C
      DATA ZERO, PT5 /0.0D0, 0.5D0/
      DATA JX / 0, 1, 0, 0, 2, 0, 0, 1, 1, 0,
     13, 0, 0, 2, 2, 1, 0, 1, 0, 1,
     24, 0, 0, 3, 3, 1, 0, 1, 0, 2,
     32, 0, 2, 1, 1/
      DATA IX / 1, 6, 1, 1,11, 1, 1, 6, 6, 1,
     116, 1, 1,11,11, 6, 1, 6, 1, 6,
     221, 1, 1,16,16, 6, 1, 6, 1,11,
     311, 1,11, 6, 6/
      DATA JY / 0, 0, 1, 0, 0, 2, 0, 1, 0, 1,
     10, 3, 0, 1, 0, 2, 2, 0, 1, 1,
     20, 4, 0, 1, 0, 3, 3, 0, 1, 2,
     30, 2, 1, 2, 1/
      DATA IY / 1, 1, 6, 1, 1,11, 1, 6, 1, 6,
     11,16, 1, 6, 1,11,11, 1, 6, 6,
     21,21, 1, 6, 1,16,16, 1, 6,11,
     31,11, 6,11, 6/
      DATA JZ / 0, 0, 0, 1, 0, 0, 2, 0, 1, 1,
     10, 0, 3, 0, 1, 0, 1, 2, 2, 1,
     20, 0, 4, 0, 1, 0, 1, 3, 3, 0,
     32, 2, 1, 1, 2/
      DATA IZ / 1, 1, 1, 6, 1, 1,11, 1, 6, 6,
     11, 1,16, 1, 6, 1, 6,11,11, 6,
     21, 1,21, 1, 6, 1, 6,16,16, 1,
     311,11, 6, 6,11/
      RETURN
C
C
C
      ENTRY SINTS(IS,ISF,IC,JS,JSF,JC)
C
C     ----- ISHELL
C
      XI=X(IC,IS)
      YI=Y(IC,IS)
      ZI=Z(IC,IS)
      ICONS=MCONS(ISF)
      IGU=NCON(ICONS)
      LIT=LMNP1(ICONS)
      MINI=NTL(ISF)
      MAXI=NTU(ISF)
C
C     ----- JSHELL
C
      XJ=X(JC,JS)
      YJ=Y(JC,JS)
      ZJ=Z(JC,JS)
      JCONS=MCONS(JSF)
      JGU=NCON(JCONS)
      LJT=LMNP1(JCONS)
      MINJ=NTL(JSF)
      MAXJ=NTU(JSF)
      RR=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
      IANDJ=ISF.EQ.JSF.AND.IC.EQ.JC
C
C     ----- PREPARE INDICES FOR PAIRS OF (I,J) FUNCTIONS
C
      IJ=0
      DO 50 I=MINI,MAXI
           NX=IX(I)
           NY=IY(I)
           NZ=IZ(I)
           IF(IANDJ) MAXJ=I
           DO 50 J=MINJ,MAXJ
                IJ=IJ+1
                IJX(IJ)=NX+JX(J)
                IJY(IJ)=NY+JY(J)
                IJZ(IJ)=NZ+JZ(J)
   50 CONTINUE
      DO 60 I=1,IJ
   60 GOUT(I)=0.0D+00
C
C     ----- I PRIMITIVE
C
      XIJ=PT5*(XI+XJ)
      YIJ=PT5*(YI+YJ)
      ZIJ=PT5*(ZI+ZJ)
      XIJM=PT5*(XI-XJ)
      YIJM=PT5*(YI-YJ)
      ZIJM=PT5*(ZI-ZJ)
      DO 7000 IG=1,IGU
           AI=ZET(IG,ICONS)
           ARRI=AI*RR
           CI=ETA(IG,ICONS)
C
C     ----- J PRIMITIVE
C
           IF(IANDJ) JGU=IG
           DO 6000 JG=1,JGU
                AJ=ZET(JG,JCONS)
                AA=AI+AJ
                AAA=(AI-AJ)/AA
                DUM=AJ*ARRI/AA
                IF(DUM.GT.TOL) GO TO 6000
                AX=XIJ+AAA*XIJM
                AY=YIJ+AAA*YIJM
                AZ=ZIJ+AAA*ZIJM
C
C     ----- DENSITY FACTOR
C
                DIJ=CI*ETA(JG,JCONS)*DEXP(-DUM)
                IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ+DIJ
                T=DSQRT(AA)
                X0=AX
                Y0=AY
                Z0=AZ
                IN=-5
                DO 340 I=1,LIT
                     IN=IN+5
                     NI=I
                     DO 340 J=1,LJT
                          JN=IN+J
                          NJ=J
                          CALL STVINT
                          XIN(JN)=XINT/T
                          YIN(JN)=YINT/T
                          ZIN(JN)=ZINT/T
  340           CONTINUE
                DO 350 I=1,IJ
  350           GOUT(I)=GOUT(I)+DIJ*XIN(IJX(I))*YIN(IJY(I))*ZIN(IJZ(I))
 6000      CONTINUE
 7000 CONTINUE
      RETURN
      END
      SUBROUTINE TINTSA(ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL IANDJ
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/   KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU
     1,               MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU
     2,               MSTU, MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON /STV/    XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
      COMMON /GOUT/   GOUT(10000)
      COMMON /SHLT/   TOL, CUTOFF
C
      DIMENSION LMNP1(1), MCONS(1), NCON(1), NTL(1), NTU(1)
      DIMENSION ETA(MCONU,1), X(MCU,1), Y(MCU,1), Z(MCU,1), ZET(MCONU,1)
      DIMENSION XIN(50), YIN(50), ZIN(50)
      DIMENSION IX(35), IY(35), IZ(35), JX(35), JY(35), JZ(35)
      DIMENSION IJX(225), IJY(225), IJZ(225)
C
      DATA ZERO, PT5, TWO /0.0D0, 0.5D0, 2.0D0/
      DATA JX / 0, 1, 0, 0, 2, 0, 0, 1, 1, 0,
     13, 0, 0, 2, 2, 1, 0, 1, 0, 1,
     24, 0, 0, 3, 3, 1, 0, 1, 0, 2,
     32, 0, 2, 1, 1/
      DATA IX / 1, 6, 1, 1,11, 1, 1, 6, 6, 1,
     116, 1, 1,11,11, 6, 1, 6, 1, 6,
     221, 1, 1,16,16, 6, 1, 6, 1,11,
     311, 1,11, 6, 6/
      DATA JY / 0, 0, 1, 0, 0, 2, 0, 1, 0, 1,
     10, 3, 0, 1, 0, 2, 2, 0, 1, 1,
     20, 4, 0, 1, 0, 3, 3, 0, 1, 2,
     30, 2, 1, 2, 1/
      DATA IY / 1, 1, 6, 1, 1,11, 1, 6, 1, 6,
     11,16, 1, 6, 1,11,11, 1, 6, 6,
     21,21, 1, 6, 1,16,16, 1, 6,11,
     31,11, 6,11, 6/
      DATA JZ / 0, 0, 0, 1, 0, 0, 2, 0, 1, 1,
     10, 0, 3, 0, 1, 0, 1, 2, 2, 1,
     20, 0, 4, 0, 1, 0, 1, 3, 3, 0,
     32, 2, 1, 1, 2/
      DATA IZ / 1, 1, 1, 6, 1, 1,11, 1, 6, 6,
     11, 1,16, 1, 6, 1, 6,11,11, 6,
     21, 1,21, 1, 6, 1, 6,16,16, 1,
     311,11, 6, 6,11/
      RETURN
C
C
C
      ENTRY TINTS(IS,ISF,IC,JS,JSF,JC)
C
C     ----- ISHELL
C
      XI=X(IC,IS)
      YI=Y(IC,IS)
      ZI=Z(IC,IS)
      ICONS=MCONS(ISF)
      IGU=NCON(ICONS)
      LIT=LMNP1(ICONS)
      MINI=NTL(ISF)
      MAXI=NTU(ISF)
C
C     ----- JSHELL
C
      XJ=X(JC,JS)
      YJ=Y(JC,JS)
      ZJ=Z(JC,JS)
      JCONS=MCONS(JSF)
      JGU=NCON(JCONS)
      LJT=LMNP1(JCONS)
      FT=(2*LJT+1)
      MINJ=NTL(JSF)
      MAXJ=NTU(JSF)
      RR=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
      IANDJ=ISF.EQ.JSF.AND.IC.EQ.JC
C
C     ----- PREPARE INDICES FOR PAIRS OF (I,J) FUNCTIONS
C
      IJ=0
      DO 50 I=MINI,MAXI
           NX=IX(I)
           NY=IY(I)
           NZ=IZ(I)
           IF(IANDJ) MAXJ=I
           DO 50 J=MINJ,MAXJ
                IJ=IJ+1
                IJX(IJ)=NX+JX(J)
                IJY(IJ)=NY+JY(J)
                IJZ(IJ)=NZ+JZ(J)
   50 CONTINUE
      DO 60 I=1,IJ
   60 GOUT(I)=ZERO
C
C     ----- I PRIMITIVE
C
      XIJ=PT5*(XI+XJ)
      YIJ=PT5*(YI+YJ)
      ZIJ=PT5*(ZI+ZJ)
      XIJM=PT5*(XI-XJ)
      YIJM=PT5*(YI-YJ)
      ZIJM=PT5*(ZI-ZJ)
      DO 7000 IG=1,IGU
           AI=ZET(IG,ICONS)
           ARRI=AI*RR
           CI=ETA(IG,ICONS)
C
C     ----- J PRIMITIVE
C
           IF(IANDJ) JGU=IG
           DO 6000 JG=1,JGU
                AJ=ZET(JG,JCONS)
                AA=AI+AJ
                AAA=(AI-AJ)/AA
                DUM=AJ*ARRI/AA
                IF(DUM.GT.TOL) GO TO 6000
                AX=XIJ+AAA*XIJM
                AY=YIJ+AAA*YIJM
                AZ=ZIJ+AAA*ZIJM
C
C     ----- DENSITY FACTOR
C
                DIJ=CI*ETA(JG,JCONS)*DEXP(-DUM)
                IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ+DIJ
                T=DSQRT(AA)
                T1=-TWO*AJ*AJ/T
                T2=-PT5/T
                X0=AX
                Y0=AY
                Z0=AZ
                IN=-5
                DO 340 I=1,LIT
                     IN=IN+5
                     NI=I
                     DO 340 J=1,LJT
                          JN=IN+J
                          NJ=J
                          CALL STVINT
                          XIN(JN)=XINT/T
                          YIN(JN)=YINT/T
                          ZIN(JN)=ZINT/T
                          NJ=J+2
                          CALL STVINT
                          XIN(JN+25)=XINT*T1
                          YIN(JN+25)=YINT*T1
                          ZIN(JN+25)=ZINT*T1
                          NJ=J-2
                          IF(NJ.LE.0) GO TO 330
                          CALL STVINT
                          DUM=DBLE((J-1)*(J-2))*T2
                          XIN(JN+25)=XIN(JN+25)+XINT*DUM
                          YIN(JN+25)=YIN(JN+25)+YINT*DUM
                          ZIN(JN+25)=ZIN(JN+25)+ZINT*DUM
  330                     CONTINUE
  340           CONTINUE
                DO 350 I=1,IJ
                     NX=IJX(I)
                     NY=IJY(I)
                     NZ=IJZ(I)
                     YZ=YIN(NY)*ZIN(NZ)
                     DUM  = XIN(NX+25)*YZ+YIN(NY+25)*XIN(NX)*ZIN(NZ)
     1               +ZIN(NZ+25)*XIN(NX)*YIN(NY)
  350           GOUT(I)=GOUT(I)+DIJ*(FT*AJ*YZ*XIN(NX)+DUM)
 6000      CONTINUE
 7000 CONTINUE
      RETURN
      END
      SUBROUTINE VINTSA(CHG,ETA,LMNP1,MCONS,NC,NCON,NTL,NTU,X,Y,Z,ZET)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET,CHG,NC
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL IANDJ
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/   KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU
     1,               MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU
     2,               MSTU, MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON /ROOT/   XX,U(9),W(9),NROOTS
      COMMON /STV/    XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
      COMMON /GOUT/   GOUT(10000)
      COMMON /SHLT/   TOL, CUTOFF
C
      DIMENSION LMNP1(1), MCONS(1), NC(1), NCON(1), NTL(1), NTU(1)
      DIMENSION CHG(1), ETA(MCONU,1), X(MCU,1), Y(MCU,1), Z(MCU,1),
     1ZET(MCONU,1)
      DIMENSION XIN(125), YIN(125), ZIN(125)
      DIMENSION IX(35), IY(35), IZ(35), JX(35), JY(35), JZ(35)
      DIMENSION IJX(225), IJY(225), IJZ(225)
C
      DATA ZERO, PT5, ASRTPI /0.0D0, 0.5D0, 1.1283791670955126D0/
      DATA JX / 0, 1, 0, 0, 2, 0, 0, 1, 1, 0,
     13, 0, 0, 2, 2, 1, 0, 1, 0, 1,
     24, 0, 0, 3, 3, 1, 0, 1, 0, 2,
     32, 0, 2, 1, 1/
      DATA IX / 1, 6, 1, 1,11, 1, 1, 6, 6, 1,
     116, 1, 1,11,11, 6, 1, 6, 1, 6,
     221, 1, 1,16,16, 6, 1, 6, 1,11,
     311, 1,11, 6, 6/
      DATA JY / 0, 0, 1, 0, 0, 2, 0, 1, 0, 1,
     10, 3, 0, 1, 0, 2, 2, 0, 1, 1,
     20, 4, 0, 1, 0, 3, 3, 0, 1, 2,
     30, 2, 1, 2, 1/
      DATA IY / 1, 1, 6, 1, 1,11, 1, 6, 1, 6,
     11,16, 1, 6, 1,11,11, 1, 6, 6,
     21,21, 1, 6, 1,16,16, 1, 6,11,
     31,11, 6,11, 6/
      DATA JZ / 0, 0, 0, 1, 0, 0, 2, 0, 1, 1,
     10, 0, 3, 0, 1, 0, 1, 2, 2, 1,
     20, 0, 4, 0, 1, 0, 1, 3, 3, 0,
     32, 2, 1, 1, 2/
      DATA IZ / 1, 1, 1, 6, 1, 1,11, 1, 6, 6,
     11, 1,16, 1, 6, 1, 6,11,11, 6,
     21, 1,21, 1, 6, 1, 6,16,16, 1,
     311,11, 6, 6,11/
      RETURN
C
C
C
      ENTRY VINTS(IS,ISF,IC,JS,JSF,JC)
C
C     ----- ISHELL
C
      XI=X(IC,IS)
      YI=Y(IC,IS)
      ZI=Z(IC,IS)
      ICONS=MCONS(ISF)
      IGU=NCON(ICONS)
      LIT=LMNP1(ICONS)
      MINI=NTL(ISF)
      MAXI=NTU(ISF)
C
C     ----- JSHELL
C
      XJ=X(JC,JS)
      YJ=Y(JC,JS)
      ZJ=Z(JC,JS)
      JCONS=MCONS(JSF)
      JGU=NCON(JCONS)
      LJT=LMNP1(JCONS)
      MINJ=NTL(JSF)
      MAXJ=NTU(JSF)
      NROOTS=(LIT+LJT)/2
      RR=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
      IANDJ=ISF.EQ.JSF.AND.IC.EQ.JC
C
C     ----- PREPARE INDICES FOR PAIRS OF (I,J) FUNCTIONS
C
      IJ=0
      DO 50 I=MINI,MAXI
           NX=IX(I)
           NY=IY(I)
           NZ=IZ(I)
           IF(IANDJ) MAXJ=I
           DO 50 J=MINJ,MAXJ
                IJ=IJ+1
                IJX(IJ)=NX+JX(J)
                IJY(IJ)=NY+JY(J)
                IJZ(IJ)=NZ+JZ(J)
   50 CONTINUE
      DO 60 I=1,IJ
   60 GOUT(I)=ZERO
C
C     ----- I PRIMITIVE
C
      XIJ=PT5*(XI+XJ)
      YIJ=PT5*(YI+YJ)
      ZIJ=PT5*(ZI+ZJ)
      XIJM=PT5*(XI-XJ)
      YIJM=PT5*(YI-YJ)
      ZIJM=PT5*(ZI-ZJ)
      DO 7000 IG=1,IGU
           AI=ZET(IG,ICONS)
           ARRI=AI*RR
           CI=ETA(IG,ICONS)
C
C     ----- J PRIMITIVE
C
           IF(IANDJ) JGU=IG
           DO 6000 JG=1,JGU
                AJ=ZET(JG,JCONS)
                AA=AI+AJ
                AAA=(AI-AJ)/AA
                DUM=AJ*ARRI/AA
                IF(DUM.GT.TOL) GO TO 6000
                AX=XIJ+AAA*XIJM
                AY=YIJ+AAA*YIJM
                AZ=ZIJ+AAA*ZIJM
C
C     ----- DENSITY FACTOR
C
                DIJ=CI*ETA(JG,JCONS)*DEXP(-DUM)
                IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ+DIJ
C
C     ----- NUCLEAR ATTRACTION
C
                DIJ=DIJ*ASRTPI/AA
                AAX=AA*AX
                AAY=AA*AY
                AAZ=AA*AZ
                DO 450 KS=1,NS
                     ZNUC=-CHG(KS)
                     KCU=NC(KS)
                     DO 450 KC=1,KCU
                          CX=X(KC,KS)
                          CY=Y(KC,KS)
                          CZ=Z(KC,KS)
                          XX=AA*((AX-CX)**2+(AY-CY)**2+(AZ-CZ)**2)
                          IF(NROOTS.LE.3) CALL RT123
                          IF(NROOTS.EQ.4) CALL ROOT4
                          IF(NROOTS.EQ.5) CALL ROOT5
                          MM=0
                          DO 420 K=1,NROOTS
                               UU=AA*U(K)
                               WW=W(K)*ZNUC
                               TT=AA+UU
                               T=DSQRT(TT)
                               X0=(AAX+UU*CX)/TT
                               Y0=(AAY+UU*CY)/TT
                               Z0=(AAZ+UU*CZ)/TT
                               IN=-5+MM
                               DO 410 I=1,LIT
                                    IN=IN+5
                                    NI=I
                                    DO 410 J=1,LJT
                                         JN=IN+J
                                         NJ=J
                                         CALL STVINT
                                         XIN(JN)=XINT
                                         YIN(JN)=YINT
                                         ZIN(JN)=ZINT*WW
  410                          CONTINUE
  420                     MM=MM+25
                          DO 440 I=1,IJ
                               NX=IJX(I)
                               NY=IJY(I)
                               NZ=IJZ(I)
                               DUM=ZERO
                               MM=0
                               DO 430 K=1,NROOTS
                                    DUM=DUM+XIN(NX+MM)*YIN(NY+MM)*ZIN(NZ
     *                              +MM)
  430                          MM=MM+25
  440                     GOUT(I)=GOUT(I)+DIJ*DUM
  450           CONTINUE
 6000      CONTINUE
 7000 CONTINUE
      RETURN
      END
      SUBROUTINE TWOINT(AJ,CX,ETA,ICA,ICB,ICXST,IL,IPRST,LMNP1,MCONS,NC,
     1NCON,NF,NFCT,NGW,NPAIR,NPRIR,NT,NTL,NTU,X,Y,Z,ZET,MGUX)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY AJ,CX,ETA,ICA,ICB,ICXST,IL,IPRST,LMNP1,MCONS,NC,
C*** 1NCON,NF,NFCT,NGW,NPAIR,NPRIR,NT,NTL,NTU,X,Y,Z,ZET
C
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST,IKCXST,ILCXST,KLCXST,JLCXST,JKCXST
      COMMON /OUTBUF/ IBLK, IBUF, ALBL(2235), AI(2235)
      COMMON /TAPE/   NTAPE
      COMMON /DIM21/  IPQ(256)
      COMMON /IKPR/   NPRIRI(3,14), NPRIRK(3,14)
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
C
      DIMENSION ICA(MCU,MSU,1),ICB(4,MGUX,1),IPRST(1),
     1LMNP1(1),MCONS(1),NC(1),NCON(1),NF(1),NFCT(1),NGW(1),NPAIR(1),
     2NT(1),NTL(1),NTU(1),NPRIR(MSTU,2)
      DIMENSION AJ(1),CX(1),ETA(MCONU,1),X(MCU,1),Y(MCU,1),
     1Z(MCU,1),ZET(MCONU,1),IL(2), LBLT(2), ICXST(1)
      DIMENSION LBL(4470)
      EQUIVALENCE (ALBL,LBL)
C
      EQUIVALENCE(ABLT,LBLT(1))
C
      DATA IDTR/2235/, A0/0.0D0/
C
      MGU=MGUX
      CALL SF3AS1(ICB,   NFCT,NGW,NT,MGU)
      CALL SF3AS2(ICB,NC,NFCT,NGW,NT,MGU)
      CALL SF3AS3(ICB,NC,NFCT,NGW,NT,MGU)
      CALL SF3AS4(ICB,NC,NFCT,NGW,NT,MGU)
      CALL SF3AS5(ICB,NC,NFCT,NGW,NT,MGU)
      CALL SF3AS6(ICB,NC,NFCT,NGW,NT,MGU)
      CALL SF3AS7(ICB,NC,NFCT,NGW,NT,MGU)
      CALL SF3AS8(ICB,NC,NFCT,NGW,NT,MGU)
C
      CALL JANDKS(NT)
      CALL SHLSV(ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET)
      CALL AOSO2S(AJ,CX)
      CALL AOSEQS(AJ,CX)
      CALL WTNT2S(AJ,IL,IPRST)
C
      NWT1(3)=1
      IBLK=0
      IBUF = 0
      NSCTLD=0
      IBFLD = 0
      ISF = 0
C        IJSF(1) IS IJSF
      IJSF(1) = 0
C        IJSF(2) IS IKSF
      IJSF(2) = 0
C        IJSF(3) IS ILSF
      IJSF(3) = 0
      DO 9984 IS = 1,NS
           IFU = NF(IS)
           IF(IFU.EQ.0) GO TO 9984
           ISFIS= ISF
           IKSFIS = IJSF(2)
           ILSFIS = IJSF(3)
           IC = NC(IS)
           ICU = NC(IS)
           IEQS1 = 8
           ASSIGN 111 TO JB21
           JSF = 0
C        KLSF(2) IS JLSF
           KLSF(2) = 0
C        KLSF(3) IS JKSF
           KLSF(3) = 0
           DO 9983 JS = 1,IS
                IF (JS .NE. IS) GO TO 10
                IEQS1 = 4
                ASSIGN 112 TO JB21
                GO TO 12
   10           JFU = NF(JS)
                IF(JFU.EQ.0) GO TO 9983
   12           IEQS2 = IEQS1
                JCU = NC(JS)
                JSFJS = JSF
                IJSFJS = IJSF(1)
                JLSFJS = KLSF(2)
                ASSIGN 113 TO KB21
                KSF = 0
                IJSF(2) = IKSFIS
C        KLSF(1) IS KLSF
                KLSF(1) = 0
                DO 9982 KS = 1,JS
                     IF (KS .NE. JS) GO TO 14
                     IEQS2 = IEQS1 - 2
                     ASSIGN 114 TO KB21
                     GO TO 16
   14                KFU = NF(KS)
                     IF(KFU.EQ.0) GO TO 9982
   16                IEQS3 = IEQS2
                     KCU = NC(KS)
                     KSFKS= KSF
                     IKSFKS = IJSF(2)
                     JKSFKS = KLSF(3)
                     ASSIGN 115 TO LB21
                     LSF = 0
                     IJSF(3) = ILSFIS
                     KLSF(2) = JLSFJS
                     DO 9981 LS = 1,KS
                          IF (LS .NE. KS) GO TO 18
                          IEQS3 = IEQS2 - 1
                          ASSIGN 116 TO LB21
                          GO TO 20
   18                     LFU = NF(LS)
                          IF(LFU.EQ.0) GO TO 9981
   20                     NCC = 0
                          LCU = NC(LS)
                          LSFLS = LSF
                          KLSFLS = KLSF(1)
                          JLSFLS = KLSF(2)
                          CALL CECOB(IC,ICA,ICB,IEQS3,IS,JS,KS,LS,NCC,
     *                    NFCT,NGW,MGU)
                          ISF = ISFIS
                          IJSF(1) = IJSFJS
                          IJSF(2) = IKSFKS
                          DO 998 IF = 1, IFU
                               ISF = ISF + 1
                               ITL = NTL(ISF)
                               ITU = NTU(ISF)
                               IKSFIF = IJSF(2)
                               ILSFIF = IJSF(3)
                               IEQSF1 = 8
                               JSF = JSFJS
                               KLSF(2) = JLSFLS
                               KLSF(3) = JKSFKS
C        IF (JS .NE. IS) GO TO 111
                               GO TO JB21, (112,111)
  112                          JFU = IF
  111                          DO 998 JF = 1, JFU
                                    JLSFJF = KLSF(2)
                                    JSF = JSF + 1
                                    JTL = NTL(JSF)
                                    JTU = NTU(JSF)
                                    IJSF(1) = IJSF(1) + 1
                                    NTIJ=NT(ISF)*NT(JSF)*NPAIR(IJSF(1))
                                    IF (JSF .EQ. ISF) IEQSF1 = 4
                                    IEQSF2 = IEQSF1
                                    KSF = KSFKS
                                    IJSF(2) = IKSFIF
                                    KLSF(1) = KLSFLS
C        IF (KS .NE. JS) GO TO 113
                                    GO TO KB21, (114,113)
  114                               KFU = JF
  113                               DO 998 KF = 1, KFU
                                         KSF = KSF + 1
                                         KTL = NTL(KSF)
                                         KTU = NTU(KSF)
                                         IJSF(2) = IJSF(2) + 1
                                         NTIK=NT(ISF)*NT(KSF)*NPAIR(IJSF
     *                                   (2))
                                         KLSF(3) = KLSF(3) + 1
                                         NTJK=NT(JSF)*NT(KSF)*NPAIR(KLSF
     *                                   (3))
                                         IF (KSF .EQ. JSF) IEQSF2 =
     *                                   IEQSF1 - 2
                                         IEQSF3 = IEQSF2
                                         LSF = LSFLS
                                         IJSF(3) = ILSFIF
                                         KLSF(2) = JLSFJF
C        IF (LS .NE. KS) GO TO 115
                                         GO TO LB21, (116,115)
  116                                    LFU = KF
  115                                    DO 997 LF = 1, LFU
                                              LSF = LSF + 1
                                              LTL = NTL(LSF)
                                              LTU = NTU(LSF)
                                              IJSF(3) = IJSF(3) + 1
                                              NTIL=NT(ISF)*NT(LSF)*NPAIR
     *                                        (IJSF(3))
                                              KLSF(1) = KLSF(1) + 1
                                              NTKL=NT(KSF)*NT(LSF)*NPAIR
     *                                        (KLSF(1))
                                              KLSF(2) = KLSF(2) + 1
                                              NTJL=NT(JSF)*NT(LSF)*NPAIR
     *                                        (KLSF(2))
                                              IF (LSF .EQ. KSF) IEQSF3 =
     *                                         IEQSF2 - 1
C        ZERO OUT SPACE FOR INTEGRAL ACCUMULATION
                                              IBL = 0
C        (DO 504 ISCM = 1, 3)
                                              ISCM = 1
                                              GO TO 502
  501                                         IF (MAX0(IJSF(ISCM),KLSF(
     *                                        ISCM)) .NE. IJSF(ISCM-1))
     *                                         GO TO 502
                                              NQD(ISCM) = NQD(ISCM-1)
                                              NSWIT(ISCM) = NSWIT(ISCM -
     *                                         1)
                                              NPRI(ISCM)=NPRI(ISCM-1)
                                              NPRK(ISCM)=NPRK(ISCM-1)
                                              DO 5400 IST=1,NST
                                                   NPRIRI(ISCM,IST)=
     *                                             NPRIRI(ISCM-1,IST)
 5400                                         NPRIRK(ISCM,IST)=NPRIRK(
     *                                        ISCM-1,IST)
                                              NIQD(ISCM) = 0
                                              GO TO 504
  502                                         NPRI(ISCM)=NPAIR(IJSF(ISCM
     *                                        ))
                                              NPRK(ISCM)=NPAIR(KLSF(ISCM
     *                                        ))
                                              DO 5450 IST=1,NST
                                                   NPRIRI(ISCM,IST)=
     *                                             NPRIR(IST,IJSF(ISCM))
 5450                                         NPRIRK(ISCM,IST)=NPRIR(IST
     *                                        ,KLSF(ISCM))
                                              IBLU=0
                                              IF (IJSF(ISCM).NE.KLSF(
     *                                        ISCM)) GO TO 5511
                                              DO 5500 IST=1,NST
 5500                                         IBLU=IBLU+IPQ(NPRIRI(ISCM,
     *                                        IST)+1)
                                              NSWIT(ISCM) = 2
                                              GO TO 5513
 5511                                         DO 5520 IST=1,NST
 5520                                         IBLU=IBLU+NPRIRI(ISCM,IST)
     *                                        *NPRIRK(ISCM,IST)
                                              NSWIT(ISCM) = 1
 5513                                         NQD(ISCM)=IBLU
                                              NIQD(ISCM) = IBLU
                                              IF(IBLU.LE.MBLU) GOTO 504
                                              WRITE(ICHECK,989) IBLU
C***                                          CALL M:ABORT
      STOP
  504                                         IF (ISCM .EQ. 3) GO TO 505
                                              ISCM = ISCM + 1
                                              GO TO 501
  505                                         IJCXST = ICXST(IJSF(1))
                                              IKCXST = ICXST(IJSF(2))
                                              ILCXST = ICXST(IJSF(3))
                                              KLCXST = ICXST(KLSF(1))
                                              JLCXST = ICXST(KLSF(2))
                                              JKCXST = ICXST(KLSF(3))
                                              DO 995 ISCM=1,3
                                                   IF(NIQD(ISCM).EQ.0)
     *                                              GOTO 995
                                                   IBLU=NQD(ISCM)
                                                   DO 507 IBL=1,IBLU
  507                                              AJ(IBL)=0.0
                                                   NWT=1
                                                   INX = 1
                                                   JNX = 2
                                                   KNX = 3
                                                   LNX = 4
                                                   GO TO (38, 40, 42, 44
     *                                             , 46, 48, 50, 60),
     *                                             IEQSF3
C        ISF = JSF = KSF = LSF SECTION
   38                                              DO 1100 ICC = 1, NCC
 1100                                              CALL SF3EQ1(ICC,IS,
     *                                             ISF)
                                                   GO TO 996
C        ISF = JSF = KSF > LSF SECTION
   40                                              DO 260 ICC = 1, NCC
                                                        IF(IEQS3.NE.1)
     *                                                   GO TO 262
                                                        ITST = 0
                                                        IGWU = NGW(ICC)
      DO 219 IPRM = 1, 4
           GO TO (211,212,213,214), IPRM
  211      INX = 1
           JNX = 2
           KNX = 3
           LNX = 4
           GO TO 215
  212      KNX = 4
           LNX = 3
           GO TO 215
  213      JNX = 3
           LNX = 2
           GO TO 215
  214      INX = 2
           LNX = 1
  215      LC1 = ICB(LNX,1,ICC)
           IF(LC1.EQ.ITST) GO TO 219
           NWT = 1
           IF(IGWU.EQ.1) GO TO 218
           NGW1 = 1
           DO 217 IGW = 2, IGWU
                IF(ICB(LNX,IGW,ICC)-LC1) 220,216,217
  216           NGW1 = NGW1 + 1
  217      NWT = NWT + 1
           NWT = NWT/NGW1
  218      CALL SF3EQ2(ICC,IS,ISF,LS,LSF)
  220      ITST= LC1
  219 CONTINUE
      GO TO 260
  262 CALL SF3EQ2(ICC,IS,ISF,LS,LSF)
  260                                              CONTINUE
                                                   GO TO 996
C        ISF = JSF > KSF = LSF SECTION
42                                                 DO 360 ICC = 1, NCC
                                                        IF(IEQS3.NE.1)
     *                                                   GO TO 363
                                                        ITST = 0
                                                        IGWU = NGW(ICC)
      DO 3119 IPRM = 1, 6
           GO TO (3111,3112,3113,3114,3125,3116), IPRM
3116       INX = 3
           LNX = 2
           GO TO 3222
3125       JNX = 4
           LNX = 3
           GO TO 3222
3114       INX = 2
           JNX = 3
           KNX = 1
           LNX = 4
           GO TO 3115
3113       JNX = 4
           LNX = 3
           GO TO 3222
3112       JNX = 3
           KNX = 2
           GO TO 3115
3111       INX = 1
           JNX = 2
           KNX = 3
           LNX = 4
3115       KC1 = ICB(KNX,1,ICC)
3222       LC1 = ICB(LNX,1,ICC)
           ITST1=IPQ(KC1)+LC1
           IF (ITST1 .LE. ITST) GO TO 3119
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 3220
           NGW1 = 1
           DO 3118 IGW = 2, IGWU
                KC2 = ICB(KNX,IGW,ICC)
                LC2 = ICB(LNX,IGW,ICC)
                IF(LC2.LT.KC2) GO TO 3223
                IF(IPQ(LC2)+KC2-ITST1) 3121,3117,3118
3223            IF(IPQ(KC2)+LC2-ITST1) 3121,3117,3118
3117            NGW1 = NGW1 + 1
3118       NWT = NWT + 1
           NWT = NWT/NGW1
 3220      CALL SF3EQ3(ICC,ISCM,IS,ISF,KS,KSF)
3121       ITST= ITST1
3119  CONTINUE
      GO TO 360
  363 CALL SF3EQ3(ICC,ISCM,IS,ISF,KS,KSF)
360                                                CONTINUE
                                                   GO TO 996
C        ISF = JSF > KSF > LSF SECTION
44                                                 DO 440 ICC = 1, NCC
                                                        GO TO (441,442,
     *                                                  443,444), IEQS3
441                                                     ITST = 0
                                                        IGWU = NGW(ICC)
      DO 4119 IPRM = 1, 12
           GO TO (411,412,413,414,415,416,417,418,419,4110,4111,4112),
     *     IPRM
4112       INX = 3
           KNX = 2
           GO TO 4115
4111       JNX = 4
           KNX = 3
           GO TO 4115
4110       INX = 2
           JNX = 3
           KNX = 4
           LNX = 1
           GO TO 4121
419        INX = 3
           KNX = 1
           GO TO 4115
418        JNX = 4
           KNX = 3
           GO TO 4115
417        INX = 1
           JNX = 3
           KNX = 4
           LNX = 2
           GO TO 4121
416        INX = 2
           KNX = 1
           GO TO 4115
415        JNX = 4
           KNX = 2
           GO TO 4115
414        INX = 1
           JNX = 2
           KNX = 4
           LNX = 3
           GO TO 4121
413        INX = 2
           KNX = 1
           GO TO 4115
412        JNX = 3
           KNX = 2
           GO TO 4115
411        INX = 1
           JNX = 2
           KNX = 3
           LNX = 4
4121       LC1 = ICB(LNX,1,ICC)
4115       KC1 = ICB(KNX,1,ICC)
           ITST1 = KC1 + LC1 * ICU
           IF (ITST1 .LE. ITST) GO TO 4119
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 4118
           NGW1 = 1
           DO 4117 IGW = 2, IGWU
                IF(ICB(KNX,IGW,ICC)+ICB(LNX,IGW,ICC)*ICU-ITST1) 4120,
     *          4116,4117
4116            NGW1 = NGW1 + 1
4117       NWT = NWT + 1
           NWT = NWT/NGW1
 4118      CALL SF3EQ4(ICC,ISCM,IS,ISF,KS,KSF,LS,LSF)
4120       ITST= ITST1
4119  CONTINUE
      GO TO 440
  442 ITST = 0
      IGWU = NGW(ICC)
      DO 429 IPRM = 1, 3
           IF(IPRM-2) 421,422,423
421        INX = 1
           JNX = 2
           KNX = 3
           GO TO 424
422        JNX = 3
           KNX = 2
           GO TO 424
423        INX = 2
           KNX = 1
424        KC1 = ICB(KNX,1,ICC)
           IF(KC1.EQ.ITST) GO TO 429
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 428
           NGW1 = 1
           DO 427 IGW = 2, IGWU
                IF(ICB(KNX,IGW,ICC)-KC1) 430,426,427
426             NGW1 = NGW1 + 1
427        NWT = NWT + 1
           NWT = NWT /NGW1
  428      CALL SF3EQ4(ICC,ISCM,IS,ISF,KS,KSF,LS,LSF)
430        ITST = KC1
429   CONTINUE
      GO TO 440
  443 ITST = 0
      IGWU = NGW(ICC)
      DO 4877 IPRM = 1, 2
           IF(IPRM.NE.1) GO TO 4872
           KNX = 3
           LNX = 4
           GO TO 4873
4872       KNX = 4
           LNX = 3
4873       LC1 = ICB (LNX,1,ICC)
           IF(LC1.EQ.ITST) GO TO 4877
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 4875
           NGW1 = 1
           DO 4874 IGW = 2, IGWU
                IF(ICB(LNX,IGW,ICC)-LC1) 4878,4876,4874
4876            NGW1 = NGW1 + 1
4874       NWT = NWT + 1
           NWT = NWT /NGW1
 4875      CALL SF3EQ4(ICC,ISCM,IS,ISF,KS,KSF,LS,LSF)
4878       ITST = LC1
4877  CONTINUE
      GO TO 440
  444 CALL SF3EQ4(ICC,ISCM,IS,ISF,KS,KSF,LS,LSF)
440                                                CONTINUE
                                                   GO TO 996
C        ISF > JSF = KSF = LSF SECTION
46                                                 DO 550 ICC = 1, NCC
                                                        IF(IEQS3.NE.1)
     *                                                   GO TO 555
                                                        ITST = 0
                                                        IGWU = NGW(ICC)
      DO 519 IPRM = 1, 4
           GO TO (511,512,513,514), IPRM
511        INX = 4
           JNX = 1
           KNX = 2
           LNX = 3
           GO TO 515
512        INX = 3
           LNX = 4
           GO TO 515
513        INX = 2
           KNX = 3
           GO TO 515
514        INX = 1
           JNX = 2
515        IC1 = ICB(INX,1,ICC)
           IF (IC1 .EQ. ITST) GO TO 519
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 518
           NGW1 = 1
           DO 517 IGW = 2, IGWU
                IF (ICB(INX,IGW,ICC) - IC1) 520,516,517
516             NGW1 = NGW1 + 1
517        NWT = NWT + 1
           NWT = NWT/NGW1
  518      CALL SF3EQ5(ICC,IS,ISF,JS,JSF)
520        ITST = IC1
519   CONTINUE
      GO TO 550
  555 CALL SF3EQ5(ICC,IS,ISF,JS,JSF)
550                                                CONTINUE
                                                   GO TO 996
C        ISF > JSF = KSF > LSF SECTION
48                                                 DO 290 ICC = 1, NCC
                                                        GO TO (230,232,
     *                                                  231,231,234,236)
     *                                                  , IEQS3
231                                                     WRITE(ICHECK,19)
   19                                                   FORMAT(48H ERROR
     * IN IEQSF3 .EQ. 6 .AND. IEQS3 .NE. 1,2,5,6)
C***                                                    CALL M:ABORT
      STOP
230                                                     ITST = 0
                                                        IGWU = NGW(ICC)
      DO 6119 IPRM = 1, 12
           GO TO (611,612,613,614,615,616,617,618,619,6110,6111,6112),
     *     IPRM
6112       INX = 2
           JNX = 3
           GO TO 6115
6111       INX = 3
           KNX = 4
           GO TO 6115
6110       INX = 4
           JNX = 2
           KNX = 3
           LNX = 1
           GO TO 6121
619        INX = 1
           JNX = 3
           GO TO 6115
618        INX = 3
           KNX = 4
           GO TO 6115
617        INX = 4
           JNX = 1
           KNX = 3
           LNX = 2
           GO TO 6121
616        INX = 1
           JNX = 2
           GO TO 6115
615        INX = 2
           KNX = 4
           GO TO 6115
614        INX = 4
           JNX = 1
           KNX = 2
           LNX = 3
           GO TO 6121
613        INX = 1
           JNX = 2
           GO TO 6115
612        INX = 2
           KNX = 3
           GO TO 6115
611        INX = 3
           JNX = 1
           KNX = 2
           LNX = 4
6121       LC1 = ICB(LNX,1,ICC)
6115       IC1 = ICB(INX,1,ICC)
           ITST1 = IC1 + LC1 * ICU
           IF (ITST1 .LE. ITST) GO TO 6119
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 6118
           NGW1 = 1
           DO 6117 IGW = 2, IGWU
                IF (ICB(INX,IGW,ICC)+ICB(LNX,IGW,ICC)*ICU-ITST1) 6120,
     *          6116,6117
6116            NGW1 = NGW1+ 1
6117       NWT = NWT + 1
           NWT = NWT/NGW1
 6118      CALL SF3EQ6(ICC,ISCM,IS,ISF,JS,JSF,LS,LSF)
6120       ITST = ITST1
6119  CONTINUE
      GO TO 290
  232 ITST = 0
      IGWU = NGW(ICC)
      DO 629 IPRM = 1, 3
           IF(IPRM-2) 621,622,623
621        INX = 3
           JNX = 1
           KNX = 2
           GO TO 624
622        INX = 2
           KNX = 3
           GO TO 624
623        INX = 1
           JNX = 2
624        IC1 = ICB(INX,1,ICC)
           IF (IC1 .EQ. ITST) GO TO 629
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 628
           NGW1 = 1
           DO 627 IGW = 2, IGWU
                IF (ICB(INX,IGW,ICC) - IC1) 630,626,627
626             NGW1 = NGW1 + 1
627        NWT = NWT + 1
           NWT = NWT/NGW1
  628      CALL SF3EQ6(ICC,ISCM,IS,ISF,JS,JSF,LS,LSF)
630        ITST = IC1
629   CONTINUE
      GO TO 290
  234 ITST = 0
      IGWU = NGW(ICC)
      DO 659 IPRM = 1, 3
           IF(IPRM-2) 651,652,653
651        JNX = 2
           KNX = 3
           LNX = 4
           GO TO 654
652        KNX = 4
           LNX = 3
           GO TO 654
653        JNX = 3
           LNX = 2
654        LC1 = ICB(LNX,1,ICC)
           IF (LC1 .EQ. ITST) GO TO 659
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 658
           NGW1 = 1
           DO 657 IGW = 2, IGWU
                IF (ICB(LNX,IGW,ICC) - LC1) 660,656,657
656             NGW1 = NGW1 + 1
657        NWT = NWT + 1
           NWT = NWT/NGW1
  658      CALL SF3EQ6(ICC,ISCM,IS,ISF,JS,JSF,LS,LSF)
660        ITST = LC1
659   CONTINUE
      GO TO 290
  236 CALL SF3EQ6(ICC,ISCM,IS,ISF,JS,JSF,LS,LSF)
290                                                CONTINUE
                                                   GO TO 996
C        ISF > JSF > KSF = LSF SECTION
50                                                 DO 96 ICC = 1, NCC
                                                        GO TO (54, 55,
     *                                                  56, 55, 58, 55,
     *                                                  62), IEQS3
55                                                      WRITE(ICHECK,9)
    9                                                   FORMAT(48H ERROR
     * IN IEQSF3 .EQ. 7 .AND. IEQS3 .NE. 2,4,6,8)
C***                                                    CALL M:ABORT
      STOP
54                                                      ITST = 0
                                                        IGWU = NGW(ICC)
      DO 7119 IPRM = 1, 12
           GO TO (711,712,713,714,715,716,717,718,719,7110,7111,7112),
     *     IPRM
7112       INX = 2
           KNX = 3
           GO TO 7115
7111       INX = 3
           LNX = 4
           GO TO 7115
7110       INX = 4
           JNX = 1
           KNX = 2
           LNX = 3
           GO TO 7121
719        INX = 1
           KNX = 3
           GO TO 7115
718        INX = 3
           LNX = 4
           GO TO 7115
717        INX = 4
           JNX = 2
           KNX = 1
           LNX = 3
           GO TO 7121
716        INX = 1
           KNX = 2
           GO TO 7115
715        INX = 2
           LNX = 4
           GO TO 7115
714        INX = 4
           JNX = 3
           KNX = 1
           LNX = 2
           GO TO 7121
713        INX = 1
           KNX = 2
           GO TO 7115
712        INX = 2
           LNX = 3
           GO TO 7115
711        INX = 3
           JNX = 4
           KNX = 1
           LNX = 2
7121       JC1 = ICB(JNX,1,ICC)
7115       IC1 = ICB(INX,1,ICC)
           ITST1 = IC1 + JC1 * ICU
           IF (ITST1 .LE. ITST) GO TO 7119
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 7118
           NGW1 = 1
           DO 7117 IGW = 2, IGWU
                IF(ICB(INX,IGW,ICC)+ICB(JNX,IGW,ICC)*ICU-ITST1) 7120,
     *          7116,7117
7116            NGW1 = NGW1 + 1
7117       NWT = NWT + 1
           NWT = NWT/NGW1
 7118      CALL SF3EQ7(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF)
7120       ITST= ITST1
7119  CONTINUE
      GO TO 96
   56 ITST = 0
      IGWU = NGW(ICC)
      DO 7848 IPRM = 1, 2
           IF(IPRM.NE.1) GO TO 7842
           INX = 1
           JNX = 2
           GO TO 7843
7842       INX = 2
           JNX = 1
7843       JC1 = ICB(JNX,1,ICC)
           IF (JC1 .EQ. ITST) GO TO 7848
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 7845
           NGW1 = 1
           DO 7844 IGW = 2, IGWU
                IF(ICB(JNX,IGW,ICC) - JC1) 7849,7846,7844
7846            NGW1 = NGW1 + 1
7844       NWT = NWT + 1
           NWT = NWT /NGW1
 7845      CALL SF3EQ7(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF)
7849       ITST = JC1
7848  CONTINUE
      GO TO 96
   58 ITST = 0
      IGWU = NGW(ICC)
      DO 759 IPRM = 1, 3
           IF(IPRM-2) 751,752,753
751        JNX = 4
           KNX = 2
           LNX = 3
           GO TO 754
752        JNX = 3
           LNX = 4
           GO TO 754
753        JNX = 2
           KNX = 3
754        JC1 = ICB(JNX,1,ICC)
           IF (JC1 .EQ. ITST) GO TO 759
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 758
           NGW1 = 1
           DO 757  IGW = 2, IGWU
                IF (ICB(JNX,IGW,ICC) - JC1) 760,756,757
756             NGW1 = NGW1 + 1
757        NWT = NWT + 1
           NWT = NWT/NGW1
  758      CALL SF3EQ7(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF)
760        ITST = JC1
759   CONTINUE
      GO TO 96
   62 CALL SF3EQ7(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF)
96                                                 CONTINUE
                                                   GO TO 996
C        ISF > JSF > KSF > LSF SECTION
60                                                 DO 141 ICC = 1, NCC
                                                        GO TO (131, 132,
     *                                                   133, 134, 135,
     *                                                  136, 137, 138),
     *                                                  IEQS3
131                                                     ITST = 0
                                                        IGWU = NGW(ICC)
      DO 8129 IPRM = 1, 24
           GO TO (811,812,813,814,815,816,817,818,819,8110,8111,8112,
     *     8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124),
     *      IPRM
8124       INX = 4
           JNX = 3
           GO TO 8125
8123       INX = 3
           JNX = 4
           KNX = 2
           GO TO 8131
8122       INX = 4
           JNX = 2
           GO TO 8125
8121       INX = 2
           JNX = 4
           KNX = 3
           GO TO 8131
8120       INX = 3
           JNX = 2
           GO TO 8125
8119       INX = 2
           KNX = 4
           LNX = 1
           GO TO 8132
8118       INX = 4
           JNX = 3
           GO TO 8125
8117       INX = 3
           JNX = 4
           KNX = 1
           GO TO 8131
8116       INX = 4
           JNX = 1
           GO TO 8125
8115       INX = 1
           JNX = 4
           KNX = 3
           GO TO 8131
8114       INX = 3
           JNX = 1
           GO TO 8125
8113       INX = 1
           JNX = 3
           KNX = 4
           LNX = 2
           GO TO 8132
8112       INX = 4
           JNX = 2
           GO TO 8125
8111       INX = 2
           JNX = 4
           KNX = 1
           GO TO 8131
8110       INX = 4
           JNX = 1
           GO TO 8125
819        INX = 1
           JNX = 4
           KNX = 2
           GO TO 8131
818        INX = 2
           JNX = 1
           GO TO 8125
817        INX = 1
           KNX = 4
           LNX = 3
           GO TO 8132
816        INX = 3
           JNX = 2
           GO TO 8125
815        INX = 2
           JNX = 3
           KNX = 1
           GO TO 8131
814        INX = 3
           JNX = 1
           GO TO 8125
813        INX = 1
           JNX = 3
           KNX = 2
           GO TO 8131
812        INX = 2
           JNX = 1
           GO TO 8125
811        INX = 1
           JNX = 2
           KNX = 3
           LNX = 4
8132       LC1 = ICB(LNX,1,ICC)
8131       KC1 = ICB(KNX,1,ICC)
8125       JC1 = ICB(JNX,1,ICC)
           ITST1 = JC1 + (KC1 + LC1 * ICU) * ICU
           IF (ITST1 .LE. ITST) GO TO 8129
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 8128
           DO 8127 IGW = 2, IGWU
                IF(ICB(JNX,IGW,ICC)+(ICB(KNX,IGW,ICC)+ICB(LNX,IGW,ICC)*
     *          ICU)*ICU.LT.ITST1) GO TO 8130
8127       NWT = NWT + 1
 8128      CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
8130       ITST = ITST1
8129  CONTINUE
      GO TO 141
  132 ITST = 0
      IGWU = NGW(ICC)
      DO 828 IPRM = 1, 6
           GO TO (821,822,823,824,825,826), IPRM
826        INX = 3
           JNX = 2
           GO TO 827
825        INX = 2
           JNX = 3
           KNX = 1
           GO TO 8301
824        INX = 3
           JNX = 1
           GO TO 827
823        INX = 1
           JNX = 3
           KNX = 2
           GO TO 8301
822        INX = 2
           JNX = 1
           GO TO 827
821        INX = 1
           JNX = 2
           KNX = 3
8301       KC1 = ICB(KNX,1,ICC)
827        JC1 = ICB(JNX,1,ICC)
           ITST1 = JC1 + KC1 * ICU
           IF (ITST1 .LE. ITST) GO TO 828
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 829
           DO 8221 IGW = 2, IGWU
                IF(ICB(JNX,IGW,ICC)+ICB(KNX,IGW,ICC)*ICU.LT.ITST1) GO TO
     *           8300
8221       NWT = NWT + 1
  829      CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
8300       ITST = ITST1
828   CONTINUE
      GO TO 141
133   ITST = 0
      IGWU = NGW(ICC)
      DO 830 IPRM = 1, 4
           GO TO (831,832,833,834), IPRM
834        INX = 2
           JNX = 1
           GO TO 835
833        INX = 1
           JNX = 2
           KNX = 4
           LNX = 3
           GO TO 839
832        INX = 2
           JNX = 1
           GO TO 835
831        INX = 1
           JNX = 2
           KNX = 3
           LNX = 4
839        LC1 = ICB(LNX,1,ICC)
835        JC1 = ICB(JNX,1,ICC)
           ITST1 = JC1 + LC1 * ICU
           IF (ITST1 .LE. ITST) GO TO 830
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 836
           DO 838 IGW = 2, IGWU
                IF(ICB(JNX,IGW,ICC)+ICB(LNX,IGW,ICC)*ICU.LT.ITST1) GO TO
     *           837
838        NWT = NWT + 1
  836      CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
837        ITST = ITST1
830   CONTINUE
      GO TO 141
  134 ITST = 0
      IGWU = NGW(ICC)
      DO 848 IPRM = 1, 2
           IF(IPRM.NE.1) GO TO 842
           INX = 1
           JNX = 2
           GO TO 843
842        INX = 2
           JNX = 1
843        JC1 = ICB(JNX,1,ICC)
           IF (JC1 .EQ. ITST) GO TO 848
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 845
           IF(ICB(JNX,2,ICC).LT.JC1) GO TO 848
           NWT = 2
845        ITST = JC1
           CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
848   CONTINUE
      GO TO 141
  135 ITST = 0
      IGWU = NGW(ICC)
      DO 858 IPRM = 1, 6
           GO TO (851,852,853,854,855,856), IPRM
856        JNX = 4
           KNX = 3
           GO TO 857
855        JNX = 3
           KNX = 4
           LNX = 2
           GO TO 8571
854        JNX = 4
           KNX = 2
           GO TO 857
853        JNX = 2
           KNX = 4
           LNX = 3
           GO TO 8571
852        JNX = 3
           KNX = 2
           GO TO 857
851        JNX = 2
           KNX = 3
           LNX = 4
8571       LC1 = ICB(LNX,1,ICC)
857        KC1 = ICB(KNX,1,ICC)
           ITST1 = KC1 + LC1 * JCU
           IF (ITST1 .LE. ITST) GO TO 858
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 859
           DO 8551 IGW = 2, IGWU
                IF(ICB(KNX,IGW,ICC)+ICB(LNX,IGW,ICC)*JCU.LT.ITST1) GO TO
     *           8581
8551       NWT = NWT + 1
  859      CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
8581       ITST = ITST1
858   CONTINUE
      GO TO 141
  136 ITST = 0
      IGWU = NGW(ICC)
      DO 866 IPRM = 1, 2
           IF(IPRM.NE.1) GO TO 862
           JNX = 2
           KNX = 3
           GO TO 863
862        JNX = 3
           KNX = 2
863        KC1 = ICB(KNX,1,ICC)
           IF (KC1 .EQ. ITST) GO TO 866
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 865
           IF(ICB(KNX,2,ICC).LT.KC1) GO TO 866
           NWT = 2
865        ITST = KC1
           CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
866   CONTINUE
      GO TO 141
  137 ITST = 0
      IGWU = NGW(ICC)
      DO 877 IPRM = 1, 2
           IF(IPRM.NE.1) GO TO 872
           KNX = 3
           LNX = 4
           GO TO 873
872        KNX = 4
           LNX = 3
873        LC1 = ICB (LNX,1,ICC)
           IF (LC1 .EQ. ITST) GO TO 877
           NWT = 1
           IF (IGWU .EQ. 1) GO TO 875
           IF(ICB(LNX,2,ICC).LT.LC1) GO TO 877
           NWT = 2
875        ITST = LC1
           CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
877   CONTINUE
      GO TO 141
  138 CALL SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
  141                                              CONTINUE
  996                                              CALL WTINT2(ISCM,
     *                                             IBFLD,NSCTLD)
  995                                         CONTINUE
C     ABLT=ALBL(IBUF)
C****C
C     WRITE (IOUT,'(' IBUF=',I4,' ABLT:',Z20)') IBUF,ABLT
C****C
CC    LBLT(2)=LBLT(2).OR.1
C     LBLT(2)=IOR(LBLT(2),1)
C****C
C     WRITE (IOUT,'('          ABLT:',Z20)') ABLT
C****C
C 997 ALBL(IBUF) = ABLT
                                              LBL(IBUF*2)=IOR(LBL(IBUF*2
     *                                        ),1)
  997                                    CONTINUE
  998                     CONTINUE
 9981                CONTINUE
 9982           CONTINUE
 9983      CONTINUE
 9984 CONTINUE
C        WRITE OUT LAST INTEGRAL BUFFER
      NBUF=IDTR*IBFLD+IBUF
      IBFLD = IBFLD + 1
      IBLK=1
      NSCTLD=NSCTLD+I2SEC(8924)
      CALL SWRIT(NTAPE,IBLK,8942)
C     IADR=0
C     CALL RGETSA(NTAPE,IADR)
C     CALL RWRIT(NTAPE,IBLK,8942,IADR)
C     WRITE (NTAPE) IBLK, IBUF, ALBL, AI
      NSECT=NSECT+NSCTLD
CSEL  CALL SWEOF(NTAPE)
      NSECT=NSECT+1
CSEL  CALL RGETSA(NTAPE,IADDR)
CCCR  WRITE(IOUT,9999)
      WRITE (IOUT,6)  NBUF, NSCTLD ,IADDR
      IF (IFLAG3.GT.0) WRITE(ICHECK,6) NBUF,NSCTLD,IADDR
      NINTS=NINTS+NBUF
    6 FORMAT(I20,14H  INTEGRALS IN,I10,8H SECTORS,I6,' ACTUALLY')
 9999 FORMAT(/)
  989 FORMAT(15H MBLU TOO SMALL,I6)
      RETURN
      END
      SUBROUTINE CECOB(IC,ICA,ICB,IEQS3,IS,JS,KS,LS,NCC,NFCT,NGW,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICA,ICB,NFCT,NGW
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
C
      DIMENSION ICA(MCU,MSU,1),ICB(4,MGU,1),NFCT(1),NGW(1)
C
      GO TO (22,24,26,28,30,32,34,36), IEQS3
C        CENTER COMBINATIONS FOR IS=JS=KS=LS
22    DO 100 JC = 1, IC
           DO 100 KC = 1, JC
                DO 100 LC = 1, KC
                     IGW = 0
                     DO 70 IG = 1, NG
                          IC1 = ICA(IC,IS,IG)
                          JC1 = ICA(JC,IS,IG)
                          KC1 = ICA(KC,IS,IG)
                          LC1 = ICA(LC,IS,IG)
                          IF(IC1.NE.IC.AND.JC1.NE.IC.AND.KC1.NE.IC.AND.
     *                    LC1.NE.IC) GO TO 70
                          IC2 = MAX0(IC1,JC1)
                          JC2 = MIN0(IC1,JC1)
                          KC2 = MAX0(KC1,LC1)
                          LC2 = MIN0(KC1,LC1)
                          IC3 = MAX0(IC2,KC2)
                          KC2 = MIN0(IC2,KC2)
                          LC3 = MIN0(JC2,LC2)
                          JC2 = MAX0(JC2,LC2)
                          JC3 = MAX0(JC2,KC2)
                          KC3 = MIN0(JC2,KC2)
                          ICC = NCC
50                        IF(ICC .EQ. 0) GO TO 55
                          IF(JC3 - ICB(2,1,ICC)) 51, 52, 55
52                        IF(KC3 - ICB(3,1,ICC)) 51, 53, 55
53                        IF(LC3 - ICB(4,1,ICC)) 51, 54, 55
51                        ICC = ICC - 1
                          GO TO 50
55                        IF(JC3 .NE. JC .OR. KC3 .NE. KC .OR. LC3 .NE.
     *                    LC) GO TO 70
                          IGW1 = IGW
59                        IF (IGW1 .EQ. 0) GO TO 40
                          IF (IC1.EQ.ICB(1,IGW1,NCC+1).AND.JC1.EQ.ICB(2,
     *                    IGW1,NCC+1).AND.KC1.EQ.ICB(3,IGW1,NCC+1) .AND.
     *                     LC1.EQ.ICB(4,IGW1,NCC+1)) GO TO 70
                          IGW1 = IGW1 - 1
                          GO TO 59
40                        IGW = IGW + 1
                          ICB(1,IGW,NCC+1) = IC1
                          ICB(2,IGW,NCC+1) = JC1
                          ICB(3,IGW,NCC+1) = KC1
                          ICB(4,IGW,NCC+1) = LC1
70                   CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) = IC
                     NGW(NCC) = IGW
                     GO TO 80
54                   NFCT(ICC) = NFCT(ICC) + IC
80                   CONTINUE
100   CONTINUE
      DO 10  ICC = 1, NCC
           JC1  = ICB(2,1,ICC)
           KC1  = ICB(3,1,ICC)
           LC1  = ICB(4,1,ICC)
           IDC = 1
           IF (JC1 .NE. IC) IDC= 2
           IF (KC1 .NE. JC1) IDC = IDC + 1
           IF (LC1 .NE. KC1) IDC = IDC + 1
10    NFCT(ICC) = NFCT(ICC)/IDC
      GO TO 900
C        CENTER COMBINATIONS FOR IS=JS=KS>LS
24    DO 29 JC=1,IC
           DO 29 KC=1,JC
                DO 29 LC=1,LCU
                     IGW = 0
                     DO 27 IG = 1, NG
                          IC1 = ICA(IC,IS,IG)
                          JC1 = ICA(JC,IS,IG)
                          KC1 = ICA(KC,IS,IG)
                          IF(IC1.NE.IC.AND.JC1.NE.IC.AND.KC1.NE.IC)
     *                     GO TO 27
                          LC1 = ICA(LC,LS,IG)
                          IC2 = MAX0(IC1,JC1)
                          JC2 = MIN0(IC1,JC1)
                          IC3 = MAX0(IC2,KC1)
                          KC2 = MIN0(IC2,KC1)
                          JC3 = MAX0(JC2,KC2)
                          KC3 = MIN0(JC2,KC2)
                          ICC = NCC
213                       IF(ICC .EQ. 0) GO TO 212
                          IF(JC3 - ICB(2,1,ICC)) 214,233,212
233                       IF(KC3 - ICB(3,1,ICC)) 214,235,212
235                       IF(LC1 - ICB(4,1,ICC)) 214,215,212
214                       ICC = ICC - 1
                          GO TO 213
212                       IF(JC3 .NE. JC .OR. KC3 .NE. KC .OR. LC1 .NE.
     *                    LC) GO TO 27
                          IGW1 = IGW
237                       IF (IGW1 .EQ. 0) GO TO 239
                          IF (IC1.EQ.ICB(1,IGW1,NCC+1).AND.JC1.EQ.ICB(2,
     *                    IGW1,NCC+1).AND.KC1.EQ.ICB(3,IGW1,NCC+1))
     *                     GO TO 27
                          IGW1 = IGW1 - 1
                          GO TO 237
239                       IGW = IGW + 1
                          ICB(1,IGW,NCC+1) = IC1
                          ICB(2,IGW,NCC+1) = JC1
                          ICB(3,IGW,NCC+1) = KC1
                          ICB(4,IGW,NCC+1) = LC1
27                   CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) = IC
                     NGW(NCC) = IGW
                     GO TO 29
215                  NFCT(ICC) = NFCT(ICC) + IC
29    CONTINUE
      DO 217 ICC = 1, NCC
           JC1  = ICB(2,1,ICC)
           KC1  = ICB(3,1,ICC)
           IDC = 1
           IF ( JC1 .NE. IC) IDC = 2
           IF (KC1 .NE. JC1) IDC = IDC + 1
217   NFCT(ICC) = NFCT(ICC)/IDC
      GO TO 900
C        CENTER COMBINATIONS FOR IS=JS>KS=LS
26    DO 379 JC = 1, IC
           DO 378 KC = 1, KCU
                DO 377 LC = 1, KC
                     IGW = 0
                     DO 370 IG = 1, NG
                          IC1 = ICA(IC,IS,IG)
                          JC1 = ICA(JC,IS,IG)
                          IF(IC1.NE.IC.AND.JC1.NE.IC) GO TO 370
                          KC1 = ICA(KC,KS,IG)
                          LC1 = ICA(LC,KS,IG)
                          IC2 = MAX0(IC1,JC1)
                          JC2 = MIN0(IC1,JC1)
                          KC2 = MAX0(KC1,LC1)
                          LC2 = MIN0(KC1,LC1)
                          ICC = NCC
372                       IF (ICC .EQ. 0) GO TO 376
                          IF (JC2 - ICB(2,1,ICC)) 375,381,376
381                       IF (KC2 - ICB(3,1,ICC)) 375,382,376
382                       IF (LC2 - ICB(4,1,ICC)) 375,385,376
375                       ICC = ICC -1
                          GO TO 372
376                       IF (JC2 .NE. JC .OR. KC2 .NE. KC .OR. LC2 .NE.
     *                     LC) GO TO 370
                          IGW1 = IGW
374                       IF (IGW1 .EQ. 0) GO TO 373
                          IF (IC1 .EQ.ICB(1,IGW1,NCC+1).AND.JC1.EQ.ICB(2
     *                    ,IGW1,NCC+1).AND.KC1.EQ.ICB(3,IGW1,NCC+1).AND.
     *                    LC1.EQ.ICB(4,IGW1,NCC+1)) GO TO 370
                          IGW1 = IGW1 - 1
                          GO TO 374
373                       IGW = IGW + 1
                          ICB (1,IGW,NCC+1) = IC1
                          ICB (2,IGW,NCC+1) = JC1
                          ICB (3,IGW,NCC+1) = KC1
                          ICB (4,IGW,NCC+1) = LC1
370                  CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) =  IC
                     NGW(NCC) = IGW
                     GO TO 377
385                  NFCT(ICC) = NFCT(ICC) + IC
377             CONTINUE
378        CONTINUE
379   CONTINUE
      GO TO 384
C        CENTER COMBINATIONS FOR IS=JS>KS>LS
28    DO 410 JC = 1, IC
           DO 410 KC = 1, KCU
                DO 410 LC = 1, LCU
                     IGW = 0
                     DO 400 IG = 1, NG
                          IC1 = ICA(IC,IS,IG)
                          JC1 = ICA(JC,IS,IG)
                          IF(IC1.NE.IC.AND.JC1.NE.IC) GO TO 400
                          KC1 = ICA(KC,KS,IG)
                          LC1 = ICA(LC,LS,IG)
                          IC2 = MAX0(IC1,JC1)
                          JC2 = MIN0(IC1,JC1)
                          ICC = NCC
402                       IF (ICC .EQ. 0) GO TO 406
                          IF (JC2 - ICB(2,1,ICC)) 405,403,406
403                       IF (KC1 - ICB(3,1,ICC)) 405,404,406
404                       IF (LC1 - ICB(4,1,ICC)) 405,413,406
405                       ICC = ICC - 1
                          GO TO 402
406                       IF(JC2 .NE. JC .OR. KC1 .NE. KC .OR. LC1 .NE.
     *                    LC) GO TO 400
                          IGW1 = IGW
411                       IF (IGW1 .EQ. 0) GO TO 412
                          IF (IC1 .EQ. ICB(1,IGW1,NCC+1).AND.JC1.EQ.ICB(
     *                    2,IGW1,NCC+1)) GOTO 400
                          IGW1 = IGW1- 1
                          GO TO 411
412                       IGW = IGW + 1
                          ICB(1,IGW,NCC+1) = IC1
                          ICB(2,IGW,NCC+1) = JC1
                          ICB(3,IGW,NCC+1) = KC1
                          ICB(4,IGW,NCC+1) = LC1
400                  CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) = IC
                     NGW(NCC) = IGW
                     GO TO 410
413                  NFCT(ICC) = NFCT(ICC) + IC
410   CONTINUE
384   DO 414 ICC = 1, NCC
 414  IF(ICB(2,1,ICC).NE.IC) NFCT(ICC)=NFCT(ICC)/2
      GO TO 900
C        CENTER COMBINATIONS FOR IS>JS=KS=LS
30    DO 520 JC = 1, JCU
           DO 520 KC = 1, JC
                DO 520 LC = 1, KC
                     IGW =0
                     DO 515 IG = 1, NG
                          IF (ICA(IC,IS,IG) .NE. IC) GO TO 515
                          JC1 = ICA(JC,JS,IG)
                          KC1 = ICA(KC,JS,IG)
                          LC1 = ICA(LC,JS,IG)
                          JC2 = MAX0 (JC1,KC1)
                          KC2 = MIN0 (JC1,KC1)
                          JC3 = MAX0 (JC2,LC1)
                          LC2 = MIN0 (JC2,LC1)
                          KC3 = MAX0 (KC2,LC2)
                          LC3 = MIN0 (KC2,LC2)
C     DO 509 ICC = NCC, 1, -1
                          ICC = NCC
506                       IF (ICC .EQ. 0) GO TO 512
                          IF (JC3 - ICB(2,1,ICC)) 509, 507, 512
507                       IF (KC3 - ICB(3,1,ICC)) 509, 508, 512
508                       IF (LC3 - ICB(4,1,ICC)) 509, 516, 512
509                       ICC = ICC - 1
                          GO TO 506
512                       IF (JC3.NE.JC.OR.KC3.NE.KC.OR.LC3.NE.LC) GO TO
     *                     515
C     DO --- IGW1 = IGW, 1, -1
                          IGW1 = IGW
511                       IF (IGW1 .EQ. 0) GO TO 513
                          IF (JC1.EQ.ICB(2,IGW1,NCC+1).AND.KC1.EQ.ICB(3,
     *                    IGW1,NCC+1).AND.LC1.EQ.ICB(4,IGW1,NCC+1))
     *                     GO TO 515
                          IGW1 = IGW1 - 1
                          GO TO 511
513                       IGW = IGW + 1
                          ICB (1,IGW,NCC+1) = IC
                          ICB (2,IGW,NCC+1) = JC1
                          ICB (3,IGW,NCC+1) = KC1
                          ICB (4,IGW,NCC+1) = LC1
515                  CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) = IC
                     NGW(NCC) = IGW
                     GO TO 520
516                  NFCT(ICC) = NFCT(ICC) + IC
520   CONTINUE
      GO TO 900
C        CENTER COMBINATIONS FOR IS>JS=KS>LS
32    DO 220 JC = 1, JCU
           DO 220 KC = 1, JC
                DO 220 LC = 1, LCU
                     IGW = 0
                     DO 210 IG = 1, NG
                          IF (ICA(IC,IS,IG) .NE. IC) GO TO 210
                          JC1 = ICA(JC,JS,IG)
                          KC1 = ICA(KC,JS,IG)
                          LC1 = ICA(LC,LS,IG)
                          JC2 = MAX0 (JC1, KC1)
                          KC2 = MIN0 (JC1, KC1)
C     DO 204 ICC= NCC, 1, -1
                          ICC = NCC
201                       IF (ICC .EQ. 0) GO TO 206
                          IF (JC2 - ICB(2,1,ICC)) 204, 202, 206
202                       IF (KC2 - ICB(3,1,ICC)) 204, 203, 206
203                       IF (LC1 - ICB(4,1,ICC)) 204, 211, 206
204                       ICC = ICC - 1
                          GO TO 201
206                       IF (JC2.NE.JC.OR.KC2.NE.KC.OR.LC1.NE.LC) GO TO
     *                     210
C     DO --- IGW1 = IGW, 1, -1
                          IGW1 = IGW
205                       IF (IGW1 .EQ. 0) GO TO 207
                          IF (JC1.EQ.ICB(2,IGW1,NCC+1).AND.KC1.EQ.ICB(3,
     *                    IGW1,NCC+1)) GOTO 210
                          IGW1 = IGW1 - 1
                          GO TO 205
207                       IGW = IGW + 1
                          ICB (1,IGW,NCC+1) = IC
                          ICB (2,IGW,NCC+1) = JC1
                          ICB (3,IGW,NCC+1) = KC1
                          ICB (4,IGW,NCC+1) = LC1
210                  CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) = IC
                     NGW (NCC) = IGW
                     GO TO 220
211                  NFCT(ICC) = NFCT(ICC) + IC
220   CONTINUE
      GO TO 900
C        CENTER COMBINATIONS FOR IS>JS>KS=LS
34    DO 720 JC = 1, JCU
           DO 720 KC = 1, KCU
                DO 720 LC = 1, KC
                     IGW = 0
                     DO 710 IG = 1, NG
                          IF (ICA(IC,IS,IG) .NE. IC) GO TO 710
                          JC1 = ICA(JC,JS,IG)
                          KC1 = ICA(KC,KS,IG)
                          LC1 = ICA(LC,KS,IG)
                          KC2 = MAX0 (KC1, LC1)
                          LC2 = MIN0 (KC1, LC1)
C     DO 704 ICC = NCC, 1, -1
                          ICC = NCC
701                       IF (ICC .EQ. 0) GO TO 700
                          IF (JC1 - ICB(2,1,ICC)) 704, 702, 700
702                       IF (KC2 - ICB(3,1,ICC)) 704, 703, 700
703                       IF (LC2 - ICB(4,1,ICC)) 704, 708, 700
704                       ICC = ICC - 1
                          GO TO 701
700                       IF (JC1.NE.JC.OR.KC2.NE.KC.OR.LC2.NE.LC) GO TO
     *                     710
C     DO --- IGW1 = IGW, 1, -1
                          IGW1 = IGW
705                       IF (IGW1 .EQ. 0) GO TO 706
                          IF (KC1.EQ.ICB(3,IGW1,NCC+1).AND.LC1.EQ.ICB(4,
     *                    IGW1,NCC+1)) GOTO 710
                          IGW1 = IGW1 - 1
                          GO TO 705
706                       IGW = IGW + 1
                          ICB (1,IGW,NCC+1) = IC
                          ICB (2,IGW,NCC+1) = JC1
                          ICB (3,IGW,NCC+1) = KC1
                          ICB (4,IGW,NCC+1) = LC1
710                  CONTINUE
                     NCC = NCC + 1
                     NFCT(NCC) = IC
                     NGW(NCC) = IGW
                     GO TO 720
708                  NFCT(ICC) = NFCT(ICC) + IC
720   CONTINUE
      GO TO 900
C        CENTER COMBINATIONS FOR IS>JS>KS>LS
36    DO 820 JC = 1, JCU
           DO 820 KC = 1, KCU
                DO 820 LC = 1, LCU
                     DO 810 IG = 1, NG
                          IF (ICA(IC,IS,IG) .NE. IC) GO TO 810
                          JC1 = ICA(JC,JS,IG)
                          KC1 = ICA(KC,KS,IG)
                          LC1 = ICA(LC,LS,IG)
C     DO 804 ICC = NCC, 1, -1
                          ICC = NCC
801                       IF (ICC .EQ. 0) GO TO 810
                          IF (JC1 - ICB(2,1,ICC)) 804, 802, 810
802                       IF (KC1 - ICB(3,1,ICC)) 804, 803, 810
803                       IF (LC1 - ICB(4,1,ICC)) 804, 808, 810
804                       ICC = ICC - 1
                          GO TO 801
810                  CONTINUE
                     NCC = NCC + 1
                     ICB (1, 1, NCC) = IC
                     ICB (2, 1, NCC) = JC
                     ICB (3, 1, NCC) = KC
                     ICB (4, 1, NCC) = LC
                     NFCT(NCC) = IC
                     GO TO 820
808                  NFCT(ICC) = NFCT(ICC) + IC
820   CONTINUE
  900 IF(NCC.LE.MCCU) RETURN
      WRITE(ICHECK,988) NCC
C***  CALL M:ABORT
      STOP
  988 FORMAT(15H MCCU TOO SMALL,I4)
      END
      SUBROUTINE AOSO2S(A,CX)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY A,CX
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /IKPR/ NPRIRI(3,14), NPRIRK(3,14)
      DIMENSION A(1), CX(1)
      RETURN
      ENTRY AOSO2(ISCM,VAL)
      IF(NQD(ISCM)) 16,56,16
   16 ICX = ICXS(ISCM)
      KCXST = KCXS(ISCM)
      IBL = 0
      DO 52 IST=1,NST
           NPAIRI = NPRIRI(ISCM,IST)
           NPAIRK = NPRIRK(ISCM,IST)
           IF(NPAIRI.EQ.0) GOTO 52
           IF(NPAIRK.NE.0) GOTO 20
           ICX=ICX+NPAIRI
           GOTO 52
   20      DO 48 IJBL=1,NPAIRI
                ICX=ICX+1
                IF(CX(ICX)) 32,48,32
   32           PRD=CX(ICX)*VAL
                DO 40 KLBL=1,NPAIRK
   40           A(IBL+KLBL)=A(IBL+KLBL)+CX(KCXST+KLBL)*PRD
   48      IBL=IBL+NPAIRK
   52 KCXST = KCXST + NPAIRK
   56 RETURN
      END
      SUBROUTINE AOSEQS(A,CX)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY A,CX
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /IKPR/ NPRIRI(3,14), NPRIRK(3,14)
      DIMENSION A(1), CX(1)
      RETURN
      ENTRY AOSO2E(ISCM,VAL)
      IF(NQD(ISCM)) 16,96,16
   16 IBL = 0
      ICX = ICXS(ISCM)
      JCX = KCXS(ISCM)
      IF(ICX.NE.JCX) GO TO 24
      ASSIGN 72 TO IAOE
      GO TO 32
   24 ASSIGN 64 TO IAOE
   32 DO 92 IST=1,NST
           NPAIRI = NPRIRI(ISCM,IST)
           IF(NPAIRI.EQ.0) GOTO 92
           KCXST = JCX
           LCXST = ICX
           DO 88 IJBL=1,NPAIRI
                ICX=ICX+1
                JCX=JCX+1
                IF(CX(ICX)) 56,40,56
   40           IF(CX(JCX)) 56,48,56
   48           IBL=IBL+IJBL
                GO TO 88
   56           KCX = KCXST
                LCX = LCXST
                DO 80 KLBL=1,IJBL
                     KCX=KCX+1
                     PRD = CX(ICX) * CX(KCX)
                     GO TO IAOE, (64,72)
   64                LCX=LCX+1
                     PRD=PRD+CX(JCX)*CX(LCX)
   72                IBL=IBL+1
   80           A(IBL)=A(IBL)+PRD*VAL
   88      CONTINUE
   92 CONTINUE
   96 RETURN
      END
      SUBROUTINE IJPRIM
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL IANDJ, KANDL
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /SHLT/TOL,CUTOFF
      COMMON /SHLINF/AG(10),CA(10),BG(10),CB(10),CG(10),CC(10),DG(10),
     1CD(10),XI,YI,ZI,XJ,YJ,ZJ,RRI,XK,YK,ZK,XL,YL,ZL,RRL,NGA,NGB,NGC,NGD
      COMMON/MISC/IANDJ,KANDL
      COMMON /SHLNOS/LIT,LJT,LKT,LLT,MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,
     1MAXL,NIJ,IJ,KL,IJKL
      COMMON /IJPAIR/A(100),R(100),X1(100),Y1(100),Z1(100),DIJ(100)
      DATA A1S2/0.5D0/
      ABX=A1S2*(XI+XJ)
      ABY=A1S2*(YI+YJ)
      ABZ=A1S2*(ZI+ZJ)
      AB1=A1S2*(XI-XJ)
      AB2=A1S2*(YI-YJ)
      AB3=A1S2*(ZI-ZJ)
C
C     ----- I PRIMITIVE
C
      NIJ=0
      DO 2000 IA=1,NGA
           AI=AG(IA)
           ARRI=AI*RRI
           CI=CA(IA)
C
C     ----- J PRIMITIVE
C
           IF(IANDJ) NGB=IA
           DO 1000 JB=1,NGB
                AJ=BG(JB)
                AA=AI+AJ
                AAA=(AI-AJ)/AA
                DUM=AJ*ARRI/AA
                IF(DUM.GT.TOL) GO TO 1000
                NIJ=NIJ+1
                R(NIJ)=DUM
                A(NIJ)=AA
                X1(NIJ)=ABX+AAA*AB1
                Y1(NIJ)=ABY+AAA*AB2
                Z1(NIJ)=ABZ+AAA*AB3
C
C     ----- DENSITY FACTOR
C
                DIJ(NIJ)=CI*CB(JB)/AA
                IF(IANDJ.AND.IA.NE.JB) DIJ(NIJ)=DIJ(NIJ)+DIJ(NIJ)
 1000      CONTINUE
 2000 CONTINUE
      RETURN
      END
      SUBROUTINE JANDKS(NT)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY NT
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /SHLNOS/LIT,LJT,LKT,LLT,MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,
     1MAXL,NIJ,IJ,KL,IJKL
      COMMON /GOUT/   GOUT(10000)
      DIMENSION NT(2)
      RETURN
      ENTRY JANDK(IS,ISF,IC,NGTI,JS,JSF,JC,NGTJ,KS,KSF,KC,NGTK,LS,LSF,
     1LC,NGTL)
C
C     ----- TWO-ELECTRON INTEGRALS -----
C
      NGTL=1
      NGTK=NT(LSF)
      NGTJ=NGTK*NT(KSF)
      NGTI=NGTJ*NT(JSF)
      CALL SHELLS(IS,ISF,IC,NGTI,JS,JSF,JC,NGTJ,KS,KSF,KC,NGTK,LS,LSF,
     1LC,NGTL)
      CALL IJPRIM
C
C     ----- INITIALIZE GOUT TO ZERO -----
C
      NGOUT=NGTI*NT(ISF)
      DO 360 I=1,NGOUT
  360 GOUT(I)=0.0D+00
      IF(NIJ.EQ.0) RETURN
C
C     ----- COMPUTE TWO-ELECTRON INTEGRALS ----
C
      CALL GENRAL
      RETURN
      END
      SUBROUTINE SF3AS1(ICB,   NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,   NFCT,NGW,NT
C
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL ICEQJC, JCEQKC, KCEQLC, ICEQKC, JCEQLC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /DIM21/  IPQ(256)
      COMMON /SHLT/   TOL, CUTOFF
      DIMENSION ICB(4,MGU,1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ1(ICC,IS,ISF)
C
      IC=ICB(1,1,ICC)
      JC=ICB(2,1,ICC)
      KC=ICB(3,1,ICC)
      LC=ICB(4,1,ICC)
      NPR=NPRI(1)
      IJCXS=IJCXST+IPQ((IC-1)*NT(ISF)+1)*NPR+(JC-1)*NTIJ
      IKCXS=IJCXS+(KC-JC)*NTIJ
      ILCXS=IKCXS+(LC-KC)*NTIJ
      KLCXS=IJCXST+IPQ((KC-1)*NT(ISF)+1)*NPR+(LC-1)*NTIJ
      JLCXS=IJCXST+IPQ((JC-1)*NT(ISF)+1)*NPR+(LC-1)*NTIJ
      JKCXS=JLCXS+(KC-LC)*NTIJ
      ICEQJC=IC.EQ.JC
      JCEQKC=JC.EQ.KC
      KCEQLC=KC.EQ.LC
      ICEQKC=IC.EQ.KC
      JCEQLC=JC.EQ.LC
      IF(ICEQJC.OR.JCEQKC.OR.KCEQLC.OR.NGW(ICC).EQ.1) GO TO 20
      ISW2 = 2
      ISW3 = 3
      IGWU = NGW(ICC)
      DO 4 IGW=2,IGWU
           ICB1 = ICB(INX,IGW,ICC)
           ICB2 = ICB(KNX,IGW,ICC)
           ITST1 = MAX0(ICB1, ICB2)
           ITST2 = MIN0(ICB1, ICB2)
           IF ((ITST1.EQ.IC.AND.ITST2.EQ.JC) .OR. (ITST1.EQ.KC.AND.ITST2
     *     .EQ.LC)) ISW2 = 1
           ICB2 = ICB(LNX,IGW,ICC)
           ITST1 = MAX0(ICB1, ICB2)
           ITST2 = MIN0(ICB1, ICB2)
           IF ((ITST1.EQ.IC.AND.ITST2.EQ.KC) .OR. (ITST1.EQ.JC.AND.ITST2
     *     .EQ.LC)) ISW3 = MIN0(ISW3,2)
           IF ((ITST1.EQ.IC.AND.ITST2.EQ.JC) .OR. (ITST1.EQ.KC.AND.ITST2
     *     .EQ.LC)) ISW3 = 1
    4 CONTINUE
      IF(ISW3.NE.1) GO TO 12
      IF(ISW2.NE.1) GO TO 8
      ISCMU = 1
      NWT1 (1) = 3
      GO TO 32
    8 ISCMU=2
      NWT1(1) = 2
      GO TO 28
   12 IF(ISW3.NE.2) GO TO 16
      ISCMU = 2
      NWT1(1)=1
      NWT1(2) = 2
      GO TO 32
   16 IF(ISW2.NE.1) GO TO 20
      ISCML = 2
      ISCMU = 3
      NWT1(2) = 2
      GO TO 36
   20 ISCMU=3
      NWT1(1)=1
   28 NWT1(2)=1
   32 ISCML = 1
   36 DO 92 ISCM=ISCML,ISCMU
           FNFCT=NWT1(ISCM)*NFCT(ICC)
           IF(ISCM-2) 40,44,52
   40      ASSIGN 64 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,IS,ISF,JC,NGTJ,IS,ISF,KC,NGTK,IS,
     *     ISF,LC,NGTL)
           GO TO 60
   44      ASSIGN 68 TO ISCMBR
           IF(JCEQKC) GO TO 48
           CALL JANDK(IS,ISF,IC,NGTI,IS,ISF,KC,NGTK,IS,ISF,JC,NGTJ,IS,
     *     ISF,LC,NGTL)
           GO TO 60
   48      NGTSW=NGTJ
           NGTJ=NGTK
           NGTK=NGTSW
           GO TO 60
   52      ASSIGN 72 TO ISCMBR
           IF(KCEQLC) GO TO 56
           IF(ICEQJC) GO TO 54
           CALL JANDK(IS,ISF,IC,NGTI,IS,ISF,LC,NGTL,IS,ISF,JC,NGTJ,IS,
     *     ISF,KC,NGTK)
           GO TO 60
   54      NGTSW=NGTI
           NGTI=NGTJ
           NGTJ=NGTSW
           GO TO 60
   56      NGTSW=NGTK
           NGTK=NGTL
           NGTL=NGTSW
   60      ICXS(1) = IJCXS
           ICXS(2) = IKCXS
           ICXS(3) = ILCXS
           NDXI=1
           DO 92 IT=ITL,ITU
                IKCXIT = ICXS(2)
                ILCXIT = ICXS(3)
                KCXS(2) = JLCXS
                KCXS(3) = JKCXS
                NDXJ=NDXI
                IF(ICEQJC) JTU=IT
                DO 88 JT=JTL,JTU
                     JLCXJT = KCXS(2)
                     ICXS(2) = IKCXIT
                     KCXS(1) = KLCXS
                     NDXK=NDXJ
                     IF(JCEQKC) KTU=JT
                     DO 84 KT=KTL,KTU
                          ICXS(3) = ILCXIT
                          KCXS(2) = JLCXJT
                          NDXL=NDXK
                          IF(KCEQLC) LTU=KT
                          DO 80 LT=LTL,LTU
                               VAL=GOUT(NDXL)
                               IF(DABS(VAL).LE.CUTOFF) GO TO 76
                               GO TO ISCMBR, (64,68,72)
   64                          VAL=FNFCT*VAL
                               CALL AOSO2E(1,VAL)
                               GO TO 76
   68                          IF(JCEQKC.AND.JT.EQ.KT) GO TO 76
                               VAL=FNFCT*VAL
                               CALL AOSO2E(2,VAL)
                               GO TO 76
   72                          IF((ICEQJC.AND.IT.EQ.JT).OR.(KCEQLC.AND.
     *                         KT.EQ.LT)) GO TO 76
                               VAL=FNFCT*VAL
                               CALL AOSO2E(3,VAL)
   76                          ICXS(3)=ICXS(3)+NPR
                               KCXS(1)=KCXS(1)+NPR
                               KCXS(2)=KCXS(2)+NPR
   80                     NDXL=NDXL+NGTL
                          ICXS(2)=ICXS(2)+NPR
                          KCXS(3)=KCXS(3)+NPR
   84                NDXK=NDXK+NGTK
                     ICXS(1)=ICXS(1)+NPR
   88           NDXJ=NDXJ+NGTJ
   92 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE SF3AS2(ICB,NC,NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,NC,NFCT,NGW,NT
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL ICEQJC, JCEQKC, ICEQKC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /DIM21/  IPQ(256)
      COMMON /SHLT/   TOL, CUTOFF
      DIMENSION ICB(4,MGU,1), NC(1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ2(ICC,IS,ISF,LS,LSF)
C
      IC=ICB(INX,1,ICC)
      JC=ICB(JNX,1,ICC)
      KC=ICB(KNX,1,ICC)
      LC=ICB(LNX,1,ICC)
      IPR=NPRI(1)
      IJCXS=IJCXST+IPQ((IC-1)*NT(ISF)+1)*IPR+(JC-1)*NTIJ
      IKCXS=IJCXS+(KC-JC)*NTIJ
      ILCXS=ILCXST+((IC-1)*NC(LS)+(LC-1))*NTIL
      KLCXS=ILCXS+(KC-IC)*(NC(LS)*NTIL)
      JLCXS=KLCXS+(JC-KC)*(NC(LS)*NTIL)
      JKCXS=IJCXST+IPQ((JC-1)*NT(ISF)+1)*IPR+(KC-1)*NTIJ
      ICEQJC=IC.EQ.JC
      JCEQKC=JC.EQ.KC
      ICEQKC=IC.EQ.KC
      IF(ICEQJC.OR.JCEQKC.OR.NGW(ICC).EQ.1) GO TO 20
      ISW2 = 2
      ISW3 = 3
      IGWU = NGW(ICC)
      DO 4 IGW=2,IGWU
           IF(ICB(LNX,IGW,ICC).NE.LC) GO TO 4
           IF (ICB(JNX,IGW,ICC) .EQ. KC) ISW2 = 1
           IC1 = ICB (INX,IGW,ICC)
           IF (IC1 .EQ. JC)  ISW3 = MIN0(ISW3,2)
           IF (IC1 .EQ. KC) ISW3 = 1
    4 CONTINUE
      IF(ISW3.NE.1) GO TO 12
      IF(ISW2.NE.1) GO TO 8
      ISCMU = 1
      NWT1 (1) = 3
      GO TO 32
    8 ISCMU=2
      NWT1(1) = 2
      GO TO 28
   12 IF(ISW3.NE.2) GO TO 16
      ISCMU = 2
      NWT1(1)=1
      NWT1(2) = 2
      GO TO 32
   16 IF(ISW2.NE.1) GO TO 20
      ISCML = 2
      ISCMU = 3
      NWT1(2) = 2
      GO TO 36
   20 ISCMU=3
      NWT1(1)=1
   28 NWT1(2)=1
   32 ISCML = 1
   36 NWT2 = NWT * NFCT(ICC)
      KPR=NPRK(1)
      DO 92 ISCM=ISCML,ISCMU
           FNFCT=NWT1(ISCM)*NWT2
           IF(ISCM-2) 40,44,52
   40      ASSIGN 64 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,IS,ISF,JC,NGTJ,IS,ISF,KC,NGTK,LS,
     *     LSF,LC,NGTL)
           GO TO 60
   44      ASSIGN 68 TO ISCMBR
           IF(JCEQKC) GO TO 48
           CALL JANDK(IS,ISF,IC,NGTI,IS,ISF,KC,NGTK,IS,ISF,JC,NGTJ,LS,
     *     LSF,LC,NGTL)
           GO TO 60
   48      NGTSW=NGTJ
           NGTJ=NGTK
           NGTK=NGTSW
           GO TO 60
   52      ASSIGN 72 TO ISCMBR
           IF(ICEQJC) GO TO 56
           CALL JANDK(IS,ISF,IC,NGTI,LS,LSF,LC,NGTL,IS,ISF,JC,NGTJ,IS,
     *     ISF,KC,NGTK)
           GO TO 60
   56      NGTSW=NGTI
           NGTI=NGTJ
           NGTJ=NGTSW
   60      ICXS(1) = IJCXS
           ICXS(2) = IKCXS
           KCXS(3) = ILCXS
           NDXI=1
           DO 92 IT=ITL,ITU
                IKCXIT = ICXS(2)
                ILCXIT = KCXS(3)
                KCXS(2) = JLCXS
                ICXS(3) = JKCXS
                NDXJ=NDXI
                IF(ICEQJC) JTU=IT
                DO 88 JT=JTL,JTU
                     JLCXJT = KCXS(2)
                     ICXS(2) = IKCXIT
                     KCXS(1) = KLCXS
                     NDXK=NDXJ
                     IF(JCEQKC) KTU=JT
                     DO 84 KT=KTL,KTU
                          KCXS(3) = ILCXIT
                          KCXS(2) = JLCXJT
                          NDXL=NDXK
                          DO 80 LT=LTL,LTU
                               VAL=GOUT(NDXL)
                               IF(DABS(VAL).LE.CUTOFF) GO TO 76
                               GO TO ISCMBR, (64,68,72)
   64                          VAL=FNFCT*VAL
                               CALL AOSO2(1,VAL)
                               GO TO 76
   68                          IF(JCEQKC.AND.JT.EQ.KT) GO TO 76
                               VAL=FNFCT*VAL
                               CALL AOSO2(2,VAL)
                               GO TO 76
   72                          IF(ICEQJC.AND.IT.EQ.JT) GO TO 76
                               VAL=FNFCT*VAL
                               CALL AOSO2(3,VAL)
   76                          KCXS(1)=KCXS(1)+KPR
                               KCXS(2)=KCXS(2)+KPR
                               KCXS(3)=KCXS(3)+KPR
   80                     NDXL=NDXL+NGTL
                          ICXS(2)=ICXS(2)+IPR
                          ICXS(3)=ICXS(3)+IPR
   84                NDXK=NDXK+NGTK
                     ICXS(1)=ICXS(1)+IPR
   88           NDXJ=NDXJ+NGTJ
   92 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE SF3AS3(ICB,NC,NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,NC,NFCT,NGW,NT
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL ICEQJC, KCEQLC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /DIM21/  IPQ(256)
      COMMON /SHLT/   TOL, CUTOFF
      DIMENSION ICB(4,MGU,1), NC(1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ3(ICC,ISCMCI,IS,ISF,KS,KSF)
C
      NWT2=NWT*NFCT(ICC)
      FNFCT=NWT2
      IC=ICB(INX,1,ICC)
      JC=ICB(JNX,1,ICC)
      KC=ICB(KNX,1,ICC)
      LC=ICB(LNX,1,ICC)
      IJCXS=IJCXST+IPQ((IC-1)*NT(ISF)+1)*NPRI(1)+(JC-1)*NTIJ
      IKCXS=IKCXST+((IC-1)*NC(KS)+(KC-1))*NTIK
      ILCXS=IKCXS+(LC-KC)*NTIK
      JLCXS=ILCXS+(JC-IC)*NC(KS)*NTIK
      JKCXS=JLCXS+(KC-LC)*NTIK
      KLCXS=KLCXST+IPQ((KC-1)*NT(KSF)+1)*NPRK(1)+(LC-1)*NTKL
      ICEQJC=IC.EQ.JC
      KCEQLC=KC.EQ.LC
      IF(ISCMCI.EQ.2) GOTO 2
      ISCML = 1
      ISCMU = 1
      GOTO 12
    2 ISCML = 2
      IF(ICEQJC.OR.KCEQLC.OR.NGW(ICC).EQ.1) GO TO 8
      IGWU = NGW(ICC)
      DO 4 IGW=2,IGWU
           IF((ICB(INX,IGW,ICC).EQ.IC.AND.ICB(JNX,IGW,ICC).EQ.JC).OR.
     1     (ICB(KNX,IGW,ICC).EQ.KC.AND.ICB(LNX,IGW,ICC).EQ.LC)) GO TO 6
    4 CONTINUE
      GO TO 8
    6 ISCMU = 2
      FNFCTX=2*NWT2
      GO TO 12
    8 ISCMU = 3
      FNFCTX=FNFCT
   12 NPR=NPRI(2)
      DO 64 ISCM=ISCML,ISCMU
           IF(ISCM-2) 16,20,24
   16      ASSIGN 36 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,IS,ISF,JC,NGTJ,KS,KSF,KC,NGTK,KS,
     *     KSF,LC,NGTL)
           GO TO 32
   20      ASSIGN 40 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,KS,KSF,KC,NGTK,IS,ISF,JC,NGTJ,KS,
     *     KSF,LC,NGTL)
           GO TO 32
   24      ASSIGN 44 TO ISCMBR
           IF(KCEQLC) GO TO 28
           IF(ICEQJC) GO TO 26
           CALL JANDK(IS,ISF,IC,NGTI,KS,KSF,LC,NGTL,IS,ISF,JC,NGTJ,KS,
     *     KSF,KC,NGTK)
           GO TO 32
   26      NGTSW=NGTI
           NGTI=NGTJ
           NGTJ=NGTSW
           GO TO 32
   28      NGTSW=NGTK
           NGTK=NGTL
           NGTL=NGTSW
   32      ICXS(1) = IJCXS
           ICXS(2) = IKCXS
           ICXS(3) = ILCXS
           NDXI=1
           DO 64 IT=ITL,ITU
                IKCXIT = ICXS(2)
                ILCXIT = ICXS(3)
                KCXS(2) = JLCXS
                KCXS(3) = JKCXS
                NDXJ=NDXI
                IF(ICEQJC) JTU=IT
                DO 60 JT=JTL,JTU
                     JLCXJT = KCXS(2)
                     ICXS(2) = IKCXIT
                     KCXS(1) = KLCXS
                     NDXK=NDXJ
                     DO 56 KT=KTL,KTU
                          ICXS(3) = ILCXIT
                          KCXS(2) = JLCXJT
                          NDXL=NDXK
                          IF(KCEQLC) LTU=KT
                          DO 52 LT=LTL,LTU
                               VAL=GOUT(NDXL)
                               IF(DABS(VAL).LE.CUTOFF) GO TO 48
                               GO TO ISCMBR, (36,40,44)
   36                          VAL=FNFCT*VAL
                               CALL AOSO2(1,VAL)
                               GO TO 48
   40                          VAL=FNFCTX*VAL
                               CALL AOSO2E(2,VAL)
                               GO TO 48
   44                          IF((ICEQJC.AND.IT.EQ.JT).OR.(KCEQLC.AND.
     *                         KT.EQ.LT)) GO TO 48
                               VAL=FNFCTX*VAL
                               CALL AOSO2E(3,VAL)
   48                          ICXS(3)=ICXS(3)+NPR
                               KCXS(1)=KCXS(1)+NPRK(1)
                               KCXS(2)=KCXS(2)+NPR
   52                     NDXL=NDXL+NGTL
                          ICXS(2)=ICXS(2)+NPR
                          KCXS(3)=KCXS(3)+NPR
   56                NDXK=NDXK+NGTK
                     ICXS(1)=ICXS(1)+NPRI(1)
   60           NDXJ=NDXJ+NGTJ
   64 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE SF3AS4(ICB,NC,NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,NC,NFCT,NGW,NT
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL ICEQJC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /DIM21/  IPQ(256)
      COMMON /SHLT/   TOL, CUTOFF
      DIMENSION       ICB(4,MGU,1), NC(1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ4(ICC,ISCMCI,IS,ISF,KS,KSF,LS,LSF)
C
      NWT2=NWT*NFCT(ICC)
      FNFCT=NWT2
      IC=ICB(INX,1,ICC)
      JC=ICB(JNX,1,ICC)
      KC=ICB(KNX,1,ICC)
      LC=ICB(LNX,1,ICC)
      IJCXS=IJCXST+IPQ((IC-1)*NT(ISF)+1)*NPRI(1)+(JC-1)*NTIJ
      IKCXS=IKCXST+((IC-1)*NC(KS)+(KC-1))*NTIK
      JKCXS=IKCXS+(JC-IC)*NC(KS)*NTIK
      ILCXS=ILCXST+((IC-1)*NC(LS)+(LC-1))*NTIL
      JLCXS=ILCXS+(JC-IC)*NC(LS)*NTIL
      KLCXS=KLCXST+((KC-1)*NC(LS)+(LC-1))*NTKL
      ICEQJC=IC.EQ.JC
      IF(ISCMCI.EQ.2) GOTO 2
      ISCML = 1
      ISCMU = 1
      GOTO 12
    2 ISCML = 2
      IF(ICEQJC.OR.NGW(ICC).EQ.1) GO TO 8
      IGWU = NGW(ICC)
      DO 4 IGW=2,IGWU
           IF(ICB(KNX,IGW,ICC).NE.KC.OR.ICB(LNX,IGW,ICC).NE.LC.OR.
     1     ICB(JNX,IGW,ICC).EQ.JC) GO TO 4
           ISCMU = 2
           FNFCTX=2*NWT2
           GO TO 12
    4 CONTINUE
    8 ISCMU = 3
      FNFCTX=FNFCT
   12 IPR=NPRI(2)
      KPR=NPRK(2)
      DO 64 ISCM=ISCML,ISCMU
           IF(ISCM-2) 16,20,24
   16      ASSIGN 36 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,IS,ISF,JC,NGTJ,KS,KSF,KC,NGTK,LS,
     *     LSF,LC,NGTL)
           GO TO 32
   20      ASSIGN 44 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,KS,KSF,KC,NGTK,IS,ISF,JC,NGTJ,LS,
     *     LSF,LC,NGTL)
           GO TO 32
   24      ASSIGN 40 TO ISCMBR
           IF(ICEQJC) GO TO 28
           CALL JANDK(IS,ISF,IC,NGTI,LS,LSF,LC,NGTL,IS,ISF,JC,NGTJ,KS,
     *     KSF,KC,NGTK)
           GO TO 32
   28      NGTSW=NGTI
           NGTI=NGTJ
           NGTJ=NGTSW
   32      ICXS(1) = IJCXS
           ICXS(2) = IKCXS
           KCXS(3) = ILCXS
           NDXI=1
           DO 64 IT=ITL,ITU
                IKCXIT = ICXS(2)
                ILCXIT = KCXS(3)
                KCXS(2) = JLCXS
                ICXS(3) = JKCXS
                NDXJ=NDXI
                IF(ICEQJC) JTU=IT
                DO 60 JT=JTL,JTU
                     JLCXJT = KCXS(2)
                     ICXS(2) = IKCXIT
                     KCXS(1) = KLCXS
                     NDXK=NDXJ
                     DO 56 KT=KTL,KTU
                          KCXS(3) = ILCXIT
                          KCXS(2) = JLCXJT
                          NDXL=NDXK
                          DO 52 LT=LTL,LTU
                               VAL=GOUT(NDXL)
                               IF(DABS(VAL).LE.CUTOFF) GO TO 48
                               GO TO ISCMBR, (36,44,40)
   36                          VAL=FNFCT*VAL
                               CALL AOSO2 (1,VAL)
                               GO TO 48
   40                          IF(ICEQJC.AND.IT.EQ.JT) GO TO 48
   44                          VAL=FNFCTX*VAL
                               CALL AOSO2 (ISCM,VAL)
   48                          KCXS(1)=KCXS(1)+NPRK(1)
                               KCXS(2)=KCXS(2)+KPR
                               KCXS(3)=KCXS(3)+KPR
   52                     NDXL=NDXL+NGTL
                          ICXS(2)=ICXS(2)+IPR
                          ICXS(3)=ICXS(3)+IPR
   56                NDXK=NDXK+NGTK
                     ICXS(1)=ICXS(1)+NPRI(1)
   60           NDXJ=NDXJ+NGTJ
   64 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE SF3AS5(ICB,NC,NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,NC,NFCT,NGW,NT
C
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL JCEQKC, KCEQLC, JCEQLC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /DIM21/  IPQ(256)
      COMMON /SHLT/   TOL, CUTOFF
      DIMENSION ICB(4,MGU,1), NC(1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ5(ICC,IS,ISF,JS,JSF)
C
      IC=ICB(INX,1,ICC)
      JC=ICB(JNX,1,ICC)
      KC=ICB(KNX,1,ICC)
      LC=ICB(LNX,1,ICC)
      KPR=NPRK(1)
      IJCXS=IJCXST+((IC-1)*NC(JS)+(JC-1))*NTIJ
      IKCXS=IJCXS+(KC-JC)*NTIJ
      ILCXS=IKCXS+(LC-KC)*NTIJ
      KLCXS=JKCXST+IPQ((KC-1)*NT(JSF)+1)*KPR+(LC-1)*NTJK
      JKCXS=JKCXST+IPQ((JC-1)*NT(JSF)+1)*KPR+(KC-1)*NTJK
      JLCXS=JKCXS+(LC-KC)*NTJK
      JCEQKC=JC.EQ.KC
      KCEQLC=KC.EQ.LC
      JCEQLC=JC.EQ.LC
      IF(JCEQKC.OR.KCEQLC.OR.NGW(ICC).EQ.1) GO TO 20
      ISW2 = 2
      ISW3 = 3
      IGWU = NGW(ICC)
      DO 4 IGW=2,IGWU
           IF(ICB(INX,IGW,ICC).NE.IC) GO TO 4
           IF (ICB(KNX,IGW,ICC) .EQ. JC) ISW2 = 1
           LC1 = ICB(LNX,IGW,ICC)
           IF (LC1 .EQ. KC) ISW3 = MIN0(ISW3,2)
           IF (LC1 .EQ. JC) ISW3 = 1
    4 CONTINUE
      IF(ISW3.NE.1) GO TO 12
      IF(ISW2.NE.1) GO TO 8
      ISCMU = 1
      NWT1 (1) = 3
      GO TO 32
    8 ISCMU=2
      NWT1(1) = 2
      GO TO 28
   12 IF(ISW3.NE.2) GO TO 16
      ISCMU = 2
      NWT1(1)=1
      NWT1(2) = 2
      GO TO 32
   16 IF(ISW2.NE.1) GO TO 20
      ISCML = 2
      ISCMU = 3
      NWT1(2) = 2
      GO TO 36
   20 ISCMU=3
      NWT1(1)=1
   28 NWT1(2)=1
   32 ISCML = 1
   36 NWT2 = NWT * NFCT(ICC)
      IPR=NPRI(1)
      DO 92 ISCM=ISCML,ISCMU
           FNFCT=NWT1(ISCM)*NWT2
           IF(ISCM-2) 40,44,52
   40      ASSIGN 64 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,JS,JSF,JC,NGTJ,JS,JSF,KC,NGTK,JS,
     *     JSF,LC,NGTL)
           GO TO 60
   44      ASSIGN 68 TO ISCMBR
           IF(JCEQKC) GO TO 48
           CALL JANDK(IS,ISF,IC,NGTI,JS,JSF,KC,NGTK,JS,JSF,JC,NGTJ,JS,
     *     JSF,LC,NGTL)
           GO TO 60
   48      NGTSW=NGTJ
           NGTJ=NGTK
           NGTK=NGTSW
           GO TO 60
   52      ASSIGN 72 TO ISCMBR
           IF(KCEQLC) GO TO 56
           CALL JANDK(IS,ISF,IC,NGTI,JS,JSF,LC,NGTL,JS,JSF,JC,NGTJ,JS,
     *     JSF,KC,NGTK)
           GO TO 60
   56      NGTSW=NGTK
           NGTK=NGTL
           NGTL=NGTSW
   60      ICXS(1) = IJCXS
           ICXS(2) = IKCXS
           ICXS(3) = ILCXS
           NDXI=1
           DO 92 IT=ITL,ITU
                IKCXIT = ICXS(2)
                ILCXIT = ICXS(3)
                KCXS(2) = JLCXS
                KCXS(3) = JKCXS
                NDXJ=NDXI
                DO 88 JT=JTL,JTU
                     JLCXJT = KCXS(2)
                     ICXS(2) = IKCXIT
                     KCXS(1) = KLCXS
                     NDXK=NDXJ
                     IF(JCEQKC) KTU=JT
                     DO 84 KT=KTL,KTU
                          ICXS(3) = ILCXIT
                          KCXS(2) = JLCXJT
                          NDXL=NDXK
                          IF(KCEQLC) LTU=KT
                          DO 80 LT=LTL,LTU
                               VAL=GOUT(NDXL)
                               IF(DABS(VAL).LE.CUTOFF) GO TO 76
                               GO TO ISCMBR, (64,68,72)
   64                          VAL=FNFCT*VAL
                               CALL AOSO2(1,VAL)
                               GO TO 76
   68                          IF(JCEQKC.AND.JT.EQ.KT) GO TO 76
                               VAL=FNFCT*VAL
                               CALL AOSO2 (2,VAL)
                               GO TO 76
   72                          IF(KCEQLC.AND.KT.EQ.LT) GO TO 76
                               VAL=FNFCT*VAL
                               CALL AOSO2(3,VAL)
   76                          ICXS(3)=ICXS(3)+IPR
                               KCXS(1)=KCXS(1)+KPR
                               KCXS(2)=KCXS(2)+KPR
   80                     NDXL=NDXL+NGTL
                          ICXS(2)=ICXS(2)+IPR
                          KCXS(3)=KCXS(3)+KPR
   84                NDXK=NDXK+NGTK
                     ICXS(1)=ICXS(1)+IPR
   88           NDXJ=NDXJ+NGTJ
   92 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE SF3AS6(ICB,NC,NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,NC,NFCT,NGW,NT
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL JCEQKC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /DIM21/  IPQ(256)
      COMMON /SHLT/   TOL, CUTOFF
      DIMENSION ICB(4,MGU,1), NC(1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ6(ICC,ISCMCI,IS,ISF,JS,JSF,LS,LSF)
C
      NWT2=NWT*NFCT(ICC)
      FNFCT=NWT2
      IC=ICB(INX,1,ICC)
      JC=ICB(JNX,1,ICC)
      KC=ICB(KNX,1,ICC)
      LC=ICB(LNX,1,ICC)
      IJCXS=IJCXST+((IC-1)*NC(JS)+(JC-1))*NTIJ
      IKCXS=IJCXS+(KC-JC)*NTIJ
      ILCXS=ILCXST+((IC-1)*NC(LS)+(LC-1))*NTIL
      KLCXS=KLCXST+((KC-1)*NC(LS)+(LC-1))*NTKL
      JLCXS=KLCXS+(JC-KC)*NC(LS)*NTKL
      JKCXS=JKCXST+IPQ((JC-1)*NT(JSF)+1)*NPRK(3)+(KC-1)*NTJK
      JCEQKC=JC.EQ.KC
      IF(ISCMCI.EQ.1) GOTO 2
      ISCML = 3
      ISCMU = 3
      GOTO 12
    2 ISCMU = 2
      IF(JCEQKC.OR.NGW(ICC).EQ.1) GO TO 8
      IGWU = NGW(ICC)
      DO 4 IGW=2,IGWU
           IF(ICB(INX,IGW,ICC).NE.IC.OR.ICB(KNX,IGW,ICC).EQ.KC.OR.
     1     ICB(LNX,IGW,ICC).NE.LC) GO TO 4
           ISCML = 2
           FNFCTX=2*NWT2
           GO TO 12
    4 CONTINUE
    8 ISCML = 1
      FNFCTX=FNFCT
   12 IPR=NPRI(2)
      KPR=NPRK(2)
      DO 64 ISCM=ISCML,ISCMU
           IF(ISCM-2) 16,20,28
   16      ASSIGN 40 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,JS,JSF,JC,NGTJ,JS,JSF,KC,NGTK,LS,
     *     LSF,LC,NGTL)
           GO TO 32
   20      ASSIGN 36 TO ISCMBR
           IF(JCEQKC) GO TO 24
           CALL JANDK(IS,ISF,IC,NGTI,JS,JSF,KC,NGTK,JS,JSF,JC,NGTJ,LS,
     *     LSF,LC,NGTL)
           GO TO 32
   24      NGTSW=NGTJ
           NGTJ=NGTK
           NGTK=NGTSW
           GO TO 32
   28      ASSIGN 44 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,LS,LSF,LC,NGTL,JS,JSF,JC,NGTJ,JS,
     *     JSF,KC,NGTK)
   32      ICXS(1) = IJCXS
           ICXS(2) = IKCXS
           ICXS(3) = ILCXS
           NDXI=1
           DO 64 IT=ITL,ITU
                IKCXIT = ICXS(2)
                ILCXIT = ICXS(3)
                KCXS(2) = JLCXS
                KCXS(3) = JKCXS
                NDXJ=NDXI
                DO 60 JT=JTL,JTU
                     JLCXJT = KCXS(2)
                     ICXS(2) = IKCXIT
                     KCXS(1) = KLCXS
                     NDXK=NDXJ
                     IF(JCEQKC) KTU=JT
                     DO 56 KT=KTL,KTU
                          ICXS(3) = ILCXIT
                          KCXS(2) = JLCXJT
                          NDXL=NDXK
                          DO 52 LT=LTL,LTU
                               VAL=GOUT(NDXL)
                               IF(DABS(VAL).LE.CUTOFF) GO TO 48
                               GO TO ISCMBR, (40,36,44)
   36                          IF(JCEQKC.AND.JT.EQ.KT) GO TO 48
   40                          VAL=FNFCTX*VAL
                               CALL AOSO2 (ISCM,VAL)
                               GO TO 48
   44                          VAL=FNFCT*VAL
                               CALL AOSO2 (3,VAL)
   48                          ICXS(3)=ICXS(3)+NPRI(3)
                               KCXS(1)=KCXS(1)+KPR
                               KCXS(2)=KCXS(2)+KPR
   52                     NDXL=NDXL+NGTL
                          ICXS(2)=ICXS(2)+IPR
                          KCXS(3)=KCXS(3)+NPRK(3)
   56                NDXK=NDXK+NGTK
                     ICXS(1)=ICXS(1)+IPR
   60           NDXJ=NDXJ+NGTJ
   64 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE SF3AS7(ICB,NC,NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,NC,NFCT,NGW,NT
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL KCEQLC
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /DIM21/  IPQ(256)
      COMMON /SHLT/   TOL, CUTOFF
      DIMENSION ICB(4,MGU,1), NC(1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ7(ICC,ISCMCI,IS,ISF,JS,JSF,KS,KSF)
C
      NWT2=NWT*NFCT(ICC)
      FNFCT=NWT2
      IC=ICB(INX,1,ICC)
      JC=ICB(JNX,1,ICC)
      KC=ICB(KNX,1,ICC)
      LC=ICB(LNX,1,ICC)
      IJCXS=IJCXST+((IC-1)*NC(JS)+(JC-1))*NTIJ
      IKCXS=IKCXST+((IC-1)*NC(KS)+(KC-1))*NTIK
      ILCXS=IKCXS+(LC-KC)*NTIK
      KLCXS=KLCXST+IPQ((KC-1)*NT(KSF)+1)*NPRK(1)+(LC-1)*NTKL
      JKCXS=JKCXST+((JC-1)*NC(KS)+(KC-1))*NTJK
      JLCXS=JKCXS+(LC-KC)*NTJK
      KCEQLC=KC.EQ.LC
      IF(ISCMCI.EQ.2) GOTO 2
      ISCML = 1
      ISCMU = 1
      GOTO 12
    2 ISCML = 2
      IF(KCEQLC.OR.NGW(ICC).EQ.1) GO TO 8
      IGWU = NGW(ICC)
      DO 4 IGW=2,IGWU
           IF(ICB(INX,IGW,ICC).NE.IC.OR.ICB(JNX,IGW,ICC).NE.JC.OR.
     1     ICB(LNX,IGW,ICC).EQ.LC) GO TO 4
           ISCMU = 2
           FNFCTX=2*NWT2
           GO TO 12
    4 CONTINUE
    8 ISCMU = 3
      FNFCTX=FNFCT
   12 IPR=NPRI(2)
      KPR=NPRK(2)
      DO 64 ISCM=ISCML,ISCMU
           IF(ISCM-2) 16,20,24
   16      ASSIGN 36 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,JS,JSF,JC,NGTJ,KS,KSF,KC,NGTK,KS,
     *     KSF,LC,NGTL)
           GO TO 32
   20      ASSIGN 44 TO ISCMBR
           CALL JANDK(IS,ISF,IC,NGTI,KS,KSF,KC,NGTK,JS,JSF,JC,NGTJ,KS,
     *     KSF,LC,NGTL)
           GO TO 32
   24      ASSIGN 40 TO ISCMBR
           IF(KCEQLC) GO TO 28
           CALL JANDK(IS,ISF,IC,NGTI,KS,KSF,LC,NGTL,JS,JSF,JC,NGTJ,KS,
     *     KSF,KC,NGTK)
           GO TO 32
   28      NGTSW=NGTK
           NGTK=NGTL
           NGTL=NGTSW
   32      ICXS(1) = IJCXS
           ICXS(2) = IKCXS
           ICXS(3) = ILCXS
           NDXI=1
           DO 64 IT=ITL,ITU
                IKCXIT = ICXS(2)
                ILCXIT = ICXS(3)
                KCXS(2) = JLCXS
                KCXS(3) = JKCXS
                NDXJ=NDXI
                DO 60 JT=JTL,JTU
                     JLCXJT = KCXS(2)
                     ICXS(2) = IKCXIT
                     KCXS(1) = KLCXS
                     NDXK=NDXJ
                     DO 56 KT=KTL,KTU
                          ICXS(3) = ILCXIT
                          KCXS(2) = JLCXJT
                          NDXL=NDXK
                          IF(KCEQLC) LTU=KT
                          DO 52 LT=LTL,LTU
                               VAL=GOUT(NDXL)
                               IF(DABS(VAL).LE.CUTOFF) GO TO 48
                               GO TO ISCMBR, (36,44,40)
   36                          VAL=FNFCT*VAL
                               CALL AOSO2(1,VAL)
                               GO TO 48
   40                          IF(KCEQLC.AND.KT.EQ.LT) GO TO 48
   44                          VAL=FNFCTX*VAL
                               CALL AOSO2(ISCM,VAL)
   48                          ICXS(3)=ICXS(3)+IPR
                               KCXS(1)=KCXS(1)+NPRK(1)
                               KCXS(2)=KCXS(2)+KPR
   52                     NDXL=NDXL+NGTL
                          ICXS(2)=ICXS(2)+IPR
                          KCXS(3)=KCXS(3)+KPR
   56                NDXK=NDXK+NGTK
                     ICXS(1)=ICXS(1)+NPRI(1)
   60           NDXJ=NDXJ+NGTJ
   64 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE SF3AS8(ICB,NC,NFCT,NGW,NT,MGU)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ICB,NC,NFCT,NGW,NT
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /CINDX/  IJCXST, IKCXST, ILCXST, KLCXST, JLCXST, JKCXST
      COMMON /GOUT/   GOUT(10000)
      COMMON /SHLT/   TOL, CUTOFF
C
      DIMENSION ICB(4,MGU,1), NC(1), NFCT(1), NGW(1), NT(1)
      RETURN
C
C
C
      ENTRY SF3EQ8(ICC,ISCM,IS,ISF,JS,JSF,KS,KSF,LS,LSF)
C
      FNFCT=NWT*NFCT(ICC)
      IC=ICB(INX,1,ICC)
      JC=ICB(JNX,1,ICC)
      KC=ICB(KNX,1,ICC)
      LC=ICB(LNX,1,ICC)
      IJCXS=IJCXST+((IC-1)*NC(JS)+(JC-1))*NTIJ
      IKCXS=IKCXST+((IC-1)*NC(KS)+(KC-1))*NTIK
      ILCXS=ILCXST+((IC-1)*NC(LS)+(LC-1))*NTIL
      KLCXS=KLCXST+((KC-1)*NC(LS)+(LC-1))*NTKL
      JLCXS=JLCXST+((JC-1)*NC(LS)+(LC-1))*NTJL
      JKCXS=JKCXST+((JC-1)*NC(KS)+(KC-1))*NTJK
      IF(ISCM-2) 4,8,12
    4 CALL JANDK(IS,ISF,IC,NGTI,JS,JSF,JC,NGTJ,KS,KSF,KC,NGTK,LS,LSF,LC,
     1NGTL)
      GO TO 16
    8 CALL JANDK(IS,ISF,IC,NGTI,KS,KSF,KC,NGTK,JS,JSF,JC,NGTJ,LS,LSF,LC,
     1NGTL)
      GO TO 16
   12 CALL JANDK(IS,ISF,IC,NGTI,LS,LSF,LC,NGTL,JS,JSF,JC,NGTJ,KS,KSF,KC,
     1NGTK)
   16 ICXS(1) = IJCXS
      ICXS(2) = IKCXS
      ICXS(3) = ILCXS
      NDXI=1
      DO 40 IT=ITL,ITU
           IKCXIT = ICXS(2)
           ILCXIT = ICXS(3)
           KCXS(2) = JLCXS
           KCXS(3) = JKCXS
           NDXJ=NDXI
           DO 36 JT=JTL,JTU
                JLCXJT = KCXS(2)
                ICXS(2) = IKCXIT
                KCXS(1) = KLCXS
                NDXK=NDXJ
                DO 32 KT=KTL,KTU
                     ICXS(3) = ILCXIT
                     KCXS(2) = JLCXJT
                     NDXL=NDXK
                     DO 28 LT=LTL,LTU
                          VAL=GOUT(NDXL)
                          IF(DABS(VAL).LE.CUTOFF) GO TO 24
                          VAL=FNFCT*VAL
                          CALL AOSO2(ISCM,VAL)
   24                     ICXS(3)=ICXS(3)+NPRI(3)
                          KCXS(1)=KCXS(1)+NPRK(1)
                          KCXS(2)=KCXS(2)+NPRK(2)
   28                NDXL=NDXL+NGTL
                     ICXS(2)=ICXS(2)+NPRI(2)
                     KCXS(3)=KCXS(3)+NPRK(3)
   32           NDXK=NDXK+NGTK
                ICXS(1)=ICXS(1)+NPRI(1)
   36      NDXJ=NDXJ+NGTJ
   40 NDXI=NDXI+NGTI
      RETURN
      END
      SUBROUTINE STVINT
C
C     ----- GAUSS-HERMITE QUADRATURE USING MINIMUM POINT FORMULA -----
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON/STV/XINT,YINT,ZINT,T,X0,Y0,Z0,XI,YI,ZI,XJ,YJ,ZJ,NI,NJ
      DIMENSION H(21), W(21), MIN(6), MAX(6)
      DATA H /0.0D0, -0.70710678118654752D0, 0.70710678118654752D0,
     1-1.2247448713915890D0, 0.0D0, 1.2247448713915890D0,
     2-1.6506801238857846D0, -0.52464762327529032D0,
     30.52464762327529032D0, 1.6506801238857846D0,
     4-2.0201828704560856D0, -0.95857246461381851D0,
     50.0D0, 0.95857246461381851D0, 2.0201828704560856D0,
     6-2.3506049736744922D0, -1.3358490740136969D0,
     7-0.43607741192761651D0, 0.43607741192761651D0,
     81.3358490740136969D0, 2.3506049736744922D0/
      DATA W /1.0D0, 0.5D0, 0.5D0, 0.16666666666666667D0,
     10.66666666666666667D0, 0.16666666666666667D0,
     20.045875854768068492D0, 0.45412414523193151D0,
     30.45412414523193151D0, 0.045875854768068492D0,
     40.011257411327720689D0, 0.22207592200561264D0,
     50.53333333333333333D0, 0.22207592200561264D0,
     60.011257411327720689D0, 0.0025557844020562464D0,
     70.088615746041914527D0, 0.40882846955602923D0,
     80.40882846955602923D0, 0.088615746041914527D0,
     90.0025557844020562464D0/
      DATA MIN /1,2,4,7,11,16/
      DATA MAX /1,3,6,10,15,21/
      DATA ZERO,ONE /0.0D+00,1.0D+00/
      XINT=ZERO
      YINT=ZERO
      ZINT=ZERO
      NPTS=(NI+NJ)/2
      IMIN=MIN(NPTS)
      IMAX=MAX(NPTS)
      DO 13 I=IMIN,IMAX
           PX=ONE
           PY=ONE
           PZ=ONE
           DUM=H(I)/T
           PTX=DUM+X0
           PTY=DUM+Y0
           PTZ=DUM+Z0
           AX=PTX-XI
           AY=PTY-YI
           AZ=PTZ-ZI
           BX=PTX-XJ
           BY=PTY-YJ
           BZ=PTZ-ZJ
           GO TO (5,4,3,2,1),NI
    1      PX=   AX
           PY=   AY
           PZ=   AZ
    2      PX=PX*AX
           PY=PY*AY
           PZ=PZ*AZ
    3      PX=PX*AX
           PY=PY*AY
           PZ=PZ*AZ
    4      PX=PX*AX
           PY=PY*AY
           PZ=PZ*AZ
    5      GO TO (12,11,10,9,8,7,6),NJ
    6      PX=PX*BX
           PY=PY*BY
           PZ=PZ*BZ
    7      PX=PX*BX
           PY=PY*BY
           PZ=PZ*BZ
    8      PX=PX*BX
           PY=PY*BY
           PZ=PZ*BZ
    9      PX=PX*BX
           PY=PY*BY
           PZ=PZ*BZ
   10      PX=PX*BX
           PY=PY*BY
           PZ=PZ*BZ
   11      PX=PX*BX
           PY=PY*BY
           PZ=PZ*BZ
   12      DUM=W(I)
           XINT=XINT+DUM*PX
           YINT=YINT+DUM*PY
           ZINT=ZINT+DUM*PZ
   13 CONTINUE
      RETURN
      END
      SUBROUTINE S0000
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      LOGICAL IANDJ, KANDL
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /SHLINF/AG(10),CA(10),BG(10),CB(10),CG(10),CC(10),DG(10),
     1CD(10),XI,YI,ZI,XJ,YJ,ZJ,RRI,XK,YK,ZK,XL,YL,ZL,RRK,NGA,NGB,NGC,NGD
      COMMON /SHLT/TOL,CUTOFF
      COMMON /IJPAIR/A(100),R(100),X1(100),Y1(100),Z1(100),DIJ(100)
      COMMON /SHLNOS/LIT,LJT,LKT,LLT,MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,
     1MAXL,NIJ,IJ,KL,IJKL
      COMMON /GOUT/   GOUT(10000)
      COMMON/MISC/IANDJ,KANDL
      DATA A0/0.0D0/, A1S2/0.5D0/, ASRTPI/1.1283791670955126D0/
      DATA PIE4 /7.85398163397448D-01/
      CDX=A1S2*(XK+XL)
      CDY=A1S2*(YK+YL)
      CDZ=A1S2*(ZK+ZL)
      CD1=A1S2*(XK-XL)
      CD2=A1S2*(YK-YL)
      CD3=A1S2*(ZK-ZL)
      DO 205 KG=1,NGC
           BK=CG(KG)
           BRRK=BK*RRK
           CK=CC(KG)
           IF(KANDL) NGD=KG
           DO 200 LG=1,NGD
                BL=DG(LG)
                BB=BK+BL
                BBB=(BK-BL)/BB
                DUM=BL*BRRK/BB
                IF(DUM.GT.TOL) GO TO 200
                BBRRK=DUM
                D2=CD(LG)*CK/BB
                IF(KANDL.AND.LG.NE.KG) D2=D2+D2
                BBX=CDX+BBB*CD1
                BBY=CDY+BBB*CD2
                BBZ=CDZ+BBB*CD3
                SUM=A0
                DO 150 N=1,NIJ
                     DUM=BBRRK+R(N)
                     IF(DUM.GT.TOL) GO TO 150
                     EXPE=DEXP(-DUM)
                     AA=A(N)
                     AB=AA+BB
                     DUM=X1(N)-BBX
                     XX=DUM*DUM
                     DUM=Y1(N)-BBY
                     XX=DUM*DUM+XX
                     DUM=Z1(N)-BBZ
                     XX=DUM*DUM+XX
                     X=XX*AA*BB/AB
                     IF(X.GT.5.0D+00) GO TO 50
                     IF(X.GT.1.0D+00) GO TO 30
                     IF(X.GT.3.0D-7) GO TO 20
                     WW1=1.0D+00-X/3.0D+00
                     GO TO 100
   20                F1=          ((((((((-8.36313918003957D-08*X+1.
     *               21222603512827D-06)*X-1.15662609053481D-05 )*X+9.
     *               25197374512647D-05)*X-6.40994113129432D-04 )*X+3.
     *               78787044215009D-03)*X-1.85185172458485D-02 )*X+7.
     *               14285713298222D-02)*X-1.99999999997023D-01 )*X+3.
     *               33333333333318D-01
                     WW1=(X+X)*F1+DEXP(-X)
                     GO TO 100
   30                IF(X.GT.3.0D+00) GO TO 40
                     Y=X-2.0D+00
                     F1=        ((((((((((-1.61702782425558D-10*Y+1.
     *               96215250865776D-09)*Y-2.14234468198419D-08 )*Y+2.
     *               17216556336318D-07)*Y-1.98850171329371D-06 )*Y+1.
     *               62429321438911D-05)*Y-1.16740298039895D-04 )*Y+7.
     *               24888732052332D-04)*Y-3.79490003707156D-03 )*Y+1.
     *               61723488664661D-02)*Y-5.29428148329736D-02 )*Y+1.
     *               15702180856167D-01
                     WW1=(X+X)*F1+DEXP(-X)
                     GO TO 100
   40                Y=X-4.0D+00
                     F1=        ((((((((((-2.62453564772299D-11*Y+3.
     *               24031041623823D-10)*Y-3.614965656163D-09)*Y+3.
     *               760256799971D-08)*Y-3.553558319675D-07)*Y+3.
     *               022556449731D-06)*Y-2.290098979647D-05)*Y+1.
     *               526537461148D-04)*Y-8.81947375894379D-04 )*Y+4.
     *               33207949514611D-03)*Y-1.75257821619926D-02 )*Y+5.
     *               28406320615584D-02
                     WW1=(X+X)*F1+DEXP(-X)
                     GO TO 100
   50                IF(X.GT.15.0D+00) GO TO 70
                     E=DEXP(-X)
                     IF(X.GT.10.0D+00) GO TO 60
                     WW1=    (((((( 4.6897511375022D-01/X-6.995560229898
     *               5D-01)/X+5.3689283271887D-01)/X-3.2883030418398D-01
     *               )/X+2.4645596956002D-01)/X-4.9984072848436D-01)/X
     3               -3.1501078774085D-06)*E + DSQRT(PIE4/X)
                     GO TO 100
   60                WW1=       (((-1.8784686463512D-01/X+2.299184916498
     *               5D-01)/X-4.9893752514047D-01)/X-2.1916512131607D-05
     *               )*E + DSQRT(PIE4/X)
                     GO TO 100
   70                IF(X.GT.33.0D+00) GO TO 90
                     E=DEXP(-X)
                     WW1=        (( 1.9623264149430D-01/X-4.969524146449
     *               0D-01)/X-6.0156581186481D-05)*E + DSQRT(PIE4/X)
                     GO TO 100
   90                WW1=DSQRT(PIE4/X)
  100                SUM=SUM+DIJ(N)*WW1*EXPE/DSQRT(AB)
  150           CONTINUE
                GOUT(1)=GOUT(1)+D2*SUM
  200      CONTINUE
  205 CONTINUE
      GOUT(1)=GOUT(1)*ASRTPI
      RETURN
      END
      SUBROUTINE WTNT2S(AJ,IL,IPRST)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY AJ,IL,IPRST
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /TAPE/ NTAPE
      COMMON /OUTBUF/ IBLK, IBUF, ALBL(2235), AI(2235)
      COMMON /SHLT/ TOL, CUTOFF
      COMMON /IKPR/ NPRIRI(3,14), NPRIRK(3,14)
      DIMENSION  IPRST(1)
C     DIMENSION AJ(1), IL(2), LBLT(2)
      DIMENSION AJ(1), IL(2)
      DIMENSION LBL(4470)
      EQUIVALENCE (ALBL,LBL)
C     EQUIVALENCE(ABLT,LBLT(1))
      DATA IDTR/2235/
      RETURN
      ENTRY WTINT2(ISCM,IBFLD,NSCTLD)
      IBL = 0
      IPR = IPRST(IJSF(ISCM))
      IF (NSWIT(ISCM) .LT. 2) GO TO 10
      ASSIGN 50 TO NSWIT3
      KPR = IPR
      GO TO 20
   10 ASSIGN 60 TO NSWIT3
      KPR = IPRST(KLSF(ISCM))
   20 DO 160 IST=1,NST
           NPAIRI=NPRIRI(ISCM,IST)
           NPAIRK=NPRIRK(ISCM,IST)
           IF(NPAIRI.NE.0) GOTO 30
           KPR=KPR+NPAIRK
           GOTO 160
   30      IF(NPAIRK.NE.0) GOTO 40
           IPR=IPR + NPAIRI
           GOTO 160
   40      KPRI=KPR
           DO 150 IPAIR=1,NPAIRI
                IPR=IPR + 1
                GO TO NSWIT3, (50,60)
   50           NPAIRK=IPAIR
   60           KPR=KPRI
                DO 140 KPAIR=1,NPAIRK
                     KPR=KPR + 1
                     IBL=IBL + 1
                     IF(DABS(AJ(IBL)).LE.CUTOFF) GOTO 140
                     IF(IBUF.NE.IDTR) GO TO 70
                     IBFLD=IBFLD+1
                     NSCTLD=NSCTLD+I2SEC(8942)
                     CALL SWRIT(NTAPE,IBLK,8942)
C                    IADR=0
C                    CALL RGETSA(NTAPE,IADR)
C                    CALL RWRIT(NTAPE,IBLK,8942,IADR)
C     WRITE (NTAPE) IBLK, IBUF, ALBL, AI
                     IBUF = 0
   70                IBUF=IBUF+1
                     IJLB=IL(IPR)
                     KLLB=IL(KPR)
                     IF(IJLB.GE.KLLB) GO TO 120
C     LBLT(1) = KLLB
C     LBLT(2) = IJLB.SHIFT.2
C     LBLT(2) = ISHFT(IJLB,2)
C     GO TO 130
C 120 LBLT(1) = IJLB
C     LBLT(2) = KLLB.SHIFT.2
C     LBLT(2) = ISHFT(KLLB,2)
                     LBL(2*IBUF-1)=KLLB
                     LBL(2*IBUF  )=ISHFT(IJLB,2)
                     GO TO 130
  120                CONTINUE
                     LBL(2*IBUF-1)=IJLB
                     LBL(2*IBUF  )=ISHFT(KLLB,2)
  130                CONTINUE
C*    WRITE(IOUT,'(' LBLT:',2Z10,' ABLT:',Z20,' IBUF:',I5)') LBLT,
C*   #   ABLT,IBUF
C*    ALBL(IBUF) = ABLT
C*    WRITE(IOUT,'(4Z18)')(ALBL(IQ),IQ=1,IBUF)
C*    IF (IBUF.GE.50) STOP ' IBUF .GE. 50'
                     AI(IBUF) = AJ(IBL)
  140           CONTINUE
  150      CONTINUE
  160 CONTINUE
      RETURN
      END
      SUBROUTINE SHLSV(ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C***  EXTENDED DUMMY ETA,LMNP1,MCONS,NCON,NTL,NTU,X,Y,Z,ZET
C
      LOGICAL IANDJ, KANDL
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ KAORDS, MCONSU, MGCSU, MRU, MCSU, MCTU, MSFU,
     1MGU, MSFRU, MNSFU, MPRU, MCXU, NGCS, MDUM(39), MSU, MSTU,
     2MCONU, MCU, MCCU, MBLU, NS, NG, NST
      COMMON/ROOT/XX,U(9),W(9),NROOTS
      COMMON /SHLNOS/LIT,LJT,LKT,LLT,MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,
     1MAXL,NIJ,IJ,KL,IJKL
      COMMON /INDEX/ IJGT(225), IJX(225), IJY(225), IJZ(225), IK(225),
     1KLGT(225), KLX(225), KLY(225), KLZ(225)
      COMMON /SHLINF/GA(10),CA(10),GB(10),CB(10),GC(10),CC(10),GD(10),
     1CD(10),AX,AY,AZ,BX,BY,BZ,RAB,CX,CY,CZ,DX,DY,DZ,RCD,NGA,NGB,NGC,NGD
      COMMON /MISC/ IANDJ, KANDL
      DIMENSION MCONS(1),NCON(1),LMNP1(1),NTL(1),NTU(1)
      DIMENSION X(MCU,1),Y(MCU,1),Z(MCU,1),ZET(MCONU,1),ETA(MCONU,1)
      DIMENSION IX(35),IY(35),IZ(35),JX(35),JY(35),JZ(35),
     1KX(35),KY(35),KZ(35),LX(35),LY(35),LZ(35)
      DATA LX /   0,  1,  0,  0,  2,  0,  0,  1,  1,  0,
     13,  0,  0,  2,  2,  1,  0,  1,  0,  1,
     24,  0,  0,  3,  3,  1,  0,  1,  0,  2,
     32,  0,  2,  1,  1/
      DATA KX /   0,  5,  0,  0, 10,  0,  0,  5,  5,  0,
     115,  0,  0, 10, 10,  5,  0,  5,  0,  5,
     220,  0,  0, 15, 15,  5,  0,  5,  0, 10,
     310,  0, 10,  5,  5/
      DATA JX /   0, 25,  0,  0, 50,  0,  0, 25, 25,  0,
     175,  0,  0, 50, 50, 25,  0, 25,  0, 25,
     2100,  0,  0, 75, 75, 25,  0, 25,  0, 50,
     350,  0, 50, 25, 25/
      DATA IX /   1,126,  1,  1,251,  1,  1,126,126,  1,
     1376,  1,  1,251,251,126,  1,126,  1,126,
     2501,  1,  1,376,376,126,  1,126,  1,251,
     3251,  1,251,126,126/
      DATA LY /   0,  0,  1,  0,  0,  2,  0,  1,  0,  1,
     10,  3,  0,  1,  0,  2,  2,  0,  1,  1,
     20,  4,  0,  1,  0,  3,  3,  0,  1,  2,
     30,  2,  1,  2,  1/
      DATA KY /   0,  0,  5,  0,  0, 10,  0,  5,  0,  5,
     10, 15,  0,  5,  0, 10, 10,  0,  5,  5,
     20, 20,  0,  5,  0, 15, 15,  0,  5, 10,
     30, 10,  5, 10,  5/
      DATA JY /   0,  0, 25,  0,  0, 50,  0, 25,  0, 25,
     10, 75,  0, 25,  0, 50, 50,  0, 25, 25,
     20,100,  0, 25,  0, 75, 75,  0, 25, 50,
     30, 50, 25, 50, 25/
      DATA IY /   1,  1,126,  1,  1,251,  1,126,  1,126,
     11,376,  1,126,  1,251,251,  1,126,126,
     21,501,  1,126,  1,376,376,  1,126,251,
     31,251,126,251,126/
      DATA LZ /   0,  0,  0,  1,  0,  0,  2,  0,  1,  1,
     10,  0,  3,  0,  1,  0,  1,  2,  2,  1,
     20,  0,  4,  0,  1,  0,  1,  3,  3,  0,
     32,  2,  1,  1,  2/
      DATA KZ /   0,  0,  0,  5,  0,  0, 10,  0,  5,  5,
     10,  0, 15,  0,  5,  0,  5, 10, 10,  5,
     20,  0, 20,  0,  5,  0,  5, 15, 15,  0,
     310, 10,  5,  5, 10/
      DATA JZ /   0,  0,  0, 25,  0,  0, 50,  0, 25, 25,
     10,  0, 75,  0, 25,  0, 25, 50, 50, 25,
     20,  0,100,  0, 25,  0, 25, 75, 75,  0,
     350, 50, 25, 25, 50/
      DATA IZ /   1,  1,  1,126,  1,  1,251,  1,126,126,
     11,  1,376,  1,126,  1,126,251,251,126,
     21,  1,501,  1,126,  1,126,376,376,  1,
     3251,251,126,126,251/
      RETURN
      ENTRY SHELLS(IS,ISF,IC,NGTI,JS,JSF,JC,NGTJ,KS,KSF,KC,NGTK,LS,LSF,
     1LC,NGTL)
      IANDJ=ISF.EQ.JSF.AND.IC.EQ.JC
C
C     ----- ISHELL
C
      AX=X(IC,IS)
      AY=Y(IC,IS)
      AZ=Z(IC,IS)
      ICONS=MCONS(ISF)
      NGA=NCON(ICONS)
      LIT=LMNP1(ICONS)
      MINI=NTL(ISF)
      MAXI=NTU(ISF)
      DO 50 I=1,NGA
           GA(I)=ZET(I,ICONS)
           CA(I)=ETA(I,ICONS)
   50 CONTINUE
C
C     ----- JSHELL
C
      BX=X(JC,JS)
      BY=Y(JC,JS)
      BZ=Z(JC,JS)
      JCONS=MCONS(JSF)
      NGB=NCON(JCONS)
      LJT=LMNP1(JCONS)
      MINJ=NTL(JSF)
      MAXJ=NTU(JSF)
      DO 100 J=1,NGB
           GB(J)=ZET(J,JCONS)
           CB(J)=ETA(J,JCONS)
  100 CONTINUE
      RAB=((AX-BX)**2+(AY-BY)**2+(AZ-BZ)**2)
C
C     ----- PREPARE INDICES FOR PAIRS OF (I,J) FUNCTIONS
C
      IJ=0
      DO 150 I=MINI,MAXI
           NX=IX(I)
           NY=IY(I)
           NZ=IZ(I)
           IF(IANDJ) MAXJ=I
           DO 150 J=MINJ,MAXJ
                IJ=IJ+1
                IJX(IJ)=NX+JX(J)
                IJY(IJ)=NY+JY(J)
                IJZ(IJ)=NZ+JZ(J)
                IJGT(IJ)=NGTI*(I-MINI)+NGTJ*(J-MINJ)+1
  150 CONTINUE
      KANDL=KSF.EQ.LSF.AND.KC.EQ.LC
C
C     ----- KSHELL
C
      CX=X(KC,KS)
      CY=Y(KC,KS)
      CZ=Z(KC,KS)
      KCONS=MCONS(KSF)
      NGC=NCON(KCONS)
      LKT=LMNP1(KCONS)
      MINK=NTL(KSF)
      MAXK=NTU(KSF)
      DO 250 K=1,NGC
           GC(K)=ZET(K,KCONS)
           CC(K)=ETA(K,KCONS)
  250 CONTINUE
C
C     ----- LSHELL
C
      DX=X(LC,LS)
      DY=Y(LC,LS)
      DZ=Z(LC,LS)
      LCONS=MCONS(LSF)
      NGD=NCON(LCONS)
      LLT=LMNP1(LCONS)
      MINL=NTL(LSF)
      MAXL=NTU(LSF)
      DO 300 L=1,NGD
           GD(L)=ZET(L,LCONS)
           CD(L)=ETA(L,LCONS)
  300 CONTINUE
      NROOTS=(LIT+LJT+LKT+LLT-2)/2
      RCD=((CX-DX)**2+(CY-DY)**2+(CZ-DZ)**2)
C
C     ----- PREPARE INDICES FOR PAIRS OF (K,L) FUNCTIONS
C
      KL=0
      DO 350 K=MINK,MAXK
           NX=KX(K)
           NY=KY(K)
           NZ=KZ(K)
           IF(KANDL) MAXL=K
           DO 350 L=MINL,MAXL
                KL=KL+1
                KLX(KL)=NX+LX(L)
                KLY(KL)=NY+LY(L)
                KLZ(KL)=NZ+LZ(L)
                KLGT(KL)=NGTK*(K-MINK)+NGTL*(L-MINL)
  350 CONTINUE
      IF(ISF.NE.KSF.OR.IC.NE.KC.OR.JSF.NE.LSF.OR.JC.NE.LC) GO TO 450
      DO 400 I=1,IJ
  400 IK(I)=I
      IJKL=(IJ*(IJ+1))/2
      RETURN
  450 DO 500 I=1,IJ
  500 IK(I)=KL
      IJKL=IJ*KL
      RETURN
      END
      SUBROUTINE GENRAL
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL IANDJ, KANDL
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /SHLINF/AG(10),CA(10),BG(10),CB(10),CG(10),CC(10),DG(10),
     1CD(10),XI,YI,ZI,XJ,YJ,ZJ,RRI,XK,YK,ZK,XL,YL,ZL,RRK,NGA,NGB,NGC,NGD
      COMMON /IJPAIR/AA(100),R(100),X1(100),Y1(100),Z1(100),DIJ(100)
      COMMON /SHLNOS/LIT,LJT,LKT,LLT,MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,
     1MAXL,NIJ,IJ,KL,IJKL
      COMMON/ROOT/XX,U(9),W(9),NROOTS
      COMMON /SHLT/TOL,CUTOFF
      COMMON /MISC/ IANDJ, KANDL
      COMMON/SETINT/IN(9),KN(9),NI,NJ,NK,NL,NMAX,MMAX
     1,BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00
     2,DXIJ,DYIJ,DZIJ,DXKL,DYKL,DZKL
      DIMENSION IN1(9)
      DATA A1S2/0.5D0/, ASRTPI/1.1283791670955126D0/
      IF(IJKL.EQ.1) GO TO 6000
      NI=LIT-1
      NJ=LJT-1
      NK=LKT-1
      NL=LLT-1
      DXIJ=XI-XJ
      DYIJ=YI-YJ
      DZIJ=ZI-ZJ
      DXKL=XK-XL
      DYKL=YK-YL
      DZKL=ZK-ZL
      NMAX=NI+NJ
      MMAX=NK+NL
      MAX=NMAX+1
      DO 10 I=1,MAX
           N=I-1
           IF(N.LE.NI) IN1(I)=125*N+1
           IF(N.GT.NI) IN1(I)=125*NI+25*(N-NI)+1
   10 CONTINUE
      MAX=MMAX+1
      DO 20 K=1,MAX
           N=K-1
           IF(N.LE.NK) KN(K)=5*N
           IF(N.GT.NK) KN(K)=5*NK+N-NK
   20 CONTINUE
      CDX=A1S2*(XK+XL)
      CDY=A1S2*(YK+YL)
      CDZ=A1S2*(ZK+ZL)
      CD1=A1S2*DXKL
      CD2=A1S2*DYKL
      CD3=A1S2*DZKL
C
C     ----- K PRIMITIVE
C
      DO 5000 KG=1,NGC
           AK=CG(KG)
           BRRK=AK*RRK
           CK=CC(KG)*ASRTPI
C
C     ----- L PRIMITIVE
C
           IF(KANDL) NGD=KG
           DO 4000 LG=1,NGD
                AL=DG(LG)
                B=AK+AL
                BB=(AK-AL)/B
                BBRRK=AL*BRRK/B
                IF(BBRRK.GT.TOL) GO TO 4000
                XB=CDX+BB*CD1
                YB=CDY+BB*CD2
                ZB=CDZ+BB*CD3
                BXBK=B*(XB-XK)
                BYBK=B*(YB-YK)
                BZBK=B*(ZB-ZK)
                BXBI=B*(XB-XI)
                BYBI=B*(YB-YI)
                BZBI=B*(ZB-ZI)
C
C     ----- DENSITY FACTOR
C
                DKL=CK*CD(LG)/B
                IF(KANDL.AND.KG.NE.LG) DKL=DKL+DKL
C
C     ----- PAIR OF I,J PRIMITIVES
C
                DO 3000 N=1,NIJ
                     DUM=BBRRK+R(N)
                     IF(DUM.GT.TOL) GO TO 3000
                     A=AA(N)
                     AB=A*B
                     AANDB=A+B
                     EXPE=DIJ(N)*DKL*DEXP(-DUM)/DSQRT(AANDB)
                     RHO=AB/AANDB
                     XA=X1(N)
                     YA=Y1(N)
                     ZA=Z1(N)
                     XX=RHO*((XA-XB)**2+(YA-YB)**2+(ZA-ZB)**2)
                     AXAK=A*(XA-XK)
                     AYAK=A*(YA-YK)
                     AZAK=A*(ZA-ZK)
                     AXAI=A*(XA-XI)
                     AYAI=A*(YA-YI)
                     AZAI=A*(ZA-ZI)
                     C1X=BXBK+AXAK
                     C2X=A*BXBK
                     C3X=BXBI+AXAI
                     C4X=B*AXAI
                     C1Y=BYBK+AYAK
                     C2Y=A*BYBK
                     C3Y=BYBI+AYAI
                     C4Y=B*AYAI
                     C1Z=BZBK+AZAK
                     C2Z=A*BZBK
                     C3Z=BZBI+AZAI
                     C4Z=B*AZAI
C
C     ----- ROOTS AND WEIGHTS FOR QUADRATURE
C
                     IF(NROOTS.LE.3) CALL RT123
                     IF(NROOTS.EQ.4) CALL ROOT4
                     IF(NROOTS.EQ.5) CALL ROOT5
                     IF(NROOTS.GE.6) CALL DROOT
                     MM=0
                     MAX=NMAX+1
C
C     COMPUTE TWO-ELECTRON  INTEGRALS FOR EACH ROOT
C
                     DO 2000 M=1,NROOTS
                          U2=U(M)*RHO
                          F00=EXPE*W(M)
                          DO 1900 I=1,MAX
 1900                     IN(I)=IN1(I)+MM
                          DUM=AB+U2*AANDB
                          DUM2=DUM+DUM
                          BP01=(A+U2)/DUM2
                          B00=U2/DUM2
                          B10=(B+U2)/DUM2
                          XCP00=(U2*C1X+C2X)/DUM
                          XC00 =(U2*C3X+C4X)/DUM
                          YCP00=(U2*C1Y+C2Y)/DUM
                          YC00 =(U2*C3Y+C4Y)/DUM
                          ZCP00=(U2*C1Z+C2Z)/DUM
                          ZC00 =(U2*C3Z+C4Z)/DUM
                          CALL XYZINT
 2000                MM=MM+625
C
C     ----- FORM (I,J//K,L) INTEGRALS OVER FUNCTIONS
C
                     CALL FORMS
 3000           CONTINUE
 4000      CONTINUE
 5000 CONTINUE
      RETURN
 6000 CALL S0000
      RETURN
      END
      SUBROUTINE XYZINT
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL N0, N1, M0, M1
C
C***  EXTENDED BLOCK /XYZ/ XINT(5625),YINT(5625),ZINT(5625)
C***  EXTENDED BASE  /XYZ/ 256
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON/SETINT/I(9),K(9),NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX
     1,BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00
     2,DXIJ,DYIJ,DZIJ,DXKL,DYKL,DZKL
      COMMON/XYZ/XINT(5625),YINT(5625),ZINT(5625)
      DATA A0/0.0D0/, A1/1.0D0/
      N0=NMAX.EQ.0
      N1=NMAX.LE.1
      M0=MMAX.EQ.0
      M1=MMAX.LE.1
C
C     ----- I(0,0) -----
C
      I1=I(1)
      XINT(I1)=A1
      YINT(I1)=A1
      ZINT(I1)=F00
      IF(N0.AND.M0) RETURN
      IF(N0) GO TO 5
C
C     ----- I(1,0) -----
C
      I2=I(2)
      XINT(I2)=XC00
      YINT(I2)=YC00
      ZINT(I2)=ZC00*F00
    5 IF(M0) GO TO 10
C
C     ----- I(0,1) -----
C
      K2=K(2)
      I3=I1+K2
      XINT(I3)=XCP00
      YINT(I3)=YCP00
      ZINT(I3)=ZCP00*F00
      IF(N0) GO TO 10
C
C     ----- I(1,1) -----
C
      I3=I2+K2
      CP10=B00
      XINT(I3)=XCP00*XINT(I2)+CP10
      YINT(I3)=YCP00*YINT(I2)+CP10
      ZINT(I3)=ZCP00*ZINT(I2)+CP10*F00
   10 IF(N1) GO TO 40
      C10=A0
      I3=I1
      I4=I2
      DO 30 N=2,NMAX
           C10=C10+B10
C
C     ----- I(N,0) -----
C
           I5=I(N+1)
           XINT(I5)=C10*XINT(I3)+XC00*XINT(I4)
           YINT(I5)=C10*YINT(I3)+YC00*YINT(I4)
           ZINT(I5)=C10*ZINT(I3)+ZC00*ZINT(I4)
           IF(M0) GO TO 20
           CP10=CP10+B00
C
C     ----- I(N,1) -----
C
           I3=I5+K2
           XINT(I3)=XCP00*XINT(I5)+CP10*XINT(I4)
           YINT(I3)=YCP00*YINT(I5)+CP10*YINT(I4)
           ZINT(I3)=ZCP00*ZINT(I5)+CP10*ZINT(I4)
   20      I3=I4
   30 I4=I5
   40 IF(M1) GO TO 70
      CP01=A0
      C01=B00
      I3=I1
      I4=I1+K2
      DO 60 M=2,MMAX
           CP01=CP01+BP01
C
C     ----- I(0,M) -----
C
           I5=I1+K(M+1)
           XINT(I5)=CP01*XINT(I3)+XCP00*XINT(I4)
           YINT(I5)=CP01*YINT(I3)+YCP00*YINT(I4)
           ZINT(I5)=CP01*ZINT(I3)+ZCP00*ZINT(I4)
           IF(N0) GO TO 50
           C01=C01+B00
C
C     ----- I(1,M) -----
C
           I3=I2+K(M+1)
           XINT(I3)=XC00*XINT(I5)+C01*XINT(I4)
           YINT(I3)=YC00*YINT(I5)+C01*YINT(I4)
           ZINT(I3)=ZC00*ZINT(I5)+C01*ZINT(I4)
   50      I3=I4
   60 I4=I5
   70 IF(N1.OR.M1) GO TO 100
C
C     ----- I(N,M) -----
      C01=B00
      K3=K2
      DO 90 M=2,MMAX
           K4=K(M+1)
           C01=C01+B00
           I3=I1
           I4=I2
           C10=B10
           DO 80 N=2,NMAX
                I5=I(N+1)
                XINT(I5+K4)=C10*XINT(I3+K4)+XC00*XINT(I4+K4)+C01*XINT(I4
     *          +K3)
                YINT(I5+K4)=C10*YINT(I3+K4)+YC00*YINT(I4+K4)+C01*YINT(I4
     *          +K3)
                ZINT(I5+K4)=C10*ZINT(I3+K4)+ZC00*ZINT(I4+K4)+C01*ZINT(I4
     *          +K3)
                C10=C10+B10
                I3=I4
   80      I4=I5
   90 K3=K4
  100 IF(NJMAX.EQ.0) GO TO 200
C
C     ----- I(NI,NJ,M) -----
C
      M=0
      I5=I(NMAX+1)
  110 MIN=NIMAX
      KM=K(M+1)
  120 N=NMAX
      I3=I5+KM
  130 I4=I(N)+KM
      XINT(I3)=XINT(I3)+DXIJ*XINT(I4)
      YINT(I3)=YINT(I3)+DYIJ*YINT(I4)
      ZINT(I3)=ZINT(I3)+DZIJ*ZINT(I4)
      I3=I4
      N=N-1
      IF(N.GT.MIN) GO TO 130
      MIN=MIN+1
      IF(MIN.LT.NMAX) GO TO 120
      IF(NIMAX.EQ.0) GO TO 160
      I3=25+KM+I1
      DO 150 NJ=1,NJMAX
           I4=I3
           DO 140 NI=1,NIMAX
                XINT(I4)=XINT(I4+100)+DXIJ*XINT(I4-25)
                YINT(I4)=YINT(I4+100)+DYIJ*YINT(I4-25)
                ZINT(I4)=ZINT(I4+100)+DZIJ*ZINT(I4-25)
  140      I4=I4+125
  150 I3=I3+25
  160 M=M+1
      IF(M.LE.MMAX) GO TO 110
  200 IF(NLMAX.EQ.0) GO TO 300
C
C     ----- I(NI,NJ,NK,NL) -----
C
      I5=K(MMAX+1)
      IA=I1
      NI=0
  210 NJ=0
      IB=IA
  220 MIN=NKMAX
  230 M=MMAX
      I3=IB+I5
  240 I4=IB+K(M)
      XINT(I3)=XINT(I3)+DXKL*XINT(I4)
      YINT(I3)=YINT(I3)+DYKL*YINT(I4)
      ZINT(I3)=ZINT(I3)+DZKL*ZINT(I4)
      I3=I4
      M=M-1
      IF(M.GT.MIN) GO TO 240
      MIN=MIN+1
      IF(MIN.LT.MMAX) GO TO 230
      IF(NKMAX.EQ.0) GO TO 270
      I3=IB+1
      DO 260 NL=1,NLMAX
           I4=I3
           DO 250 NK=1,NKMAX
                XINT(I4)=XINT(I4+4)+DXKL*XINT(I4-1)
                YINT(I4)=YINT(I4+4)+DYKL*YINT(I4-1)
                ZINT(I4)=ZINT(I4+4)+DZKL*ZINT(I4-1)
  250      I4=I4+5
  260 I3=I3+1
  270 NJ=NJ+1
      IB=IB+25
      IF(NJ.LE.NJMAX) GO TO 220
      NI=NI+1
      IA=IA+125
      IF(NI.LE.NIMAX) GO TO 210
  300 CONTINUE
      RETURN
      END
      SUBROUTINE FORMS
C
C     ----- FORM INTEGRALS OVER FUNCTIONS -----
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C
C***  EXTENDED BLOCK /XYZ/ XIN (5625),YIN (5625),ZIN (5625)
C***  EXTENDED BASE  /XYZ/ 256
C
C***  EXTENDED BLOCK /GOUT/ GOUT(10000)
C***  EXTENDED BASE  /GOUT/ 324
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON/ROOT/XX,U(9),W(9),NROOTS
      COMMON/XYZ/XIN(5625),YIN(5625),ZIN(5625)
      COMMON /INDEX/ IJGT(225), IJX(225), IJY(225), IJZ(225), IK(225),
     1KLGT(225), KLX(225), KLY(225), KLZ(225)
      COMMON /SHLNOS/LIT,LJT,LKT,LLT,MINI,MINJ,MINK,MINL,MAXI,MAXJ,MAXK,
     1MAXL,NIJ,IJ,KL,IJKL
      COMMON /GOUT/   GOUT(10000)
      GO TO (500,1500,2500,3500,4500,5500,6500,7500,8500),NROOTS
  500 DO 1000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 1000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 1000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     ))+GOUT(N)
      RETURN
 1500 DO 2000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 2000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 2000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625))+GOUT(N)
      RETURN
 2500 DO 3000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 3000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 3000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625)
     1+XIN(MX+1250)*YIN(MY+1250)*ZIN(MZ+1250))+GOUT(N)
      RETURN
 3500 DO 4000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 4000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 4000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625)
     1+XIN(MX+1250)*YIN(MY+1250)*ZIN(MZ+1250)
     1+XIN(MX+1875)*YIN(MY+1875)*ZIN(MZ+1875))+GOUT(N)
      RETURN
 4500 DO 5000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 5000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 5000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625)
     1+XIN(MX+1250)*YIN(MY+1250)*ZIN(MZ+1250)
     1+XIN(MX+1875)*YIN(MY+1875)*ZIN(MZ+1875)
     1+XIN(MX+2500)*YIN(MY+2500)*ZIN(MZ+2500))+GOUT(N)
      RETURN
 5500 DO 6000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 6000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 6000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625)
     1+XIN(MX+1250)*YIN(MY+1250)*ZIN(MZ+1250)
     1+XIN(MX+1875)*YIN(MY+1875)*ZIN(MZ+1875)
     1+XIN(MX+2500)*YIN(MY+2500)*ZIN(MZ+2500)
     1+XIN(MX+3125)*YIN(MY+3125)*ZIN(MZ+3125))+GOUT(N)
      RETURN
 6500 DO 7000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 7000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 7000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625)
     1+XIN(MX+1250)*YIN(MY+1250)*ZIN(MZ+1250)
     1+XIN(MX+1875)*YIN(MY+1875)*ZIN(MZ+1875)
     1+XIN(MX+2500)*YIN(MY+2500)*ZIN(MZ+2500)
     1+XIN(MX+3125)*YIN(MY+3125)*ZIN(MZ+3125)
     1+XIN(MX+3750)*YIN(MY+3750)*ZIN(MZ+3750))+GOUT(N)
      RETURN
 7500 DO 8000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 8000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 8000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625)
     1+XIN(MX+1250)*YIN(MY+1250)*ZIN(MZ+1250)
     1+XIN(MX+1875)*YIN(MY+1875)*ZIN(MZ+1875)
     1+XIN(MX+2500)*YIN(MY+2500)*ZIN(MZ+2500)
     1+XIN(MX+3125)*YIN(MY+3125)*ZIN(MZ+3125)
     1+XIN(MX+3750)*YIN(MY+3750)*ZIN(MZ+3750)
     1+XIN(MX+4375)*YIN(MY+4375)*ZIN(MZ+4375))+GOUT(N)
      RETURN
 8500 DO 9000 I=1,IJ
           NX=IJX(I)
           NY=IJY(I)
           NZ=IJZ(I)
           N1=IJGT(I)
           MAX=IK(I)
           DO 9000 K=1,MAX
                MX=NX+KLX(K)
                MY=NY+KLY(K)
                MZ=NZ+KLZ(K)
                N=N1+KLGT(K)
 9000 GOUT(N)=(       XIN(MX     )*YIN(MY     )*ZIN(MZ     )
     1+XIN(MX+ 625)*YIN(MY+ 625)*ZIN(MZ+ 625)
     1+XIN(MX+1250)*YIN(MY+1250)*ZIN(MZ+1250)
     1+XIN(MX+1875)*YIN(MY+1875)*ZIN(MZ+1875)
     1+XIN(MX+2500)*YIN(MY+2500)*ZIN(MZ+2500)
     1+XIN(MX+3125)*YIN(MY+3125)*ZIN(MZ+3125)
     1+XIN(MX+3750)*YIN(MY+3750)*ZIN(MZ+3750)
     1+XIN(MX+4375)*YIN(MY+4375)*ZIN(MZ+4375)
     1+XIN(MX+5000)*YIN(MY+5000)*ZIN(MZ+5000))+GOUT(N)
      RETURN
      END
      SUBROUTINE QOSO2S(A,CX)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON /OUT/    IOUT,ICHECK,IFLAG3,NSECT,NINTS
      COMMON /NTGR/ITL,ITU,JTL,JTU,KTL,KTU,LTL,LTU,JCU,KCU,LCU,INX,JNX,
     1KNX,LNX,NWT,NWT1(3),NSWIT(3),NTIJ,NTIK,NTIL,NTKL,NTJL,NTJK,
     2IJSF(3),KLSF(3),NQD(3),ICXS(3),KCXS(3),NIQD(3),NPRI(3),NPRK(3),
     3MSU,MSTU,MCONU,MCU,MCCU,MBLU,NS,NG,NST
      COMMON /IKPR/ NPRIRI(3,14), NPRIRK(3,14)
      DIMENSION A(1), CX(1)
      DIMENSION C(500),L(500)
      RETURN
      ENTRY QOSO2(ISCM,VAL)
      IF(NQD(ISCM)) 16,56,16
   16 ICX = ICXS(ISCM)
      KCXST = KCXS(ISCM)
      IBL = 0
      DO 52 IST=1,NST
           NPAIRI = NPRIRI(ISCM,IST)
           NPAIRK = NPRIRK(ISCM,IST)
           IF(NPAIRI.EQ.0) GOTO 52
           IF(NPAIRK.NE.0) GOTO 20
           ICX=ICX+NPAIRI
           GOTO 52
C
   20      CONTINUE
           NK=0
           DO 25 KLBL=1,NPAIRK
                IF (ABS(CX(KCXST+KLBL)).LT.1.0D-10) GO TO 25
                NK=NK+1
                C(NK)=CX(KCXST+KLBL)
                L(NK)=KLBL
   25      CONTINUE
           IF (NK.GT.500) THEN
              WRITE(ICHECK,*) ' NK TOO LARGE IN AOSO2S'
C***          CALL M:ABORT
      STOP
           END IF
C
           DO 48 IJBL=1,NPAIRI
                ICX=ICX+1
                IF(CX(ICX)) 32,48,32
   32           PRD=CX(ICX)*VAL
C     DO 40 KLBL=1,NPAIRK
C  40 A(IBL+KLBL)=A(IBL+KLBL)+CX(KCXST+KLBL)*PRD
                DO 40 I=1,NK
                     A(IBL+L(I))=A(IBL+L(I)) + C(I)*PRD
   40           CONTINUE
C
   48      IBL=IBL+NPAIRK
   52 KCXST = KCXST + NPAIRK
   56 RETURN
      END
