      PROGRAM CISORT
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
c Moved to PSI distribution disk on 020289 - clj.
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         search:  c3-24-88  *
C*  DATE:  MARCH  24,  1988                                           *
C*  REASON: DECREASE CORE TO RUN IN 7MB ON 9370                       *
C**********************************************************************
C      BY:  RICHARD REMINGTON                                         *
C    DATE:  FEBRUARY 12, 1985                                         *
C  REASON:  CLEANUP OUTPUT AND STANDARDIZE UNIT 6 TO OUTPUT AND       *
C     UNIT 3 TO CHECK                                                 *
C**********************************************************************
C      BY:  RICHARD REMINGTON                                         *
C    DATE:  FEBRUARY 13, 1985                                         *
C  REASON:  CHANGE UNIT NUMBERS !! 2=>52, 8=>58, 03=99=>99            *
C**********************************************************************
C
C
      IMPLICIT INTEGER (A-Z)
C
CTJL  EXTENDED BLOCK /CORE/ IZ(1)
CTJL  EXTENDED BASE  /CORE/ 256
      COMMON /TAPES/  ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP12,ITAP99,ITAP04
     *,               ITAPE3,ITAP05,ITAP06
C
C  AT THE PRESENT TIME, THE FOLLOWING TAPES ARE "NOT" USED:
C         ITAPE5, ITAP12, ITAP04, ITAP05, ITAP06
C
      COMMON /TEST/ ITEST
C
c3-24-88  REAL*8 RZ(600000)
      REAL*8 RZ(600000)
      INTEGER IZ(1)
      EQUIVALENCE (IZ,RZ)
C
CTJL  NASK=200
CTJL  CALL X:GDSPCE(NASK,NGET,,)
C
      ITAPE3 = 3
      ITAPE6 = 6
      CALL TSTART(ITAPE3)
      CALL TSTART(ITAPE6)
      CALL NOUNFL
C
c3-24-88  MAXR = 600000
      MAXR = 600000
      MAXI = INTOWP(MAXR)
      ITEST = 0
C
      CALL MAIN(IZ,RZ,MAXI,MAXR)
C
      JCODE = 3
      CALL RCLOSE(ITAP52,JCODE)
      CALL RCLOSE(ITAP58,JCODE)
      JCODE = 4
      IF(ITEST.EQ.1) CALL RCLOSE(ITAP99,JCODE)
C
      CALL TSTOP(ITAPE3)
      CALL TSTOP(ITAPE6)
C
      CALL EXIT
C
      END
      SUBROUTINE MAIN(IA,Z,MAXI,MAXR)
C***********************************************************************
      IMPLICIT INTEGER (A-Z)
C
CTJL  EXTENDED DUMMY IA,Z
C
      REAL*8 Z,X,REP,FZCORE,EGUESS,ECI,CNVERG,ACRCY,SQCDIF
      REAL*8 DRTVER,VER4X,SECS
      INTEGER FCB2(16),FCB8(16),FCB103(16),IVER(1)
C
      COMMON /TAPES/  ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP12,ITAP99,ITAP04
     *,               ITAPE3,ITAP05,ITAP06
      COMMON /DIMS/   NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,               NROWOC,NROW4O,NWKSOC,NLEVOC,NORBOC,LEVFRM
     *,               NWKSMX,NLWKMX,NUWKMX,MAXB,NROOTS,LVFRM1,NREFS
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /DIAG/   REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,               ITER,SQCDIF,NROOT
      COMMON /LBLS/   LBLINT(26),LBLDRT(26),VER4X,DRTVER
      COMMON /XX4X/   NIJVIR
      COMMON /SORT/   IBLOCK,LNBUF,MAX
C
      DIMENSION ILBM(26),ILBN(26),III(3)
      DIMENSION IA(MAXI),Z(1)
C
      EQUIVALENCE (DRTVER,IVER)
C
      ITAPE3=3
      ITAPE6=6
      ITAP52=52
      ITAP58=58
      ITAP99=99
      CALL RFILE(ITAP52)
      CALL RFILE(ITAP58)
      CALL RFILE(ITAP99)
CTJL  OPEN (UNIT=ITAPE6,OPENMODE='A')
C
C
C
      CALL ZERO(Z,MAXR)
C
      VER4X=4.220782
C     WRITE(ITAPE3,911)
C     READ(3,912) ILNB
C     WRITE(ITAPE3,913) ILNB
C     WRITE(ITAPE6,913) ILNB
C     IF (ILNB.LE.0 .OR. ILNB.GT.30) ILNB=10
CTJL  ILNB=10
 911  FORMAT(/'  ENTER ILNB')
 912  FORMAT(I2)
 913  FORMAT(/'  USING ',I3,'  SECTORS FOR LNBUF')
CTJL  LNBUF=SEC2I(ILNB)
CTJL  MAX=LNBUF-2
      WRITE(ITAPE6,1)
    1 FORMAT(/,1H ,16X,'             PROGRAM CISORT ',/)
    5 FORMAT(/,1H ,16X,'>>>>>  CISORT CALCULATION COMPLETED  <<<<< ')
      WRITE(ITAPE6,10)
   10 FORMAT(1H ,12X,'SHAPE DRIVEN GRAPHICAL UNITARY GROUP CI PROGRAMS')
      WRITE(ITAPE6,11)
   11 FORMAT(1H ,12X,' FORM 3 & 4-EXTERNAL HAMILTONIAN MATRIX ELEMENTS')
      WRITE(ITAPE6,15) MAXR
   15 FORMAT(/,1H ,'DIMENSION OF REAL COMMON IS',I10)
CCRBR WRITE(ITAPE6,20)
CC 20 FORMAT(1H ,'READ IN DISTINCT ROW TABLE')
      CALL SREW(ITAP58)
C
C     ----- READ DIMENSIONS ETC FROM DRT TAPE -----
C
      CALL WREADW(ITAP58,IVER,INTOWP(1),1,END)
      CALL WREADW(ITAP58,LBLDRT,26,END,END)
      CALL WREADW(ITAP58,NBF,1,END,END)
      CALL WREADW(ITAP58,NSYM,1,END,END)
      CALL WREADW(ITAP58,NORBS,1,END,END)
      CALL WREADW(ITAP58,NROWS,1,END,END)
      END=END+1
      CALL WREADW(ITAP58,NLEVS,1,END,END)
      CALL WREADW(ITAP58,NREFS,1,END,END)
      END=END+2
      CALL WREADW(ITAP58,NWKS,1,END,END)
      END=END+2
      CALL WREADW(ITAP58,LVFRM1,1,END,END)
      CALL WREADW(ITAP58,SYMORB,1,END,END)
      CALL WREADW(ITAP58,NUMIJ,1,END,END)
      CALL WREADW(ITAP58,NGROUP,1,END,END)
      END=END+1
      CALL WREADW(ITAP58,NMAX,1,END,END)
      END=END+1
      CALL WREADW(ITAP58,NIJVIR,1,END,END)
      END=END+1
C
C
      NMAX2=INTOWP(NMAX)
      LEVFRM=LVFRM1+1
      NORBOC=NLEVOC-1
      WRITE(ITAPE6,31)LBLDRT
   31 FORMAT(1H ,'LABEL FROM DRT :        ',26A3,/)
      WRITE(ITAPE6,32)NWKS
   32 FORMAT(1H ,'NUMBER OF CONFIGURATIONS     =',I10)
      WRITE(ITAPE6,33)NBF
   33 FORMAT(1H ,'NUMBER OF BASIS FUNCTIONS    =',I10)
      WRITE(ITAPE6,34) NORBS
   34 FORMAT(1H ,'NUMBER OF ALLOWED ORBITALS   =',I10)
      WRITE(ITAPE6,35)LVFRM1
   35 FORMAT(1H ,'FERMI LEVEL IS ',I5 )
      CALL SREW(ITAP52)
C     CALCULATE POINTERS INTO BLANK COMMON
      IJXX=1
      KLXX=IJXX+NUMIJ
      NKLXX=KLXX+NIJVIR
      IJWW=NKLXX+NSYM
      KLWW=IJWW+NUMIJ
      NKLWW=KLWW+NIJVIR
      IJADD=NKLWW+NSYM
      IJGRP=IJADD+NUMIJ
      KADD=IJGRP+NUMIJ
      LADD=KADD+SYMORB
      NINGRP=LADD+SYMORB
      NBLKMN=NINGRP+NGROUP
      NBLKMX=NBLKMN+NGROUP
      ORBSYM=NBLKMX+NGROUP
CTJL  IAD=ORBSYM+NORBS
CTJL  LENI=IAD+NGROUP*LNBUF
      WRITE(ITAPE3,41) LENI
   41 FORMAT(' LENGTH OF INTEGER COMMON IS ',I8)
CTJL  IF(LENI.GT.MAXI) GO TO 930   TURNED BACK ON --- RBR
      IF(LENI.GT.MAXI) GO TO 930
      WRITE(ITAPE3,42)
   42 FORMAT(' READ DRT FILE')
      CALL GETDRT(        IA(KADD),IA(LADD),IA(IJADD),IA(IJGRP)
     #,                                                  IA(NINGRP)
     #,        IA(ORBSYM),IA(NBLKMN),IA(NBLKMX)
     #,        IA(IJXX),IA(KLXX),IA(NKLXX),IA(IJWW),IA(KLWW),IA(NKLWW)
     #,           END)
C
      IINTS = ORBSYM + NORBS
      IF((IINTS/2)*2.NE.IINTS) IINTS = IINTS + 1
      INTS = IADTWP(IINTS)
      IINTS = WPADTI(INTS)
      H3 = INTS + NMAX
      IAD = WPADTI(H3+NIJVIR)
      SPACE = MAXI - IAD
      SPACE = SPACE/(1+INTOWP(1))
      LNBUF = SPACE/NGROUP
      LNBUF = (LNBUF/SEC2I(1))*SEC2I(1)
      WRITE(ITAPE3,*) ' LNBUF = ',LNBUF
      MAX = LNBUF - 2
      IF(LNBUF.LT.SEC2I(1)) THEN
      WRITE(ITAPE6,941)
  941 FORMAT(5X,'INSUFFICIENT SPACE TO SORT INTS')
      STOP
      END IF
      IVAL = IAD + NGROUP*LNBUF
      VAL = IADTWP(IVAL)
      LENR = VAL + NGROUP*LNBUF
      IF(LENR.GT.MAXR) GO TO 940
CTJL  INTS=IADTWP(LENI)
C
C     ----- INTEGER EQUIVALENT
C
CTJL  IINTS=WPADTI(INTS)
C
      CALL GETINT(ACRCY,ILBM,ILBN,IA(IINTS))
C
CTJL  H3=INTS+NMAX
CTJL  VAL=H3+NIJVIR
C
C     ----- INTEGER EQUIVALENT -----
C
CTJL  IVAL=WPADTI(VAL)
C
CTJL  LENR=VAL+NGROUP*LNBUF
CTJL  IF(LENR.GT.MAXR) GO TO 940
C
      WRITE (ITAPE6,50)
   50 FORMAT (1H ,'ABOUT TO INITIALIZE SORTING ROUTINES')
      CALL INSORT(IA(IAD),Z(VAL),Z(INTS),IA(IVAL),IA(IINTS))
C
      CALL INOUT(Z(INTS),IA(IJXX),IA(KLXX),IA(IJWW),IA(KLWW),IA(IJGRP)
     #,          IA(IINTS))
C
      WRITE (ITAPE6,51)
   51 FORMAT (1H ,'STARTING TO FORM 3 & 4-EXTERNAL CONTRIBUTIONS')
C
      CALL XXINT(Z(INTS),Z(H3),IA(ORBSYM),IA(IJGRP),IA(IJADD)
     #,          IA(KADD),IA(LADD),IA(IINTS))
C
      WRITE (ITAPE6,52)
   52 FORMAT (1H ,'CHAIN BACK THROUGH SORT TAPE TO FINISH',/)
      CALL FINSRT
C
C
C
CTJL  CALL CPUTIM(SECS)
CTJL  MIN=SECS/60
CTJL  SECS=SECS-MIN*60
CTJL  WRITE (ITAPE6,53) MIN,SECS
CTJ53 FORMAT (//,'      CPUTIME USED: ',I3,':',F6.3,/)
C
      WRITE(ITAPE6,5)
      RETURN
C
C^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ERRORS
C
C 920 WRITE(ITAPE6,925)NORBS,NORB2
C 925 FORMAT(' NUMBER OF ORBITALS DOES NOT MATCH ',2I10)
CCCCC CALL EXIT  >>>>>>>  THERE IS NO GO TO 920 OR ANYOTHER NORB2
  930 WRITE(ITAPE6,935)LENI
  935 FORMAT(' INSUFFICIENT SPACE IN INTEGER BLANK COMMON NEED',I10,
     *' WORDS.')
      CALL EXIT
  940 WRITE(ITAPE6,945)LENR
  945 FORMAT(' INSUFFICIENT SPACE IN BLANK COMMON NEED',I10,' WORDS.')
      CALL EXIT
      END
      SUBROUTINE XXINT(INT,H,ORBSYM,IJGRP,IJADD,KADD,LADD,IINT)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CTJL  EXTENDED DUMMY INT,H,ORBSYM,IJGRP,IJADD,KADD,LADD,IINT
C
      INTEGER ARR,SYMORB,IINT(1)
      INTEGER MAXB,LVFRM1,ORBSYM
      REAL*8 INT(NMAX),H(NIJVIR)
C
      DIMENSION KADD(SYMORB),LADD(SYMORB),IJADD(NUMIJ),ORBSYM(NORBS)
      DIMENSION IJGRP(NUMIJ)
C
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,NROW4O,NWKSOC,NLEVOC,NORBOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,MAXB,NROOTS,LVFRM1,NREFS
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP12,ITAP99,ITAP04
     *,             ITAPE3,ITAP05,ITAP06
      COMMON /SORT/   IBLOCK,LNBUF,MAX
      COMMON /XX4X/   NIJVIR
C
      SQRT2=SQRT(2.0D+00)
C
C     WRITE(ITAPE6,971) (INT(IQ),IQ=1,NMAX)
  971 FORMAT (//,(1X,5(1PE15.5)))
      DO 1 I=1,NORBS
        ORBSYM(I)=ORBSYM(I)-1
    1 CONTINUE
C
      IBLOCK=1
C
C     WRITE(ITAPE6,"(3E18.8)") INT
C
      DO 6 I=LVFRM1,2,-1
        IA=I*(I-1)/2
        II=IA+I
    2   IF (IJGRP(II).EQ.IBLOCK) GO TO 3
        IBLOCK=IBLOCK+1
        IF (IBLOCK.GT.NGROUP) THEN
          WRITE(ITAPE6,*) ' TOO MANY INT BLOCKS IN HXX,H'
          CALL MABORT
        END IF
        CALL NXTBLK
        GO TO 2
    3   CONTINUE
        III=IJADD(IA+I)+KADD(I)
        IIIS=ORBSYM(I)
        IIIN=IIIS*NORBS
        DO 5 J=1,I-1
          IF (ORBSYM(J).NE.IIIS) GO TO 4
          H(IA+J)=INT(III+LADD(IIIN+J)+3)
    4     CONTINUE
    5   CONTINUE
    6 CONTINUE
C
C
C
      CALL SREW(ITAP52)
      CALL RSETSA(ITAP52,INTSRT)
      CALL SREAD(ITAP52,IINT,NMAX2)
C
C
      INTPT=INTSRT
      IBLOCK=1
C
      DO 110 I=NORBS,LEVFRM,-1
        IA=I*(I-1)/2
        IS=ORBSYM(I)
        DO 109 J=LVFRM1,2,-1
          IJ=IA+J
  101     IF (IJGRP(IJ).EQ.IBLOCK) GO TO 102
          IBLOCK=IBLOCK+1
          IF (IBLOCK.GT.NGROUP) THEN
            WRITE(ITAPE6,*) ' TOO MANY BLOCKS FOR 3X'
            CALL MABORT
          END IF
          CALL RWRIT(ITAP52,IINT,INTOWP(NMAX),INTPT)
          INTPT=INTPT+I2SEC(INTOWP(NMAX))
          CALL RREAD(ITAP52,IINT,INTOWP(NMAX),INTPT)
C     CALL NXTBLK
          GO TO 101
  102     CONTINUE
          JA=J*(J-1)/2
          IJS=IEOR(IS,ORBSYM(J))
          IJN=IJS*NORBS
          IJP=IJADD(IJ)
C
          JJ=JA+J
          IJJ=IJP+KADD(IJN+J)
          IJJN=IS*NORBS
          DO 104 L=1,J-1
            IF (ORBSYM(L).NE.IS) GO TO 103
            IJJL=IJJ+LADD(IJJN+L)
            IL=IA+L
            JL=JA+L
            T1=INT(IJJL+1)
            T2=INT(IJJL+2)
            CALL OUTWY(SQRT2*T1,IL,JJ)
            CALL OUTWY(T1+T2,IJ,JL)
            CALL OUTXY(T1-T2,IJ,JL)
  103       CONTINUE
  104     CONTINUE
          DO 108 K=1,J-1
            IJK=IJP+KADD(IJN+K)
            IK=IA+K
            JK=JA+K
            KA=K*(K-1)/2
            IJKS=IEOR(IJS,ORBSYM(K))
            IJKN=IJKS*NORBS
            IF (ORBSYM(K).NE.IJKS) GO TO 105
            IJKK=IJK+LADD(IJKN+K)
            KK=KA+K
            T1=INT(IJKK+1)
            T2=INT(IJKK+2)
            CALL OUTWY(SQRT2*T1,IJ,KK)
            CALL OUTWY(T2+T1,IK,JK)
            CALL OUTXY(T2-T1,IK,JK)
  105       CONTINUE
            DO 107 L=1,K-1
              IF (ORBSYM(L).NE.IJKS) GO TO 106
              IJKL=IJK+LADD(IJKN+L)
              IL=IA+L
              JL=JA+L
              KL=KA+L
              T1=INT(IJKL+1)
              T2=INT(IJKL+2)
              T3=INT(IJKL+3)
              CALL OUTWY(T1+T3,IJ,KL)
              CALL OUTXY(T1-T3,IJ,KL)
              CALL OUTWY(T2+T3,IK,JL)
              CALL OUTXY(T2-T3,IK,JL)
              CALL OUTWY(T2+T1,IL,JK)
              CALL OUTXY(T2-T1,IL,JK)
  106         CONTINUE
  107       CONTINUE
  108     CONTINUE
  109   CONTINUE
  110 CONTINUE
C
C     ----- 4-EXTERNAL INTEGRALS -----
C
      DO 23 I=LVFRM1,2,-1
        IA=I*(I-1)/2
        IS=ORBSYM(I)
        II=IA+I
    7   IF (IJGRP(II).EQ.IBLOCK) GO TO 8
        IBLOCK=IBLOCK+1
        IF (IBLOCK.GT.NGROUP) THEN
          WRITE(ITAPE6,*) ' TOO MANY INT BLOCKS IN HXX,H'
          CALL MABORT
        END IF
        CALL RWRIT(ITAP52,IINT,INTOWP(NMAX),INTPT)
        INTPT=INTPT+I2SEC(INTOWP(NMAX))
        CALL RREAD(ITAP52,IINT,INTOWP(NMAX),INTPT)
C     CALL NXTBLK
        GO TO 7
    8   CONTINUE
        IIP=IJADD(II)
        III=IIP+KADD(I)
        IIIN=IS*NORBS
        DO 10 L=1,I-1
          IF (ORBSYM(L).NE.IS) GO TO 9
          IL=IA+L
          IIIL=III+LADD(IIIN+L)
          LL=L*(L+1)/2
          T=SQRT2*(INT(IIIL+1)+INT(IIIL+3))
          CALL OUTWW(T,II,IL)
          T=SQRT2*(INT(IIIL+2)+INT(IIIL+3))
          CALL OUTWW(T,IL,LL)
    9     CONTINUE
   10   CONTINUE
        DO 13 K=1,I-1
          IIK=IIP+KADD(K)
          IIKS=ORBSYM(K)
          IIKN=IIKS*NORBS
          KA=K*(K-1)/2
          IK=IA+K
          KK=KA+K
          IIKK=IIK+LADD(IIKN+K)
          T=INT(IIKK+1)
          CALL OUTWW(T,II,KK)
          DO 12 L=1,K-1
            IF (ORBSYM(L).NE.IIKS) GO TO 11
            IIKL=IIK+LADD(IIKN+L)
            IL=IA+L
            KL=KA+L
            T1=INT(IIKL+1)
            T2=INT(IIKL+2)
            HKL=H(KL)
            T=T2-T1+HKL
            CALL OUTXX(T,IK,IL)
            T=SQRT2*T1
            CALL OUTWW(T,II,KL)
            T=T1+T2+HKL
            CALL OUTWW(T,IK,IL)
   11       CONTINUE
   12     CONTINUE
   13   CONTINUE
C
        DO 22 J=I-1,2,-1
          IJ=IA+J
   14     IF (IJGRP(IJ).EQ.IBLOCK) GO TO 15
          IBLOCK=IBLOCK+1
          IF (IBLOCK.GT.NGROUP) THEN
            WRITE(ITAPE6,*) ' TOO MANY BLOCKS INT, HXX,IJ'
            CALL MABORT
          END IF
          CALL RWRIT(ITAP52,IINT,INTOWP(NMAX),INTPT)
          INTPT=INTPT+I2SEC(INTOWP(NMAX))
          CALL RREAD(ITAP52,IINT,INTOWP(NMAX),INTPT)
C     CALL NXTBLK
          GO TO 14
   15     CONTINUE
          HIJ=H(IJ)
          IJP=IJADD(IJ)
          IJS=IEOR(IS,ORBSYM(J))
          IJN=IJS*NORBS
          JA=J*(J-1)/2
          JJ=JA+J
          IJJ=IJP+KADD(IJN+J)
          IJJS=IS
          IJJN=IJJS*NORBS
          DO 17 L=1,J-1
            IF (ORBSYM(L).NE.IJJS) GO TO 16
            IL=IA+L
            JL=JA+L
            IJJL=IJJ+LADD(IJJN+L)
            T1=INT(IJJL+1)
            T2=INT(IJJL+2)
            HIL=H(IL)
            T=T1-T2-HIL
            CALL OUTXX(T,IJ,JL)
            T=SQRT2*T1
            CALL OUTWW(T,IL,JJ)
            T=T1+T2+HIL
            CALL OUTWW(T,IJ,JL)
   16       CONTINUE
   17     CONTINUE
C
          DO 21 K=1,J-1
            IJK=IJP+KADD(IJN+K)
            IJKS=IEOR(IJS,ORBSYM(K))
            IJKN=IJKS*NORBS
            IK=IA+K
            JK=JA+K
            KA=K*(K-1)/2
            KK=KA+K
            IF (ORBSYM(K).NE.IJKS) GO TO 18
            IJKK=IJK+LADD(IJKN+K)
            T1=INT(IJKK+1)
            T2=INT(IJKK+2)
            T=T2-T1+HIJ
            CALL OUTXX(T,IK,JK)
            T=SQRT2*T1
            CALL OUTWW(T,IJ,KK)
            T=T1+T2+HIJ
            CALL OUTWW(T,IK,JK)
   18       CONTINUE
C
            DO 20 L=1,K-1
              IF (ORBSYM(L).NE.IJKS) GO TO 19
              IJKL=IJK+LADD(IJKN+L)
              T1=INT(IJKL+1)
              T2=INT(IJKL+2)
              T3=INT(IJKL+3)
              IL=IA+L
              JL=JA+L
              KL=KA+L
              CALL OUTXX(T1-T3,IJ,KL)
              CALL OUTWW(T1+T3,IJ,KL)
              CALL OUTXX(T2-T3,IK,JL)
              CALL OUTWW(T2+T3,IK,JL)
              CALL OUTXX(T2-T1,IL,JK)
              CALL OUTWW(T2+T1,IL,JK)
   19         CONTINUE
   20       CONTINUE
   21     CONTINUE
   22   CONTINUE
   23 CONTINUE
C
      CALL RWRIT(ITAP52,IINT,INTOWP(NMAX),INTPT)
C
      RETURN
      END
      SUBROUTINE INOUT(INT,IJXX,KLXX,IJWW,KLWW,IJGRP,IINT)
C
CTJL  EXTENDED DUMMY INT,IJXX,KLXX,IJWW,KLWW,IJGRP,IINT
C
      REAL*8 INT,TX,TW,TXY,TWY
      INTEGER SYMORB,IINT(1)
C
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP12,ITAP99,ITAP04
     *,             ITAPE3,ITAP05,ITAP06
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,NROW4O,NWKSOC,NLEVOC,NORBOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,MAXB,NROOTS,LVFRM1,NREFS
      COMMON /XX4X/   NIJVIR
      COMMON /SORT/   IBLOCK,LNBUF,MAX
C
      DIMENSION IJXX(NUMIJ ),KLXX(NIJVIR),IJWW(NUMIJ )
      DIMENSION KLWW(NIJVIR),INT(NMAX),IJGRP(NUMIJ)
C
      RETURN
C
C*************************** OUTXX *************************************
C
      ENTRY OUTXX(TX,IJX,KLX)
C
      IADR=IJXX(IJX)+KLXX(KLX)
      IBLK=IJGRP(IJX)
      IF (IBLK.NE.IBLOCK) GO TO 2
      INT(IADR)=TX
      GO TO 3
    2 CONTINUE
      CALL SORTS(IBLK,IADR,TX)
    3 CONTINUE
      IADR=IJXX(KLX)+KLXX(IJX)
      IBLK=IJGRP(KLX)
      IF (IBLK.NE.IBLOCK) GO TO 4
      INT(IADR)=TX
      GO TO 5
    4 CONTINUE
      CALL SORTS(IBLK,IADR,TX)
    5 CONTINUE
      RETURN
C
C*************************** OUTWW *************************************
C
      ENTRY OUTWW(TW,IJW,KLW)
C
      IADR=IJWW(IJW)+KLWW(KLW)
      IBLK=IJGRP(IJW)
      IF (IBLK.NE.IBLOCK) GO TO 6
      INT(IADR)=TW
      GO TO 7
    6 CONTINUE
      CALL SORTS(IBLK,IADR,TW)
    7 CONTINUE
      IADR=IJWW(KLW)+KLWW(IJW)
      IBLK=IJGRP(KLW)
      IF (IBLK.NE.IBLOCK) GO TO 8
      INT(IADR)=TW
      GO TO 9
    8 CONTINUE
      CALL SORTS(IBLK,IADR,TW)
    9 CONTINUE
      RETURN
C
C*************************** OUTXY *************************************
C
      ENTRY OUTXY(TXY,IJXY,KLXY)
C
      IADR=IJXX(IJXY)+KLXX(KLXY)
      IBLK=IJGRP(IJXY)
      IF (IBLK.NE.IBLOCK) GO TO 10
      INT(IADR)=TXY
      GO TO 11
   10 CONTINUE
      CALL SORTS(IBLK,IADR,TXY)
   11 CONTINUE
      RETURN
C
C*************************** OUTWY *************************************
C
      ENTRY OUTWY(TWY,IJWY,KLWY)
C
      IADR=IJWW(IJWY)+KLWW(KLWY)
      IBLK=IJGRP(IJWY)
      IF (IBLK.NE.IBLOCK) GO TO 12
      INT(IADR)=TWY
      GO TO 13
   12 CONTINUE
      CALL SORTS(IBLK,IADR,TWY)
   13 CONTINUE
      RETURN
      END
      SUBROUTINE INSORT(IAD,VAL,AINT,IVAL,IINT)
C
CTJL  EXTENDED DUMMY IAD,VAL,AINT,IVAL,IINT
C
      INTEGER SYMORB,IINT(1),IVAL(1)
      REAL*8 AINT,T,VAL
C
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP12,ITAP99,ITAP04
     *,             ITAPE3,ITAP05,ITAP06
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /SORT/   IBLOCK,LNBUF,MAX
      COMMON /TEST/ ITEST
C
      DIMENSION IAD(1),VAL(1),AINT(NMAX)
C
      ILAST=0
      DO 1 I=1,NGROUP
        IP=(I-1)*LNBUF
C       BACK-CHAINING POINTER
        IAD(IP+MAX+1)=-1
C       NUMBER OF ELEMENTS IN BUFFER
        IAD(IP+MAX+2)=0
    1 CONTINUE
      RETURN
C
C***************************** OUT *************************************
C
      ENTRY SORTS(IBLK,IADR,T)
C
      IP=(IBLK-1)*LNBUF
      N=IAD(IP+MAX+2)
      IF (N.LT.MAX) GO TO 2
      ILAST=ILAST+1
C************ TJL
      ITEST = 1
      CALL SWRIT(ITAP99,IAD(IP+1),LNBUF)
      CALL SWRIT(ITAP99,VAL(IP+1),INTOWP(LNBUF))
      IAD(IP+MAX+1)=ILAST
      N=0
    2 CONTINUE
      N=N+1
      IAD(IP+MAX+2)=N
      IAD(IP+N)=IADR
      VAL(IP+N)=T
      RETURN
C
C*************************** FINSRT ************************************
C
      ENTRY FINSRT
C
      WRITE(ITAPE6,101) ILAST,LNBUF
  101 FORMAT (1X,'SORT TAPE USED',I7,' BUFFERS OF ',I7,' ELEMENTS EACH')
      CALL SREW(ITAP52)
      INTPT=INTSRT
      LNBF12=I2SEC(ITRUNC(LNBUF))
C
      DO 8 I=1,NGROUP
        CALL RREAD(ITAP52,IINT,INTOWP(NMAX),INTPT)
        IP=(I-1)*LNBUF
    5   CONTINUE
        N=IAD(IP+MAX+2)
        DO 6 J=IP+1,IP+N
          AINT(IAD(J))=VAL(J)
    6   CONTINUE
        ILAST=IAD(IP+MAX+1)
        IF (ILAST.LE.0) GO TO 7
C*************  CORRECTION FOR 1ST SECTOR BEING LABELED 1, NOT 0.
CTJL    IPT=3*LNBF12*(ILAST-1)
        IPT=3*LNBF12*(ILAST-1) + 1
        CALL RREAD(ITAP99,IAD(IP+1),LNBUF,IPT)
        CALL RREAD(ITAP99,VAL(IP+1),INTOWP(LNBUF),IPT+LNBF12)
        GO TO 5
    7   CONTINUE
        CALL RWRIT(ITAP52,IINT,INTOWP(NMAX),INTPT)
CC    WRITE(ITAPE6,791) (AINT(IQ),IQ=1,NMAX)
  791   FORMAT (//,(5(1PE15.5)))
C     WRITE(ITAPE6,"(' IN FINSRT',/,(5F10.5))") AINT
        INTPT=INTPT+I2SEC(INTOWP(NMAX))
    8 CONTINUE
      RETURN
      END
      SUBROUTINE GETDRT(    KADD,LADD,IJADD,IJGRP
     #,                        NINGRP,ORBSYM,NBLKMN,NBLKMX
     #,                 IJXX,KLXX,NKLXX,IJWW,KLWW,NKLWW,END)
C
      IMPLICIT INTEGER (A-Z)
C
CTJL  EXTENDED DUMMY KADD,LADD,IJADD,IJGRP,NINGRP,ORBSYM,NBLKMN,NBLKMX
CTJL  EXTENDED DUMMY IJXX,KLXX,NKLXX,IJWW,KLWW,NKLWW
C
      REAL*8 VER4X,DRTVER
C
      COMMON /LBLS/ LBLINT(26),LBLDRT(26),VER4X,DRTVER
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP12,ITAP99,ITAP04
     *,             ITAPE3,ITAP05,ITAP06
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,NROW4O,NWKSOC,NLEVOC,NORBOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,MAXB,NROOTS,LVFRM1,NREFS
      COMMON /INTS/ NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /XX4X/ NIJVIR
C
      DIMENSION IJADD(NUMIJ),KADD(SYMORB),LADD(SYMORB)
      DIMENSION IJGRP(NUMIJ)
      DIMENSION ORBSYM(NORBS)
      DIMENSION NINGRP(NGROUP),NBLKMN(NGROUP),NBLKMX(NGROUP)
      DIMENSION IJXX(NUMIJ ),KLXX(NIJVIR),NKLXX(NSYM)
      DIMENSION IJWW(NUMIJ ),KLWW(NIJVIR),NKLWW(NSYM)
C
      CALL WREADW(ITAP58,KADD,SYMORB,END,END)
      CALL WREADW(ITAP58,LADD,SYMORB,END,END)
      CALL WREADW(ITAP58,IJADD,NUMIJ,END,END)
      CALL WREADW(ITAP58,IJGRP,NUMIJ,END,END)
      END=END+NORBS*4
      CALL WREADW(ITAP58,NINGRP,NGROUP,END,END)
      END=END+NBF
      CALL WREADW(ITAP58,ORBSYM,NORBS,END,END)
      END=END+NBF+NREFS*NBF+NORBS+NLEVS*2+NROWS*12+LVFRM1*2*(NSYM+1)
      CALL WREADW(ITAP58,IJXX,NUMIJ,END,END)
      CALL WREADW(ITAP58,KLXX,NIJVIR,END,END)
      CALL WREADW(ITAP58,NKLXX,NSYM,END,END)
      END=END+NSYM*(LVFRM1-1)
      CALL WREADW(ITAP58,IJWW,NUMIJ,END,END)
      CALL WREADW(ITAP58,KLWW,NIJVIR,END,END)
      CALL WREADW(ITAP58,NKLWW,NSYM,END,END)
      END=END+NSYM*(LVFRM1-1)
C
C
C
C
      IF (IDBG9 .EQ. 0) GOTO 9
      WRITE (ITAPE6,*) ' KADD '
      WRITE (ITAPE6,710) (KADD(I),I=1,SYMORB)
      WRITE (ITAPE6,*) ' LADD '
      WRITE (ITAPE6,710) (LADD(I),I=1,SYMORB)
      WRITE (ITAPE6,*) ' IJADD'
      WRITE (ITAPE6,710) (IJADD(I),I=1,NUMIJ)
      WRITE (ITAPE6,*) ' IJGRP'
      WRITE (ITAPE6,710) (IJGRP(I),I=1,NUMIJ)
      WRITE (ITAPE6,*) ' NINGRP'
      WRITE (ITAPE6,710) (NINGRP(I),I=1,NGROUP)
      WRITE (ITAPE6,*) ' ORBSYM'
      WRITE (ITAPE6,710) (ORBSYM(I),I=1,NORBS)
      WRITE (ITAPE6,*) ' IJXX '
      WRITE (ITAPE6,710) (IJXX(I),I=1,NUMIJ)
      WRITE (ITAPE6,*) ' KLXX '
      WRITE (ITAPE6,710) (KLXX(I),I=1,NIJVIR)
      WRITE (ITAPE6,*) ' NKLXX'
      WRITE (ITAPE6,710) (NKLXX(I),I=1,NSYM)
      WRITE (ITAPE6,*) ' IJWW '
      WRITE (ITAPE6,710) (IJWW(I),I=1,NUMIJ)
      WRITE (ITAPE6,*) ' KLWW '
      WRITE (ITAPE6,710) (KLWW(I),I=1,NIJVIR)
      WRITE (ITAPE6,*) ' NKLWW'
      WRITE (ITAPE6,710) (NKLWW(I),I=1,NSYM)
C
C
C
  710 FORMAT (20I5)
    9 CONTINUE
      IBLK=1
      RETURN
      END
      SUBROUTINE GETINT(ACRCY,ILBL,ILBM,IINTS)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
CTJL  EXTENDED DUMMY IINTS
C
      INTEGER REFWLK,SYMORB,MAXB,LVFRM1,IINTS(1)
C
      COMMON /TAPES/  ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP12,ITAP99,ITAP04
     *,             ITAPE3,ITAP05,ITAP06
      COMMON /DIMS/   NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,               NROWOC,NROW4O,NWKSOC,NLEVOC,NORBOC,LEVFRM
     *,               NWKSMX,NLWKMX,NUWKMX,MAXB,NROOTS,LVFRM1,NREFS
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /DIAG/   REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,               ITER,SQCDIF,NROOT
C
      DIMENSION ILBL(20),ILBM(26)
C
      CALL DCDLBL(ITAP52,ILBL,ILBM,NGRPS,NMAX,NSYM,ACRCY,FZCORE,REP)
      CALL RGETSA(ITAP52,INTSRT)
      WRITE(ITAPE6,14)ILBL
  14  FORMAT(/,1H ,'LABEL FROM INTEGRALS :  ',20A4,/)
      WRITE(ITAPE6,15)NSYM
  15  FORMAT(1H ,'THE NUMBER OF SYMMETRY TYPES =',I10)
      WRITE(ITAPE6,16)NMAX
  16  FORMAT(1H ,'THE INTEGRAL GROUP SIZE      =',I10)
      WRITE(ITAPE6,17)NGRPS
  17  FORMAT(1H ,'THE NUMBER OF THESE GROUPS   =',I10)
      IF(NGROUP.NE.NGRPS) GO TO 900
      WRITE(ITAPE6,18)
  18  FORMAT(/)
      WRITE(ITAPE6,19)FZCORE
      WRITE(ITAPE6,20)REP
      WRITE(ITAPE6,21)ACRCY
  19  FORMAT(1H ,'FROZEN CORE ENERGY           = ',F14.8)
  20  FORMAT(1H ,'NUCLEAR REPULSION            = ',F14.8)
  21  FORMAT(1H ,'LOOP CUTOFF VALUE            = ',E14.4,/)
C
C--------------------------------------------------------NXTBLK
C
      ENTRY NXTBLK
C
      CALL SREAD(ITAP52,IINTS,NMAX2)
      RETURN
 900  WRITE(ITAPE6,910) NGRPS,NGROUP
 910  FORMAT(' IN GETINT GROUPS DO NOT MATCH NGRPS=',I6,' NGROUP=',I6)
      CALL EXIT
      END
