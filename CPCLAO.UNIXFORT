      SUBROUTINE BAMAT(EIG,ESO,U,T,B0,DP,DM,LBLI,BUFI)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS)
      DIMENSION ESO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION B0(NTRI),DP(NTRI,N3N),DM(NTRI,N3N)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
C
      CALL SREW(ITAP44)
C   DM ARRAY STORES DERIVATIVE OVERLAP MATRIX
      DO 102 IABC=1,N3N
      IS=ISA(IABC)
      IT=IFA(IABC)
      IB=IBA(IABC)
      CALL RREAD(ITAP44,DM(1,IABC),NTRI2,IS)
      CALL RREAD(ITAP44,B0,NTRI2,IT)
      IJ=0
      DO 101 I=1,NBASIS
      DO 101 J=1,I
      IJ=IJ+1
      B0(IJ)=B0(IJ)-EIG(J)*DM(IJ,IABC)
  101 CONTINUE
      CALL RWRIT(ITAP44,B0,NTRI2,IB)
  102 CONTINUE
C
C   FORM DENSITY LIKE MATRIX IN SO BASIS
C   DM ARRAY CONTAINS DERIVATIVE OVERLAP MATRIX
C   DP ARRAY STORES DENSITY LIKE MATRIX IN SO BASIS
      CALL DBMAT(ESO,DP,DM,N3N)
C
C   FORM HALF-TRANSFORMED DENSITY LIKE MATRIX
C   DP ARRAY CONTAINS DENSITY LIKE MATRIX IN SO BASIS
C   DM ARRAY STORES HALF-TRANSFORMED DENSITY LIKE MATRIX
      CALL PDMAT(DP,DM,N3N,LBLI,BUFI)
C
C   COMPLETE B0 MATRICES
      CALL SREW(ITAP44)
      DO 105 IABC=1,N3N
      IB=IBA(IABC)
      CALL MOCONS(DM(1,IABC),NTRI,DP(1,IABC),NTRI,ESO,U,T)
      CALL RREAD(ITAP44,B0,NTRI2,IB)
      DO 104 I=1,NTRI
  104 B0(I)=B0(I)+DP(I,IABC)
      CALL RWRIT(ITAP44,B0,NTRI2,IB)
  105 CONTINUE
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE BFMAT(HF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION HF(NTRI)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/DIPOL/DIPDA(135),DIPDM(135),DIPDN(135),DIPDT(135)
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
    1 FORMAT(//,2X,' DIPDA MATRIX'/)
    2 FORMAT(//,2X,' DIPDN MATRIX'/)
    3 FORMAT(//,2X,' HF MATRIX, IXYZ = ',I5/)
    4 FORMAT(//,2X,' HF MATRIX, IABC = ',I5/)
C
      CALL RFILE(ITAP43)
      CALL SREAD(ITAP43,DIPDA,270)
      WRITE(6,1)
      CALL MATOUT(DIPDA,3,45,3,N3N,6)
      CALL SREAD(ITAP43,DIPDN,270)
      WRITE(6,2)
      CALL MATOUT(DIPDN,3,45,3,N3N,6)
C
      CALL SREW(ITAP44)
      DO 101 IXYZ=1,3
      IH=IHA(N3N+IXYZ)
      IB=IBA(N3N+IXYZ)
      CALL SREAD(ITAP43,HF,NTRI2)
      CALL RWRIT(ITAP44,HF,NTRI2,IH)
      CALL RWRIT(ITAP44,HF,NTRI2,IB)
      IF(IPRNT.LE.3) GO TO 101
      WRITE(6,3) IXYZ
      CALL PRINT(HF,NTRI,NBASIS,6)
  101 CONTINUE
C
      CALL SREW(ITAP43)
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE CORSIZ(MAXCOR,N3NXX,NADD,MAXVC)
      implicit real*8 (a-h,o-z)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIZES/MAXVEC,MAXVX
      COMMON/CI101/IHOMO,ILUMO
    1 FORMAT(//,2X,' %%%%%%%%%%%%%%%%%%%%%%%%%%%'/
     1          2X,' %%%NOW YOU ARE IN CORSIZ%%%'/
     2          2X,' %%%%%%%%%%%%%%%%%%%%%%%%%%%'/)
    2 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
    3 FORMAT(//,2X,' *************************************************'/
     1          2X,' ***REQUIRED MEMORY EXCEEDS MAXCOR-----STOP !!!***'/
     2          2X,' *************************************************'/
     3          2X,' IGMAX = ',I10,5X,' MAXCOR = ',I10/)
    4 FORMAT(//,2X,' ::::::::::::::::::::::::::::::::::'/
     1          2X,' :::REQUIRED MEMORY FOR THIS RUN:::'/
     2          2X,' ::::::::::::::::::::::::::::::::::'/
     3          2X,' NADD  = ',I10,5X,' MAXVC  = ',I10/
     4          2X,' IGMAX = ',I10,5X,' MAXCOR = ',I10/)
    5 FORMAT(//,2X,' %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'/
     1          2X,' %%%NOW YOU ARE LEAVING CORSIZ%%%'/
     2          2X,' %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'/)
C
C   THIS SUBROUTINE WILL CHECK THE MAXIMUM CORE MEMORY REQUIRED
C   FOR THE CALCULATION
C
C   DYNAMIC ALLOCATION FOR THE CORE MEMORY
C   1 : EIG        (NBASIS)
C   2 : OCC        (NBASIS)
C   3 : ESO & EAO  (NBFAO*NBASIS)
C   4 : E1A        (N3N)
C   5 : E2A        (N3N*N3N)
C   6 : NIJ        (NTRI)
C   7 : KIJ        (NTRI)
C
C
      WRITE(3,1)
      NVIR=NBASIS-IHOMO
      NIND=IHOMO*NVIR
      NADD=N3NXX*2
C
C   READ IN AO-MO EIGENVECTORS
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
C
C   READ IN AO INTEGRAL DERIVATIVES AND FORM SM AND FM
      WRITE(3,20)
   20 FORMAT(//,2X,' MEMORY REQUIRED FOR DERMAT'/)
      IC4=IC3+NBFAO*NBASIS
      IC5=IC4+N3N
      IC6=IC5+N3N*N3N
      IC7=IC6+NBATRI
      IC8=IC7+NBFAO*NBFAO
      ICMAX=IC8+NBFAO*NBFAO
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=ICMAX
C.................EAO     E1A     E2A     SS      U       T.......
C***  CALL DERMAT(CC(IC3),CC(IC4),CC(IC5),CC(IC6),CC(IC7),CC(IC8))
C
      WRITE(3,21)
   21 FORMAT(//,2X,' MEMORY REQUIRED FOR TEST ROUTINES'/)
      IC6=IC5+N3N*N3N
      IC7=IC6+NTRI
      IC8=IC7+NTRI
      IC9=IC8+NTRI
      IA9=IC9+IC9-1
      ICMAX=IC9+MAXBF2
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................ESO     H       DC      DM      LBLI    BUFI....
C***  CALL E0CAL(CC(IC3),CC(IC6),CC(IC7),CC(IC8),IA(IA9),CC(IC9))
C
      IC6=IC5+N3N*N3N
      IC7=IC6+N3N
      IC8=IC7+N3N
      IC9=IC8+N3N
      IC10=IC9+N3N
      IC11=IC10+NTRI
      IC12=IC11+NTRI
      ICMAX=IC12+NTRI
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................EIG     D1O     D1T     D1W     E1T     SM.......
C***  CALL EADER(CC(IC1),CC(IC6),CC(IC7),CC(IC8),CC(IC9),CC(IC10),
C................HM       TM.......
C*** 1           CC(IC11),CC(IC12))
C
C   FORM REGISTER MATRIX
      IC6=IC5+N3N*N3N
      IA6=IC6+IC6-1
      IC7=IC6+NTRI
      IA7=IC7+IC7-1
C.................NIJ     KIJ.....
C***  CALL REGIST(IA(IA6),IA(IA7))
C
C   FORM DERIVATIVE FOCK MATRIX
      WRITE(3,22)
   22 FORMAT(//,2X,' MEMORY REQUIRED FOR FAMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI
      IC10=IC9+NTRI
      ICMAX=IC10+NTRI
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................HH      TT      FF.......
C***  CALL FAMAT(CC(IC8),CC(IC9),CC(IC10))
C
C   CALCULATE BA MATRIX
      WRITE(3,23)
   23 FORMAT(//,2X,' MEMORY REQUIRED FOR BAMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NBFAO*NBFAO
      IC10=IC9+NBFAO*NBFAO
      IC11=IC10+NTRI
      IC12=IC11+NTRI*N3N
      IC13=IC12+NTRI*N3N
      IA13=IC13+IC13-1
      ICMAX=IC13+MAXBF2
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................EIG     ESO     U       T       B0.......
C***  CALL BAMAT(CC(IC1),CC(IC3),CC(IC8),CC(IC9),CC(IC10),
C................DP       DM       LBLI     BUFI.....
C*** 1           CC(IC11),CC(IC12),IA(IA13),CC(IC13))
C
      WRITE(3,24)
   24 FORMAT(//,2X,' MEMORY REQUIRED FOR BFMAT'/)
      IC8=IC7+NTRI
      ICMAX=IC8+NTRI
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................HF......
C***  CALL BFMAT(CC(IC8))
C
      WRITE(3,25)
   25 FORMAT(//,2X,' MEMORY REQUIRED FOR CPHF'/)
  200 CONTINUE
      NADD=NADD/2
      MAXVC=MIN0(MAXVEC,NADD*MAXVX)
      IC8=IC7+NTRI
      IC9=IC8+NBFAO*NBFAO
      IC10=IC9+NBFAO*NBFAO
      IC11=IC10+NTRI*NADD
      IC12=IC11+NTRI*NADD
      IC13=IC12+NTRI
      IC14=IC13+NTRI
      IC15=IC14+NTRI
      IC16=IC15+NIND*MAXVC*2
      IC17=IC16+MAXVC*(MAXVC+NADD)
      IA17=IC17+IC17-1
      ICMAX=IC17+MAXBF2
      WRITE(3,26) NIND,N3NXX,NADD,MAXVC,ICMAX
   26 FORMAT(2X,' NIND  = ',I6,3X,' N3NXX = ',I6,3X,' NADD = ',I6/
     1       2X,' MAXVC = ',I6,3X,' ICMAX = ',I6/)
      IF(NADD.EQ.1) GO TO 201
      IF(ICMAX.LT.MAXCOR) GO TO 201
      GO TO 200
  201 CONTINUE
      IGMAX=MAX0(ICMAX,IGMAX)
C...............EIG     ESO     NIJ     KIJ     U       T.......
C***  CALL CPHF(CC(IC1),CC(IC3),IA(IA6),IA(IA7),CC(IC8),CC(IC9),
C...............DP       DM       B0       AA       TT.......
C*** 1          CC(IC10),CC(IC11),CC(IC12),CC(IC13),CC(IC14),
C...............BB       W        LBLI     BUFI.................
C*** 2          CC(IC15),CC(IC16),IA(IA17),CC(IC17),MAXVC,N3NXX)
C
      WRITE(3,27)
   27 FORMAT(//,2X,' MEMORY REQUIRED FOR UCMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NBFAO*NBFAO
      IC10=IC9+NBFAO*NBFAO
      IC11=IC10+NTRI*N3NXX
      IC12=IC11+NTRI*N3NXX
      IC13=IC12+NTRI
      IC14=IC13+NTRI
      IA14=IC14+IC14-1
      ICMAX=IC14+MAXBF2
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................EIG     ESO     NIJ     KIJ     U       T.......
C***  CALL UCMAT(CC(IC1),CC(IC3),IA(IA6),IA(IA7),CC(IC8),CC(IC9),
C................DP       DM       B        DEL      LBLI     BUFI.....
C*** 1           CC(IC10),CC(IC11),CC(IC12),CC(IC13),IA(IA14),CC(IC14),
C......................
C*** 2           N3NXX)
C
      WRITE(3,28)
   28 FORMAT(//,2X,' MEMORY REQUIRED FOR UXMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*N3NXX
      IC10=IC9+NTRI*N3NXX
      ICMAX=IC10+NBASIS*NBASIS
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................B       SM      U..............
C***  CALL UXMAT(CC(IC8),CC(IC9),CC(IC10),N3NXX)
C
C   CALCULATION OF SCF SECOND DERIVATIVES FOR A NON-DEGENERATE CASE
      WRITE(3,29)
   29 FORMAT(//,2X,' MEMORY REQUIRED FOR SCF2A'/)
      IC8=IC7+NTRI
      IC9=IC8+N3N*N3N
      IC10=IC9+N3N*N3N
      IC11=IC10+N3N*N3N
      IC12=IC11+NBASIS*NBASIS
      IC13=IC12+NTRI*N3N
      IC14=IC13+NTRI*N3N
      ICMAX=IC14+NTRI
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................EIG     E2A     E2M     E2P     E2W      U........
C***  CALL SCF2A(CC(IC1),CC(IC5),CC(IC8),CC(IC9),CC(IC10),CC(IC11),
C................SA       FA       BA.......
C*** 1           CC(IC12),CC(IC13),CC(IC14))
C
C   CALCULATION OF SCF SECOND DERIVATIVES FOR A DEGENERATE CASE
      WRITE(3,30)
   30 FORMAT(//,2X,' MEMORY REQUIRED FOR SCF2B'/)
      IC8=IC7+NTRI
      IC9=IC8+N3N*N3N
      IC10=IC9+N3N*N3N
      IC11=IC10+N3N*N3N
      IC12=IC11+N3N*N3N
      IC13=IC12+NTRI*N3N
      IC14=IC13+NTRI*N3N
      IC15=IC14+NTRI*N3N
      IC16=IC15+NBFAO*NBFAO
      IC17=IC16+NBFAO*NBFAO
      IA17=IC17+IC17-1
      ICMAX=IC17+MAXBF2
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................EIG     ESO     E2A     E2M     E2P     E2Q......
C***  CALL SCF2B(CC(IC1),CC(IC3),CC(IC5),CC(IC8),CC(IC9),CC(IC10),
C................E2R      SA       FA       DP       DM       U........
C*** 1           CC(IC11),CC(IC12),CC(IC13),CC(IC14),CC(IC13),CC(IC15),
C................T        LBLI     BUFI.....
C*** 2           CC(IC16),IA(IA17),CC(IC17))
C
C   CALCULATE DIPOLE MOMENT DERIVATIVES FOR A NON-DEGENERATE CASE
      WRITE(3,31)
   31 FORMAT(//,2X,' MEMORY REQUIRED FOR DIPMOA'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*3
      ICMAX=IC9+NBASIS*NBASIS
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C.................DIP     UA......
C***  CALL DIPMOA(CC(IC8),CC(IC9))
C
C   CALCULATE DIPOLE MOMENT DERIVATIVES FOR A DEGENERATE CASE
      WRITE(3,32)
   32 FORMAT(//,2X,' MEMORY REQUIRED FOR DIPMOB'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*3
      IC10=IC9+NBASIS*NBASIS*3
      ICMAX=IC10+NTRI*3
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C.................DIP     UA      SA.......
C***  CALL DIPMOB(CC(IC8),CC(IC9),CC(IC10))
C
C   FIND DERIVATIVE ORBITAL ENERGIES AND SAVE THEM IN TAPE25
      WRITE(3,33)
   33 FORMAT(//,2X,' MEMORY REQUIRED FOR ORB1ST'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI
      ICMAX=IC9+NBASIS*N3N
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C.................B0      CC............
C***  CALL ORB1ST(CC(IC8),CC(IC9),N3N,1)
C.................B0      CC..........
C***  CALL ORB1ST(CC(IC8),CC(IC9),3,2)
C
      WRITE(3,34)
   34 FORMAT(//,2X,' MEMORY REQUIRED FOR POLAR'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*3
      ICMAX=IC9+NBASIS*NBASIS
      WRITE(3,2) ICMAX,MAXCOR
      IGMAX=MAX0(ICMAX,IGMAX)
C................HF      UF......
C***  CALL POLAR(CC(IC8),CC(IC9))
C
      IF(IGMAX.LT.MAXCOR) GO TO 400
C
C   REQUIRED MEMORY EXCEEDS MAXCOR-----STOP !!!
      WRITE(6,3) IGMAX,MAXCOR
      WRITE(3,3) IGMAX,MAXCOR
      STOP
C
  400 CONTINUE
      WRITE(3,4) NADD,MAXVC,IGMAX,MAXCOR
      WRITE(6,4) NADD,MAXVC,IGMAX,MAXCOR
      WRITE(3,5)
C
      RETURN
      END
cets The following is called by a C program which handles dynamic
cets allocation of memory.
      subroutine fentry(cc,ia,maxcor)
cets  PROGRAM CPCLAO
C   COUPLED PERTURBED HARTREE-FOCK PROGRAM FOR THE CLOSED SHELL SYSTEM
C
C   THIS IS FOR LARGE CASES, I.E.  MANY ATOMS
C   THIS IS THE SAME AS CPCLAOB
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         search:  c3-24-88  *
C*  DATE:  MARCH  24,  1988                                           *
C*  REASON: DECREASE CORE TO RUN IN 7MB ON 9370                       *
C**********************************************************************
C LAST UPDATED ON SEPT 23, 1987 by Curtis Janssen                     *
C   decrease CC(MAXCOR) TO 1600000                                    *
C**********************************************************************
C LAST UPDATED ON FEB 10, 1987 BY RICHARD REMINGTON                   *
C   INCREASE MAXVEC,MAXVX FROM 500,12 TO 600,20 AND                   *
C   INCREASE CC(MAXCOR) TO 1750000 AND ZERO OUT CC                    *
C**********************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
c3-24-88  DIMENSION CC(1600000),IA(1)
cets  integer corsz
cets  parameter (corsz=maxcor)
cets  DIMENSION CC(corsz),IA(1)
      dimension cc(maxcor),ia(intowp(maxcor))
      CHARACTER*80 ALABEL
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/CALIF/LPARA(1024),APARA(1024)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/MFSEC/MASTER,NSECT
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SIZES/MAXVEC,MAXVX
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/TOLER/ICONV
      COMMON/WORKS/JTAPE1
      COMMON/CI101/IHOMO,ILUMO
      COMMON/CI102/NIND,NDEP
      COMMON/CI103/NDEG
cets  EQUIVALENCE (CC,IA)
      DATA ALABEL /  ' SCF FIRST DERIVATIVE BROUGHT YOU BY Y & Y CO.
     1EST. DECEMBER 1981        '  /
    1 FORMAT(//,2X,' COUPLED PERTURBED HARTREE-FOCK PROGRAM FOR CLOSED S
     1HELL SCF IN AO BASIS'/)
    2 FORMAT(8I5)
    3 FORMAT(2X,10I5)
    4 FORMAT(//,2X,' PARAMETERS'/
     * 2X,' NBASIS = ',I8/
     * 2X,' NTRI   = ',I8/
     * 2X,' NBFAO  = ',I8/
     * 2X,' NBATRI = ',I8/
     * 2X,' NATOMS = ',I8/
     * 2X,' N3N    = ',I8/
     * 2X,' N3NP3  = ',I8/
     * 2X,' N3NX3  = ',I8/
     * 2X,' N3NXX  = ',I8/
     * 2X,' IHOMO  = ',I8/
     * 2X,' ILUMO  = ',I8/
     * 2X,' NTYPES = ',I8/
     * 2X,' ITEST  = ',I8/
     * 2X,' IORB   = ',I8/
     * 2X,' IPOL   = ',I8/
     * 2X,' ICONV  = ',I8/
     * 2X,' ICORE  = ',I8/
     * 2X,' IPRNT  = ',I8)
    5 FORMAT(//,2X,' SCF EIGENVECTOR (AO BASIS) MATRIX'/)
    6 FORMAT(//,2X,' SCF EIGENVECTOR (SO BASIS) MATRIX'/)
    7 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
    8 FORMAT(//,2X,' REQUIRED MEMORY EXCEEDS MAXCOR'/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
C
c     CALL TSTART(6)
c     CALL NOUNFL
      call drum
      CALL INITMF(1)
C
C::::::::::::::::::::::::::::::::::::::::
C:::DEFINE MACHINE-DEPENDENT CONSTANTS:::
C::::::::::::::::::::::::::::::::::::::::
c3-24-88  MAXCOR=1600000
cets  MAXCOR=corsz
      MAXVEC=    600
      MAXVX =     20
C
C     ZERO OUT CORE WITH AN INITIALIZATION OF CC TO "0"
C
      MAXBYT = MAXCOR * 8
cets  CALL VXINIT(CC,0,MAXBYT)
      call zero(cc,maxcor)
cets added for apollo conversion
      open (unit=15,file='file15',status='unknown')
      open (unit=17,file='file17',status='unknown')
      open (unit=25,file='file25',status='unknown')
C
C
C   ITAP11 = GEOMETRY AND SCF FIRST DERIVATIVE
C   ITAP15 = SCF SECOND DERIVATIVE
C   ITAP25 = ORBITAL ENERGY DERIVATIVES
C   ITAP36 = TWO ELECTRON SO INTEGRALS
C   ITAP42 = AO DERIVATIVE INTEGRALS
C   ITAP43 = DERIVATIVE DIPOLE MOMENTS
C   ITAP44 = FIRST DERIVATIVES AND U'S
C   JTAPE1 = WORKING TAPE FOR CPHF PROCEDURE
      ITAPE3=3
      INPUT=5
      ITAPE6=6
      ITAP11=11
      ITAP15=15
      ITAP17=17
      ITAP25=25
      ITAP36=36
      ITAP42=42
      ITAP43=43
      ITAP44=44
      JTAPE1=91
      call tstart(itape6)
C
C   LOCATION OF MATRICES IN JTAPE1
C   (1) SA (N3NXX*NTRIL)
C   (2) HA (N3NXX*NTRIL)
C   (3) TA AND FA (N3NXX*NTRIL)
C   (4) BA (N3NXX*NTRIL)
C   (5) UA (N3NXX*NBASQL)
C
      CALL LOCATE(INPUT,'# CPHFAO #',IERR)
C
      IOFF(1)=0
      DO 101 I=1,255
  101 IOFF(I+1)=IOFF(I)+I
C
      WRITE(6,1)
      WRITE(3,1)
C
C   READIN PARAMETERS
C   ICORE IS A DUMMY PARAMETER TO ADJUST TO CPGRAO INPUT
      READ(5,2) ITEST,IORB,IPOL,ICONV,ICORE,IPRNT
C
C   READIN SCF INFORMATION
      NBASIS=LPARA(3)
      NTRI=LPARA(4)
      NTRI2=intowp(ntri)
      NATOMS=LPARA(10)
      NBFAO=LPARA(11)
      NBATRI=IOFF(NBFAO+1)
      NBATR2=intowp(nbatri)
      NBASQ=intowp(NBASIS*NBASIS)
      IHOMO=LPARA(7)
      ILUMO=IHOMO+1
      N3N=LPARA(17)
      N3NP3=N3N+3
      N3NX3=N3N*3
      N3NXX=N3NP3
      IF(IPOL.EQ.0) N3NXX=N3N
      NTYPES=LPARA(18)
      NTRIL=((NTRI2-1)/NSECT+1)
      NBASQL=((NBASQ-1)/NSECT+1)
      N3TRL=N3NXX*NTRIL
      DO 102 I=1,N3NXX
      ISA(I)=(I-1)*NTRIL+1
      IHA(I)=(I-1)*NTRIL+N3TRL+1
      IFA(I)=(I-1)*NTRIL+N3TRL+N3TRL+1
      IBA(I)=(I-1)*NTRIL+N3TRL+N3TRL+N3TRL+1
      IUA(I)=(I-1)*NBASQL+N3TRL+N3TRL+N3TRL+N3TRL+1
      WRITE(3,3) I,ISA(I),IHA(I),IFA(I),IBA(I),IUA(I)
  102 CONTINUE
      ENUC=APARA(1)
      ESCF=APARA(2)
      WRITE(6,4) NBASIS,NTRI,NBFAO,NBATRI,NATOMS,N3N,N3NP3,N3NX3,
     1           N3NXX,IHOMO,ILUMO,NTYPES,ITEST,IORB,IPOL,
     2           ICONV,ICORE,IPRNT
C
C   CHECK SIZE OF THE CORE MEMORY
      CALL CORSIZ(MAXCOR,N3NXX,NADD,MAXVC)
C
C   READ IN AO-MO EIGENVECTORS
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
      CALL MREAD(CC(IC1),17)
      CALL MREAD(CC(IC2),18)
      CALL MREAD(CC(IC3),20)
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,5)
      CALL EIGOUT(CC(IC3),CC(IC1),CC(IC2),NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C**************************************
C***PREPARATION FOR FIRST ORDER CPHF***
C**************************************
C
C   READ IN AO INTEGRAL DERIVATIVES AND FORM SM AND FM
  301 WRITE(3,20)
   20 FORMAT(//,2X,' NOW YOU ARE IN DERMAT'/)
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
      IC4=IC3+NBFAO*NBASIS
      IC5=IC4+N3N
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
      IC6=IC5+N3N*N3N
      IC7=IC6+NBATRI
      IC8=IC7+NBFAO*NBFAO
      ICMAX=IC8+NBFAO*NBFAO
      WRITE(3,7) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................EAO     E1A     E2A     SS      U       T.......
      CALL DERMAT(CC(IC3),CC(IC4),CC(IC5),CC(IC6),CC(IC7),CC(IC8))
C
C   READ IN SO-MO EIGENVECTORS
      CALL MREAD(CC(IC3),19)
      IF(IPRNT.LE.2) GO TO 303
      WRITE(6,6)
      CALL EIGOUT(CC(IC3),CC(IC1),CC(IC2),NBFAO,NBASIS,NBFAO,NBASIS,6)
C
  303 IF(ITEST.EQ.0) GO TO 304
      WRITE(3,21)
   21 FORMAT(//,2X,' NOW YOU ARE IN TEST ROUTINES'/)
      IC6=IC5+N3N*N3N
      IC7=IC6+NTRI
      IC8=IC7+NTRI
      IC9=IC8+NTRI
      IA9=IC9+IC9-1
      ICMAX=IC9+MAXBF2
      WRITE(3,7) ICMAX,MAXCOR
C................ESO     H       DC      DM      LBLI    BUFI....
      CALL E0CAL(CC(IC3),CC(IC6),CC(IC7),CC(IC8),IA(IA9),CC(IC9))
C
      IC6=IC5+N3N*N3N
      IC7=IC6+N3N
      IC8=IC7+N3N
      IC9=IC8+N3N
      IC10=IC9+N3N
      IC11=IC10+NTRI
      IC12=IC11+NTRI
      ICMAX=IC12+NTRI
      WRITE(3,7) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     D1O     D1T     D1W     E1T     SM.......
      CALL EADER(CC(IC1),CC(IC6),CC(IC7),CC(IC8),CC(IC9),CC(IC10),
C................HM       TM.......
     1           CC(IC11),CC(IC12))
C
C   FORM REGISTER MATRIX
  304 CONTINUE
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
      IC6=IC5+N3N*N3N
      IA6=IC6+IC6-1
      IC7=IC6+NTRI
      IA7=IC7+IC7-1
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C.................NIJ     KIJ.....
      CALL REGIST(IA(IA6),IA(IA7))
C
C   FORM DERIVATIVE FOCK MATRIX
      WRITE(3,22)
   22 FORMAT(//,2X,' NOW YOU ARE IN FAMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI
      IC10=IC9+NTRI
      ICMAX=IC10+NTRI
      WRITE(3,7) ICMAX,MAXCOR
C................HH      TT      FF.......
      CALL FAMAT(CC(IC8),CC(IC9),CC(IC10))
C
C   CALCULATE BA MATRIX
      WRITE(3,23)
   23 FORMAT(//,2X,' NOW YOU ARE IN BAMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NBFAO*NBFAO
      IC10=IC9+NBFAO*NBFAO
      IC11=IC10+NTRI
      IC12=IC11+NTRI*N3N
      IC13=IC12+NTRI*N3N
      IA13=IC13+IC13-1
      ICMAX=IC13+MAXBF2
      WRITE(3,7) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     ESO     U       T       B0.......
      CALL BAMAT(CC(IC1),CC(IC3),CC(IC8),CC(IC9),CC(IC10),
C................DP       DM       LBLI     BUFI.....
     1           CC(IC11),CC(IC12),IA(IA13),CC(IC13))
C     IF(IPRNT.LE.2) GO TO 305
C     CALL WRBMAT(CC(IC12))
C
  305 CONTINUE
      IF(IPOL.EQ.0) GO TO 306
      WRITE(3,24)
   24 FORMAT(//,2X,' NOW YOU ARE IN BFMAT'/)
      IC8=IC7+NTRI
      ICMAX=IC8+NTRI
      WRITE(3,7) ICMAX,MAXCOR
C................HF......
      CALL BFMAT(CC(IC8))
C*    CALL WRBMAT(CC(IC8))
C
C********************************
C***FIRST ORDER CPHF PROCEDURE***
C********************************
C
  306 CONTINUE
      WRITE(3,25)
   25 FORMAT(//,2X,' NOW YOU ARE IN CPHF '/)
      IC8=IC7+NTRI
      IC9=IC8+NBFAO*NBFAO
      IC10=IC9+NBFAO*NBFAO
      IC11=IC10+NTRI*NADD
      IC12=IC11+NTRI*NADD
      IC13=IC12+NTRI
      IC14=IC13+NTRI
      IC15=IC14+NTRI
      IC16=IC15+NIND*MAXVC*2
      IC17=IC16+MAXVC*(MAXVC+NADD)
      IA17=IC17+IC17-1
      ICMAX=IC17+MAXBF2
      WRITE(3,26) NIND,MAXVC,ICMAX
   26 FORMAT(2X,' NIND = ',I6,3X,' MAXVC = ',I6,3X,' ICMAX = ',I6/)
      IF(ICMAX.GT.MAXCOR) GO TO 399
C...............EIG     ESO     NIJ     KIJ     U       T.......
      CALL CPHF(CC(IC1),CC(IC3),IA(IA6),IA(IA7),CC(IC8),CC(IC9),
C...............DP       DM       B0       AA       TT.......
     1          CC(IC10),CC(IC11),CC(IC12),CC(IC13),CC(IC14),
C...............BB       W        LBLI     BUFI......................
     2          CC(IC15),CC(IC16),IA(IA17),CC(IC17),MAXVC,NADD,N3NXX)
C     IF(IPRNT.LE.3) GO TO 307
C     WRITE(6,*) ' AFTER CPHF'
C*    CALL WRBMAT(CC(IC16))
C
  307 WRITE(3,27)
   27 FORMAT(//,2X,' NOW YOU ARE IN UCMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NBFAO*NBFAO
      IC10=IC9+NBFAO*NBFAO
      IC11=IC10+NTRI*N3NXX
      IC12=IC11+NTRI*N3NXX
      IC13=IC12+NTRI
      IC14=IC13+NTRI
      IA14=IC14+IC14-1
      ICMAX=IC14+MAXBF2
      WRITE(3,7) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     ESO     NIJ     KIJ     U       T.......
      CALL UCMAT(CC(IC1),CC(IC3),IA(IA6),IA(IA7),CC(IC8),CC(IC9),
C................DP       DM       B        DEL      LBLI     BUFI.....
     1           CC(IC10),CC(IC11),CC(IC12),CC(IC13),IA(IA14),CC(IC14),
C......................
     2           N3NXX)
C*    IF(IPRNT.LE.3) GO TO 308
C*    CALL WRBMAT(CC(IC12))
C
  308 WRITE(3,28)
   28 FORMAT(//,2X,' NOW YOU ARE IN UXMAT'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*N3NXX
      IC10=IC9+NTRI*N3NXX
      ICMAX=IC10+NBASIS*NBASIS
      WRITE(3,7) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................B       SM      U..............
      CALL UXMAT(CC(IC8),CC(IC9),CC(IC10),N3NXX)
C*    CALL WRBMAT(CC(IC10))
C
C   CALCULATION OF SCF SECOND DERIVATIVES FOR A NON-DEGENERATE CASE
      IF(NDEG.NE.0) GO TO 309
      WRITE(3,29)
   29 FORMAT(//,2X,' NOW YOU ARE IN SCF2A'/)
      IC8=IC7+NTRI
      IC9=IC8+N3N*N3N
      IC10=IC9+N3N*N3N
      IC11=IC10+N3N*N3N
      IC12=IC11+NBASIS*NBASIS
      IC13=IC12+NTRI*N3N
      IC14=IC13+NTRI*N3N
      ICMAX=IC14+NTRI
      WRITE(3,7) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     E2A     E2M     E2P     E2W      U........
      CALL SCF2A(CC(IC1),CC(IC5),CC(IC8),CC(IC9),CC(IC10),CC(IC11),
C................SA       FA       BA.......
     1           CC(IC12),CC(IC13),CC(IC14))
      GO TO 310
C
C   CALCULATION OF SCF SECOND DERIVATIVES FOR A DEGENERATE CASE
  309 CONTINUE
      WRITE(3,30)
   30 FORMAT(//,2X,' NOW YOU ARE IN SCF2B'/)
      IC8=IC7+NTRI
      IC9=IC8+N3N*N3N
      IC10=IC9+N3N*N3N
      IC11=IC10+N3N*N3N
      IC12=IC11+N3N*N3N
      IC13=IC12+NTRI*N3N
      IC14=IC13+NTRI*N3N
      IC15=IC14+NTRI*N3N
      IC16=IC15+NBFAO*NBFAO
      IC17=IC16+NBFAO*NBFAO
      IA17=IC17+IC17-1
      ICMAX=IC17+MAXBF2
      WRITE(3,7) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     ESO     E2A     E2M     E2P     E2Q......
      CALL SCF2B(CC(IC1),CC(IC3),CC(IC5),CC(IC8),CC(IC9),CC(IC10),
C................E2R      SA       FA       DP       DM       U........
     1           CC(IC11),CC(IC12),CC(IC13),CC(IC14),CC(IC13),CC(IC15),
C................T        LBLI     BUFI.....
     2           CC(IC16),IA(IA17),CC(IC17))
C
C   CALCULATE DIPOLE MOMENT DERIVATIVES FOR A NON-DEGENERATE CASE
  310 CONTINUE
      IF(IPOL.EQ.0) GO TO 312
      IF(NDEG.NE.0) GO TO 311
      WRITE(3,31)
   31 FORMAT(//,2X,' NOW YOU ARE IN DIPMOA'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*3
      ICMAX=IC9+NBASIS*NBASIS
      WRITE(3,7) ICMAX,MAXCOR
C.................DIP     UA......
      CALL DIPMOA(CC(IC8),CC(IC9))
      GO TO 312
C
C   CALCULATE DIPOLE MOMENT DERIVATIVES FOR A DEGENERATE CASE
  311 CONTINUE
      WRITE(3,32)
   32 FORMAT(//,2X,' NOW YOU ARE IN DIPMOB'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*3
      IC10=IC9+NBASIS*NBASIS*3
      ICMAX=IC10+NTRI*3
      WRITE(3,7) ICMAX,MAXCOR
C.................DIP     UA      SA.......
      CALL DIPMOB(CC(IC8),CC(IC9),CC(IC10))
C
C   FIND DERIVATIVE ORBITAL ENERGIES AND SAVE THEM IN TAPE25
  312 CONTINUE
      IF(IORB.EQ.0) GO TO 313
      WRITE(3,33)
   33 FORMAT(//,2X,' NOW YOU ARE IN ORB1ST'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI
      ICMAX=IC9+NBASIS*N3N
      WRITE(3,7) ICMAX,MAXCOR
C.................B0      CC............
      CALL ORB1ST(CC(IC8),CC(IC9),N3N,1)
      IF(IPOL.EQ.0) GO TO 400
C.................B0      CC..........
      CALL ORB1ST(CC(IC8),CC(IC9),3,2)
C
  313 CONTINUE
      IF(IPOL.EQ.0) GO TO 400
      WRITE(3,34)
   34 FORMAT(//,2X,' NOW YOU ARE IN POLAR'/)
      IC8=IC7+NTRI
      IC9=IC8+NTRI*3
      ICMAX=IC9+NBASIS*NBASIS
      WRITE(3,7) ICMAX,MAXCOR
C................HF      UF......
      CALL POLAR(CC(IC8),CC(IC9))
      GO TO 400
C
  399 WRITE(6,8) ICMAX,MAXCOR
  400 CONTINUE
C
      CALL RCLOSE(ITAP42,3)
      CALL RCLOSE(ITAP43,3)
      CALL RCLOSE(ITAP44,3)
      CALL RCLOSE(JTAPE1,3)
c     CALL TSTOP(6)
      call tstop(itape6)
C
      STOP
      END
      SUBROUTINE CPHF(EIG,ESO,NIJ,KIJ,U,T,DP,DM,B0,AA,TT,BB,W,LBLI,BUFI,
     1                NMAX,NADD,N3NXX)
      IMPLICIT REAL*8 (A-H,O-Z)
c     REAL*16 DLIM,DETERM
      real*8 dlim,determ
      DIMENSION EIG(NBASIS),NIJ(NTRI,2),KIJ(NTRI,2)
      DIMENSION ESO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION B0(NTRI),AA(NTRI),TT(NTRI)
      DIMENSION BB(NIND,NMAX*2),DP(NTRI,NADD),DM(NTRI,NADD)
      DIMENSION W(NMAX,NMAX+NADD)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/CALIF/NDUM(1024),BNORM(1024)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/TOLER/ICONV
      COMMON/WORKS/JTAPE1
      COMMON/CI102/NIND,NDEP
      DATA ZERO,ONE,TEN / 0.0D+00 , 1.0D+00 , 10.0D+00 /
    1 FORMAT(//,2X,' IGROUP = ',I5,5X,' IFIRST = ',I5,5X,
     1             ' NABC   = ',I5/)
    2 FORMAT(//,2X,' BB MATRIX'/)
    3 FORMAT(//,2X,' SCALED BB MATRIX'/)
    4 FORMAT(//,2X,' ORTHONORMALIZED BB MATRIX'/)
    5 FORMAT(//,2X,' ORTHONORMALITY OF BB MATRIX'/)
    6 FORMAT(//,2X,' ITERATION NO. = ',I5/)
    7 FORMAT(//,2X,' (1-A)*B MATRIX'/)
    8 FORMAT(//,2X,' KVEC = ',I5,' K = ',I5,' TT = ',(10F10.5))
    9 FORMAT(/,2X,' NITER  = ',I5,5X,' NVEC   = ',I5,5X,' NADDV  = ',
     1       I5/)
   10 FORMAT(//,2X,' NORM OF ADDED VECTOR',(5F15.8))
   11 FORMAT(//,2X,' BB MATRIX'/)
   12 FORMAT(/,2X,' END OF ITERATION    NVTOT  = ',I5/)
   13 FORMAT(//,2X,'***NVTOT EXCEEDS NMAX***',5X,' NMAX = ',I5/)
   14 FORMAT(//,2X,' EXPANDED VECTORS BB AND A*BB MATRICES'/)
   15 FORMAT(//,2X,' W MATRIX'/)
   16 FORMAT(//,2X,' SCALED W MATRIX'/)
   17 FORMAT(//,2X,'***SIMULTANEOUS EQUATION CANNOT BE SOLVED***',
     1 5X,' DETERM = ',e20.10/)
   18 FORMAT(/,2X,' LINEAR EQUATION HAS BEEN SOLVED',
     1 5X,' DETERM = ',e20.10/)
   19 FORMAT(//,2X,' SOLUTION MATRIX OF SCALED W MATRIX'/)
   20 FORMAT(//,2X,' SOLUTION MATRIX'/)
   21 FORMAT(//,2X,' B0 MATRIX WITH INDEP. OF UA, IABC = ',I5/)
C
C   CALL BACK B0 MATRIX
C
      CALL RFILE(JTAPE1)
      CALL SREW(ITAP44)
      NIND2=intowp(NIND)
      CRIT=1.0D-10
      IF(ICONV.NE.0) CRIT=ONE/(TEN**ICONV)
      DLIM=1.0d-76
C
C   FORM A SCALING ARRAY
      DO 101 II=1,NIND
      I=NIJ(II,1)
      J=NIJ(II,2)
      EIGIJ=EIG(I)-EIG(J)
      if (aval.eq.0.0) write (0,*) 'zero aval ',i,j
      AVAL=DABS(EIGIJ)
      AA(II)=ONE/DSQRT(AVAL)
  101 CONTINUE
C
C   START GROUPING THE B VECTORS
      IGROUP=0
      ILAST=0
  500 CONTINUE
      IGROUP=IGROUP+1
      IFIRST=ILAST+1
      ILAST=IFIRST+NADD-1
      IF(ILAST.GT.N3NXX) ILAST=N3NXX
      NABC=ILAST-IFIRST+1
      WRITE(6,1) IGROUP,IFIRST,NABC
      CALL SREW(JTAPE1)
C
      DO 103 IABC=1,NABC
      III=IABC+IFIRST-1
      IB=IBA(III)
      CALL RREAD(ITAP44,B0,NTRI2,IB)
      DO 102 II=1,NIND
      I=NIJ(II,1)
      J=NIJ(II,2)
      IJ=IOFF(I)+J
      BB(II,IABC)=B0(IJ)
  102 CONTINUE
  103 CONTINUE
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,2)
      CALL MATOUT(BB,NIND,NABC,NIND,NABC,6)
C
C   SCALE BB MATRIX
  301 CONTINUE
      DO 105 II=1,NIND
      DO 104 IABC=1,NABC
  104 BB(II,IABC)=BB(II,IABC)*AA(II)
  105 CONTINUE
      IF(IPRNT.LE.3) GO TO 302
      WRITE(6,3)
      CALL MATOUT(BB,NIND,NABC,NIND,NABC,6)
C
C   ORTHONORMALIZE B0 MATRIX
C
  302 CONTINUE
      CALL ORTHOG(BB,BB(1,NABC+1),NIND,NABC,NIND,NDUM,NABC,NVEC)
      IF(IPRNT.LE.3) GO TO 303
      WRITE(6,4)
      CALL MATOUT(BB,NIND,NVEC,NIND,NVEC,6)
  303 DO 106 IABC=1,NVEC
  106 BNORM(IABC)=ONE
C
C   CHECK ORTHONORMALITY
      IF(IPRNT.LE.3) GO TO 304
      DO 108 I=1,NVEC
      DO 108 J=1,NVEC
      VALU=ZERO
      DO 107 K=1,NIND
  107 VALU=VALU+BB(K,I)*BB(K,J)
      W(I,J)=VALU
  108 CONTINUE
      WRITE(6,5)
      CALL MATOUT(W,NMAX,NMAX+NABC,NVEC,NVEC,6)
C
  304 NPVEC=0
      NITER=0
C:::::::::::::::::::::
C:::START ITERATION:::
C:::::::::::::::::::::
  200 NITER=NITER+1
C     WRITE(6,6) NITER
      WRITE(3,6) NITER
C
      DO 111 II=1,NIND
      DO 110 IABC=1,NVEC
  110 BB(II,NPVEC+IABC)=BB(II,NPVEC+IABC)*AA(II)
  111 CONTINUE
C
C   FORM A*B MATRIX
      CALL FORMAB(EIG,ESO,U,T,NIJ,BB(1,NPVEC+1),DP,DM,
     1            BB(1,NPVEC+NVEC+1),LBLI,BUFI,NIND,NVEC)
C
      DO 113 II=1,NIND
      DO 112 IABC=1,NVEC
      BB(II,NPVEC+IABC)=BB(II,NPVEC+IABC)/AA(II)
      BB(II,NPVEC+NVEC+IABC)=BB(II,NPVEC+NVEC+IABC)*AA(II)
  112 CONTINUE
  113 CONTINUE
C
C   STORE A*B MATRIX
      DO 115 IABC=NPVEC+NVEC+1,NPVEC+NVEC*2
  115 CALL SWRIT(JTAPE1,BB(1,IABC),NIND2)
C
C   FORM (1-A)*B
      DO 117 IABC=NPVEC+1,NPVEC+NVEC
      DO 116 II=1,NIND
  116 BB(II,NVEC+IABC)=-BB(II,IABC)-BB(II,NVEC+IABC)
  117 CONTINUE
      IF(IPRNT.LE.3) GO TO 305
      WRITE(6,7)
      CALL MATOUT(BB(1,NPVEC+NVEC+1),NIND,NVEC,NIND,NVEC,6)
C
C   FORM ADDITIONAL EXPANSION VECTORS
  305 NADDV=0
      K=NPVEC+NVEC
      DO 130 IABC=NPVEC+NVEC+1,NPVEC+NVEC*2
C
      DO 121 II=1,NIND
  121 TT(II)=BB(II,IABC)
      DO 124 L=1,K
      CALL NORM(XBB,BB(1,L),BB(1,IABC),NIND)
      FAC=XBB/BNORM(L)
      DO 123 II=1,NIND
  123 TT(II)=TT(II)-BB(II,L)*FAC
  124 CONTINUE
      IF(IPRNT.LE.3) GO TO 306
      WRITE(6,8) IABC,K,(TT(I),I=1,NIND)
  306 CONTINUE
      CALL NORM(XTT,TT,TT,NIND)
      IF(DABS(XTT).LT.CRIT) GO TO 130
      NADDV=NADDV+1
      K=K+1
      BNORM(K)=XTT
      DO 126 II=1,NIND
  126 BB(II,K)=-TT(II)
C
  130 CONTINUE
C
      WRITE(6,9) NITER,NVEC,NADDV
      WRITE(3,9) NITER,NVEC,NADDV
      NPVEC=NPVEC+NVEC
      NVEC=NADDV
      IF(NADDV.EQ.0) GO TO 310
      IF(IPRNT.LE.3) GO TO 307
      IST=NPVEC+1
      IED=NPVEC+NVEC
      WRITE(6,10) (BNORM(I),I=IST,IED)
      WRITE(6,11)
      CALL MATOUT(BB(1,NPVEC+1),NIND,NVEC,NIND,NVEC,6)
  307 GO TO 200
C
  310 NVTOT=NPVEC
      WRITE(6,12) NVTOT
      WRITE(3,12) NVTOT
      IF(NVTOT.LE.NMAX) GO TO 400
      WRITE(6,13) NMAX
      STOP
C
C   CALL BACK A*B MATRICES
  400 CONTINUE
      CALL SREW(JTAPE1)
      DO 131 IABC=NVTOT+1,NVTOT*2
  131 CALL SREAD(JTAPE1,BB(1,IABC),NIND2)
      IF(IPRNT.LE.3) GO TO 311
      WRITE(6,14)
      CALL MATOUT(BB,NIND,NVTOT*2,NIND,NVTOT*2,6)
C
  311 CONTINUE
      DO 133 I=1,NVTOT
      DO 133 J=1,NVTOT
      SUM=ZERO
      DO 132 II=1,NIND
  132 SUM=SUM-BB(II,I)*BB(II,NVTOT+J)
      W(I,J)=SUM
  133 CONTINUE
C
C   READ BACK ORIGINAL B0 MATRICES
      CALL SREW(ITAP44)
      DO 135 IABC=1,NABC
      III=IABC+IFIRST-1
      IB=IBA(III)
      CALL RREAD(ITAP44,B0,NTRI2,IB)
      DO 134 II=1,NIND
      I=NIJ(II,1)
      J=NIJ(II,2)
      IJ=IOFF(I)+J
      BB(II,NVTOT+IABC)=B0(IJ)*AA(II)
  134 CONTINUE
  135 CONTINUE
      IF(IPRNT.LE.3) GO TO 312
      WRITE(6,3)
      CALL MATOUT(BB(1,NVTOT+1),NIND,NABC,NIND,NABC,6)
C
C   SET B0*B ON W
  312 CONTINUE
      DO 137 I=1,NVTOT
      DO 137 J=1,NABC
      SUM=ZERO
      DO 136 II=1,NIND
  136 SUM=SUM+BB(II,I)*BB(II,NVTOT+J)
      W(I,NVTOT+J)=SUM
  137 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 313
      WRITE(6,15)
      CALL MATOUT(W,NMAX,NMAX+NABC,NVTOT,NVTOT+NABC,6)
  313 CONTINUE
      DO 138 I=1,NVTOT
      AVAL=ONE/DSQRT(BNORM(I))
      DO 138 J=1,NVTOT
      BVAL=ONE/DSQRT(BNORM(J))
      W(I,J)=W(I,J)*AVAL*BVAL
  138 CONTINUE
      DO 139 I=1,NVTOT
      AVAL=ONE/DSQRT(BNORM(I))
      DO 139 J=1,NABC
      W(I,NVTOT+J)=W(I,NVTOT+J)*AVAL
  139 CONTINUE
      IF(IPRNT.LE.3) GO TO 315
      WRITE(6,16)
      CALL MATOUT(W,NMAX,NMAX+NABC,NVTOT,NVTOT+NABC,6)
C
C   SOLVE SMALL SIMULTANEOUS EQUATION
  315 CONTINUE
      CALL FLINQ(W,NMAX,NVTOT,NABC,DETERM)
      IF(dABS(DETERM).GT.DLIM) GO TO 320
C
C   SIMULTANEOUS EQUATION CANNOT BE SOLVED---STOP!!!
      WRITE(6,17) DETERM
      STOP
C
C::::::::::::::::::::::::::::::::
C:::LINEAR EQUATION WAS SOLVED:::
C::::::::::::::::::::::::::::::::
  320 WRITE(6,18) DETERM
      IF(IPRNT.LE.2) GO TO 322
      WRITE(6,19)
      CALL MATOUT(W(1,NVTOT+1),NMAX,NMAX+NABC,NVTOT,NABC,6)
  322 CONTINUE
      DO 151 I=1,NVTOT
      AVAL=ONE/DSQRT(BNORM(I))
      DO 151 J=1,NABC
      W(I,NVTOT+J)=W(I,NVTOT+J)*AVAL
  151 CONTINUE
      IF(IPRNT.LE.3) GO TO 323
      WRITE(6,20)
      CALL MATOUT(W(1,NVTOT+1),NMAX,NMAX+NABC,NVTOT,NABC,6)
C
C   FORM INDEPENDENT ELEMENTS OF UA MATRIX
  323 CONTINUE
      DO 153 II=1,NIND
      DO 153 IABC=1,NABC
      SUM=ZERO
      DO 152 I=1,NVTOT
  152 SUM=SUM-BB(II,I)*W(I,NVTOT+IABC)
      BB(II,NVTOT+IABC)=SUM*AA(II)
  153 CONTINUE
C
      CALL SREW(ITAP44)
      DO 155 IABC=1,NABC
      III=IABC+IFIRST-1
      IB=IBA(III)
      CALL RREAD(ITAP44,B0,NTRI2,IB)
      DO 154 II=1,NIND
      I=NIJ(II,1)
      J=NIJ(II,2)
      IJ=IOFF(I)+J
      B0(IJ)=BB(II,NVTOT+IABC)
  154 CONTINUE
      CALL RWRIT(ITAP44,B0,NTRI2,IB)
      IF(IPRNT.LE.3) GO TO 155
      WRITE(6,21) IABC
      CALL PRINT(B0,NTRI,NBASIS,6)
  155 CONTINUE
C
      IF(ILAST.GE.N3NXX) GO TO 501
      GO TO 500
C
  501 CONTINUE
      CALL SREW(ITAP44)
      CALL SREW(JTAPE1)
      RETURN
      END
      SUBROUTINE DAMAT(ESO,DC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ESO(NBFAO,NBASIS),DC(NTRI)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' DC (SO BASIS) MATRIX'/)
C
C   FORM DENSITY MATRIX
C
      IJ=0
      DO 102 I=1,NBASIS
      DO 102 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 101 K=1,IHOMO
  101 VALU=VALU+ESO(I,K)*ESO(J,K)
      DC(IJ)=VALU
  102 CONTINUE
C
      IF(IPRNT.LE.5) GO TO 201
      WRITE(6,1)
      CALL PRINT(DC,NTRI,NBASIS,6)
C
  201 CONTINUE
      RETURN
      END
      SUBROUTINE DBMAT(ESO,DP,SM,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ESO(NBFAO,NBASIS),DP(NTRI,NABC),SM(NTRI,NABC)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' DP MATRIX'/)
C
C   FORM DENSITY LIKE MATRICES
C
      DO 102 IABC=1,NABC
      DO 101 I=1,NTRI
      DP(I,IABC)=ZERO
  101 CONTINUE
  102 CONTINUE
C
      IJ=0
      DO 107 I=1,NBASIS
      DO 107 J=1,I
      IJ=IJ+1
      DO 106 K=1,IHOMO
      DO 106 L=1,IHOMO
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      FAC=ESO(I,K)*ESO(J,L)
      DO 105 IABC=1,NABC
      DP(IJ,IABC)=DP(IJ,IABC)-SM(KL,IABC)*FAC
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
C
      IF(IPRNT.LE.5) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
C
  201 CONTINUE
      RETURN
      END
      SUBROUTINE DCMAT(ESO,NIJ,DP,BB,NPAIR,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ESO(NBFAO,NBASIS),NIJ(NTRI,2)
      DIMENSION DP(NTRI,NABC),BB(NPAIR,NABC)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/CI102/NIND,NDEP
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' DP MATRIX'/)
C
C   FORM P MATRIX
C
      DO 101 IABC=1,NABC
      DO 101 I=1,NTRI
      DP(I,IABC)=ZERO
  101 CONTINUE
C
      IJ=0
      DO 105 I=1,NBASIS
      DO 105 J=1,I
      IJ=IJ+1
C
      DO 103 II=1,NIND
      K=NIJ(II,1)
      L=NIJ(II,2)
      FAC=ESO(I,K)*ESO(J,L)+ESO(I,L)*ESO(J,K)
      DO 102 IABC=1,NABC
      DP(IJ,IABC)=DP(IJ,IABC)+BB(II,IABC)*FAC
  102 CONTINUE
  103 CONTINUE
C
  105 CONTINUE
      IF(IPRNT.LE.4) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
C
  201 CONTINUE
      RETURN
      END
      SUBROUTINE DDMAT(ESO,NIJ,DP,B,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ESO(NBFAO,NBASIS),NIJ(NTRI,2),DP(NTRI,NABC),B(NTRI,NABC)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/CI102/NIND,NDEP
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' DP MATRIX'/)
C
C   FORM DENSITY MATRICES
C
C   FORM DP MATRIX
      DO 102 IABC=1,NABC
      DO 101 I=1,NTRI
      DP(I,IABC)=ZERO
  101 CONTINUE
  102 CONTINUE
C
      IJ=0
      DO 107 I=1,NBASIS
      DO 107 J=1,I
      IJ=IJ+1
      DO 106 II=1,NIND
      K=NIJ(II,1)
      L=NIJ(II,2)
      KL=IOFF(K)+L
      FAC=ESO(I,K)*ESO(J,L)+ESO(I,L)*ESO(J,K)
      DO 105 IABC=1,NABC
      DP(IJ,IABC)=DP(IJ,IABC)+B(KL,IABC)*FAC
  105 CONTINUE
  106 CONTINUE
  107 CONTINUE
C
      IF(IPRNT.LE.5) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
C
  201 CONTINUE
      RETURN
      END
      SUBROUTINE DEMAT(ESO,DP,SA,U,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ESO(NBFAO,NBASIS),U(NBFAO,NBFAO)
      DIMENSION DP(NTRI,N3N),SA(NTRI,N3N)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' DP MATRIX IN SO BASIS'/)
C
C   FORM DENSITY LIKE MATRICES
      DO 101 IABC=1,NABC
      DO 101 I=1,NTRI
      DP(I,IABC)=ZERO
  101 CONTINUE
C
      CALL SREW(ITAP44)
      DO 110 IABC=1,N3N
      IU=IUA(IABC)
      CALL RREAD(ITAP44,U,NBASQ,IU)
C
      IJ=0
      DO 107 I=1,NBASIS
      DO 107 J=1,I
      IJ=IJ+1
      DO 105 K=1,IHOMO
      DO 105 L=1,IHOMO
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      FAC=ESO(I,K)*ESO(J,L)
      DP(IJ,IABC)=DP(IJ,IABC)+SA(KL,IABC)*FAC
  105 CONTINUE
C
      DO 106 K=ILUMO,NBASIS
      DO 106 L=1,IHOMO
      KL=IOFF(K)+L
      FAC=ESO(I,K)*ESO(J,L)+ESO(I,L)*ESO(J,K)
      DP(IJ,IABC)=DP(IJ,IABC)-U(K,L)*FAC
  106 CONTINUE
  107 CONTINUE
C
  110 CONTINUE
C
      IF(IPRNT.LE.4) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
C
  201 CONTINUE
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE DERMAT(EAO,E1A,E2A,SS,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION E1A(N3N),E2A(N3N,N3N),SS(NBATRI)
      DIMENSION EAO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/WORKS/JTAPE1
    1 FORMAT(//,2X,' SCF FIRST DERIVATIVE MATRIX'/)
    2 FORMAT(//,2X,' SCF SECOND DERIVATIVE MATRIX'/)
    3 FORMAT(//,2X,' SA (AO BASIS) MATRIX, IABC = ',I5/)
    4 FORMAT(//,2X,' SA (MO BASIS) MATRIX, IABC = ',I5/)
    5 FORMAT(//,2X,' HA (AO BASIS) MATRIX, IABC = ',I5/)
    6 FORMAT(//,2X,' HA (MO BASIS) MATRIX, IABC = ',I5/)
    7 FORMAT(//,2X,' TA (AO BASIS) MATRIX, IABC = ',I5/)
    8 FORMAT(//,2X,' TA (MO BASIS) MATRIX, IABC = ',I5/)
C
      CALL RFILE(ITAP42)
      CALL RFILE(ITAP44)
C
C   READ IN SCF FIRST DERIVATIVES
      CALL SREAD(ITAP42,E1A,intowp(N3N))
      WRITE(6,1)
      CALL MATOUT(E1A,3,NATOMS,3,NATOMS,6)
C
C   READ IN SCF SECOND DERIVATIVES
      CALL SREAD(ITAP42,E2A,intowp(N3N*N3N))
      WRITE(6,2)
      CALL MATOUT(E2A,N3N,N3N,N3N,N3N,6)
C
C   READ IN S FIRST DERIVATIVE INTEGRALS
C   AND TRANSFORM THEM FROM AO TO MO BASIS
      DO 101 IABC=1,N3N
      IS=ISA(IABC)
      CALL SREAD(ITAP42,SS,NTRI2)
      IF(IPRNT.LE.4) GO TO 201
      WRITE(6,3) IABC
      CALL PRINT(SS,NBATRI,NBASIS,6)
  201 CONTINUE
      CALL MOCONV(SS,NBATRI,SS,NBATRI,EAO,U,T)
      CALL RWRIT(ITAP44,SS,NTRI2,IS)
      IF(IPRNT.LE.4) GO TO 101
      WRITE(6,4) IABC
      CALL PRINT(SS,NBATRI,NBASIS,6)
  101 CONTINUE
C
C   READ IN ONE ELECTRON FIRST DERIVATIVE INTEGRALS
C   AND TRANSFORM THEM FROM AO TO MO BASIS
      DO 102 IABC=1,N3N
      IH=IHA(IABC)
      CALL SREAD(ITAP42,SS,NTRI2)
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,5) IABC
      CALL PRINT(SS,NBATRI,NBFAO,6)
  202 CONTINUE
      CALL MOCONV(SS,NBATRI,SS,NBATRI,EAO,U,T)
      CALL RWRIT(ITAP44,SS,NTRI2,IH)
      IF(IPRNT.LE.4) GO TO 102
      WRITE(6,6) IABC
      CALL PRINT(SS,NBATRI,NBASIS,6)
  102 CONTINUE
C
C   READ IN TWO ELECTRON FIRST DERIVATIVE INTEGRALS
C   AND TRANSFORM THEM FROM AO TO MO BASIS
      DO 103 IABC=1,N3N
      IT=IFA(IABC)
      CALL SREAD(ITAP42,SS,NTRI2)
      IF(IPRNT.LE.4) GO TO 203
      WRITE(6,7) ITYP,IABC
      CALL PRINT(SS,NBATRI,NBFAO,6)
  203 CALL MOCONV(SS,NBATRI,SS,NBATRI,EAO,U,T)
      CALL RWRIT(ITAP44,SS,NTRI2,IT)
      IF(IPRNT.LE.4) GO TO 103
      WRITE(6,8) ITYP,IABC
      CALL PRINT(SS,NBATRI,NBASIS,6)
  103 CONTINUE
C
      CALL SREW(ITAP42)
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE DIPMOA(DIP,UA)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DIP(NTRI,3),UA(NBASIS,NBASIS,3)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/CALIF/LPARA(1024),DIPDE(3,45),DUM(889)
      COMMON/DIPOL/DIPDA(3,45),DIPDM(3,45),DIPDN(3,45),DIPDT(3,45)
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO,ONE,FOUR / 0.0D+00 , 1.0D+00 , 4.0D+00 /
      DATA DEBYE,BOHR / 2.541765480D+00 , 0.52917706D+00 /
    1 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS'/)
    2 FORMAT(//,2X,' UA MATRIX, IABC = ',I5,' IXYZ = ',I5/)
    3 FORMAT(//,2X,' DIPDA MATRIX'/)
    4 FORMAT(//,2X,' DIPDM MATRIX'/)
    5 FORMAT(//,2X,' DIPDE MATRIX'/)
    6 FORMAT(//,2X,' DIPDN MATRIX'/)
    7 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS (IN DEBYE/BOHR)
     *'/)
    8 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS (IN DEBYE/A)'/)
    9 FORMAT(2I5)
   10 FORMAT(3F20.10)
C
      CALL SREW(ITAP44)
      DEB4=DEBYE*FOUR
      RBOHR=ONE/BOHR
C     WRITE(6,1)
C
      DO 101 I=1,3
      DO 101 J=1,N3N
      DIPDM(I,J)=ZERO
  101 CONTINUE
C
      DO 102 IXYZ=1,3
      IH=IHA(N3N+IXYZ)
      CALL RREAD(ITAP44,DIP(1,IXYZ),NTRI2,IH)
  102 CONTINUE
C
      KABC=0
      DO 105 IABC=1,NATOMS
      I00=(IABC-1)*3
      IXX=I00+1
      IYY=I00+2
      IZZ=I00+3
      DO 103 IXYZ=1,3
      KABC=KABC+1
      IU=IUA(KABC)
      CALL RREAD(ITAP44,UA(1,1,IXYZ),NBASQ,IU)
      IF(IPRNT.LE.3) GO TO 103
      WRITE(6,2) IABC,IXYZ
      CALL MATOUT(UA(1,1,IXYZ),NBASIS,NBASIS,NBASIS,NBASIS,6)
  103 CONTINUE
C
      DO 104 I=1,IHOMO
      DO 104 J=1,NBASIS
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      DIPDM(1,IXX)=DIPDM(1,IXX)+UA(J,I,1)*DIP(IJ,1)
      DIPDM(1,IYY)=DIPDM(1,IYY)+UA(J,I,2)*DIP(IJ,1)
      DIPDM(1,IZZ)=DIPDM(1,IZZ)+UA(J,I,3)*DIP(IJ,1)
      DIPDM(2,IXX)=DIPDM(2,IXX)+UA(J,I,1)*DIP(IJ,2)
      DIPDM(2,IYY)=DIPDM(2,IYY)+UA(J,I,2)*DIP(IJ,2)
      DIPDM(2,IZZ)=DIPDM(2,IZZ)+UA(J,I,3)*DIP(IJ,2)
      DIPDM(3,IXX)=DIPDM(3,IXX)+UA(J,I,1)*DIP(IJ,3)
      DIPDM(3,IYY)=DIPDM(3,IYY)+UA(J,I,2)*DIP(IJ,3)
      DIPDM(3,IZZ)=DIPDM(3,IZZ)+UA(J,I,3)*DIP(IJ,3)
  104 CONTINUE
  105 CONTINUE
C
      DO 106 I=1,3
      DO 106 J=1,N3N
      DIPDM(I,J)=-DIPDM(I,J)*DEB4
  106 CONTINUE
C
C   SUM UP CONTRIBUTIONS FROM MO CHANGE
      DO 107 I=1,3
      DO 107 J=1,N3N
      DIPDE(I,J)=DIPDA(I,J)+DIPDM(I,J)
  107 CONTINUE
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,3)
      CALL MATOUT(DIPDA,3,45,3,N3N,6)
      WRITE(6,4)
      CALL MATOUT(DIPDM,3,45,3,N3N,6)
C
C   SUM UP ALL CONTRIBUTIONS
  201 CONTINUE
      DO 108 I=1,3
      DO 108 J=1,N3N
      DIPDT(I,J)=DIPDE(I,J)+DIPDN(I,J)
  108 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,5)
      CALL MATOUT(DIPDE,3,45,3,N3N,6)
      WRITE(6,6)
      CALL MATOUT(DIPDN,3,45,3,N3N,6)
  202 CONTINUE
      WRITE(6,7)
      CALL MATOUT(DIPDT,3,45,3,N3N,6)
C
      DO 109 I=1,3
      DO 109 J=1,N3N
      DIPDT(I,J)=DIPDT(I,J)*RBOHR
  109 CONTINUE
      WRITE(6,8)
      CALL MATOUT(DIPDT,3,45,3,N3N,6)
C
      ITAP17=17
      REWIND ITAP17
      WRITE(ITAP17,9) NATOMS,N3N
      WRITE(ITAP17,10) ((DIPDT(I,J),J=1,N3N),I=1,3)
      REWIND ITAP17
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE DIPMOB(DIP,UA,SA)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DIP(NTRI,3),UA(NBASIS,NBASIS,3),SA(NTRI,3)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/CALIF/LPARA(1024),DIPDE(3,45),DUM(889)
      COMMON/DIPOL/DIPDA(3,45),DIPDM(3,45),DIPDN(3,45),DIPDT(3,45)
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO,HALF,ONE,FOUR / 0.0D+00 , 0.5D+00 , 1.0D+00 , 4.0D+00 /
      DATA DEBYE,BOHR / 2.541765480D+00 , 0.52917706D+00 /
    1 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS'/)
    2 FORMAT(//,2X,' UA MATRIX, IABC = ',I5,' IXYZ = ',I5/)
    3 FORMAT(//,2X,' DIPDA MATRIX'/)
    4 FORMAT(//,2X,' DIPDM MATRIX'/)
    5 FORMAT(//,2X,' DIPDE MATRIX'/)
    6 FORMAT(//,2X,' DIPDN MATRIX'/)
    7 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS (IN DEBYE/BOHR)
     *'/)
    8 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS (IN DEBYE/A)'/)
    9 FORMAT(2I5)
   10 FORMAT(3F20.10)
C
      CALL SREW(ITAP44)
      DEB4=DEBYE*FOUR
      RBOHR=ONE/BOHR
C     WRITE(6,1)
C
      DO 101 I=1,3
      DO 101 J=1,N3N
      DIPDM(I,J)=ZERO
  101 CONTINUE
C
      DO 102 IXYZ=1,3
      IH=IHA(N3N+IXYZ)
      CALL RREAD(ITAP44,DIP(1,IXYZ),NTRI2,IH)
  102 CONTINUE
C
      KABC=0
      DO 106 IABC=1,NATOMS
      I00=(IABC-1)*3
      IXX=I00+1
      IYY=I00+2
      IZZ=I00+3
      DO 103 IXYZ=1,3
      KABC=KABC+1
      IS=ISA(KABC)
      IU=IUA(KABC)
      CALL RREAD(ITAP44,SA(1,IXYZ),NTRI2,IS)
      CALL RREAD(ITAP44,UA(1,1,IXYZ),NBASQ,IU)
      IF(IPRNT.LE.3) GO TO 103
      WRITE(6,2) IABC,IXYZ
      CALL MATOUT(UA(1,1,IXYZ),NBASIS,NBASIS,NBASIS,NBASIS,6)
  103 CONTINUE
C
      DO 104 I=1,IHOMO
      DO 104 J=1,IHOMO
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      DIPDM(1,IXX)=DIPDM(1,IXX)-SA(IJ,1)*DIP(IJ,1)*HALF
      DIPDM(1,IYY)=DIPDM(1,IYY)-SA(IJ,2)*DIP(IJ,1)*HALF
      DIPDM(1,IZZ)=DIPDM(1,IZZ)-SA(IJ,3)*DIP(IJ,1)*HALF
      DIPDM(2,IXX)=DIPDM(2,IXX)-SA(IJ,1)*DIP(IJ,2)*HALF
      DIPDM(2,IYY)=DIPDM(2,IYY)-SA(IJ,2)*DIP(IJ,2)*HALF
      DIPDM(2,IZZ)=DIPDM(2,IZZ)-SA(IJ,3)*DIP(IJ,2)*HALF
      DIPDM(3,IXX)=DIPDM(3,IXX)-SA(IJ,1)*DIP(IJ,3)*HALF
      DIPDM(3,IYY)=DIPDM(3,IYY)-SA(IJ,2)*DIP(IJ,3)*HALF
      DIPDM(3,IZZ)=DIPDM(3,IZZ)-SA(IJ,3)*DIP(IJ,3)*HALF
  104 CONTINUE
      DO 105 I=1,IHOMO
      DO 105 J=ILUMO,NBASIS
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      DIPDM(1,IXX)=DIPDM(1,IXX)+UA(J,I,1)*DIP(IJ,1)
      DIPDM(1,IYY)=DIPDM(1,IYY)+UA(J,I,2)*DIP(IJ,1)
      DIPDM(1,IZZ)=DIPDM(1,IZZ)+UA(J,I,3)*DIP(IJ,1)
      DIPDM(2,IXX)=DIPDM(2,IXX)+UA(J,I,1)*DIP(IJ,2)
      DIPDM(2,IYY)=DIPDM(2,IYY)+UA(J,I,2)*DIP(IJ,2)
      DIPDM(2,IZZ)=DIPDM(2,IZZ)+UA(J,I,3)*DIP(IJ,2)
      DIPDM(3,IXX)=DIPDM(3,IXX)+UA(J,I,1)*DIP(IJ,3)
      DIPDM(3,IYY)=DIPDM(3,IYY)+UA(J,I,2)*DIP(IJ,3)
      DIPDM(3,IZZ)=DIPDM(3,IZZ)+UA(J,I,3)*DIP(IJ,3)
  105 CONTINUE
  106 CONTINUE
C
      DO 107 I=1,3
      DO 107 J=1,N3N
      DIPDM(I,J)=-DIPDM(I,J)*DEB4
  107 CONTINUE
C
C   SUM UP CONTRIBUTIONS FROM MO CHANGE
      DO 108 I=1,3
      DO 108 J=1,N3N
      DIPDE(I,J)=DIPDA(I,J)+DIPDM(I,J)
  108 CONTINUE
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,3)
      CALL MATOUT(DIPDA,3,45,3,N3N,6)
      WRITE(6,4)
      CALL MATOUT(DIPDM,3,45,3,N3N,6)
C
C   SUM UP ALL CONTRIBUTIONS
  201 CONTINUE
      DO 109 I=1,3
      DO 109 J=1,N3N
      DIPDT(I,J)=DIPDE(I,J)+DIPDN(I,J)
  109 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,5)
      CALL MATOUT(DIPDE,3,45,3,N3N,6)
      WRITE(6,6)
      CALL MATOUT(DIPDN,3,45,3,N3N,6)
  202 CONTINUE
      WRITE(6,7)
      CALL MATOUT(DIPDT,3,45,3,N3N,6)
C
      DO 110 I=1,3
      DO 110 J=1,N3N
      DIPDT(I,J)=DIPDT(I,J)*RBOHR
  110 CONTINUE
      WRITE(6,8)
      CALL MATOUT(DIPDT,3,45,3,N3N,6)
C
      ITAP17=17
      REWIND ITAP17
      WRITE(ITAP17,9) NATOMS,N3N
      WRITE(ITAP17,10) ((DIPDT(I,J),J=1,N3N),I=1,3)
      REWIND ITAP17
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE E0CAL(ESO,H,DC,DM,LBLI,BUFI)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ESO(NBFAO,NBASIS),H(NTRI),DC(NTRI),DM(NTRI)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/ENRGY/ESCF,ENUC
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' H (SO BASIS) MATRIX'/)
    2 FORMAT(//,2X,' SCF ENERGIES'/
     * 2X,' ESCF       = ',F20.10/
     * 2X,' ENUC       = ',F20.10/
     * 2X,' ELEC-ONE   = ',F20.10/
     * 2X,' ELEC-TWO   = ',F20.10/
     * 2X,' ELEC-TOTAL = ',F20.10/
     * 2X,' ETOT       = ',F20.10)
C
C   CALCULATE SCF ENERGY FOR A TEST
C
C   READ IN ONE ELECTRON INTEGRALS (SO BASIS)
      CALL MREAD(H,15)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL PRINT(H,NTRI,NBASIS,6)
C
c   FORM DENSITY MATRIX IN SO BASIS
  201 CALL DAMAT(ESO,DC)
C
C   FORM HALF-TRANSFORMED TWO ELECTRON MATRIX
      CALL PDMAT(DC,DM,1,LBLI,BUFI)
C
C   CALCULATE SCF ENERGY
      ELEC1=ZERO
      electw=ZERO
      IJ=0
      DO 101 I=1,NBASIS
      DO 101 J=1,I
      IJ=IJ+1
      FAC=TWO
      IF(I.EQ.J) FAC=ONE
      ELEC1=ELEC1+H(IJ)*DC(IJ)*FAC*TWO
      electw=electw+DM(IJ)*DC(IJ)*FAC
  101 CONTINUE
C
      ELECT=ELEC1+electw
      ETOT=ENUC+ELECT
      WRITE(6,2) ESCF,ENUC,ELEC1,electw,ELECT,ETOT
C
      RETURN
      END
      SUBROUTINE EADER(EIG,D1O,D1T,D1W,E1T,SM,HM,TM)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS)
      DIMENSION D1O(N3N),D1T(N3N),D1W(N3N),E1T(N3N)
      DIMENSION SM(NTRI),HM(NTRI),TM(NTRI)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO,TWO / 0.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' NUCLEAR REPULSION FIRST DERIVATIVE MATRIX'/)
    2 FORMAT(//,2X,' SCF ONE-ELECTRON FIRST DERIVATIVE MATRIX'/)
    3 FORMAT(//,2X,' SCF TWO-ELECTRON FIRST DERIVATIVE MATRIX'/)
    4 FORMAT(//,2X,' SCF OVERLAP CONTRIBUTION MATRIX'/)
    5 FORMAT(//,2X,' TOTAL SCF FIRST DERIVATIVE MATRIX'/)
C
C   CALCULATE FIRST ENERGY GRADIENTS FOR A TEST
C
C   READ BACK DERIVATIVE SM AND HM MATRICES
      CALL SREW(ITAP44)
C
      DO 105 IABC=1,N3N
      IS=ISA(IABC)
      IH=IHA(IABC)
      IT=IFA(IABC)
      CALL RREAD(ITAP44,SM,NTRI2,IS)
      CALL RREAD(ITAP44,HM,NTRI2,IH)
      CALL RREAD(ITAP44,TM,NTRI2,IT)
C
C  ONE-ELECTRON CONTRIBUTION
      VALU=ZERO
      DO 101 I=1,IHOMO
      II=IOFF(I+1)
      VALU=VALU+HM(II)*TWO
  101 CONTINUE
      D1O(IABC)=VALU
C  TWO-ELECTRON CONTRIBUTION
      VALU=ZERO
      DO 102 I=1,IHOMO
      II=IOFF(I+1)
      VALU=VALU+TM(II)
  102 CONTINUE
      D1T(IABC)=VALU
C   OVERLAP CONTRIBUTION
      VALU=ZERO
      DO 103 I=1,IHOMO
      II=IOFF(I+1)
      VALU=VALU-SM(II)*EIG(I)*TWO
  103 CONTINUE
      D1W(IABC)=VALU
C
C   SUM UP ALL CONTRIBUTIONS
      E1T(IABC)=D1O(IABC)+D1T(IABC)+D1W(IABC)
C
  105 CONTINUE
C
CCC   WRITE(6,1)
CCC   CALL MATOUT(E1N,3,NATOMS,3,NATOMS,6)
      WRITE(6,2)
      CALL MATOUT(D1O,3,NATOMS,3,NATOMS,6)
      WRITE(6,3)
      CALL MATOUT(D1T,3,NATOMS,3,NATOMS,6)
      WRITE(6,4)
      CALL MATOUT(D1W,3,NATOMS,3,NATOMS,6)
      WRITE(6,5)
      CALL MATOUT(E1T,3,NATOMS,3,NATOMS,6)
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE FAMAT(HH,TT,FF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION HH(NTRI),TT(NTRI),FF(NTRI)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
    1 FORMAT(//,2X,' FA MATRIX, IABC = ',I5/)
C
C   CALL BACK HM AND TM MATRICES AND FORM FA MATRICES
      CALL SREW(ITAP44)
      DO 102 IABC=1,N3N
      IH=IHA(IABC)
      IT=IFA(IABC)
      CALL RREAD(ITAP44,HH,NTRI2,IH)
      CALL RREAD(ITAP44,TT,NTRI2,IT)
      DO 101 I=1,NTRI
  101 FF(I)=HH(I)+TT(I)
      CALL RWRIT(ITAP44,FF,NTRI2,IT)
      IF(IPRNT.LE.4) GO TO 102
      WRITE(6,1) IABC
      CALL PRINT(FF,NTRI,NBASIS,6)
  102 CONTINUE
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE FORMAB(EIG,ESO,U,T,NIJ,BB,DP,DM,B1,LBLI,BUFI,
     1                  NPAIR,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),NIJ(NTRI,2)
      DIMENSION ESO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION BB(NPAIR,NABC),B1(NPAIR,NABC)
      DIMENSION DP(NTRI,NABC),DM(NTRI,NABC)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' DP MATRIX'/)
    2 FORMAT(//,2X,' DM MATRIX'/)
    3 FORMAT(//,2X,' AB MATRIX'/)
C
C   FORM DENSITY LIKE MATRIX IN SO BASIS
      CALL DCMAT(ESO,NIJ,DP,BB,NPAIR,NABC)
      IF(IPRNT.LE.5) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
C
C   FORM HALF-TRANSFORMED DENSITY LIKE MATRIX
C   AND TRANSFORM THEM INTO MO BASIS
  201 CONTINUE
      CALL PDMAT(DP,DM,NABC,LBLI,BUFI)
      DO 101 IABC=1,NABC
      CALL MOCONS(DM(1,IABC),NTRI,DP(1,IABC),NTRI,ESO,U,T)
  101 CONTINUE
      IF(IPRNT.LE.5) GO TO 202
      WRITE(6,2)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
C
  202 CONTINUE
      DO 103 II=1,NPAIR
      I=NIJ(II,1)
      J=NIJ(II,2)
      IJ=IOFF(I)+J
      DO 102 IABC=1,NABC
      B1(II,IABC)=(EIG(J)-EIG(I))*BB(II,IABC)-DP(IJ,IABC)
  102 CONTINUE
  103 CONTINUE
      IF(IPRNT.LE.4) GO TO 203
      WRITE(6,3)
      CALL MATOUT(B1,NPAIR,NABC,NPAIR,NABC,6)
C
  203 CONTINUE
      RETURN
      END
      SUBROUTINE MOCONS(SA,NNA,SM,NNM,ESO,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SA(NNA),SM(NNM)
      DIMENSION ESO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO / 0.0D+00 /
C
C   TRANSFORM INTEGRALS FROM SO TO MO BASIS
      DO 101 II=1,NBASIS
      DO 101 JJ=1,NBASIS
      IIJJ=IOFF(MAX0(II,JJ))+MIN0(II,JJ)
      T(II,JJ)=SA(IIJJ)
  101 CONTINUE
      DO 103 II=1,NBASIS
      DO 103 J=1,NBASIS
      SUM=ZERO
      DO 102 JJ=1,NBASIS
      SUM=SUM+ESO(JJ,J)*T(II,JJ)
  102 CONTINUE
      U(II,J)=SUM
  103 CONTINUE
      DO 105 I=1,NBASIS
      DO 105 J=1,I
      IJ=IOFF(I)+J
      SUM=ZERO
      DO 104 II=1,NBASIS
      SUM=SUM+ESO(II,I)*U(II,J)
  104 CONTINUE
      SM(IJ)=SUM
  105 CONTINUE
C
      RETURN
      END
      SUBROUTINE MOCONV(SA,NNA,SM,NNM,EAO,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SA(NNA),SM(NNM)
      DIMENSION EAO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO / 0.0D+00 /
C
C   TRANSFORM INTEGRALS FROM AO TO MO BASIS
      DO 101 II=1,NBFAO
      DO 101 JJ=1,NBFAO
      IIJJ=IOFF(MAX0(II,JJ))+MIN0(II,JJ)
      T(II,JJ)=SA(IIJJ)
  101 CONTINUE
      DO 103 II=1,NBFAO
      DO 103 J=1,NBASIS
      SUM=ZERO
      DO 102 JJ=1,NBFAO
      SUM=SUM+EAO(JJ,J)*T(II,JJ)
  102 CONTINUE
      U(II,J)=SUM
  103 CONTINUE
      DO 105 I=1,NBASIS
      DO 105 J=1,I
      IJ=IOFF(I)+J
      SUM=ZERO
      DO 104 II=1,NBFAO
      SUM=SUM+EAO(II,I)*U(II,J)
  104 CONTINUE
      SM(IJ)=SUM
  105 CONTINUE
C
      RETURN
      END
      SUBROUTINE NORM(XAB,A,B,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(1),B(1)
      DATA ZERO / 0.0D+00 /
C
      XAB=ZERO
      DO 101 I=1,N
  101 XAB=XAB+A(I)*B(I)
      RETURN
      END
      SUBROUTINE NORMLZ(V,NDIM,N,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION V(NDIM)
    1 FORMAT(//,2X,'***ERROR IN NORMALIZATION***'/)
      DATA RLIM / 1.0D-38 /
      DATA VLIM / 1.0D-6 /
      DATA ZERO / 0.0D+00 /
C
      IFLAG=0
      SQL=ZERO
      DO 101 I=1,N
  101 SQL=SQL+V(I)*V(I)
      R=DSQRT(SQL)
      IF(R.LE.RLIM) GO TO 202
      IF(R.LE.VLIM) GO TO 204
C
  201 DO 102 I=1,N
  102 V(I)=V(I)/R
      GO TO 205
  202 WRITE(6,1)
      STOP
C
  204 IFLAG=1
  205 RETURN
      END
      SUBROUTINE ORB1ST(B0,CC,NABC,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B0(NTRI),CC(NBASIS,NABC)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      DATA ITAP25 / 25 /
    1 FORMAT(//,2X,' FIRST DERIVATIVES OF ORBITAL ENERGIES W.R.T. NUCLEA
     1R COORDINATE'/)
    2 FORMAT(2I5)
    3 FORMAT(3F20.10)
    4 FORMAT(//,2X,' FIRST DERIVATIVES OF ORBITAL ENERGIES W.R.T. ELECTR
     1IC FIELD'/)
C
C   FOR NUCLEAR COORDINATE PERTURBATION
      IF(IFLAG.EQ.2) GO TO 201
      CALL SREW(ITAP44)
      DO 102 IABC=1,N3N
      IB=IBA(IABC)
      CALL RREAD(ITAP44,B0,NTRI2,IB)
      DO 101 I=1,NBASIS
      II=IOFF(I+1)
      CC(I,IABC)=B0(II)
  101 CONTINUE
  102 CONTINUE
      WRITE(6,1)
      CALL MATOUT(CC,NBASIS,N3N,NBASIS,N3N,6)
      CALL SREW(ITAP44)
      REWIND ITAP25
      WRITE(ITAP25,2) N3N,NBASIS
      WRITE(ITAP25,3) ((CC(I,J),J=1,N3N),I=1,NBASIS)
      RETURN
C
C   FOR ELECTRIC FIELD PERTURBATION
  201 CONTINUE
      CALL SREW(ITAP44)
      DO 104 IXYZ=1,3
      IB=IBA(N3N+IXYZ)
      CALL RREAD(ITAP44,B0,NTRI2,IB)
      DO 103 I=1,NBASIS
      II=IOFF(I+1)
      CC(I,IXYZ)=B0(II)
  103 CONTINUE
  104 CONTINUE
      WRITE(6,4)
      CALL MATOUT(CC,NBASIS,3,NBASIS,3,6)
      CALL SREW(ITAP44)
      WRITE(ITAP25,3) ((CC(I,J),J=1,3),I=1,NBASIS)
C
      REWIND ITAP25
      RETURN
      END
      SUBROUTINE ORTHOG(U,W,NDIM,MDIM,N,NDUM,NTEMP,NVEC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION U(NDIM,MDIM),W(NDIM),NDUM(1)
      DATA ZERO / 0.0D+00 /
C
      DO 101 I=1,NTEMP
  101 NDUM(I)=0
C   N=1
      DO 102 I=1,N
  102 W(I)=U(I,1)
      CALL NORMLZ(W,NDIM,N,IFLAG)
      DO 103 I=1,N
  103 U(I,1)=W(I)
C
C   N=>2
C
      NVEC=1
      IF(NTEMP.EQ.1) RETURN
      DO 110 II=2,NTEMP
      DO 104 I=1,N
  104 W(I)=U(I,II)
      DO 107 K=1,II-1
      IF(NDUM(K).NE.0) GO TO 107
      EU=ZERO
      DO 105 I=1,N
  105 EU=EU+U(I,K)*U(I,II)
      DO 106 I=1,N
  106 W(I)=W(I)-EU*U(I,K)
  107 CONTINUE
      CALL NORMLZ(W,NDIM,N,IFLAG)
      IF(IFLAG.NE.0) NDUM(II)=1
      IF(IFLAG.NE.0) GO TO 110
      NVEC=NVEC+1
      DO 108 I=1,N
  108 U(I,II)=W(I)
  110 CONTINUE
C
      IX=0
      DO 120 II=1,NTEMP
      IF(NDUM(II).NE.0) GO TO 120
      IX=IX+1
      DO 115 I=1,N
  115 W(I)=U(I,II)
      DO 116 I=1,N
  116 U(I,IX)=W(I)
  120 CONTINUE
C
      RETURN
      END
      SUBROUTINE PDMAT(DA,DM,NABC,LBLI,BUFI)
      IMPLICIT REAL*8 (A-H,O-Z)
      logical bit32
      DIMENSION DA(NTRI,NABC),DM(NTRI,NABC)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      DATA ZERO / 0.0D+00 /
    1 FORMAT(2X,6I5,F15.8)
    2 FORMAT(//,2X,' PDM MATRIX'/)
c
      bit32=intowp(1).eq.2
C
      CALL RFILE(ITAP36)
C
C   FORM DM MATRICES
      DO 102 IABC=1,NABC
      DO 101 I=1,NTRI
      DM(I,IABC)=ZERO
  101 CONTINUE
  102 CONTINUE
c
      call srew(itap36)
  500 CALL SREAD(ITAP36,LBLI,intowp(maxbuf*2))
cets changed for apollo conversion
      DO 161 I=1,MAXBUF
         if (bit32) then
            IBA=LBLI(I+I-1)
            IBB=LBLI(I+I)
            IF(IBA.EQ.0) GO TO 501
            call unpk32(ii,jj,kk,ll,ix,iba,ibb)
          else
            iba=lbli(i)
            if(iba.eq.0) go to 501
            call unpk64(ii,jj,kk,ll,ix,iba)
          endif
c
      VALU=BUFI(MAXBUF+I)
cets  CALL UNPACK(II,JJ,KK,LL,IX,IBA,IBB)
C     IF(IPRNT.LE.5) GO TO 301
C     WRITE(6,1) I,II,JJ,KK,LL,IX,VALU
  301 GO TO (201,202,203,204,205,206,207,208,209,210,211,212,212,212),IX
C
C (II/II)   1=(11/11)
C
  201 IIII=IOFF(II+1)
      DO 111 IABC=1,NABC
      DM(IIII,IABC)=DM(IIII,IABC)+DA(IIII,IABC)*VALU
  111 CONTINUE
      GO TO 160
C
C  (II/KK)  2=(22/11)
C
  202 IIII=IOFF(II+1)
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      VAL2=VALU+VALU
      DO 112 IABC=1,NABC
      DM(IIII,IABC)=DM(IIII,IABC)+DA(KKKK,IABC)*VAL2
      DM(KKKK,IABC)=DM(KKKK,IABC)+DA(IIII,IABC)*VAL2
      DM(IIKK,IABC)=DM(IIKK,IABC)-DA(IIKK,IABC)*VALU
  112 CONTINUE
      GO TO 160
C
C  (II/IL)  3=(22/21)
C
  203 IIII=IOFF(II+1)
      IILL=IOFF(II)+LL
      VAL2=VALU+VALU
      DO 113 IABC=1,NABC
      DM(IIII,IABC)=DM(IIII,IABC)+DA(IILL,IABC)*VAL2
      DM(IILL,IABC)=DM(IILL,IABC)+DA(IIII,IABC)*VALU
  113 CONTINUE
      GO TO 160
C
C  (IJ/JJ)  4=(21/11)
C
  204 IIJJ=IOFF(II)+JJ
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      DO 114 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(JJJJ,IABC)*VALU
      DM(JJJJ,IABC)=DM(JJJJ,IABC)+DA(IIJJ,IABC)*VAL2
  114 CONTINUE
      GO TO 160
C
C  (IJ/IJ)  5=(21/21)
C
  205 IIJJ=IOFF(II)+JJ
      IIII=IOFF(II+1)
      JJJJ=IOFF(JJ+1)
      VAL3=VALU+VALU+VALU
      DO 115 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(IIJJ,IABC)*VAL3
      DM(IIII,IABC)=DM(IIII,IABC)-DA(JJJJ,IABC)*VALU
      DM(JJJJ,IABC)=DM(JJJJ,IABC)-DA(IIII,IABC)*VALU
  115 CONTINUE
      GO TO 160
C
C  (II/KL)  6=(33/21)
C
  206 IIII=IOFF(II+1)
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      DO 116 IABC=1,NABC
      DM(IIII,IABC)=DM(IIII,IABC)+DA(KKLL,IABC)*VAL4
      DM(KKLL,IABC)=DM(KKLL,IABC)+DA(IIII,IABC)*VAL2
      DM(IIKK,IABC)=DM(IIKK,IABC)-DA(IILL,IABC)*VALU
      DM(IILL,IABC)=DM(IILL,IABC)-DA(IIKK,IABC)*VALU
  116 CONTINUE
      GO TO 160
C
C  (IJ/KK)  7=(32/11)
C
  207 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=IOFF(JJ)+KK
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      DO 117 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(KKKK,IABC)*VAL2
      DM(KKKK,IABC)=DM(KKKK,IABC)+DA(IIJJ,IABC)*VAL4
      DM(IIKK,IABC)=DM(IIKK,IABC)-DA(JJKK,IABC)*VALU
      DM(JJKK,IABC)=DM(JJKK,IABC)-DA(IIKK,IABC)*VALU
  117 CONTINUE
      GO TO 160
C
C  (IJ/KK)  8=(31/22)
C
  208 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=JJ+IOFF(KK)
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      DO 118 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(KKKK,IABC)*VAL2
      DM(KKKK,IABC)=DM(KKKK,IABC)+DA(IIJJ,IABC)*VAL4
      DM(IIKK,IABC)=DM(IIKK,IABC)-DA(JJKK,IABC)*VALU
      DM(JJKK,IABC)=DM(JJKK,IABC)-DA(IIKK,IABC)*VALU
  118 CONTINUE
      GO TO 160
C
C (IJ/IL)  9=(32/31)
C
  209 IIJJ=IOFF(II)+JJ
      IILL=IOFF(II)+LL
      IIII=IOFF(II+1)
      JJLL=IOFF(JJ)+LL
      VAL2=VALU+VALU
      VAL3=VAL2+VALU
      DO 119 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(IILL,IABC)*VAL3
      DM(IILL,IABC)=DM(IILL,IABC)+DA(IIJJ,IABC)*VAL3
      DM(IIII,IABC)=DM(IIII,IABC)-DA(JJLL,IABC)*VAL2
      DM(JJLL,IABC)=DM(JJLL,IABC)-DA(IIII,IABC)*VALU
  119 CONTINUE
      GO TO 160
C
C  (IJ/JL)  10=(32/21)
C
  210 IIJJ=IOFF(II)+JJ
      JJLL=IOFF(JJ)+LL
      IILL=IOFF(II)+LL
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      VAL3=VAL2+VALU
      DO 120 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(JJLL,IABC)*VAL3
      DM(JJLL,IABC)=DM(JJLL,IABC)+DA(IIJJ,IABC)*VAL3
      DM(IILL,IABC)=DM(IILL,IABC)-DA(JJJJ,IABC)*VALU
      DM(JJJJ,IABC)=DM(JJJJ,IABC)-DA(IILL,IABC)*VAL2
  120 CONTINUE
      GO TO 160
C
C  (IJ/KJ)  11=(31/21)
C
  211 IIJJ=IOFF(II)+JJ
      JJKK=JJ+IOFF(KK)
      IIKK=IOFF(II)+KK
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      VAL3=VAL2+VALU
      DO 121 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(JJKK,IABC)*VAL3
      DM(JJKK,IABC)=DM(JJKK,IABC)+DA(IIJJ,IABC)*VAL3
      DM(IIKK,IABC)=DM(IIKK,IABC)-DA(JJJJ,IABC)*VALU
      DM(JJJJ,IABC)=DM(JJJJ,IABC)-DA(IIKK,IABC)*VAL2
  121 CONTINUE
      GO TO 160
C
C  (IJ/KL)  12=(43/21)
C  (IJ/KL)  13=(42/31)
C  (IJ/KL)  14=(41/32)
C
  212 IIJJ=IOFF(II)+JJ
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      JJLL=IOFF(MAX0(JJ,LL))+MIN0(JJ,LL)
      JJKK=IOFF(MAX0(JJ,KK))+MIN0(JJ,KK)
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      DO 122 IABC=1,NABC
      DM(IIJJ,IABC)=DM(IIJJ,IABC)+DA(KKLL,IABC)*VAL4
      DM(KKLL,IABC)=DM(KKLL,IABC)+DA(IIJJ,IABC)*VAL4
      DM(IIKK,IABC)=DM(IIKK,IABC)-DA(JJLL,IABC)*VALU
      DM(JJLL,IABC)=DM(JJLL,IABC)-DA(IIKK,IABC)*VALU
      DM(IILL,IABC)=DM(IILL,IABC)-DA(JJKK,IABC)*VALU
      DM(JJKK,IABC)=DM(JJKK,IABC)-DA(IILL,IABC)*VALU
  122 CONTINUE
C
  160 CONTINUE
  161 continue
      GO TO 500
C
  501 CALL SREW(ITAP36)
C
      IF(IPRNT.LE.5) GO TO 502
      WRITE(6,2) IABC
      CALL MATOUT(DM,NTRI,NABC,NTRI,NABC,6)
C
  502 CONTINUE
      CALL RCLOSE(ITAP36,3)
      RETURN
      END
      SUBROUTINE POLAR(HF,UF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION HF(NTRI,3),UF(NBASIS,NBASIS)
      DIMENSION POL(3,3),POLC(3,3),EIG(3),EIV(3,3),A(6),FV1(3),FV2(3)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO,FOUR / 0.0D+00 , 4.0D+00 /
      DATA BOHR / 0.52917706D+00 /
    1 FORMAT(//,2X,' HF MATRIX, IXYZ = ',I5/)
    2 FORMAT(//,2X,' UF MATRIX, IXYZ = ',I5/)
    3 FORMAT(//,2X,' POLARIZABILITY TENSOR MATRIX (IN A.U.)'/)
    4 FORMAT(//,2X,' POLARIZABILITY TENSOR MATRIX (IN A**3)'/)
    5 FORMAT(//,2X,' A MATRIX'/)
    6 FORMAT(//,2X,' PRINCIPAL POLARIZABILITY TENSOR MATRIX (IN A.U.)'/)
    7 FORMAT(//,2X,' PRINCIPAL POLARIZABILITY TENSOR MATRIX (IN A**3)'/)
    8 FORMAT(//,2X,' EIGENVECTOR MATRIX'/)
C
      CALL SREW(ITAP44)
      A33=BOHR*BOHR*BOHR
C
C   CALL BACK HF MATRICES
      DO 101 IXYZ=1,3
      IH=IHA(N3N+IXYZ)
      CALL RREAD(ITAP44,HF(1,IXYZ),NTRI2,IH)
      IF(IPRNT.LE.2) GO TO 101
      WRITE(6,1) IXYZ
      CALL PRINT(HF(1,IXYZ),NTRI,NBASIS,6)
  101 CONTINUE
C
C:::B COORDINATE:::
      DO 105 IXYZ=1,3
      IU=IUA(N3N+IXYZ)
      CALL RREAD(ITAP44,UF,NBASQ,IU)
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,2) IXYZ
      CALL MATOUT(UF,NBASIS,NBASIS,NBASIS,NBASIS,6)
C
C:::A COORDINATES:::
  301 CONTINUE
      DO 103 JXYZ=1,3
      VALUP=ZERO
      DO 102 I=1,IHOMO
      DO 102 J=ILUMO,NBASIS
C***  DO 102 J=1,NBASIS
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      VALUP=VALUP-UF(J,I)*HF(IJ,JXYZ)
  102 CONTINUE
      POL(IXYZ,JXYZ)=VALUP*FOUR
  103 CONTINUE
  105 CONTINUE
      WRITE(6,3)
      CALL MATOUT(POL,3,3,3,3,6)
      DO 106 I=1,3
      DO 106 J=1,3
      POLC(I,J)=POL(I,J)*A33
  106 CONTINUE
      WRITE(6,4)
      CALL MATOUT(POLC,3,3,3,3,6)
C
      IJ=0
      DO 107 I=1,3
      DO 107 J=1,I
      IJ=IJ+1
      A(IJ)=POL(I,J)
  107 CONTINUE
      WRITE(6,5)
      CALL PRINT(A,6,3,6)
      CALL RSP(3,3,6,A,EIG,1,EIV,FV1,FV2)
      DO 108 I=1,3
      DO 108 J=1,3
      POL(I,J)=ZERO
  108 CONTINUE
      DO 109 I=1,3
  109 POL(I,I)=EIG(I)
      WRITE(6,6)
      CALL MATOUT(POL,3,3,3,3,6)
      DO 110 I=1,3
      DO 110 J=1,3
      POLC(I,J)=POL(I,J)*A33
  110 CONTINUE
      WRITE(6,7)
      CALL MATOUT(POLC,3,3,3,3,6)
      WRITE(6,8)
      CALL MATOUT(EIV,3,3,3,3,6)
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE REGIST(NIJ,KIJ)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION NIJ(NTRI,2),KIJ(NTRI,2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/CI101/IHOMO,ILUMO
      COMMON/CI102/NIND,NDEP
    1 FORMAT(//,2X,' REGISTERED NUMBERS'/
     1 2X,' KVIR = ',I5/
     2 2X,' NIND = ',I5/
     3 2X,' NDEP = ',I5/
     4 2X,' NDIF = ',I5)
    2 FORMAT(//,2X,' NIJ MATRIX'/2X,' NO.',5X,' NIJ(1)',5X,' NIJ(2)'/)
    3 FORMAT(2X,I4,4X,I5,7X,I5)
    4 FORMAT(//,2X,' KIJ MATRIX'/2X,' NO.',5X,' KIJ(1)',5X,' KIJ(2)'/)
C
      KVIR=NBASIS-IHOMO
C
      II=0
      DO 101 I=ILUMO,NBASIS
      DO 101 J=1,IHOMO
      II=II+1
      NIJ(II,1)=I
      NIJ(II,2)=J
  101 CONTINUE
      NIND=II
C
      II=0
      DO 102 I=1,IHOMO
      DO 102 J=1,I
      II=II+1
      KIJ(II,1)=I
      KIJ(II,2)=J
  102 CONTINUE
      DO 103 I=ILUMO,NBASIS
      DO 103 J=ILUMO,I
      II=II+1
      KIJ(II,1)=I
      KIJ(II,2)=J
  103 CONTINUE
      NDEP=II
C
      NDIF=NTRI-NIND-NDEP
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1) KVIR,NIND,NDEP,NDIF
      WRITE(6,2)
      DO 104 I=1,NIND
  104 WRITE(6,3) I,NIJ(I,1),NIJ(I,2)
      WRITE(6,4)
      DO 105 I=1,NDEP
  105 WRITE(6,3) I,KIJ(I,1),KIJ(I,2)
C
  201 RETURN
      END
      SUBROUTINE SCF2A(EIG,E2A,E2M,E2P,E2W,U,SA,FA,BA)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS)
      DIMENSION E2A(N3N,N3N),E2M(N3N,N3N),E2P(N3N,N3N),E2W(N3N,N3N)
      DIMENSION U(NBASIS,NBASIS)
      DIMENSION SA(NTRI,N3N),FA(NTRI,N3N),BA(NTRI)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO,HALF,FOUR / 0.0D+00 , 0.5D+00 , 4.0D+00 /
    1 FORMAT(//,2X,' IABC = ',I5/)
    2 FORMAT(//,2X,' U MATRIX, IABC = ',I5/)
    3 FORMAT(//,2X,' E2P MATRIX'/)
    4 FORMAT(//,2X,' E2W MATRIX'/)
    5 FORMAT(///
     1 2X,':::::::::::::::::::::::::::::::::::::::::::::'/
     2 2X,':::SUMMARY OF FIRST ORDER CPHF CALCULATION:::'/
     3 2X,':::::::::::::::::::::::::::::::::::::::::::::'/)
    6 FORMAT(//,2X,' E2A MATRIX'/)
    7 FORMAT(//,2X,' E2M MATRIX'/)
    8 FORMAT(//,2X,' SCF SECOND DERIVATIVE MATRIX'/)
    9 FORMAT(2I5)
   10 FORMAT(3F20.10)
C
      CALL SREW(ITAP44)
      DO 101 IABC=1,N3N
      IS=ISA(IABC)
      IT=IFA(IABC)
      CALL RREAD(ITAP44,SA(1,IABC),NTRI2,IS)
      CALL RREAD(ITAP44,FA(1,IABC),NTRI2,IT)
  101 CONTINUE
C
C:::B COORDINATE:::
      DO 120 IABC=1,N3N
      IB=IBA(IABC)
      IU=IUA(IABC)
      CALL RREAD(ITAP44,BA,NTRI2,IB)
      CALL RREAD(ITAP44,U,NBASQ,IU)
C     IF(IPRNT.LE.2) GO TO 301
C     WRITE(6,1) IABC
  301 CONTINUE
      IF(IPRNT.LE.4) GO TO 302
      WRITE(6,2) IABC
      CALL MATOUT(U,NBASIS,NBASIS,NBASIS,NBASIS,6)
C
C**********************************************
C***CALCULATE CONTRIBUTIONS DUE TO MO CHANGE***
C**********************************************
C:::A COORDINATES:::
  302 CONTINUE
      DO 110 JABC=1,N3N
      VALUP=ZERO
      VALUW=zero
      DO 109 I=1,IHOMO
      II=IOFF(I+1)
      VALUW=VALUW-BA(II)*SA(II,JABC)*HALF
      DO 109 J=1,NBASIS
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      FACP=FA(IJ,JABC)-EIG(I)*SA(IJ,JABC)
      VALUP=VALUP+U(J,I)*FACP
  109 CONTINUE
      E2P(IABC,JABC)=VALUP*FOUR
      E2W(IABC,JABC)=VALUW*FOUR
  110 CONTINUE
  120 CONTINUE
      IF(IPRNT.LE.3) GO TO 303
      WRITE(6,3)
      CALL MATOUT(E2P,N3N,N3N,N3N,N3N,6)
      WRITE(6,4)
      CALL MATOUT(E2W,N3N,N3N,N3N,N3N,6)
C
C*****************************************
C***SUM UP CONTRIBUTIONS FROM MO CHANGE***
C*****************************************
  303 DO 125 I=1,N3N
      DO 125 J=1,N3N
      E2M(I,J)=E2P(I,J)+E2W(I,J)
  125 CONTINUE
C
      WRITE(6,5)
      WRITE(6,6)
      CALL MATOUT(E2A,N3N,N3N,N3N,N3N,6)
      WRITE(6,7)
      CALL MATOUT(E2M,N3N,N3N,N3N,N3N,6)
C
      DO 126 I=1,N3N
      DO 126 J=1,N3N
      E2M(I,J)=E2A(I,J)+E2M(I,J)
  126 CONTINUE
      WRITE(6,8)
      CALL MATOUT(E2M,N3N,N3N,N3N,N3N,6)
C
      ITAP15=15
      REWIND ITAP15
      N6N=N3N*2
      WRITE(ITAP15,9) NATOMS,N6N
      WRITE(ITAP15,10) ((E2M(I,J),J=1,N3N),I=1,N3N)
      REWIND ITAP15
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE SCF2B(EIG,ESO,E2A,E2M,E2P,E2Q,E2R,SA,FA,DP,DM,U,T,
     1                 LBLI,BUFI)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),ESO(NBFAO,NBASIS)
      DIMENSION E2A(N3N,N3N),E2M(N3N,N3N)
      DIMENSION E2P(N3N,N3N),E2Q(N3N,N3N),E2R(N3N,N3N)
      DIMENSION SA(NTRI,N3N),FA(NTRI,N3N),DP(NTRI,N3N),DM(NTRI,N3N)
      DIMENSION U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI101/IHOMO,ILUMO
      DATA ZERO,TWO,THREE,FOUR / 0.0D+00 , 2.0D+00 , 3.0D+00 , 4.0D+00 /
    1 FORMAT(//,2X,' DM MATRIX IN SCF2B'/)
    2 FORMAT(//,2X,' DP MATRIX IN SCF2B'/)
    3 FORMAT(//,2X,' IABC = ',I5/)
    4 FORMAT(//,2X,' U MATRIX, IABC = ',I5/)
    5 FORMAT(//,2X,' E2P MATRIX'/)
    6 FORMAT(//,2X,' E2Q MATRIX'/)
    7 FORMAT(//,2X,' E2R MATRIX'/)
    8 FORMAT(//,2X,' E2M MATRIX'/)
    9 FORMAT(///
     1 2X,':::::::::::::::::::::::::::::::::::::::::::::'/
     2 2X,':::SUMMARY OF FIRST ORDER CPHF CALCULATION:::'/
     3 2X,':::::::::::::::::::::::::::::::::::::::::::::'/)
   10 FORMAT(//,2X,' E2A MATRIX'/)
   11 FORMAT(//,2X,' E2M MATRIX'/)
   12 FORMAT(//,2X,' SCF SECOND DERIVATIVE MATRIX'/)
   13 FORMAT(2I5)
   14 FORMAT(3F20.10)
C
      CALL SREW(ITAP44)
      DO 101 IABC=1,N3N
      IS=ISA(IABC)
      CALL RREAD(ITAP44,SA(1,IABC),NTRI2,IS)
  101 CONTINUE
C
C   FORM DENSITY LIKE MATRICES
      CALL DEMAT(ESO,DP,SA,U,N3N)
C
C   FORM HALF-TRANSFORMED DENSITY LIKE MATRICES
      CALL PDMAT(DP,DM,N3N,LBLI,BUFI)
      IF(IPRNT.LE.4) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DM,NTRI,N3N,NTRI,N3N,6)
C
  201 CONTINUE
      DO 102 IABC=1,N3N
      CALL MOCONS(DM(1,IABC),NTRI,DP(1,IABC),NTRI,ESO,U,T)
  102 CONTINUE
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,2)
      CALL MATOUT(DP,NTRI,N3N,NTRI,N3N,6)
C
  202 CONTINUE
      DO 105 IABC=1,N3N
      DO 104 JABC=1,N3N
      VALUM=ZERO
      DO 103 I=1,IHOMO
      DO 103 J=1,IHOMO
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      VALUM=VALUM+SA(IJ,JABC)*DP(IJ,IABC)
  103 CONTINUE
      E2M(IABC,JABC)=VALUM*TWO
  104 CONTINUE
  105 CONTINUE
C
      DO 106 IABC=1,N3N
      IT=IFA(IABC)
      CALL RREAD(ITAP44,FA(1,IABC),NTRI2,IT)
  106 CONTINUE
C
C:::B COORDINATE:::
      DO 120 IABC=1,N3N
      IU=IUA(IABC)
      CALL RREAD(ITAP44,U,NBASQ,IU)
C     IF(IPRNT.LE.2) GO TO 203
C     WRITE(6,3) IABC
  203 CONTINUE
      IF(IPRNT.LE.4) GO TO 204
      WRITE(6,4) IABC
      CALL MATOUT(U,NBASIS,NBASIS,NBASIS,NBASIS,6)
C
C**********************************************
C***CALCULATE CONTRIBUTIONS DUE TO MO CHANGE***
C**********************************************
C:::A COORDINATES:::
  204 CONTINUE
      DO 110 JABC=1,N3N
      VALUP=ZERO
      VALUQ=zero
      VALUR=zero
C
      DO 109 I=1,IHOMO
      DO 107 J=1,IHOMO
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      VALUP=VALUP-(SA(IJ,IABC)*FA(IJ,JABC)+SA(IJ,JABC)*FA(IJ,IABC))
      VALUQ=VALUQ+(SA(IJ,JABC)*SA(IJ,IABC))*(EIG(I)*THREE+EIG(J))
  107 CONTINUE
      DO 108 J=ILUMO,NBASIS
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      VALUR=VALUR+U(J,I)*(FA(IJ,JABC)-EIG(I)*SA(IJ,JABC))
  108 CONTINUE
  109 CONTINUE
C
      E2P(IABC,JABC)=VALUP*TWO
      E2Q(IABC,JABC)=VALUQ
      E2R(IABC,JABC)=VALUR*FOUR
  110 CONTINUE
  120 CONTINUE
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,5)
      CALL MATOUT(E2P,N3N,N3N,N3N,N3N,6)
      WRITE(6,6)
      CALL MATOUT(E2Q,N3N,N3N,N3N,N3N,6)
      WRITE(6,7)
      CALL MATOUT(E2R,N3N,N3N,N3N,N3N,6)
      WRITE(6,8)
      CALL MATOUT(E2M,N3N,N3N,N3N,N3N,6)
C
C*****************************************
C***SUM UP CONTRIBUTIONS FROM MO CHANGE***
C*****************************************
  205 CONTINUE
      DO 125 I=1,N3N
      DO 125 J=1,N3N
      E2M(I,J)=E2r(I,J)+E2P(I,J)+E2Q(I,J)+E2m(I,J)
  125 CONTINUE
C
      WRITE(6,9)
      WRITE(6,10)
      CALL MATOUT(E2A,N3N,N3N,N3N,N3N,6)
      WRITE(6,11)
      CALL MATOUT(E2M,N3N,N3N,N3N,N3N,6)
C
      DO 126 I=1,N3N
      DO 126 J=1,N3N
      E2M(I,J)=E2A(I,J)+E2M(I,J)
  126 CONTINUE
      WRITE(6,12)
      CALL MATOUT(E2M,N3N,N3N,N3N,N3N,6)
C
      ITAP15=15
      REWIND ITAP15
      N6N=N3N*2
      WRITE(ITAP15,13) NATOMS,N6N
      WRITE(ITAP15,14) ((E2M(I,J),J=1,N3N),I=1,N3N)
      REWIND ITAP15
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE UCMAT(EIG,ESO,NIJ,KIJ,U,T,DP,DM,B,DEL,LBLI,BUFI,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),NIJ(NTRI,2),KIJ(NTRI,2)
      DIMENSION ESO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION DP(NTRI,NABC),DM(NTRI,NABC),B(NTRI),DEL(NTRI)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF4,MAXBF2
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      COMMON/CI102/NIND,NDEP
      COMMON/CI103/NDEG
      DATA DLIMIT / 1.0D-5 /
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' B0 MATRIX'/)
    2 FORMAT(//,2X,' DP MATRIX'/)
    3 FORMAT(//,2X,' NUMBER OF DEGENERATE PAIRS = ',I5/)
    4 FORMAT(//,2X,' DM MATRIX'/)
C
C   CALL BACK B0 MATRICES
      CALL SREW(ITAP44)
      DO 101 IABC=1,NABC
      IB=IBA(IABC)
      CALL RREAD(ITAP44,DM(1,IABC),NTRI2,IB)
  101 CONTINUE
      IF(IPRNT.LE.4) GO TO 201
      WRITE(6,1)
      CALL MATOUT(DM,NTRI,NABC,NTRI,NABC,6)
C
C   FORM DENSITY LIKE MATRIX IN SO BASIS
  201 CONTINUE
      CALL DDMAT(ESO,NIJ,DP,DM,NABC)
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,2)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
C
C   FORM HALF-TRANSFORMED DENSITY LIKE MATRIX
  202 CONTINUE
      CALL PDMAT(DP,DM,NABC,LBLI,BUFI)
C
      NDEG=0
      DO 102 II=1,NDEP
      I=KIJ(II,1)
      J=KIJ(II,2)
      DEL(II)=ZERO
      DELJI=EIG(J)-EIG(I)
      IF(I.EQ.J) DELJI=ONE
      IF(DABS(DELJI).LE.DLIMIT) NDEG=NDEG+1
      IF(DABS(DELJI).LE.DLIMIT) GO TO 102
      DEL(II)=ONE/DELJI
  102 CONTINUE
      IF(NDEG.NE.0)
     *WRITE(6,3) NDEG
C
      DO 105 IABC=1,NABC
      IB=IBA(IABC)
      CALL MOCONS(DM(1,IABC),NTRI,DP(1,IABC),NTRI,ESO,U,T)
      CALL RREAD(ITAP44,B,NTRI2,IB)
      DO 104 II=1,NDEP
      I=KIJ(II,1)
      J=KIJ(II,2)
      IJ=IOFF(I)+J
      TDEL=DEL(II)
      IF(TDEL.EQ.ZERO) GO TO 104
      B(IJ)=(DP(IJ,IABC)+B(IJ))*TDEL
  104 CONTINUE
      CALL RWRIT(ITAP44,B,NTRI2,IB)
  105 CONTINUE
C
      IF(IPRNT.LE.4) GO TO 203
      WRITE(6,4)
      CALL MATOUT(DP,NTRI,NABC,NTRI,NABC,6)
  203 CONTINUE
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE UXMAT(B,SM,U,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NTRI,NABC),SM(NTRI,NABC),U(NBASIS,NBASIS)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
      DATA ZERO,HALF / 0.0D+00 , 0.5D+00 /
    1 FORMAT(//,2X,' U MATRIX, IABC = ',I5/)
C
      CALL SREW(ITAP44)
      DO 101 IABC=1,NABC
      IB=IBA(IABC)
      CALL RREAD(ITAP44,B(1,IABC),NTRI2,IB)
      IF(IABC.GT.N3N) GO TO 101
      IS=ISA(IABC)
      CALL RREAD(ITAP44,SM(1,IABC),NTRI2,IS)
  101 CONTINUE
C
C   FILL UP THE REST OF U MATRIX
      DO 105 IABC=1,NABC
      IU=IUA(IABC)
      IF(IABC.GT.N3N) GO TO 202
C
      IJ=0
      DO 102 I=1,NBASIS
      DO 102 J=1,I
      IJ=IJ+1
      IF(I.EQ.J) GO TO 201
      U(I,J)=B(IJ,IABC)
      U(J,I)=-U(I,J)-SM(IJ,IABC)
      GO TO 102
  201 U(I,I)=-SM(IJ,IABC)*HALF
  102 CONTINUE
      GO TO 205
C
  202 CONTINUE
      IJ=0
      DO 103 I=1,NBASIS
      DO 103 J=1,I
      IJ=IJ+1
      IF(I.EQ.J) GO TO 203
      U(I,J)=B(IJ,IABC)
      U(J,I)=-U(I,J)
      GO TO 103
  203 U(I,I)=ZERO
  103 CONTINUE
C
  205 CONTINUE
      CALL RWRIT(ITAP44,U(1,1),NBASQ,IU)
 
C
      IF(IPRNT.LE.3) GO TO 105
      WRITE(6,1) IABC
      CALL MATOUT(U,NBASIS,NBASIS,NBASIS,NBASIS,6)
  105 CONTINUE
C
      CALL SREW(ITAP44)
      RETURN
      END
      SUBROUTINE WRBMAT(BB)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION BB(NTRI,1)
      COMMON/BASIS/NBASIS,NTRI,NTRI2,NBFAO,NBATRI,NBASQ
      COMMON/FUNCS/NATOMS,N3N,N3NP3,N3NX3
      COMMON/POSIT/ISA(153),IHA(153),IFA(153),IBA(153),IUA(153)
      COMMON/TAPES/ITAP36,ITAP42,ITAP43,ITAP44
    1 FORMAT(//,2X,' B0 MATRIX'/)
C
      CALL SREW(ITAP44)
      DO 101 IABC=1,N3NP3
      IB=IBA(IABC)
      CALL RREAD(ITAP44,BB(1,IABC),NTRI2,IB)
  101 CONTINUE
      WRITE(6,1)
      CALL MATOUT(BB,NTRI,N3NP3,NTRI,N3NP3,6)
      CALL SREW(ITAP44)
C
      RETURN
      END
