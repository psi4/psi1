      SUBROUTINE ABMAT(ALPA,BETA)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ALPA(NBATRI),BETA(NBATRI)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/COUPL/ALPC(15),BETC(15),ALPT(15),BETT(15)
      COMMON/FUNCS/NTYPES,NATOMS,N3N
      COMMON/GRSCF/FOCC(10),NSORB(10)
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO,QURT,HALF,ONE / 0.0D+00 , 0.25D+00 , 0.5D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' ALPA MATRIX'/)
    2 FORMAT(//,2X,' BETA MATRIX'/)
C
C   SET UP ALPHA AND BETA MATRICES
      DO 101 I=1,NTRI
      ALPA(I)=ZERO
      BETA(I)=ZERO
  101 CONTINUE
C
      NSTRI=0
      NENDI=0
      DO 105 ITYP=1,NTYPES
      MM=NSORB(ITYP)
      IF(MM.EQ.0) GO TO 105
      FI=FOCC(ITYP)
      NSTRI=NENDI+1
      NENDI=NSTRI+MM-1
      NSTRJ=0
      NENDJ=0
      DO 104 JTYP=1,ITYP
      NN=NSORB(JTYP)
      IF(NN.EQ.0) GO TO 104
      FJ=FOCC(JTYP)
      NSTRJ=NENDJ+1
      NENDJ=NSTRJ+NN-1
      DO 102 I=NSTRI,NENDI
      DO 102 J=NSTRJ,NENDJ
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      IIJJ=IOFF(MAX0(ITYP,JTYP))+MIN0(ITYP,JTYP)
      ALPA(IJ)=(ONE-ALPC(IIJJ))*FI*FJ*HALF
      BETA(IJ)=-(ONE-BETC(IIJJ))*FI*FJ*QURT
  102 CONTINUE
  104 CONTINUE
  105 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 205
      WRITE(6,1)
      CALL PRINT(ALPA,NBATRI,NBASIS,6)
      WRITE(6,2)
      CALL PRINT(BETA,NBATRI,NBASIS,6)
C
  205 RETURN
      END
      SUBROUTINE FORMMS(AI,IA,MAXCOR)
      REAL*8 AI
      DIMENSION AI(MAXCOR),IA(MAXCOR*2)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/FUNCS/NTYPES,NATOM,N3N
      COMMON/LOCAT/LOCS(1024)
      COMMON/MFSEC/MFILE,NSECT
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
C
C  NO.  :  CONTENTS
C
C   TRIA. = LOWER TRIANGULAR MATRIX
C   SQUA. = SQUARE MATRIX
C   RECT. = RECTANGULAR MATRIX
C   1   : LOCATION
C   2   : PARAMETERS
C   3   : ENERGIES AND REAL CONSTANTS
C   4   : MO ORDERING IN SCF
C   5   : MO ORDERING IN DRT
C   6   : MO CODE FOR CI
C   7   : MO CODE FOR MCSCF
C   8   : NUCLEAR CHARGE AND GEOMETRY
C   9   : AO-SO TRANSFORMATION MATRIX (RECT.)
C  10   : EIGENVALUES IN PITZER'S SCF (SQUA.)
C  11   : OCCUPATION IN PITZER'S SCF
C  12   : SO-MO EIGENVECTORS IN PITZER'S SCF (SQUA.)
C  13   : AO-MO EIGENVECTORS IN PITZER'S SCF (RECT.)
C  14   : SO OVERLAP INTEGRALS IN PITZER'S SCF (TRIA.)
C  15   : ONE ELECTRON SO INTEGRALS IN PITZER'S SCF (TRIA.)
C  16   : ONE ELECTRON MO INTEGRALS IN PITZER'S SCF (TRIA.)
C  17   : EIGENVALUES IN SORTED SCF
C  18   : OCCUPATION IN SORTED SCF
C  19   : SO-MO EIGENVECTORS IN SORTED SCF (SQUA.)
C  20   : AO-MO EIGENVECTORS IN SORTED SCF (RECT.)
C  21   : SO OVERLAP INTEGRALS IN SORTED SCF (TRIA.)
C  22   : ONE ELECTRON SO INTEGRALS IN SORTED SCF (TRIA.)
C  23   : ONE ELECTRON MO INTEGRLAS IN SORTED SCF (TRIA.)
C  24   : LAGRANGIAN MATRIX FOR SCF IN AO BASIS (TRIA.)
C  25   : LAGRANGIAN MATRIX FOR SCF IN MO BASIS (TRIA.)
C  26   : K MATRIX FOR HIGH SPIN OPEN-SHELL SCF (TRIA.)
C  27   : FIRST ZETA MATRIX  FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  28   : SECOND ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  29   : THIRD ZETA MATRIX  FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  30   : FOURTH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  31   : FIFTH ZETA MATRIX  FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  32   : LAGRANGIAN MATRIX FOR CI IN AO BASIS (TRIA.)
C  33   : LAGRANGIAN MATRIX FOR CI IN MO BASIS (SQUA.)
C  34   : ONE PDM IN AO BASIS FOR CI (TRIA.)
C  35   : ONE PDM IN MO BASIS FOR CI (TRIA.)
C  36   : LAGRANGIAN MATRIX FOR MCSCF IN AO BASIS (TRIA.)
C  37   : LAGRANGIAN MATRIX FOR MCSCF IN MO BASIS (SQUA.)
C  38   : ONE PDM IN AO BASIS FOR MCSCF (TRIA.)
C  39   : ONE PDM IN MO BASIS FOR MCSCF (TRIA.)
C
      NSECT2=NSECT*2
      NSECTH=NSECT/2
      NBASL=((NBASIS-1)/NSECT+1)
      NGEOM=NATOM*8
      NGEOML=((NGEOM-1)/NSECT+1)
      NBAS2=NBASIS*2
      NBAS2L=((NBAS2-1)/NSECT+1)
      NBASQ=NBASIS*NBASIS*2
      NBASQL=((NBASQ-1)/NSECT+1)
      NBASR=NBFAO*NBFSO*2
      NBASRL=((NBASR-1)/NSECT+1)
      NTRI2=NTRI*2
      NTRIL=((NTRI2-1)/NSECT+1)
      NBATRI=IOFF(NBFAO+1)
      NBATR2=NBATRI*2
      NBATRL=((NBATR2-1)/NSECT+1)
      NBASA=NBFAO*NBFAO*2
      NBASAL=((NBASA-1)/NSECT+1)
C
      CALL RFILE(MFILE)
      DO 101 I=1,NBASA
      IA(I)=0
  101 CONTINUE
C
C***1ST MATRIX***
C   SET UP LOCATION OF PARAMETERS AND MATRICES
C   IA(N)         = STARTING POSITION OF THE "N"TH VECTOR
C   IA(N+NSECTH)  = LENGTH OF THE "N"TH VECTOR IN INTEGER WORDS
      IA(1)=1
      IA(1+NSECTH)=NSECT
      IA(2)=IA(1)+1
      IA(2+NSECTH)=NSECT
      IA(3)=IA(2)+1
      IA(3+NSECTH)=NSECT2
      IA(4)=IA(3)+2
      IA(4+NSECTH)=NBASIS
      IA(5)=IA(4)+NBASL
      IA(5+NSECTH)=NBASIS
      IA(6)=IA(5)+NBASL
      IA(6+NSECTH)=NBASIS
      IA(7)=IA(6)+NBASL
      IA(7+NSECTH)=NBASIS
      IA(8)=IA(7)+NBASL
      IA(8+NSECTH)=NGEOM
      IA(9)=IA(8)+NGEOML
      IA(9+NSECTH)=NBASR
      IA(10)=IA(9)+NBASRL
      IA(10+NSECTH)=NBAS2
      IA(11)=IA(10)+NBAS2L
      IA(11+NSECTH)=NBAS2
      IA(12)=IA(11)+NBAS2L
      IA(12+NSECTH)=NBASQ
      IA(13)=IA(12)+NBASQL
      IA(13+NSECTH)=NBASR
      IA(14)=IA(13)+NBASRL
      IA(14+NSECTH)=NTRI2
      IA(15)=IA(14)+NTRIL
      IA(15+NSECTH)=NTRI2
      IA(16)=IA(15)+NTRIL
      IA(16+NSECTH)=NTRI2
      IA(17)=IA(16)+NTRIL
      IA(17+NSECTH)=NBAS2
      IA(18)=IA(17)+NBAS2L
      IA(18+NSECTH)=NBAS2
      IA(19)=IA(18)+NBAS2L
      IA(19+NSECTH)=NBASQ
      IA(20)=IA(19)+NBASQL
      IA(20+NSECTH)=NBASR
      IA(21)=IA(20)+NBASRL
      IA(21+NSECTH)=NTRI2
      IA(22)=IA(21)+NTRIL
      IA(22+NSECTH)=NTRI2
      IA(23)=IA(22)+NTRIL
      IA(23+NSECTH)=NTRI2
      IA(24)=IA(23)+NTRIL
      IA(24+NSECTH)=NBATR2
      IA(25)=IA(24)+NBATRL
      IA(25+NSECTH)=NTRI2
      IA(26)=IA(25)+NTRIL
      IA(26+NSECTH)=NTRI2
      IA(27)=IA(26)+NTRIL
      IA(27+NSECTH)=NTRI2
      IA(28)=IA(27)+NTRIL
      IA(28+NSECTH)=NTRI2
      IA(29)=IA(28)+NTRIL
      IA(29+NSECTH)=NTRI2
      IA(30)=IA(29)+NTRIL
      IA(30+NSECTH)=NTRI2
      IA(31)=IA(30)+NTRIL
      IA(31+NSECTH)=NTRI2
      IA(32)=IA(31)+NTRIL
      IA(32+NSECTH)=NBATR2
      IA(33)=IA(32)+NBATRL
      IA(33+NSECTH)=NBASQ
      IA(34)=IA(33)+NBASQL
      IA(34+NSECTH)=NBATR2
      IA(35)=IA(34)+NBATRL
      IA(35+NSECTH)=NTRI2
      IA(36)=IA(35)+NTRIL
      IA(36+NSECTH)=NBATR2
      IA(37)=IA(36)+NBATRL
      IA(37+NSECTH)=NBASQ
      IA(38)=IA(37)+NBASQL
      IA(38+NSECTH)=NBATR2
      IA(39)=IA(38)+NBATRL
      IA(39+NSECTH)=NTRI2
C
      DO 102 I=1,NSECT
  102 LOCS(I)=IA(I)
C
      CALL RWRIT(MFILE,IA,NSECT,LOCS(1))
C
C***2ND MATRIX***
C   STORE PARAMETERS
      IDUMP=0
      IA(1)=NSECT
      IA(2)=IDUMP
      IA(3)=NBASIS
      IA(4)=NTRI
C     IA(5)=NTOT
C$$$WARNING---DO NOT USE NTOT FOR A LARGE CASE...OVERFLOWS$$$
      IA(6)=IOPEN
C     IA(7)=IOCC
C     IA(8)=KOCC
C     IA(9)=JOCC
      IA(10)=NATOM
      IA(11)=NBFAO
      IA(12)=NBFSO
      IA(13)=NSYM
C     IA(14)=NWLK
C     IA(15)=NMCSCF
C     IA(16)=ITCSCF
      IA(17)=N3N
C     IA(18)=NTYPES
C     IA(19)='SCFTYP'
C     IA(20)='CITYP'
C     IA(21)='DERTYP'
C     IA(31)=NDEG(1)
C     IA(32)=NDEG(2)
C     IA(33)=NDEG(3)
C     IA(34)=NDEG(4)
C     IA(35)=NDEG(5)
C     IA(36)=NDEG(6)
C     IA(37)=NDEG(7)
C     IA(38)=NDEG(8)
C     IA(39)=NDEG(9)
C     IA(40)=NDEG(10)
C     IA(41)=NSORB(1)
C     IA(42)=NSORB(2)
C     IA(43)=NSORB(3)
C     IA(44)=NSORB(4)
C     IA(45)=NSORB(5)
C     IA(46)=NSORB(6)
C     IA(47)=NSORB(7)
C     IA(48)=NSORB(8)
C     IA(49)=NSORB(9)
C     IA(50)=NSORB(10)
      CALL RWRIT(MFILE,IA,NSECT,LOCS(2))
C
C***3RD MATRIX***
C   STORE ENERGIES AND REAL CONSTANTS
C     AI(1)=ENUC
C     AI(2)=ESCF
C     AI(3)=ECIFZC
C     AI(4)=ECI
C     AI(5)=ECICOR
C     AI(6)=CNOTCI
C     AI(7)=EMCFZC
C     AI(8)=EMC
C     AI(9)=EMCCOR
C     AI(10)=CNOTMC
C     AI(11)=ALPC(1)
C     AI(12)=ALPC(2)
C     AI(13)=ALPC(3)
C     AI(14)=ALPC(4)
C     AI(15)=ALPC(5)
C     AI(16)=ALPC(6)
C     AI(17)=ALPC(7)
C     AI(18)=ALPC(8)
C     AI(19)=ALPC(9)
C     AI(20)=ALPC(10)
C     AI(21)=ALPC(11)
C     AI(22)=ALPC(12)
C     AI(23)=ALPC(13)
C     AI(24)=ALPC(14)
C     AI(25)=ALPC(15)
C     AI(26)=BETC(1)
C     AI(27)=BETC(2)
C     AI(28)=BETC(3)
C     AI(29)=BETC(4)
C     AI(30)=BETC(5)
C     AI(31)=BETC(6)
C     AI(32)=BETC(7)
C     AI(33)=BETC(8)
C     AI(34)=BETC(9)
C     AI(35)=BETC(10)
C     AI(36)=BETC(11)
C     AI(37)=BETC(12)
C     AI(38)=BETC(13)
C     AI(39)=BETC(14)
C     AI(40)=BETC(15)
C     AI(41)=FOCC(1)
C     AI(42)=FOCC(2)
C     AI(43)=FOCC(3)
C     AI(44)=FOCC(4)
C     AI(45)=FOCC(5)
C     AI(46)=FOCC(6)
C     AI(47)=FOCC(7)
C     AI(48)=FOCC(8)
C     AI(49)=FOCC(9)
C     AI(50)=FOCC(10)
      CALL RWRIT(MFILE,IA,NSECT2,LOCS(3))
C
C***4TH MATRIX***
C   STORE MO ORDERING IN SCF
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(4))
C
C***5TH MATRIX***
C   STORE MO ORDERING IN DRT
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(5))
C
C***6TH MATRIX***
C   STORE MO CODE FOR CI
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(6))
C
C***7TH MATRIX***
C   STORE MO CODE FOR MCSCF
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(7))
C
C***8TH MATRIX***
C   STORE NUCLEAR CHARGE AND GEOMETRY
      CALL RWRIT(MFILE,IA,NGEOM,LOCS(8))
C
C***9TH MATRIX***
C   STORE AO-SO MATRIX (RECTANGULAR MATRIX)
      CALL RWRIT(MFILE,IA,NBASR,LOCS(9))
C
C***10 TH MATRIX***
C   STORE EIGENVALUES IN PITZER'S SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(10))
C
C***11TH MATRIX***
C   STORE OCCUPATION IN PITZER'S SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(11))
C
C***12TH MATRIX***
C   STORE SO-MO EIGENVECTORS IN PITZER'S SCF (SQUARE MATRIX)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(12))
C
C***13TH MATRIX***
C   STORE AO-MO EIGENVECTORS IN PITZER'S SCF (RECTANGULAR MATRIX)
      CALL RWRIT(MFILE,IA,NBASR,LOCS(13))
C
C***14TH MATRIX***
C   STORE SO OVERLAP INTEGRALS IN PITZER'S SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(14))
C
C***15TH MATRIX***
C   STORE ONE ELECTRON SO INTEGRALS IN PITZER'S SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(15))
C
C***16TH MATRIX***
C   STORE ONE ELECTRON MO INTEGRALS IN PITZER'S SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(16))
C
C***17TH MATRIX***
C   STORE EIGENVALUES IN SORTED SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(17))
C
C***18TH MATRIX***
C   STORE OCCUPATION IN SORTED SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(18))
C
C***19TH MATRIX***
C   STORE SO-MO EIGENVECTORS IN SORTED SCF (SQUARE MATRIX)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(19))
C
C***20TH MATRIX***
C   STORE AO-MO EIGENVECTORS IN SORTED SCF (RECTANGULAR MATRIX)
      CALL RWRIT(MFILE,IA,NBASR,LOCS(20))
C
C***21ST MATRIX***
C   STORE SO OVERLAP INTEGRALS IN SORTED SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(21))
C
C***22ND MATRIX***
C   STORE ONE ELECTRON SO INTEGRALS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(22))
C
C***23RD MATRIX***
C   STORE ONE ELECTRON MO INTEGRALS IN SORTED SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(23))
C
C***24TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR SCF IN AO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(24))
C
C***25TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR SCF IN MO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(25))
C
C***26TH MATRIX***
C   STORE K MATRIX FOR HIGH SPIN OPEN-SHELL SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(26))
C
C***27TH MATRIX***
C   STORE FISRTST ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF
C   (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(27))
C
C***28TH MATRIX***
C   STORE SECOND ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF
C   (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(28))
C
C***29TH MATRIX***
C   STORE THIRD ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF
C   (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(29))
C
C***30TH MATRIX***
C   STORE FOURTH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF
C   (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(30))
C
C***31ST MATRIX***
C   STORE FIFTH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF
C   (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(31))
C
C***32ND MATRIX***
C   STORE LAGRANGIAN MATRIX FOR CI IN AO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(32))
C
C***33RD MATRIX***
C   STORE LAGRANGIAN MATRIX FOR CI IN MO BASIS (SQUARE MATRIX)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(33))
C
C***34TH MATRIX***
C   STORE ONE PDM IN AO BASIS FOR CI (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(34))
C
C***35TH MATRIX***
C   STORE ONE PDM IN MO BASIS FOR CI (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(35))
C
C***36TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR MCSCF IN AO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(36))
C
C***37TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR MCSCF IN MO BASIS (SQUARE MATRIX)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(37))
C
C***38TH MATRIX***
C   STORE ONE PDM IN AO BASIS FOR MCSCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(38))
C
C***39TH MATRIX***
C   STORE ONE PDM IN MO BASIS FOR MCSCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(39))
C
      RETURN
      END
cets The following is called by a C program which handles dynamic
cets allocation of memory.
      subroutine fentry(cc,ia,maxcor)
cets  PROGRAM MASTER
C   THIS PROGRAM FORMS THE MASTER FILE
C   USING THE PITZER'S SCF INFORMATION
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
c       by:  Edward Seidl (cets)                                      *
c     date:  October 22, 1988                                         *
c   reason:  dynamically allocate core                                *
c**********************************************************************
c       by:  Edward Seidl                                             *
c     date:  October 17, 1988                                         *
c   reason:  close file34 if scf or close file36 if ci and itest = 1  *
c**********************************************************************
C*  BY:  RICHARD REMINGTON                                  c3-12-88  *
C*  DATE:  MARCH  12,  1988                                           *
C*  REASON: DECREASE CORE TO RUN IN 7MB ON 9370                       *
C**********************************************************************
C*  LAST UPDATED ON MAY 08, 1985 BY YUKIO YAMAGUCHI                   *
C**********************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
c3-12-88  DIMENSION CC(1200000),IA(1)
cets  DIMENSION CC(720000),IA(1)
      dimension cc(maxcor),ia(intowp(maxcor))
      INTEGER BLABEL(20)
      INTEGER ND(10),MNL(142),MS(142),MTYPE(2,20),ITYP(20)
      DIMENSION A30(200)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      CHARACTER*8 TAPE,OPTYPE
      LOGICAL TAPE36
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/CALIF/LPARA(1024),APARA(1024)
      COMMON/COUPL/ALPC(15),BETC(15),ALPT(15),BETT(15)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FLAGS/MCONST,MPOINT,NCALCS,MXCOEF
      COMMON/FUNCS/NTYPES,NATOM,N3N
      COMMON/GRSCF/FOCC(10),NSORB(10)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/LOCAT/LOCS(1024)
      COMMON/MFSEC/MFILE,NSECT
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/OPEN2/GOCC(10)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/TEMPS/I30(400)
      COMMON/TYPES/SCFTYP,CITYP,DERTYP
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
cets  EQUIVALENCE (CC,IA)
      EQUIVALENCE (I30,A30)
    1 FORMAT(//,2X,' THE MASTER FILE PROGRAM'//)
    2 FORMAT(3(A8,2X))
    3 FORMAT(5I5)
    4 FORMAT(2X,' BLABEL = ',20A4/)
    5 FORMAT(2X,' ENUC   = ',F15.8/)
    6 FORMAT(2X,' NST    = ',I5/2X,' NDEG   =',8I5/)
    7 FORMAT(A8,2X,I5)
    8 FORMAT(F10.5,10I5)
    9 FORMAT(A8,2X)
   10 FORMAT(2X,' NBASIS = ',I8/
     1       2X,' NTRI   = ',I8/
     2       2X,' NSYM   = ',I8/
     3       2X,' NBFAO  = ',I8/
     4       2X,' NBFSO  = ',I8/
     5       2X,' NBATRI = ',I8/
     6       2X,' NATOM  = ',I8/
     7       2X,' N3N    = ',I8/
     8       2X,' IOPEN  = ',I8/
     9       2X,' IPRNT  = ',I8/
     A       2X,' SCFTYP = ',A8/
     B       2X,' CITYP  = ',A8/
     C       2X,' DERTYP = ',A8/
     D       2X,' TAPE   = ',A8/
     e       2x,' itest  = ',i8)
   11 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
   12 FORMAT(//,2X,' REQUIRED MEMORY EXCEEDS MAXCOR '/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
C
C   ITAP34 = SO INTEGRALS
C   ITAP36 = TWO ELECTRON SO INTEGRALS
C
c     CALL TSTART(6)
      CALL drum
      CALL INITMF(0)
C
      ITAPE3=3
      ITAPE6=6
      ITAP30=30
      ITAP34=34
      ITAP36=36
c3-12-88  MAXCOR=1200000
cets  MAXCOR=720000
      TAPE36=.TRUE.
      INPUT=5
      CALL LOCATE(INPUT,'# MASTER #',IERR)
C
      WRITE(6,1)
      WRITE(3,1)
C
      READ(5,2) SCFTYP,CITYP,DERTYP
      READ(5,3) IPRNT,itest
C
      IOFF(1)=0
      DO 101 I=1,255
  101 IOFF(I+1)=IOFF(I)+I
C
C   READ IN INTEGRAL INFORMATION FROM 34 FILE
      CALL RFILE(ITAP34)
      CALL WREADW(ITAP34,NKIND,1,1,IEND)
      CALL WREADW(ITAP34,ICLOS,1,IEND,IEND)
      CALL WREADW(ITAP34,BLABEL,20,IEND,IEND)
      CALL WREADW(ITAP34,ENUC,2,IEND,IEND)
      CALL WREADW(ITAP34,NST,1,IEND,IEND)
      CALL WREADW(ITAP34,ND,NST,IEND,IEND)
      CALL WREADW(ITAP34,ITYP,NST,IEND,IEND)
      CALL WREADW(ITAP34,NDEG,NST,IEND,IEND)
      CALL WREADW(ITAP34,NS,1,IEND,IEND)
      CALL WREADW(ITAP34,MTYPE,2*NS,IEND,IEND)
      CALL WREADW(ITAP34,LAPU,1,IEND,IEND)
      CALL WREADW(ITAP34,MS,LAPU,IEND,IEND)
      CALL WREADW(ITAP34,MNL,LAPU,IEND,IPARA)
C     WRITE(6,30) IPARA
C  30 FORMAT(2X,' IPARA = ',I10/)
      ISADR=I2SEC(IPARA)+1
      CALL RSETSA(ITAP34,ISADR)
C
      WRITE(6,4) BLABEL
C     WRITE(3,4) BLABEL
C     WRITE(6,5) ENUC
      WRITE(3,5) ENUC
C     WRITE(6,6) NST,(NDEG(I),I=1,NST)
      WRITE(3,6) NST,(NDEG(I),I=1,NST)
C
      NSYM=0
      NBASIS=0
      DO 102 I=1,NST
      IF(NDEG(I).GT.0) NSYM=NSYM+1
      NBASIS=NBASIS+NDEG(I)
  102 CONTINUE
      IDEG(1)=0
      LSYM(1)=0
      IF(NSYM.EQ.1) GO TO 203
      II=0
      DO 103 I=2,NST
      IF(NDEG(I).LE.0) GO TO 202
  201 II=II+1
      NN=NDEG(II)
      IF(NN.EQ.0) GO TO 201
      IDEG(I)=IDEG(I-1)+NN
      LSYM(I)=LSYM(I-1)+IOFF(NN+1)
      GO TO 103
  202 LSYM(I)=LSYM(I-1)
      IDEG(I)=IDEG(I-1)
  103 CONTINUE
  203 NTRI=IOFF(NBASIS+1)
C
C   READ IN PARAMETERS FROM TAPE30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      IEND=I30(1)
      MPOINT=I30(2)
      MCONST=I30(3)
      MCALCS=I30(4)
      NCALCS=I30(5)
      NBFSO=I30(18)
      NATOM=I30(19)
      NBFAO=I30(22)
      NBATRI=IOFF(NBFAO+1)
      MXCOEF=I30(42)
      IOPEN=I30(43)
      N3N=NATOM*3
C
C   INPUT SHELL INFORMATION ONLY FOR A GRSCF OPEN-SHELL CASE
C   UNNECESSARY FOR A TCSCF CASE
      CALL LOCATE(INPUT,'# MASTER #',IERR)
      READ(5,2) SCFTYP,CITYP,DERTYP
      READ(5,3) IPRNT
      IF(SCFTYP.NE.'GRSCF   ') GO TO 205
      IF(IOPEN.EQ.0) GO TO 205
      READ(5,7) OPTYPE,NUNIQ
      DO 105 I=1,NUNIQ
      READ(5,8) GOCC(I),LL,(MOPN(I,J),J=1,LL)
      LOPN(I)=LL
  105 CONTINUE
  205 CONTINUE
      READ(5,9) TAPE
      IF(TAPE.EQ.'NOTAPE36') TAPE36=.FALSE.
      IF(TAPE.EQ.'NOFILE36') TAPE36=.FALSE.
      IF(TAPE36) TAPE='  TAPE36'
      WRITE(6,10) NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI,NATOM,N3N,IOPEN,
     1           IPRNT,SCFTYP,CITYP,DERTYP,TAPE,itest
C
C   FORM MASTER FILE
      WRITE(3,20)
   20 FORMAT(//,2X,' NOW YOU ARE IN FORMMS'/)
      CALL FORMMS(CC,IA,MAXCOR)
C
C   CREATE SO INTEGRAL FILES
      WRITE(3,21)
   21 FORMAT(//,2X,' NOW YOU ARE IN RDONE'/)
      IBUFHF=4471
      IC1=1
      IC2=IC1+NTRI
      IC3=IC2+NTRI
      IC4=IC3+NTRI
      IC5=IC4+NTRI
      IA5=IC5+IC5-1
      ICMAX=IC5+IBUFHF
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................S       H       T       V       LBLI    STVI....
      CALL RDONE(CC(IC1),CC(IC2),CC(IC3),CC(IC4),IA(IA5),CC(IC5),
C.......................
     1           IBUFHF)
      CALL MWRIT(CC(IC1),14)
      CALL MWRIT(CC(IC2),15)
      CALL MWRIT(CC(IC1),21)
      CALL MWRIT(CC(IC2),22)
C
      IF(.NOT.TAPE36) GO TO 300
      WRITE(3,22)
   22 FORMAT(//,2X,' NOW YOU ARE IN RDTWO'/)
      IBUFHF=4471
      IC1=1
      IA1=1
      IC2=IC1+IBUFHF
      IA2=IC2+IC2-1
C................LBLI    PKI     LBLO    BUFO...........
      CALL RDTWO(IA(IA1),CC(IC1),IA(IA2),CC(IC2),IBUFHF)
C
C   READ IN SCF INFORMATION FROM TAPE30
  300 CONTINUE
      WRITE(3,23)
   23 FORMAT(//,2X,' NOW YOU ARE IN SCFINP'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IA7=IC7+IC7-1
      IC8=IC7+NATOM
      IA8=IC8+IC8-1
      ICMAX=IC8+NATOM*3
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................EIG     OCC     ESO     UAS     EAO     EE......
      CALL SCFINP(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C.................CHGS    XX......
     1            CC(IC7),CC(IC8))
      CALL MWRIT(CC(IC1),10)
      CALL MWRIT(CC(IC2),11)
      CALL MWRIT(CC(IC3),12)
      CALL MWRIT(CC(IC4),9)
      CALL MWRIT(CC(IC5),13)
      CALL MWRIT(CC(IC7),8)
C
C    SORT EIGENVECTORS IF NECESSARY
      WRITE(3,24)
   24 FORMAT(//,2X,' NOW YOU ARE IN SORT'/)
      CALL MREAD(LPARA,2)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBASIS
      IC9=IC8+NBASIS
      IA9=IC9+IC9-1
      IC10=IC9+NBASIS
      IA10=IC10+IC10-1
      IC11=IC10+NBASIS
      IA11=IC11+IC11-1
      IC12=IC11+NBASIS
      IA12=IC12+IC12-1
      ICMAX=IC12+NBASIS
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C...............EIG     OCC     ESO     UAS     EAO     EE......
      CALL SORT(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C...............EGN     OCN.....
     1          CC(IC7),CC(IC8),
C...............KORD    LORD     MORD     NORD.....
     2          IA(IA9),IA(IA10),IA(IA11),IA(IA12))
      CALL MWRIT(CC(IC1),17)
      CALL MWRIT(CC(IC2),18)
      CALL MWRIT(CC(IC3),19)
      CALL MWRIT(CC(IC5),20)
      CALL MWRIT(LPARA,2)
      CALL MWRIT(I30,3)
      CALL MWRIT(IA(IA10),4)
C
C    FORM LAGRANGIAN AND DENSITY MATRICES FOR CLSCF
      IF(SCFTYP.NE.'CLSCF   ') GO TO 206
      WRITE(3,25)
   25 FORMAT(//,2X,' NOW YOU ARE IN SCFCL'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBATRI
      IC8=IC7+NBATRI
      ICMAX=IC8+NBATRI
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     OCC     EAO     WM      WA      DC......
      CALL SCFCL(CC(IC1),CC(IC2),CC(IC5),CC(IC6),CC(IC7),CC(IC8))
      GO TO 210
C
C   FORM HIGH-SPIN OPEN-SHELL MO
  206 IF(SCFTYP.NE.'HSOP    ') GO TO 207
      WRITE(3,26)
   26 FORMAT(//,2X,' NOW YOU ARE IN SCFHS'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBFAO*NBFAO
      IC9=IC8+NBATRI
      IC10=IC9+NBATRI
      IC11=IC10+NBATRI
      IC12=IC11+NBATRI
      IC13=IC12+NBATRI
      IC14=IC13+NBATRI
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBATRI
      IC18=IC17+NBFAO*NBFAO
      IC19=IC18+NBFAO*NBFAO
      IA19=IC19+IC19-1
      IC20=IC19+MAXBF2
      ICMAX=IC20+NBFAO*4
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     OCC     ESO     UAS     EAO     U.......
      CALL SCFHS(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................T       H       DC      DO       FC       FF.......
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................FK       FT       WM       WA       EE       EZ.......
     2           CC(IC13),CC(IC14),CC(IC15),CC(IC16),CC(IC17),CC(IC18),
C................LBLI     BUFI     CC.......
     3           IA(IA19),CC(IC19),CC(IC20))
      CALL MWRIT(CC(IC1),17)
      CALL MWRIT(CC(IC2),18)
      CALL MWRIT(CC(IC3),19)
      CALL MWRIT(CC(IC5),20)
      GO TO 210
C
C   FORM GENERALIZED OPEN-SHELL MO
  207 IF(SCFTYP.NE.'GRSCF   '.AND.SCFTYP.NE.'TCSCF   ') GO TO 210
      IF(CITYP.EQ.'SCF     '.AND.DERTYP.EQ.'FIRST   ') GO TO 208
      IF(CITYP.EQ.'SCF     '.AND.DERTYP.EQ.'SECOND  ') GO TO 208
      WRITE(3,27)
   27 FORMAT(//,2X,' NOW YOU ARE IN SCFGR'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBFAO*NBFAO
      IC9=IC8+NBATRI
      IC10=IC9+NBATRI
      IC11=IC10+NBATRI
      IC12=IC11+NBATRI
      IC13=IC12+NBATRI
      IC14=IC13+NBFAO*NBFAO
      IC15=IC14+NBFAO*NBFAO
      IA15=IC15+IC15-1
      IC16=IC15+MAXBF2
      ICMAX=IC16+NBFAO*4
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     OCC     ESO     UAS     EAO     U.......
      CALL SCFGR(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................T       H       DC      FC       FM       FF.......
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................EE       EZ       LBLI     BUFI     CC.......
     2           CC(IC13),CC(IC14),IA(IA15),CC(IC15),CC(IC16))
      CALL MWRIT(CC(IC1),17)
      CALL MWRIT(CC(IC2),18)
      CALL MWRIT(CC(IC3),19)
      CALL MWRIT(CC(IC5),20)
C
C   FORM ALPA AND BETA MATRICES
  208 CONTINUE
      WRITE(3,28)
   28 FORMAT(//,2X,' NOW YOU ARE IN ABMAT'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBFAO*NBFAO
      IC9=IC8+NBATRI
      IC10=IC9+NBATRI
      ICMAX=IC10+NBATRI
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................ALPA    BETA.....
      CALL ABMAT(CC(IC9),CC(IC10))
C
C   FORM LAGRANGIAN MATRICES
      WRITE(3,29)
   29 FORMAT(//,2X,' NOW YOU ARE IN ZETMAT'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBFAO*NBFAO
      IC9=IC8+NBATRI
      IC10=IC9+NBATRI
      IC11=IC10+NBATRI
      IC12=IC11+NBATRI*NTYPES
      IC13=IC12+NBATRI*NTYPES
      IC14=IC13+NBATRI*NTYPES
      IC15=IC14+NBATRI*NTYPES
      IC16=IC15+NBATRI
      IC17=IC16+NBATRI
      IC18=IC17+NBATRI
      IC19=IC18+NBATRI
      IA19=IC19+IC19-1
      ICMAX=IC19+MAXBF2
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................EIG     OCC     ESO     EAO     U       T.......
      CALL ZETMAT(CC(IC1),CC(IC2),CC(IC3),CC(IC5),CC(IC6),CC(IC7),
C.................H       ALPA    BETA     DA       DB       ZT.......
     1            CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),CC(IC13),
C.................ZETA     EPS      EPA      DT       XA       LBLI.....
     2            CC(IC14),CC(IC15),CC(IC16),CC(IC17),CC(IC18),IA(IA19),
C.................BUFI.....
     3            CC(IC19))
C
  210 CONTINUE
      GO TO 400
  399 WRITE(3,12) ICMAX,MAXCOR
  400 CONTINUE
C
cets added to get rid of file36 if not scf2nd
      if (cityp.eq.'CI   '.and.itest.eq.1) then
         call rclose(itap36,4)
      else
          CALL RCLOSE(ITAP36,3)
      endif
      CALL RCLOSE(MFILE,3)
      if (cityp.eq.'SCF  '.and.itest.eq.1) then
         call rclose(itap34,4)
      else
         call rclose(itap34,3)
      endif
c     CALL TSTOP(6)
C
      STOP
      END
      SUBROUTINE MOCONV(SA,NNA,SM,NNM,ESO,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SA(NNA),SM(NNM)
      DIMENSION ESO(NBFSO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO / 0.0D+00 /
      DATA XLIMIT / 1.0D-35 /
C
C    TRANSFORMATION FROM SO TO MO BASIS
C
      DO 101 II=1,NBFSO
      DO 101 JJ=1,II
      IIJJ=IOFF(II)+JJ
      SAX=SA(IIJJ)
      IF(DABS(SAX).LT.XLIMIT) SAX=ZERO
      T(II,JJ)=SAX
      T(JJ,II)=SAX
  101 CONTINUE
      DO 103 II=1,NBFSO
      DO 103 J=1,NBASIS
      SUM=ZERO
      DO 102 JJ=1,NBFSO
      SUM=SUM+ESO(JJ,J)*T(II,JJ)
  102 CONTINUE
      U(II,J)=SUM
  103 CONTINUE
      DO 105 I=1,NBASIS
      DO 105 J=1,I
      IJ=IOFF(I)+J
      SUM=ZERO
      DO 104 II=1,NBFSO
      SUM=SUM+ESO(II,I)*U(II,J)
  104 CONTINUE
      SM(IJ)=SUM
  105 CONTINUE
C
      RETURN
      END
      SUBROUTINE ONEI(X,LBLI,STVI,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION X(NTRI),LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      DATA ZERO / 0.0D+00 /
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,8I5,3F15.7)
C
      DO 101 I=1,NTRI
  101 X(I)=ZERO
C
      IBUFSZ=8942
      IBUFS3=1491
      INTI=0
      NBLI=0
  201 NBLI=NBLI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
      IF(IPRNT.GE.5)
     *WRITE(6,1) ILSTI,NBUF
C***  WRITE(8,15) NBUF
C**15 FORMAT(I5)
      DO 102 I=1,NBUF
      JSM=ISHFT(LBLI(I+2),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+2),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      IIJJ=IOFF(II)+JJ
      STV0=STVI(I+IBUFS3)
      X(IIJJ)=STV0
C***  WRITE(8,10) II,JJ,STV0
C     IF(IPRNT.LE.6) GO TO 102
C     WRITE(6,2) I,IOR,ISM,JOR,JSM,II,JJ,IIJJ,STV0
C**10 FORMAT(2I5,F20.10)
  102 CONTINUE
      INTI=INTI+NBUF
      IF(ILSTI.EQ.0) GO TO 201
C
      RETURN
      END
      SUBROUTINE ORDR(A,NORD,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(N),NORD(N)
C
      DO 101 I=1,N
      NORD(I)=I
  101 CONTINUE
      IF(N.LE.1) GO TO 201
      N1=N-1
      DO 103 I=1,N1
      IR=I+1
      DO 102 J=IR,N
      IF(A(I).LT.A(J)) GO TO 102
      AA=A(I)
      A(I)=A(J)
      A(J)=AA
      NN=NORD(I)
      NORD(I)=NORD(J)
      NORD(J)=NN
  102 CONTINUE
  103 CONTINUE
  201 RETURN
C
      ENTRY REORDR(A,NORD,N)
      DO 105 I=1,N
  105 NORD(I)=I
      IF(N.LE.1) GO TO 205
      N1=N-1
      DO 107 I=1,N1
      IR=I+1
      DO 106 J=IR,N
      IF(A(I).GE.A(J)) GO TO 106
      AA=A(I)
      A(I)=A(J)
      A(J)=AA
      NN=NORD(I)
      NORD(I)=NORD(J)
      NORD(J)=NN
  106 CONTINUE
  107 CONTINUE
  205 RETURN
      END
      SUBROUTINE RDONE(S,H,T,V,LBLI,STVI,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION S(NTRI),H(NTRI),T(NTRI),V(NTRI)
      DIMENSION LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' S MATRIX'/)
    2 FORMAT(//,2X,' T MATRIX'/)
    3 FORMAT(//,2X,' V MATRIX'/)
    4 FORMAT(//,2X,' H MATRIX'/)
C
C   READ IN ONE ELECTRON INTEGRALS
C
C***  ITAPE8=8
C***  REWIND ITAPE8
C   S INTEGRALS
      CALL ONEI(S,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL PRINT(S,NTRI,NBASIS,6)
C
C   T INTEGRALS
  201 CONTINUE
      CALL ONEI(T,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,2)
      CALL PRINT(T,NTRI,NBASIS,6)
C
C   V INTEGRALS
  202 CONTINUE
      CALL ONEI(V,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 203
      WRITE(6,3)
      CALL PRINT(V,NTRI,NBASIS,6)
C
C   TOTAL ONE ELECTRON INTEGRALS
  203 CONTINUE
      DO 101 I=1,NTRI
  101 H(I)=T(I)+V(I)
      IF(IPRNT.LE.3) GO TO 204
      WRITE(6,4)
      CALL PRINT(H,NTRI,NBASIS,6)
C
  204 CONTINUE
CCC   WRITE(6,*) ' ONE ELECTRON INTEGRALS---S , T, V, H'
CCC   DO 102 I=1,NTRI
CCC   WRITE(6,5) I,S(I),T(I),V(I),H(I)
CC102 CONTINUE
CCC 5 FORMAT(2X,I5,5X,4F20.10)
C
      RETURN
      END
      SUBROUTINE RDTWO(LBLI,PKI,LBLO,BUFO,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION LBLI(INBUFS*2),PKI(INBUFS),LBLO(MAXBF4),BUFO(MAXBF2)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      DATA ZERO / 0.0D+00 /
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,9I5,3F15.7)
C
      CALL RFILE(ITAP36)
C
      IBUFSZ=8942
      IBUFQT=2236
      IBL=0
      INTI=0
      INTO=0
      NBLI=0
      NBLO=0
      NINT=0
  201 NBLI=NBLI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
      IF(IPRNT.GE.5)
     *WRITE(6,1) ILSTI,NBUF
C***  WRITE(8,15) NBUF
C**15 FORMAT(I5)
      DO 101 I=1,NBUF
      LOR=ISHFT(LBLI(I+I+2),-2)
      LSM=ISHFT(LOR,-8)
      KOR=ISHFT(LSM,-3)
      KSM=ISHFT(KOR,-8)+1
      KOR=IAND(KOR,255)
      LSM=IAND(LSM,7)+1
      LOR=IAND(LOR,255)
      III=IAND(LBLI(I+I+2),3)
      JSM=ISHFT(LBLI(I+I+1),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+I+1),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      KK=KOR+IDEG(KSM)
      LL=LOR+IDEG(LSM)
      PKII=PKI(I+IBUFQT)
C     IF(IPRNT.LE.4) GO TO 202
C     IJ=IOFF(IOR)+JOR+LSYM(ISM)
C     IF(IOR.LT.JOR) IJ=IOFF(JOR)+IOR+LSYM(JSM)
C     KL=IOFF(KOR)+LOR+LSYM(KSM)
C     IF(KOR.LT.LOR) KL=IOFF(LOR)+KOR+LSYM(LSM)
C     WRITE(6,2) III,IOR,ISM,JOR,JSM,KOR,KSM,LOR,LSM,PKII
C     WRITE(6,20) II,JJ,KK,LL,PKII
C***  WRITE(8,20) II,JJ,KK,LL,PKII
C  20 FORMAT(4I5,F20.10)
  202 CALL PACK(II,JJ,KK,LL,IX,JA,JAA)
      IBL=IBL+1
      LBLO(IBL+IBL-1)=JA
      LBLO(IBL+IBL)=JAA
      BUFO(IBL+MAXBUF)=PKII
      IF(IBL.LT.MAXBUF) GO TO 101
      IBL=0
      NBLO=NBLO+1
      CALL SWRIT(ITAP36,LBLO,MAXBF4)
  101 CONTINUE
      INTI=INTI+NBUF
      IF(ILSTI.EQ.0) GO TO 201
C
      IBL=IBL+1
      NBLO=NBLO+1
      INTO=INTO+IBL
      LBLO(IBL+IBL-1)=0
      LBLO(IBL+IBL)=0
      BUFO(IBL+MAXBUF)=ZERO
      CALL SWRIT(ITAP36,LBLO,MAXBF4)
      CALL SREW(ITAP36)
C
      RETURN
      END
      SUBROUTINE ROTATE(EIG,OCC,FF,EE,EZ,EIGN,OCN,DUM1,DUM2,
     1                  NADDS,NBF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),FF(NBATRI)
      DIMENSION EE(NBFAO,NBFAO),EZ(NBFAO,NBFAO)
      DIMENSION EIGN(NBFAO),OCN(NBFAO),DUM1(NBFAO),DUM2(NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TEMPS/NORD(400)
      DATA ZERO / 0.0D+00 /
    1 FORMAT(//,2X,' FF MATRIX'/)
    2 FORMAT(//,2X,' TRANSFORMATION MATRIX'/)
    3 FORMAT(//,2X,' NORD = ',(30I4))
    4 FORMAT(//,2X,' XXXXXWARNING IN NORDXXXXX',I4//)
    5 FORMAT(//,2X,' XXXXXPROGRAM ERROR IN NORD---STOP !XXXXX'//)
    6 FORMAT(//,2X,' SORTED TRANSFORMATION MATRIX'/)
    7 FORMAT(//,2X,' SIGN ADJUSTED TRANSFORMATION MATRIX'/)
C
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,1)
      CALL PRINT(FF,NBATRI,NBF,6)
C
C   DIAGONALIZE FF MATRIX
  301 CALL RSP(NBFAO,NBF,NBATRI,FF,EIGN,1,EZ,DUM1,DUM2)
C
      DO 101 I=1,NBF
      II=NADDS+I
  101 OCN(I)=OCC(II)
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,2)
      CALL EIGOUT(EZ,EIGN,OCN,NBFAO,NBFAO,NBF,NBF,6)
C
  302 DO 102 I=1,NBF
      NI=1
      NJ=2
  201 IF(DABS(EZ(NI,I)).LT.DABS(EZ(NJ,I))) GO TO 202
      MAXN=NI
      GO TO 203
  202 MAXN=NJ
      NI=NJ
  203 NJ=NJ+1
      IF(NJ.LE.NBF) GO TO 201
      NORD(I)=MAXN
  102 CONTINUE
C
      IF(IPRNT.GE.3)
     *WRITE(6,3) (NORD(I),I=1,NBF)
      DO 105 I=1,NBF
      DO 103 J=1,NBF
      IF(NORD(J).EQ.I) GO TO 105
  103 CONTINUE
      WRITE(6,4) I
      DO 104 K=1,NBF-1
      DO 104 L=K+1,NBF
      IF(NORD(K).EQ.NORD(L)) GO TO 205
  104 CONTINUE
      WRITE(6,5)
      STOP
  205 NORD(K)=I
  105 CONTINUE
      IF(IPRNT.GE.3)
     *WRITE(6,3) (NORD(I),I=1,NBF)
C
      DO 107 I=1,NBF
      II=NADDS+I
      EIG(NORD(I)+NADDS)=EIGN(I)
      DO 107 J=1,NBF
      JJ=NADDS+NORD(J)
      EE(II,JJ)=EZ(I,J)
  107 CONTINUE
      IF(IPRNT.LE.2) GO TO 303
      WRITE(6,6)
      CALL EIGOUT(EE,EIG,OCN,NBFAO,NBFAO,NBF,NBF,6)
C
  303 DO 110 I=1,NBF
      IF(EE(I,I).GT.ZERO) GO TO 110
      DO 108 J=1,NBF
  108 EE(J,I)=-EE(J,I)
  110 CONTINUE
      IF(IPRNT.LE.2) GO TO 305
      WRITE(6,7)
      CALL EIGOUT(EE,EIG,OCN,NBFAO,NBFAO,NBF,NBF,6)
C
  305 RETURN
      END
      SUBROUTINE SCFCL(EIG,OCC,EAO,WM,WA,DC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EAO(NBFAO,NBASIS)
      DIMENSION WM(NBATRI),WA(NBATRI),DC(NBATRI)
      DIMENSION IFCB49(16)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/ENRGY/ESCF,ENUC
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/TEMPS/I30(400)
      COMMON/TYPES/SCFTYP,CITYP,DERTYP
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      DATA ZERO,TWO / 0.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' CLOSED SHELL MO (AO BASIS)'/)
    2 FORMAT(//,2X,' LAGRANGIAN MATRIX (MO BASIS)'/)
    3 FORMAT(//,2X,' LAGRANGIAN MATRIX (AO BASIS)'/)
    4 FORMAT(//,2X,' DENSITY MATRIX (AO BASIS)'/)
C
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,1)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C   FORM THE LAGRANGIAN MATRIX IN MO BASIS
  301 DO 101 I=1,NTRI
  101 WM(I)=ZERO
      DO 102 I=1,IOCC
      II=IOFF(I+1)
      WM(II)=EIG(I)*TWO
  102 CONTINUE
      CALL MWRIT(WM,25)
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,2)
      CALL PRINT(WM,NBATRI,NBASIS,6)
C
C   TRANSFORM THE LAGRANGIAN MATRIX FROM MO TO AO BASIS
  302 CONTINUE
      DO 104 II=1,NBFAO
      DO 104 JJ=1,II
      IIJJ=IOFF(II)+JJ
      VALU=ZERO
      DO 103 I=1,NBASIS
      ID=IOFF(I+1)
      VALU=VALU+WM(ID)*EAO(II,I)*EAO(JJ,I)
  103 CONTINUE
      WA(IIJJ)=VALU
  104 CONTINUE
      CALL MWRIT(WA,24)
      IF(IPRNT.LE.2) GO TO 303
      WRITE(6,3)
      CALL PRINT(WA,NBATRI,NBFAO,6)
C
C   FORM THE DENSITY MATRIX IN AO BASIS
  303 IJ=0
      DO 106 I=1,NBFAO
      DO 106 J=1,I
      IJ=IJ+1
      VALC=ZERO
      DO 105 K=1,IOCC
  105 VALC=VALC+EAO(I,K)*EAO(J,K)
      DC(IJ)=VALC
  106 CONTINUE
      IF(IPRNT.LE.2) GO TO 305
      WRITE(6,4)
      CALL PRINT(DC,NBATRI,NBFAO,6)
C
  305 CONTINUE
      RETURN
      END
      SUBROUTINE SCFGR(EIG,OCC,ESO,UAS,EAO,U,T,H,DC,FC,FM,FF,EE,EZ,
     1                 LBLI,BUFI,CC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION H(NBATRI),DC(NBATRI),FC(NBATRI),FM(NBATRI),FF(NBATRI)
      DIMENSION EIG(NBASIS),OCC(NBASIS)
      DIMENSION U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION ESO(NBFSO,NBASIS),EAO(NBFAO,NBASIS),UAS(NBFAO,NBFSO)
      DIMENSION EE(NBFAO,NBFAO),EZ(NBFAO,NBFAO)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2),CC(NBFAO*4)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/FUNCS/NTYPES,NATOMS,N3N
      COMMON/GRSCF/FOCC(10),NSORB(10)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      DATA ZERO,HALF,ONE,TWO,THREE,FOUR / 0.0D+00 , 0.5D+00 , 1.0D+00 ,
     1                                    2.0D+00 , 3.0D+00 , 4.0D+00 /
C
    1 FORMAT(//,
     1 2X,'******************************************'/
     2 2X,'***THE AVERAGED FOCK GENERATING ROUTINE***'/
     3 2X,'******************************************'/)
    2 FORMAT(//,2X,' SORTED PITZER MO (SO BASIS)'/)
    3 FORMAT(//,2X,' DC MATRIX (SO BASIS)'/)
    4 FORMAT(2X,6I5,F15.8)
    5 FORMAT(//,2X,' TWO ELECTRON CONTRIBUTION FOR SO FOCK (F )'/)
    6 FORMAT(//,2X,' H MATRIX (SO BASIS)'/)
    7 FORMAT(//,2X,' MO FOCK MATRIX'/)
    8 FORMAT(//,2X,' TRANSFORMATION MATRIX'/)
    9 FORMAT(//,2X,' GENERAL OPEN-SHELL MO''S (SO BASIS)'/)
   10 FORMAT(//,2X,' GENERAL OPEN-SHELL MO''S (AO BASIS)'/)
C
      WRITE(6,1)
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,2)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C  CREATE AVERAGED DENSITY MATRIX IN SO BASIS
  301 IJ=0
      DO 102 I=1,NBASIS
      DO 102 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 101 K=1,JOCC
  101 VALU=VALU+ESO(I,K)*ESO(J,K)*OCC(K)*HALF
      DC(IJ)=VALU
  102 CONTINUE
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,3)
      CALL PRINT(DC,NBATRI,NBASIS,6)
C
C   CREATE FOCK MATRIX USING SO INTEGRALS
C
C   TWO ELECTRON PART
  302 CALL SREW(ITAP36)
      DO 105 I=1,NTRI
  105 FC(I)=ZERO
C
  500 CALL SREAD(ITAP36,LBLI,MAXBF4)
      DO 110 I=1,MAXBUF
      IBA=LBLI(I+I-1)
      IBB=LBLI(I+I)
      IF(IBA.EQ.0) GO TO 501
      CALL UNPACK(II,JJ,KK,LL,IX,IBA,IBB)
      VALINT=BUFI(MAXBUF+I)
C     IF(IPRNT.LE.5) GO TO 305
C     WRITE(6,4) I,II,JJ,KK,LL,IX,VALINT
C
  305 GO TO (201,202,203,204,205,206,207,208,209,210,211,212,212,212),IX
C
C (II/II)   1=(11/11)
C
  201 IIII=IOFF(II+1)
      FC(IIII)=FC(IIII)+DC(IIII)*VALINT
      GO TO 110
C
C  (II/KK)  2=(22/11)
C
  202 IIII=IOFF(II+1)
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      FC(IIII)=FC(IIII)+DC(KKKK)*VALINT*TWO
      FC(KKKK)=FC(KKKK)+DC(IIII)*VALINT*TWO
      FC(IIKK)=FC(IIKK)-DC(IIKK)*VALINT
      GO TO 110
C
C  (II/IL)  3=(22/21)
C
  203 IIII=IOFF(II+1)
      IILL=IOFF(II)+LL
      FC(IIII)=FC(IIII)+DC(IILL)*VALINT*TWO
      FC(IILL)=FC(IILL)+DC(IIII)*VALINT
      GO TO 110
C
C  (IJ/JJ)  4=(21/11)
C
  204 IIJJ=IOFF(II)+JJ
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+DC(JJJJ)*VALINT
      FC(JJJJ)=FC(JJJJ)+DC(IIJJ)*VALINT*TWO
      GO TO 110
C
C  (IJ/IJ)  5=(21/21)
C
  205 IIJJ=IOFF(II)+JJ
      IIII=IOFF(II+1)
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+DC(IIJJ)*VALINT*THREE
      FC(IIII)=FC(IIII)-DC(JJJJ)*VALINT
      FC(JJJJ)=FC(JJJJ)-DC(IIII)*VALINT
      GO TO 110
C
C  (II/KL)  6=(33/21)
C
  206 IIII=IOFF(II+1)
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      FC(IIII)=FC(IIII)+DC(KKLL)*VALINT*FOUR
      FC(KKLL)=FC(KKLL)+DC(IIII)*VALINT*TWO
      FC(IIKK)=FC(IIKK)-DC(IILL)*VALINT
      FC(IILL)=FC(IILL)-DC(IIKK)*VALINT
      GO TO 110
C
C  (IJ/KK)  7=(32/11)
C
  207 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=IOFF(JJ)+KK
      FC(IIJJ)=FC(IIJJ)+DC(KKKK)*VALINT*TWO
      FC(KKKK)=FC(KKKK)+DC(IIJJ)*VALINT*FOUR
      FC(IIKK)=FC(IIKK)-DC(JJKK)*VALINT
      FC(JJKK)=FC(JJKK)-DC(IIKK)*VALINT
      GO TO 110
C
C  (IJ/KK)  8=(31/22)
C
  208 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=JJ+IOFF(KK)
      FC(IIJJ)=FC(IIJJ)+DC(KKKK)*VALINT*TWO
      FC(KKKK)=FC(KKKK)+DC(IIJJ)*VALINT*FOUR
      FC(IIKK)=FC(IIKK)-DC(JJKK)*VALINT
      FC(JJKK)=FC(JJKK)-DC(IIKK)*VALINT
      GO TO 110
C
C (IJ/IL)  9=(32/31)
C
  209 IIJJ=IOFF(II)+JJ
      IILL=IOFF(II)+LL
      IIII=IOFF(II+1)
      JJLL=IOFF(JJ)+LL
      FC(IIJJ)=FC(IIJJ)+DC(IILL)*VALINT*THREE
      FC(IILL)=FC(IILL)+DC(IIJJ)*VALINT*THREE
      FC(IIII)=FC(IIII)-DC(JJLL)*VALINT*TWO
      FC(JJLL)=FC(JJLL)-DC(IIII)*VALINT
      GO TO 110
C
C  (IJ/JL)  10=(32/21)
C
  210 IIJJ=IOFF(II)+JJ
      JJLL=IOFF(JJ)+LL
      IILL=IOFF(II)+LL
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+DC(JJLL)*VALINT*THREE
      FC(JJLL)=FC(JJLL)+DC(IIJJ)*VALINT*THREE
      FC(IILL)=FC(IILL)-DC(JJJJ)*VALINT
      FC(JJJJ)=FC(JJJJ)-DC(IILL)*VALINT*TWO
      GO TO 110
C
C  (IJ/KJ)  11=(31/21)
C
  211 IIJJ=IOFF(II)+JJ
      KKJJ=IOFF(KK)+JJ
      IIKK=IOFF(II)+KK
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+DC(KKJJ)*VALINT*THREE
      FC(KKJJ)=FC(KKJJ)+DC(IIJJ)*VALINT*THREE
      FC(IIKK)=FC(IIKK)-DC(JJJJ)*VALINT
      FC(JJJJ)=FC(JJJJ)-DC(IIKK)*VALINT*TWO
      GO TO 110
C
C  (IJ/KL)     12=(43/21)
C  (IJ/KL)     13=(42/31)
C
  212 IIJJ=IOFF(II)+JJ
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      JJLL=IOFF(MAX0(JJ,LL))+MIN0(JJ,LL)
      IILL=IOFF(II)+LL
      JJKK=IOFF(MAX0(JJ,KK))+MIN0(JJ,KK)
      FC(IIJJ)=FC(IIJJ)+DC(KKLL)*VALINT*FOUR
      FC(KKLL)=FC(KKLL)+DC(IIJJ)*VALINT*FOUR
      FC(IIKK)=FC(IIKK)-DC(JJLL)*VALINT
      FC(JJLL)=FC(JJLL)-DC(IIKK)*VALINT
      FC(IILL)=FC(IILL)-DC(JJKK)*VALINT
      FC(JJKK)=FC(JJKK)-DC(IILL)*VALINT
C
  110 CONTINUE
      GO TO 500
C
  501 CALL SREW(ITAP36)
C
      IF(IPRNT.LE.2) GO TO 306
      WRITE(6,5)
      CALL PRINT(FC,NBATRI,NBASIS,6)
C
C   ADD ONE ELECTRON PART
  306 CONTINUE
      CALL MREAD(H,15)
      IF(IPRNT.LE.2) GO TO 307
      WRITE(6,6)
      CALL PRINT(H,NBATRI,NBASIS,6)
C
  307 CONTINUE
      DO 111 I=1,NTRI
  111 FC(I)=FC(I)+H(I)
      CALL MOCONV(FC,NBATRI,FM,NBATRI,ESO,U,T)
C
      IF(IPRNT.LE.2) GO TO 308
      WRITE(6,7)
      CALL PRINT(FM,NBATRI,NBASIS,6)
C
  308 CONTINUE
      IC1=1
      IC2=IC1+NBFAO
      IC3=IC2+NBFAO
      IC4=IC3+NBFAO
C
C   ROTATE FM MATRIX
      DO 112 I=1,NBASIS
      DO 112 J=1,NBASIS
  112 EE(I,J)=ZERO
C
      NSTR=0
      NEND=0
      DO 115 ITYP=1,NTYPES+1
      NN=NSORB(ITYP)
      IF(NN.EQ.0) GO TO 115
      NSTR=NEND+1
      NEND=NSTR+NN-1
      IF(NN.EQ.1) GO TO 309
      DO 113 I=NSTR,NEND
      DO 113 J=I,NEND
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      II=I-NSTR+1
      JJ=J-NSTR+1
      IIJJ=IOFF(MAX0(II,JJ))+MIN0(II,JJ)
      FF(IIJJ)=FM(IJ)
  113 CONTINUE
      CALL ROTATE(EIG,OCC,FF,EE,EZ,CC(IC1),CC(IC2),CC(IC3),CC(IC4),
     1            NSTR-1,NN)
      GO TO 115
  309 EE(NSTR,NSTR)=ONE
  115 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 311
      WRITE(6,8)
      CALL EIGOUT(EE,EIG,OCC,NBFAO,NBFAO,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM SO TO GENERAL OPEN-SHELL BASIS
  311 DO 121 I=1,NBASIS
      DO 121 J=1,NBASIS
      VALU=ZERO
      DO 120 K=1,NBASIS
  120 VALU=VALU+ESO(I,K)*EE(K,J)
      EZ(I,J)=VALU
  121 CONTINUE
      DO 122 I=1,NBASIS
      DO 122 J=1,NBASIS
  122 ESO(I,J)=EZ(I,J)
      IF(IPRNT.LE.2) GO TO 312
      WRITE(6,9)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM GENERAL SO TO GENERAL AO BASIS
  312 DO 124 I=1,NBFAO
      DO 124 J=1,NBASIS
      VALU=ZERO
      DO 123 K=1,NBFSO
  123 VALU=VALU+UAS(I,K)*ESO(K,J)
  124 EAO(I,J)=VALU
      IF(IPRNT.LE.2) GO TO 315
      WRITE(6,10)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
  315 RETURN
      END
      SUBROUTINE SCFHS(EIG,OCC,ESO,UAS,EAO,U,T,H,DC,DO,FC,FF,FK,FT,
     1                 WM,WA,EE,EZ,LBLI,BUFI,CC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS)
      DIMENSION U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION ESO(NBFSO,NBASIS),UAS(NBFAO,NBFSO),EAO(NBFAO,NBASIS)
      DIMENSION DC(NBATRI),DO(NBATRI),FC(NBATRI),FF(NBATRI),FK(NBATRI)
      DIMENSION FT(NBATRI),WM(NBATRI),WA(NBATRI),H(NBATRI)
      DIMENSION EE(NBFAO,NBFAO),EZ(NBFAO,NBFAO)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2),CC(NBFAO*4)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/TEMPS/I30(400)
      COMMON/TYPES/SCFTYP,CITYP,DERTYP
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      DATA ZERO,HALF,ONE,TWO,THREE,FOUR / 0.0D+00 , 0.5D+00 , 1.0D+00 ,
     1                                   2.0D+00 ,  3.0D+00 , 4.0D+00 /
C
    1 FORMAT(//,
     1 2X,'*************************************************'/
     2 2X,'***THE HIGH SPIN OPEN-SHELL GENERATING ROUTINE***'/
     3 2X,'*************************************************'/)
    2 FORMAT(//,2X,' SORTED PITZER MO (SO BASIS)'/)
    3 FORMAT(//,2X,' DC MATRIX (SO BASIS)'/)
    4 FORMAT(//,2X,' DO MATRIX (SO BASIS)'/)
    5 FORMAT(2X,6I5,F15.8)
    6 FORMAT(//,2X,' TWO ELECTRON CONTRIBUTION FOR SO FOCK (F )'/)
    7 FORMAT(//,2X,' TWO ELECTRON CONTRIBUTION FOR SO FOCK (FF)'/)
    8 FORMAT(//,2X,' H MATRIX (SO BASIS)'/)
    9 FORMAT(//,2X,' THE TOTAL FOCK MATRIX IN MO BASIS'/)
   10 FORMAT(//,2X,' K MATRIX IN MO BASIS'/)
   11 FORMAT(//,2X,' TRANSFORMATION MATRIX'/)
   12 FORMAT(//,2X,' HIGH SPIN OPEN-SHELL MO''S (SO BASIS)'/)
   13 FORMAT(//,2X,' HIGH SPIN OPEN-SHELL MO''S (AO BASIS)'/)
   14 FORMAT(//,2X,' LAGRANGIAN MATRIX (MO BASIS)'/)
   15 FORMAT(//,2X,' LAGRANGIAN MATRIX (AO BASIS)'/)
   16 FORMAT(//,2X,' DC MATRIX IN AO BASIS'/)
   17 FORMAT(//,2X,' DO MATRIX IN AO BASIS'/)
C
      WRITE(6,1)
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,2)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C  CREATE DENSITY MATRICES
  301 IJ=0
      DO 103 I=1,NBASIS
      DO 103 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      DO 101 K=1,IOCC
  101 VALC=VALC+ESO(I,K)*ESO(J,K)
      DC(IJ)=VALC
      DO 102 K=IOCC+1,JOCC
  102 VALO=VALO+ESO(I,K)*ESO(J,K)
      DO(IJ)=VALO
  103 CONTINUE
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,3)
      CALL PRINT(DC,NBATRI,NBASIS,6)
      WRITE(6,4)
      CALL PRINT(DO,NBATRI,NBASIS,6)
C
C   CREATE FOCK MATRICES USING SO INTEGRALS
C
C   TWO ELECTRON PART
  302 CALL SREW(ITAP36)
      DO 105 I=1,NTRI
      FC(I)=ZERO
  105 FF(I)=ZERO
C
  500 CALL SREAD(ITAP36,LBLI,MAXBF4)
      DO 110 I=1,MAXBUF
      IBA=LBLI(I+I-1)
      IBB=LBLI(I+I)
      IF(IBA.EQ.0) GO TO 501
      CALL UNPACK(II,JJ,KK,LL,IX,IBA,IBB)
      VALINT=BUFI(MAXBUF+I)
C     IF(IPRNT.LE.5) GO TO 305
C     WRITE(6,5) I,II,JJ,KK,LL,IX,VALINT
C
  305 GO TO (201,202,203,204,205,206,207,208,209,210,211,212,212,212),IX
C
C (II/II)   1=(11/11)
C
  201 IIII=IOFF(II+1)
      FC(IIII)=FC(IIII)+(DC(IIII)+DO(IIII))*VALINT
      FF(IIII)=FF(IIII)+ DO(IIII)*VALINT
      GO TO 110
C
C  (II/KK)  2=(22/11)
C
  202 IIII=IOFF(II+1)
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      FC(IIII)=FC(IIII)+(DC(KKKK)*TWO+DO(KKKK))*VALINT
      FC(KKKK)=FC(KKKK)+(DC(IIII)*TWO+DO(IIII))*VALINT
      FC(IIKK)=FC(IIKK)- DC(IIKK)*VALINT
      FF(IIKK)=FF(IIKK)+ DO(IIKK)*VALINT
      GO TO 110
C
C  (II/IL)  3=(22/21)
C
  203 IIII=IOFF(II+1)
      IILL=IOFF(II)+LL
      FC(IIII)=FC(IIII)+(DC(IILL)+DO(IILL))*VALINT*TWO
      FC(IILL)=FC(IILL)+(DC(IIII)+DO(IIII))*VALINT
      FF(IIII)=FF(IIII)+ DO(IILL)*VALINT*TWO
      FF(IILL)=FF(IILL)+ DO(IIII)*VALINT
      GO TO 110
C
C  (IJ/JJ)  4=(21/11)
C
  204 IIJJ=IOFF(II)+JJ
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+(DC(JJJJ)+DO(JJJJ))*VALINT
      FC(JJJJ)=FC(JJJJ)+(DC(IIJJ)+DO(IIJJ))*VALINT*TWO
      FF(IIJJ)=FF(IIJJ)+ DO(JJJJ)*VALINT
      FF(JJJJ)=FF(JJJJ)+ DO(IIJJ)*VALINT*TWO
      GO TO 110
C
C  (IJ/IJ)  5=(21/21)
C
  205 IIJJ=IOFF(II)+JJ
      IIII=IOFF(II+1)
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+(DC(IIJJ)*THREE+DO(IIJJ)*TWO)*VALINT
      FC(IIII)=FC(IIII)- DC(JJJJ)*VALINT
      FC(JJJJ)=FC(JJJJ)- DC(IIII)*VALINT
      FF(IIII)=FF(IIII)+ DO(JJJJ)*VALINT
      FF(IIJJ)=FF(IIJJ)+ DO(IIJJ)*VALINT
      FF(JJJJ)=FF(JJJJ)+ DO(IIII)*VALINT
      GO TO 110
C
C  (II/KL)  6=(33/21)
C
  206 IIII=IOFF(II+1)
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      FC(IIII)=FC(IIII)+(DC(KKLL)*TWO+DO(KKLL))*VALINT*TWO
      FC(KKLL)=FC(KKLL)+(DC(IIII)*TWO+DO(IIII))*VALINT
      FC(IIKK)=FC(IIKK)- DC(IILL)*VALINT
      FC(IILL)=FC(IILL)- DC(IIKK)*VALINT
      FF(IIKK)=FF(IIKK)+ DO(IILL)*VALINT
      FF(IILL)=FF(IILL)+ DO(IIKK)*VALINT
      GO TO 110
C
C  (IJ/KK)  7=(32/11)
C
  207 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=IOFF(JJ)+KK
      FC(IIJJ)=FC(IIJJ)+(DC(KKKK)*TWO+DO(KKKK))*VALINT
      FC(KKKK)=FC(KKKK)+(DC(IIJJ)*TWO+DO(IIJJ))*VALINT*TWO
      FC(IIKK)=FC(IIKK)- DC(JJKK)*VALINT
      FC(JJKK)=FC(JJKK)- DC(IIKK)*VALINT
      FF(IIKK)=FF(IIKK)+ DO(JJKK)*VALINT
      FF(JJKK)=FF(JJKK)+ DO(IIKK)*VALINT
      GO TO 110
C
C  (IJ/KK)  8=(31/22)
C
  208 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=JJ+IOFF(KK)
      FC(IIJJ)=FC(IIJJ)+(DC(KKKK)*TWO+DO(KKKK))*VALINT
      FC(KKKK)=FC(KKKK)+(DC(IIJJ)*TWO+DO(IIJJ))*VALINT*TWO
      FC(IIKK)=FC(IIKK)- DC(JJKK)*VALINT
      FC(JJKK)=FC(JJKK)- DC(IIKK)*VALINT
      FF(IIKK)=FF(IIKK)+ DO(JJKK)*VALINT
      FF(JJKK)=FF(JJKK)+ DO(IIKK)*VALINT
      GO TO 110
C
C (IJ/IL)  9=(32/31)
C
  209 IIJJ=IOFF(II)+JJ
      IILL=IOFF(II)+LL
      IIII=IOFF(II+1)
      JJLL=IOFF(JJ)+LL
      FC(IIJJ)=FC(IIJJ)+(DC(IILL)*THREE+DO(IILL)*TWO)*VALINT
      FC(IILL)=FC(IILL)+(DC(IIJJ)*THREE+DO(IIJJ)*TWO)*VALINT
      FC(IIII)=FC(IIII)- DC(JJLL)*VALINT*TWO
      FC(JJLL)=FC(JJLL)- DC(IIII)*VALINT
      FF(IIII)=FF(IIII)+ DO(JJLL)*VALINT*TWO
      FF(IILL)=FF(IILL)+ DO(IIJJ)*VALINT
      FF(IIJJ)=FF(IIJJ)+ DO(IILL)*VALINT
      FF(JJLL)=FF(JJLL)+ DO(IIII)*VALINT
      GO TO 110
C
C  (IJ/JL)  10=(32/21)
C
  210 IIJJ=IOFF(II)+JJ
      JJLL=IOFF(JJ)+LL
      IILL=IOFF(II)+LL
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+(DC(JJLL)*THREE+DO(JJLL)*TWO)*VALINT
      FC(JJLL)=FC(JJLL)+(DC(IIJJ)*THREE+DO(IIJJ)*TWO)*VALINT
      FC(IILL)=FC(IILL)- DC(JJJJ)*VALINT
      FC(JJJJ)=FC(JJJJ)- DC(IILL)*VALINT*TWO
      FF(IIJJ)=FF(IIJJ)+ DO(JJLL)*VALINT
      FF(IILL)=FF(IILL)+ DO(JJJJ)*VALINT
      FF(JJJJ)=FF(JJJJ)+ DO(IILL)*VALINT*TWO
      FF(JJLL)=FF(JJLL)+ DO(IIJJ)*VALINT
      GO TO 110
C
C  (IJ/KJ)  11=(31/21)
C
  211 IIJJ=IOFF(II)+JJ
      KKJJ=IOFF(KK)+JJ
      IIKK=IOFF(II)+KK
      JJJJ=IOFF(JJ+1)
      FC(IIJJ)=FC(IIJJ)+(DC(KKJJ)*THREE+DO(KKJJ)*TWO)*VALINT
      FC(KKJJ)=FC(KKJJ)+(DC(IIJJ)*THREE+DO(IIJJ)*TWO)*VALINT
      FC(IIKK)=FC(IIKK)- DC(JJJJ)*VALINT
      FC(JJJJ)=FC(JJJJ)- DC(IIKK)*VALINT*TWO
      FF(IIKK)=FF(IIKK)+ DO(JJJJ)*VALINT
      FF(IIJJ)=FF(IIJJ)+ DO(KKJJ)*VALINT
      FF(KKJJ)=FF(KKJJ)+ DO(IIJJ)*VALINT
      FF(JJJJ)=FF(JJJJ)+ DO(IIKK)*VALINT*TWO
      GO TO 110
C
C  (IJ/KL)     12=(43/21)
C  (IJ/KL)     13=(42/31)
C  (IJ/KL)     14=(41/32)
C
  212 IIJJ=IOFF(II)+JJ
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      JJLL=IOFF(MAX0(JJ,LL))+MIN0(JJ,LL)
      IILL=IOFF(II)+LL
      JJKK=IOFF(MAX0(JJ,KK))+MIN0(JJ,KK)
      FC(IIJJ)=FC(IIJJ)+(DC(KKLL)*TWO+DO(KKLL))*VALINT*TWO
      FC(KKLL)=FC(KKLL)+(DC(IIJJ)*TWO+DO(IIJJ))*VALINT*TWO
      FC(IIKK)=FC(IIKK)- DC(JJLL)*VALINT
      FC(JJLL)=FC(JJLL)- DC(IIKK)*VALINT
      FC(IILL)=FC(IILL)- DC(JJKK)*VALINT
      FC(JJKK)=FC(JJKK)- DC(IILL)*VALINT
      FF(IIKK)=FF(IIKK)+ DO(JJLL)*VALINT
      FF(JJLL)=FF(JJLL)+ DO(IIKK)*VALINT
      FF(IILL)=FF(IILL)+ DO(JJKK)*VALINT
      FF(JJKK)=FF(JJKK)+ DO(IILL)*VALINT
C
  110 CONTINUE
      GO TO 500
C
  501 CALL SREW(ITAP36)
C
      IF(IPRNT.LE.4) GO TO 306
      WRITE(6,6)
      CALL PRINT(FC,NBATRI,NBASIS,6)
      WRITE(6,7)
      CALL PRINT(FF,NBATRI,NBASIS,6)
C
C   ADD ONE ELECTRON PART
  306 CONTINUE
      CALL MREAD(H,15)
      WRITE(6,8)
      CALL PRINT(H,NBATRI,NBASIS,6)
C
      DO 111 I=1,NTRI
  111 FC(I)=FC(I)+H(I)
C
C   TRANSFORM FOCK MATRICES FROM SO TO MO BASIS
      CALL MOCONV(FC,NBATRI,FT,NBATRI,ESO,U,T)
      CALL MOCONV(FF,NBATRI,FK,NBATRI,ESO,U,T)
C
C   FORM THE TOTAL FOCK MATRIX IN MO BASIS
      IJ=0
      DO 112 I=1,NBASIS
      DO 112 J=1,I
      IJ=IJ+1
      FT(IJ)=FT(IJ)+FK(IJ)*(OCC(I)+OCC(J)-THREE)*HALF
  112 CONTINUE
      CALL MWRIT(FK,25)
      IF(IPRNT.LE.2) GO TO 307
      WRITE(6,9)
      CALL PRINT(FT,NBATRI,NBASIS,6)
      WRITE(6,10)
      CALL PRINT(FK,NBATRI,NBASIS,6)
C
C   ROTATE FT MATRIX
  307 CONTINUE
      IC1=1
      IC2=IC1+NBFAO
      IC3=IC2+NBFAO
      IC4=IC3+NBFAO
      CALL ROTATE(EIG,OCC,FT,EE,EZ,CC(IC1),CC(IC2),CC(IC3),CC(IC4),
     1            0,NBASIS)
      IF(IPRNT.LE.2) GO TO 308
      WRITE(6,11)
      CALL EIGOUT(EE,EIG,OCC,NBFAO,NBFAO,NBASIS,NBASIS,6)
C
C   HIGH SPIN OPEN-SHELL MO'S IN SO BASIS
  308 DO 114 I=1,NBASIS
      DO 114 J=1,NBASIS
      VALU=ZERO
      DO 113 K=1,NBASIS
  113 VALU=VALU+ESO(I,K)*EE(K,J)
      EZ(I,J)=VALU
  114 CONTINUE
      DO 115 I=1,NBASIS
      DO 115 J=1,NBASIS
  115 ESO(I,J)=EZ(I,J)
      IF(IPRNT.LE.2) GO TO 309
      WRITE(6,12)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C   HIGH SPIN OPEN-SHELL MO'S IN AO BASIS
  309 DO 117 I=1,NBFAO
      DO 117 J=1,NBASIS
      VALU=ZERO
      DO 116 K=1,NBFSO
  116 VALU=VALU+UAS(I,K)*ESO(K,J)
      EAO(I,J)=VALU
  117 CONTINUE
      IF(IPRNT.LE.2) GO TO 310
      WRITE(6,13)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C   FORM THE LARGRANGIAN MATRIX IN MO BASIS
  310 CONTINUE
      DO 120 I=1,NTRI
  120 WM(I)=ZERO
      DO 121 I=1,JOCC
      II=IOFF(I+1)
  121 WM(II)=EIG(I)*OCC(I)
      DO 122 I=1,JOCC
      DO 122 J=1,I
      IJ=IOFF(I)+J
      FAC=OCC(I)*OCC(J)*HALF
      WM(IJ)=WM(IJ)-FK(IJ)*FAC
  122 CONTINUE
      CALL MWRIT(WM,25)
      IF(IPRNT.LE.2) GO TO 312
      WRITE(6,14)
      CALL PRINT(WM,NBATRI,NBASIS,6)
C
C   TRANSFORM THE LAGRANGIAN MATRIX FROM MO TO AO BASIS
  312 CONTINUE
      DO 125 I=1,NBASIS
      DO 125 J=1,I
      IJ=IOFF(I)+J
      T(I,J)=WM(IJ)
      T(J,I)=WM(IJ)
  125 CONTINUE
      DO 127 I=1,NBASIS
      DO 127 JJ=1,NBFAO
      VALU=ZERO
      DO 126 J=1,NBASIS
      VALU=VALU+EAO(JJ,J)*T(I,J)
  126 CONTINUE
      U(I,JJ)=VALU
  127 CONTINUE
      DO 129 II=1,NBFAO
      DO 129 JJ=1,II
      IIJJ=IOFF(II)+JJ
      VALU=ZERO
      DO 128 I=1,NBASIS
      VALU=VALU+EAO(II,I)*U(I,JJ)
  128 CONTINUE
      WA(IIJJ)=VALU
  129 CONTINUE
      CALL MWRIT(WA,24)
      IF(IPRNT.LE.2) GO TO 313
      WRITE(6,15)
      CALL PRINT(WA,NBATRI,NBFAO,6)
C
C   FORM DENSITY MATRICES IN AO BASIS
  313 CONTINUE
      IJ=0
      DO 133 I=1,NBFAO
      DO 133 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      DO 131 K=1,IOCC
  131 VALC=VALC+EAO(I,K)*EAO(J,K)
      DC(IJ)=VALC
      DO 132 K=IOCC+1,JOCC
  132 VALO=VALO+EAO(I,K)*EAO(J,K)
      DO(IJ)=VALO
  133 CONTINUE
      IF(IPRNT.LE.2) GO TO 315
      WRITE(6,16)
      CALL PRINT(DC,NBATRI,NBFAO,6)
      WRITE(6,17)
      CALL PRINT(DO,NBATRI,NBFAO,6)
C
  315 CONTINUE
      RETURN
      END
      SUBROUTINE SCFINP(EIG,OCC,ESO,UAS,EAO,EE,CHGS,XX)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EE(NBFAO*NBFAO)
      DIMENSION ESO(NBFSO,NBFSO),UAS(NBFAO,NBFSO),EAO(NBFAO,NBFAO)
      DIMENSION CHGS(NATOM),XX(3,NATOM)
      DIMENSION A30(200)
      DIMENSION NLAMDA(10),NCLOSD(10),NOPEN(10),OCT(10)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/COUPL/ALPC(15),BETC(15),ALPT(15),BETT(15)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FLAGS/MCONST,MPOINT,NCALCS,MXCOEF
      COMMON/FUNCS/NTYPES,NATOM,N3N
      COMMON/SIGNS/IPQ(256),IPRNT
      COMMON/TEMPS/I30(400)
      COMMON/TYPES/SCFTYP,CITYP,DERTYP
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      EQUIVALENCE (I30,A30)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' AO-SO MATRIX'/)
    2 FORMAT(//,2X,' ENUC = ',F20.10/
     1          2X,' ESCF = ',F20.10/)
    3 FORMAT(//,2X,' NATOM IS ',I5)
    4 FORMAT(2X,I5,4F20.10,5X,2I5)
    5 FORMAT(//,2X,' ESO MATRIX'/)
    6 FORMAT(//,2X,' EAO MATRIX'/)
C
      ITAP30=30
      JUNK=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,JUNK,JUNK)
C
C   READ IN NUCLEAR CHARGE
      CALL WREADW(ITAP30,CHGS,NATOM*2,I30(1),JUNK)
C
C   READ IN AO-SO MATRIX
      CALL WREADW(ITAP30,UAS,NBFAO*NBFSO*2,I30(29),JUNK)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL MATOUT(UAS,NBFAO,NBFSO,NBFAO,NBFSO,6)
C
C   READ IN GEOMETRY
  201 CONTINUE
      JUNK=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,JUNK,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,LOCCAL)
      CALL WREADW(ITAP30,I30,20,LOCCAL,JUNK)
      LOCVEC=I30(1)
      LOCCAL=LOCCAL+20
      CALL WREADW(ITAP30,XX,NATOM*6,LOCCAL,LOCCAL)
C
C   READ IN SCF ENERGY
      CALL WREADW(ITAP30,I30,20,LOCCAL,LOCCAL)
      ENUC=A30(1)
      ESCF=A30(2)
      IF(IPRNT.GE.2)
     *WRITE(6,2) ENUC,ESCF
C
      IF(IPRNT.LE.3) GO TO 202
      WRITE(6,3) NATOM
      DO 101 I=1,NATOM
  101 WRITE(6,4) I,XX(1,I),XX(2,I),XX(3,I),CHGS(I)
C
C   READ IN SO-MO EIGENVECTORS
  202 CONTINUE
      CALL WREADW(ITAP30,EE,MXCOEF*2,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,EIG,NBFSO*2,LOCVEC,LOCVEC)
      LOCVEC=LOCVEC+NSYM
      CALL WREADW(ITAP30,NLAMDA,NSYM,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,NCLOSD,NSYM,LOCVEC,LOCVEC)
      WRITE(3,28) (NLAMDA(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,28) (NLAMDA(I),I=1,NSYM)
   28 FORMAT(2X,' NLAMDA = ',10I5/)
      WRITE(3,29) (NCLOSD(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,29) (NCLOSD(I),I=1,NSYM)
   29 FORMAT(2X,' NCLOSD = ',10I5/)
C
C   READ IN COUPLING CONSTANTS FOR OPEN SHELLS
      DO 102 I=1,15
      ALPT(I)=ZERO
      BETT(I)=ZERO
  102 CONTINUE
      KOPEN=IABS(IOPEN)
      WRITE(3,30) IOPEN,KOPEN
      IF(IPRNT.GT.2)
     *WRITE(6,30) IOPEN,KOPEN
   30 FORMAT(2X,' IOPEN = ',I5,' KOPEN = ',I5/)
      IF(IOPEN.NE.0) THEN
      CALL WREADW(ITAP30,NOPEN,NSYM,LOCVEC,LOCVEC)
      WRITE(3,31) (NOPEN(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,31) (NOPEN(I),I=1,NSYM)
   31 FORMAT(2X,' NOPEN = ',10I5/)
      CALL WREADW(ITAP30,ALPT,KOPEN*2,LOCVEC,LOCVEC)
      WRITE(3,32) (ALPT(I),I=1,KOPEN)
      IF(IPRNT.GT.2)
     *WRITE(6,32) (ALPT(I),I=1,KOPEN)
   32 FORMAT(2X,' ALPT = ',10F10.5/)
      CALL WREADW(ITAP30,BETT,KOPEN*2,LOCVEC,LOCVEC)
      WRITE(3,33) (BETT(I),I=1,KOPEN)
      IF(IPRNT.GT.2)
     *WRITE(6,33) (BETT(I),I=1,KOPEN)
   33 FORMAT(2X,' BETT = ',10F10.5/)
      END IF
      IF(SCFTYP.NE.'TCSCF   ') GO TO 203
      IF(IOPEN.GE.0) GO TO 203
      OCT(1)=TWO/(ONE-ALPT(1))
      OCT(2)=TWO/(ONE-ALPT(3))
C
C   FORM OCCUPATION VECTOR
  203 CONTINUE
      DO 103 I=1,NBASIS
  103 OCC(I)=ZERO
      ITC=0
      I=0
      DO 107 ISM=1,NSYM
      DO 104 J=I+1,I+NCLOSD(ISM)
      OCC(J)=TWO
  104 CONTINUE
      K=I+NCLOSD(ISM)
      IF(SCFTYP.EQ.'TCSCF   '.AND.NOPEN(ISM).NE.0) GO TO 204
      IF(IOPEN.EQ.0) GO TO 206
      DO 105 J=K+1,K+NOPEN(ISM)
      OCC(J)=ONE
  105 CONTINUE
      GO TO 206
  204 CONTINUE
      DO 106 J=K+1,K+NOPEN(ISM)
      IF(IOPEN.GT.0) GO TO 205
      ITC=ITC+1
      OCC(J)=OCT(ITC)
      GO TO 106
  205 OCC(J)=ONE
  106 CONTINUE
  206 CONTINUE
      I=I+NLAMDA(ISM)
  107 CONTINUE
C
C   FORM SO-MO EIGENVECTOR MATRIX
      DO 111 I=1,NBFSO
      DO 111 J=1,NBFSO
      ESO(I,J)=ZERO
  111 CONTINUE
      I=0
      J=0
      DO 115 ISYM=1,NSYM
      N=NLAMDA(ISYM)
      DO 114 K=J+1,J+N
      DO 113 L=J+1,J+N
      I=I+1
      ESO(L,K)=EE(I)
  113 CONTINUE
  114 CONTINUE
      J=J+N
  115 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 207
      WRITE(6,5)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBFSO,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM SO TO AO BASIS
  207 CONTINUE
      DO 117 I=1,NBFAO
      DO 117 J=1,NBASIS
      VALU=ZERO
      DO 116 K=1,NBFSO
      VALU=VALU+UAS(I,K)*ESO(K,J)
  116 CONTINUE
      EAO(I,J)=VALU
  117 CONTINUE
      IF(IPRNT.LE.3) GO TO 208
      WRITE(6,6)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBFAO,NBASIS,NBASIS,6)
  208 CONTINUE
C
      RETURN
      END
      SUBROUTINE SORT(EIG,OCC,ESO,UAS,EAO,EE,EGN,OCN,
     1                KORD,LORD,MORD,NORD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),ESO(NBASIS,NBASIS)
      DIMENSION UAS(NBFAO,NBFSO),EAO(NBFAO,NBFAO)
      DIMENSION EE(NBFAO,NBFAO),EGN(NBASIS),OCN(NBASIS)
      DIMENSION KORD(NBASIS),LORD(NBASIS),MORD(NBASIS),NORD(NBASIS)
      DIMENSION A30(200)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/CALIF/LPARA(1024),APARA(1024)
      COMMON/COUPL/ALPC(15),BETC(15),ALPT(15),BETT(15)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NTYPES,NATOM,N3N
      COMMON/GRSCF/FOCC(10),NSORB(10)
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/OPEN2/GOCC(10)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TEMPS/I30(400)
      COMMON/TYPES/SCFTYP,CITYP,DERTYP
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      EQUIVALENCE (I30,A30)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' IOCC = ',I5,3X,' KOCC = ',I5,3X,' JOCC = ',I5/)
    2 FORMAT(//,2X,' ILLEGAL SCFTYP ',A8/)
    3 FORMAT(//,2X,' ALPC MATRIX'/)
    4 FORMAT(//,2X,' BETC MATRIX'/)
    5 FORMAT(//,2X,' SORTED ESO MATRIX'/)
    6 FORMAT(//,2X,' SORTED EAO MATRIX'/)
C
C   CALCULATE NUMBERS OF OCCUPATIONS
      IOCC=0
      KOCC=0
      DO 101 I=1,NBASIS
      NOCC=INT(OCC(I))
      IF(NOCC-1) 201,202,203
  201 IF(OCC(I).GT.ZERO) GO TO 202
      GO TO 101
  202 KOCC=KOCC+1
      GO TO 101
  203 IOCC=IOCC+1
  101 CONTINUE
      JOCC=IOCC+KOCC
      WRITE(6,1) IOCC,KOCC,JOCC
C
C   SORT EIGENVALUES AND EIGENVECTORS
      CALL ORDR(EIG,NORD,NBASIS)
      DO 102 II=1,NBASIS
      NN=NORD(II)
      MORD(II)=NN
      OCN(II)=OCC(NN)
  102 CONTINUE
      CALL REORDR(OCN,NORD,NBASIS)
C
C I'TH PITZER'S MO # IS GOING TO GFOCK MO # "LORD(I)"
C
      DO 103 II=1,NBASIS
      NN=NORD(II)
      KORD(II)=MORD(NN)
      EGN(II)=EIG(NN)
  103 CONTINUE
      DO 104 I=1,NBASIS
      EIG(I)=EGN(I)
      OCC(I)=OCN(I)
      LORD(I)=KORD(I)
  104 CONTINUE
C
      IF(SCFTYP.EQ.'CLSCF   ') GO TO 205
      IF(SCFTYP.EQ.'GRSCF   '.AND.IOPEN.EQ.0) GO TO 205
      IF(SCFTYP.EQ.'HSOP    ') GO TO 206
      IF(SCFTYP.EQ.'GRSCF   '.AND.IOPEN.NE.0) GO TO 207
      IF(SCFTYP.EQ.'TCSCF   ') GO TO 208
      WRITE(6,2) SCFTYP
      STOP
C
C   CLOSED SHELL ONLY
  205 CONTINUE
C   TYPE1=CLOSED SHELL
C   TYPE2=VIRTUAL
      NTYPES=1
      FOCC(1)=TWO
      FOCC(2)=ZERO
      ALPC(1)=ZERO
      ALPC(2)=ZERO
      ALPC(3)=ZERO
      BETC(1)=ZERO
      BETC(2)=ZERO
      BETC(3)=ZERO
      NSORB(1)=IOCC
      NSORB(2)=NBASIS-IOCC
      GO TO 210
C
C   HIGH SPIN OPEN-SHELL
  206 CONTINUE
C   TYPE1=CLOSED SHELL
C   TYPE2=ALPHA SPIN SHELL
C   TYPE3=VIRTUAL
      NTYPES=2
      FOCC(1)=TWO
      FOCC(2)=ONE
      FOCC(3)=ZERO
      ALPC(1)=ZERO
      ALPC(2)=ZERO
      ALPC(3)=ZERO
      ALPC(4)=ZERO
      ALPC(5)=ZERO
      ALPC(6)=ZERO
      BETC(1)=ZERO
      BETC(2)=ONE
      BETC(3)=ONE
      BETC(4)=ZERO
      BETC(5)=ZERO
      BETC(6)=ZERO
      NSORB(1)=IOCC
      NSORB(2)=KOCC
      NSORB(3)=NBASIS-JOCC
      GO TO 210
C
C   GENERALIZED SCF OPEN-SHELL
  207 CONTINUE
      NTYPES=NUNIQ+1
      NNP=IOFF(NTYPES+2)
      DO 105 I=1,NNP
      ALPC(I)=ZERO
      BETC(I)=ZERO
  105 CONTINUE
C   FOR CLOSED SHELL
      FOCC(1)=TWO
      NSORB(1)=IOCC
C   FOR OPEN-SHELL
      II=1
      DO 106 I=1,NUNIQ
      II=II+1
      FOCC(II)=GOCC(I)
      NSORB(II)=LOPN(I)
  106 CONTINUE
      DO 107 I=1,NUNIQ
      II=I+1
      K=MOPN(I,1)
      DO 107 J=1,I
      JJ=J+1
      L=MOPN(J,1)
      IIJJ=IOFF(II)+JJ
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      ALPC(IIJJ)=ALPT(KL)
      BETC(IIJJ)=BETT(KL)
  107 CONTINUE
C   VIRTUAL
      FOCC(II+1)=ZERO
      NSORB(II+1)=NBASIS-JOCC
      WRITE(6,3)
      CALL PRINT(ALPC,15,NTYPES+1,6)
      WRITE(6,4)
      CALL PRINT(BETC,15,NTYPES+1,6)
      GO TO 210
C
C   TCSCF
  208 CONTINUE
C   TYPE1=CLOSED SHELL
C   TYPE2=GVA SHELL
C   TYPE3=GVB SHELL
C   TYPE4=VIRTUAL
      DO 108 I=1,15
      ALPC(I)=ZERO
      BETC(I)=ZERO
  108 CONTINUE
      NTYPES=3
      FOCC(1)=TWO
      IF(IOPEN.EQ.0) GO TO 209
      FOCC(2)=OCC(IOCC+1)
      FOCC(3)=OCC(IOCC+2)
      FOCC(4)=ZERO
      ALPC(1)=ZERO
      ALPC(2)=ZERO
      ALPC(3)=ONE-ONE/FOCC(2)
      ALPC(4)=ZERO
      ALPC(5)=ONE
      ALPC(6)=ONE-ONE/FOCC(3)
      ALPC(7)=ZERO
      ALPC(8)=ZERO
      ALPC(9)=ZERO
      ALPC(10)=ZERO
      BETC(1)=ZERO
      BETC(2)=ZERO
      BETC(3)=ONE
      BETC(4)=ZERO
      BETC(5)=BETT(2)
      BETC(6)=ONE
      BETC(7)=ZERO
      BETC(8)=ZERO
      BETC(9)=ZERO
      BETC(10)=ZERO
  209 CONTINUE
      NSORB(1)=IOCC
      NSORB(2)=1
      NSORB(3)=1
      NSORB(4)=NBASIS-IOCC-2
C
  210 CONTINUE
      DO 110 II=1,NBASIS
      NN=LORD(II)
      DO 109 I=1,NBASIS
  109 EE(I,II)=ESO(I,NN)
  110 CONTINUE
      DO 111 I=1,NBASIS
      DO 111 J=1,NBASIS
      ESO(I,J)=EE(I,J)
  111 CONTINUE
      IF(IPRNT.LE.3) GO TO 212
      WRITE(6,5)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBFSO,NBASIS,NBASIS,6)
C
C   TRANSFORM SORTED EIGENVECTORS FROM SO TO AO BASIS
  212 CONTINUE
      DO 113 I=1,NBFAO
      DO 113 J=1,NBASIS
      VALU=ZERO
      DO 112 K=1,NBFSO
      VALU=VALU+UAS(I,K)*ESO(K,J)
  112 CONTINUE
      EAO(I,J)=VALU
  113 CONTINUE
      IF(IPRNT.LE.3) GO TO 213
      WRITE(6,6)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBFAO,NBFAO,NBASIS,6)
C
C   DEFINE REAL CONSTANTS
  213 CONTINUE
      A30(1)=ENUC
      A30(2)=ESCF
      DO 115 I=1,15
      A30(I+10)=ALPC(I)
      A30(I+25)=BETC(I)
  115 CONTINUE
      DO 116 I=1,10
      A30(I+40)=FOCC(I)
  116 CONTINUE
C
C   DEFINE INTEGER CONSTANTS
      LPARA(6)=IOPEN
      LPARA(7)=IOCC
      LPARA(8)=KOCC
      LPARA(9)=JOCC
      LPARA(18)=NTYPES
      IF(SCFTYP.EQ.'CLSCF   ') LPARA(19)=1
      IF(SCFTYP.EQ.'HSOP    ') LPARA(19)=2
      IF(SCFTYP.EQ.'GRSCF   ') LPARA(19)=3
      IF(SCFTYP.EQ.'TCSCF   ') LPARA(19)=4
      IF(SCFTYP.EQ.'MCSCF   ') LPARA(19)=5
      IF(CITYP.EQ.'SCF     ') LPARA(20)=1
      IF(CITYP.EQ.'CI      ') LPARA(20)=2
      IF(CITYP.EQ.'MCSCF   ') LPARA(20)=3
      IF(CITYP.EQ.'MCSCFCI ') LPARA(20)=4
      IF(DERTYP.EQ.'FIRST  ') LPARA(21)=1
      IF(DERTYP.EQ.'SECOND ') LPARA(21)=2
      IF(DERTYP.EQ.'THIRD  ') LPARA(21)=3
      IF(DERTYP.EQ.'FOURTH ') LPARA(21)=4
C
      DO 117 I=1,10
      LPARA(I+30)=NDEG(I)
      LPARA(I+40)=NSORB(I)
  117 CONTINUE
C
      RETURN
      END
      SUBROUTINE ZETMAT(EIG,OCC,ESO,EAO,U,T,H,ALPA,BETA,DA,DB,ZT,ZETA,
     1                  EPS,EPA,DT,XA,LBLI,BUFI)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS)
      DIMENSION ESO(NBFSO,NBASIS),EAO(NBFAO,NBASIS)
      DIMENSION U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION H(NBATRI),ALPA(NBATRI),BETA(NBATRI)
      DIMENSION DA(NBATRI,NTYPES),DB(NBATRI,NTYPES)
      DIMENSION ZT(NBATRI,NTYPES),ZETA(NBATRI,NTYPES)
      DIMENSION EPS(NBATRI),EPA(NBATRI),DT(NBATRI),XA(NBATRI)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/COUPL/ALPC(15),BETC(15),ALPT(15),BETT(15)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NTYPES,NATOMS,N3N
      COMMON/GRSCF/FOCC(10),NSORB(10)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/TEMPS/I30(400)
      COMMON/TYPES/SCFTYP,CITYP,DERTYP
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      DATA ZERO,HALF,TWO / 0.0D+00 , 0.5D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' GENERAL OPEN-SHELL MO (SO BASIS)'/)
    2 FORMAT(//,2X,' DA MATRIX (SO BASIS), ITYP = ',I5/)
    3 FORMAT(//,2X,' DB MATRIX (SO BASIS), ITYP = ',I5/)
    4 FORMAT(//,2X,' ZETA MATRIX (SO BASIS) ONE ELECTRON PART, ITYP = ',
     1 I5/)
    5 FORMAT(//,2X,' ZETA MATRIX (MO BASIS) ONE ELECTRON PART, ITYP = ',
     1 I5/)
    6 FORMAT(2X,6I5,F15.8)
    7 FORMAT(//,2X,' ZETA MATRIX (SO BASIS), ITYP = ',I5/)
    8 FORMAT(//,2X,' ZETA MATRIX (MO BASIS), ITYP = ',I5/)
    9 FORMAT(//,2X,' LAGRANGIAN MATRIX (MO BASIS)'/)
   10 FORMAT(//,2X,' LAGRANGIAN MATRIX (AO BASIS)'/)
   11 FORMAT(//,2X,' DENSITY MATRIX (AO BASIS), ITYP = ',I5/)
C
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,1)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C   CALCULATE SO DENSITY MATRICES
  301 IT=1
      DO 105 ITYP=1,NTYPES
      IF(ITYP.EQ.1) GO TO 302
      IT=IT+NSORB(ITYP-1)
  302 IJ=0
      DO 102 I=1,NBASIS
      DO 102 J=1,I
      IJ=IJ+1
      VALUA=ZERO
      VALUB=ZERO
      DO 101 K=1,JOCC
      ITK=IOFF(IT)+K
      IF(IT.LT.K) ITK=IT+IOFF(K)
      VALUA=VALUA+ALPA(ITK)*ESO(I,K)*ESO(J,K)
      VALUB=VALUB+BETA(ITK)*ESO(I,K)*ESO(J,K)
  101 CONTINUE
      DA(IJ,ITYP)=VALUA
      DB(IJ,ITYP)=VALUB
  102 CONTINUE
      IF(IPRNT.LE.4) GO TO 105
      WRITE(6,2) ITYP
      CALL PRINT(DA(1,ITYP),NBATRI,NBASIS,6)
      WRITE(6,3) ITYP
      CALL PRINT(DB(1,ITYP),NBATRI,NBASIS,6)
  105 CONTINUE
C
C:::::::::::::::::::::::::::::::::::::::
C:::FORM LAGRANGIAN AND ZETA MATRICES:::
C:::::::::::::::::::::::::::::::::::::::
C
C   ONE ELECTRON PART
      CALL MREAD(H,15)
      IT=1
      DO 108 ITYP=1,NTYPES
      IF(ITYP.EQ.1) GO TO 303
      IT=IT+NSORB(ITYP-1)
  303 FAC=OCC(IT)*HALF
      DO 106 I=1,NTRI
      ZT(I,ITYP)=H(I)*FAC
  106 CONTINUE
      IF(IPRNT.LE.3) GO TO 108
      WRITE(6,4) ITYP
      CALL PRINT(ZT(1,ITYP),NBATRI,NBASIS,6)
  108 CONTINUE
C
C   TWO ELECTRON PART
      CALL SREW(ITAP36)
C
  500 CALL SREAD(ITAP36,LBLI,MAXBF4)
      DO 130 I=1,MAXBUF
      IBA=LBLI(I+I-1)
      IBB=LBLI(I+I)
      IF(IBA.EQ.0) GO TO 501
      VALU=BUFI(MAXBUF+I)
      CALL UNPACK(II,JJ,KK,LL,IX,IBA,IBB)
C     IF(IPRNT.LE.5) GO TO 304
C     WRITE(6,6) I,II,JJ,KK,LL,IX,VALU
  304 GO TO (201,202,203,204,205,206,207,208,209,210,211,212,212,212),IX
C
C (II/II)   1=(11/11)
C
  201 IIII=IOFF(II+1)
      DO 111 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+(DA(IIII,ITYP)+DB(IIII,ITYP))*VALU
  111 CONTINUE
      GO TO 130
C
C  (II/KK)  2=(22/11)
C
  202 IIII=IOFF(II+1)
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      DO 112 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DA(KKKK,ITYP)*VALU
      ZT(KKKK,ITYP)=ZT(KKKK,ITYP)+DA(IIII,ITYP)*VALU
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(IIKK,ITYP)*VALU
  112 CONTINUE
      GO TO 130
C
C  (II/IL)  3=(22/21)
C
  203 IIII=IOFF(II+1)
      IILL=IOFF(II)+LL
      DO 113 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+(DA(IILL,ITYP)+DB(IILL,ITYP))*VALU*TWO
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+(DA(IIII,ITYP)+DB(IIII,ITYP))*VALU
  113 CONTINUE
      GO TO 130
C
C  (IJ/JJ)  4=(21/11)
C
  204 IIJJ=IOFF(II)+JJ
      JJJJ=IOFF(JJ+1)
      DO 114 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(JJJJ,ITYP)+DB(JJJJ,ITYP))*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+(DA(IIJJ,ITYP)+DB(IIJJ,ITYP))*VALU*TWO
  114 CONTINUE
      GO TO 130
C
C  (IJ/IJ)  5=(21/21)
C
  205 IIJJ=IOFF(II)+JJ
      IIII=IOFF(II+1)
      JJJJ=IOFF(JJ+1)
      DO 115 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DB(JJJJ,ITYP)*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+DB(IIII,ITYP)*VALU
  115 CONTINUE
      GO TO 130
C
C  (II/KL)  6=(33/21)
C
  206 IIII=IOFF(II+1)
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      DO 116 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DA(KKLL,ITYP)*VALU*TWO
      ZT(KKLL,ITYP)=ZT(KKLL,ITYP)+DA(IIII,ITYP)*VALU
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(IILL,ITYP)*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+DB(IIKK,ITYP)*VALU
  116 CONTINUE
      GO TO 130
C
C  (IJ/KK)  7=(32/11)
C
  207 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=IOFF(JJ)+KK
      DO 117 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+DA(KKKK,ITYP)*VALU
      ZT(KKKK,ITYP)=ZT(KKKK,ITYP)+DA(IIJJ,ITYP)*VALU*TWO
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJKK,ITYP)*VALU
      ZT(JJKK,ITYP)=ZT(JJKK,ITYP)+DB(IIKK,ITYP)*VALU
  117 CONTINUE
      GO TO 130
C
C  (IJ/KK)  8=(31/22)
C
  208 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=JJ+IOFF(KK)
      DO 118 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+DA(KKKK,ITYP)*VALU
      ZT(KKKK,ITYP)=ZT(KKKK,ITYP)+DA(IIJJ,ITYP)*VALU*TWO
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJKK,ITYP)*VALU
      ZT(JJKK,ITYP)=ZT(JJKK,ITYP)+DB(IIKK,ITYP)*VALU
  118 CONTINUE
      GO TO 130
C
C (IJ/IL)  9=(32/31)
C
  209 IIJJ=IOFF(II)+JJ
      IILL=IOFF(II)+LL
      IIII=IOFF(II+1)
      JJLL=IOFF(JJ)+LL
      DO 119 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(IILL,ITYP)*TWO
     1                            +DB(IILL,ITYP))*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DB(JJLL,ITYP)*VALU*TWO
      ZT(JJLL,ITYP)=ZT(JJLL,ITYP)+DB(IIII,ITYP)*VALU
  119 CONTINUE
      GO TO 130
C
C  (IJ/JL)  10=(32/21)
C
  210 IIJJ=IOFF(II)+JJ
      JJLL=IOFF(JJ)+LL
      IILL=IOFF(II)+LL
      JJJJ=IOFF(JJ+1)
      DO 120 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(JJLL,ITYP)*TWO
     1                            +DB(JJLL,ITYP))*VALU
      ZT(JJLL,ITYP)=ZT(JJLL,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+DB(JJJJ,ITYP)*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+DB(IILL,ITYP)*VALU*TWO
  120 CONTINUE
      GO TO 130
C
C  (IJ/KJ)  11=(31/21)
C
  211 IIJJ=IOFF(II)+JJ
      KKJJ=IOFF(KK)+JJ
      IIKK=IOFF(II)+KK
      JJJJ=IOFF(JJ+1)
      DO 121 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(KKJJ,ITYP)*TWO
     1                            +DB(KKJJ,ITYP))*VALU
      ZT(KKJJ,ITYP)=ZT(KKJJ,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJJJ,ITYP)*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+DB(IIKK,ITYP)*VALU*TWO
  121 CONTINUE
      GO TO 130
C
C  (IJ/KL)  12=(43/21)
C  (IJ/KL)  13=(42/31)
C  (IJ/KL)  14=(41/32)
C
  212 IIJJ=IOFF(II)+JJ
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      JJLL=IOFF(MAX0(JJ,LL))+MIN0(JJ,LL)
      IILL=IOFF(II)+LL
      JJKK=IOFF(MAX0(JJ,KK))+MIN0(JJ,KK)
      DO 122 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+DA(KKLL,ITYP)*VALU*TWO
      ZT(KKLL,ITYP)=ZT(KKLL,ITYP)+DA(IIJJ,ITYP)*VALU*TWO
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJLL,ITYP)*VALU
      ZT(JJLL,ITYP)=ZT(JJLL,ITYP)+DB(IIKK,ITYP)*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+DB(JJKK,ITYP)*VALU
      ZT(JJKK,ITYP)=ZT(JJKK,ITYP)+DB(IILL,ITYP)*VALU
  122 CONTINUE
C
  130 CONTINUE
      GO TO 500
C
  501 CALL SREW(ITAP36)
C
C   TRANSFORM ZETA MATRICES FROM SO TO MO BASIS
      DO 165 ITYP=1,NTYPES
      CALL MOCONV(ZT(1,ITYP),NBATRI,ZETA(1,ITYP),NBATRI,ESO,U,T)
      CALL MWRIT(ZETA(1,ITYP),ITYP+26)
      IF(IPRNT.LE.2) GO TO 165
      WRITE(6,7) ITYP
      CALL PRINT(ZT(1,ITYP),NBATRI,NBASIS,6)
      WRITE(6,8) ITYP
      CALL PRINT(ZETA(1,ITYP),NBATRI,NBASIS,6)
  165 CONTINUE
C
C   FORM THE LAGRANGIAN MATRIX IN MO BASIS
      DO 170 I=1,NTRI
  170 EPS(I)=ZERO
C
      NSTR=0
      NEND=0
      DO 173 ITYP=1,NTYPES
      NN=NSORB(ITYP)
      IF(NN.LE.0) GO TO 173
      NSTR=NEND+1
      NEND=NSTR+NN-1
      DO 171 I=NSTR,NEND
      DO 171 J=1,I
      IJ=IOFF(I)+J
      EPS(IJ)=ZETA(IJ,ITYP)
  171 CONTINUE
  173 CONTINUE
      CALL MWRIT(EPS,25)
      IF(IPRNT.LE.2) GO TO 310
      WRITE(6,9)
      CALL PRINT(EPS,NBATRI,NBASIS,6)
C
C   TRANSFORM THE LAGRANGIAN MATRIX FROM MO TO AO BASIS
  310 CONTINUE
      DO 175 I=1,NBASIS
      DO 175 J=1,I
      IJ=IOFF(I)+J
      T(I,J)=EPS(IJ)
      T(J,I)=EPS(IJ)
  175 CONTINUE
      DO 177 I=1,NBASIS
      DO 177 JJ=1,NBFAO
      VALU=ZERO
      DO 176 J=1,NBASIS
      VALU=VALU+EAO(JJ,J)*T(I,J)
  176 CONTINUE
      U(I,JJ)=VALU
  177 CONTINUE
      DO 179 II=1,NBFAO
      DO 179 JJ=1,II
      IIJJ=IOFF(II)+JJ
      VALU=ZERO
      DO 178 I=1,NBASIS
      VALU=VALU+EAO(II,I)*U(I,JJ)
  178 CONTINUE
      EPA(IIJJ)=VALU*TWO
  179 CONTINUE
      CALL MWRIT(EPA,24)
      IF(IPRNT.LE.2) GO TO 315
      WRITE(6,10)
      CALL PRINT(EPA,NBATRI,NBFAO,6)
C
C   FORM DENSITY MATRICES IN AO BASIS
  315 CONTINUE
      DO 181 ITYP=1,NTYPES
      DO 180 I=1,NBATRI
  180 DA(I,ITYP)=ZERO
  181 CONTINUE
C
      NSTR=0
      NEND=0
      DO 185 ITYP=1,NTYPES
      NN=NSORB(ITYP)
      IF(NN.EQ.0) GO TO 185
      NSTR=NEND+1
      NEND=NSTR+NN-1
      IJ=0
      DO 183 I=1,NBFAO
      DO 183 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 182 K=NSTR,NEND
  182 VALU=VALU+EAO(I,K)*EAO(J,K)
      DA(IJ,ITYP)=VALU
  183 CONTINUE
  185 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 325
      DO 189 ITYP=1,NTYPES
      WRITE(6,11) ITYP
      CALL PRINT(DA(1,ITYP),NBATRI,NBFAO,6)
  189 CONTINUE
C
  325 CONTINUE
      RETURN
      END
