      SUBROUTINE FENTRY(CC,IA,MAXCOR)
C   THIS PROGRAM READS AN INTEGRAL FILE (TAPE34) AND
C   FORMS A SUPERMATRIX INTEGRAL FILE (TAPE37)
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
C*  BY:  YUKIO YAMAGUCHI                           search:  C2-16-89  *
C*  DATE:  FEBRUARY 16, 1989                                          *
C*  REASON: FENTRY*                                                   *
C**********************************************************************
c Moved to PSI distribution disk on 020289 - clj.
C**********************************************************************
C*  BY:  Richard Remington                         search:  C5-11-88  *
C*  DATE:  May    11,  1988                                           *
C*  REASON: Increase variable INTMX from 1296 to 1296*4 for extra d's.*
C**********************************************************************
C*  BY:  Richard Remington                         search:  C4-21-88  *
C*  DATE:  APRIL  21,  1988                                           *
C*  REASON: ADD DEFAULTS FOR MAKE37 AND REMOVE PRINTING EXTRA OUTPUT. *
C**********************************************************************
C*  BY:  Yukio Yamaguchi                           search:  c4-19-88  *
C*  DATE:  April  19,  1988                                           *
C*  REASON: Initial implementaion for CPHF using supermatrix P-K file *
C**********************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
C4-21-88  DIMENSION CC(600000),IA(1)
C2-16-89  DIMENSION CC(360000),IA(1)
      DIMENSION CC(MAXCOR),IA(1)
      INTEGER BLABEL(20)
      INTEGER ND(10),MNL(142),MS(142),MTYPE(2,20),ITYP(20)
      COMMON/BASIS/NBASIS,NTRI,NSYM
      COMMON/ENRGY/ESCF,ENUC
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF3,MAXBF6
      COMMON/PASS1/IAA,IBB,ICC,IDD
      COMMON/PASS2/PKI
      COMMON/PASS3/NINT
      COMMON/PASS4/INTMX
      COMMON/PASS5/TOLER
      COMMON/PASS6/IBL,NINTO,NBUFO
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP37
C2-16-89  EQUIVALENCE (CC,IA)
    1 FORMAT(//,2X,' THE PROGRAM TO READ TAPE34 AND TO FORM TAPE37'/)
    2 FORMAT(5I5)
    3 FORMAT(A8,2X)
    4 FORMAT(2X,' BLABEL = ',20A4/)
    5 FORMAT(2X,' ENUC   = ',F15.8/)
    6 FORMAT(2X,' NST    = ',I5/2X,' NDEG   =',8I5/)
    7 FORMAT(2X,' ITOLER = ',I8/
     1       2X,' ITEST  = ',I8/
     2       2X,' IPRNT  = ',I8/
     3       2X,' INTMX  = ',I8/
     4       2X,' NBASIS = ',I8/
     5       2X,' NTRI   = ',I8/
     6       2X,' NSYM   = ',I8)
    8 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
    9 FORMAT(//,2X,' BASIS SET SIZE EXCEEDS MAXBAS '/
     1          2X,' NBASIS = ',I5,5X,' MAXBAS = ',I5/)
   10 FORMAT(//,2X,' REQUIRED MEMORY EXCEEDS MAXCOR '/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
   11 FORMAT(//,2X,' WARNING!  NO INPUT TO MAKE37 HAS BEEN FOUND,',
     1             ' THE DEFAULT OPTIONS WILL BE USED. ',/)
C
C   ITAP34 = SO INTEGRALS
C   ITAP37 = TWO ELECTRON SO INTEGRALS IN THE SUPERMATRIX FORM
C
      CALL TSTART(6)
      CALL NOUNFL
C
      ITAPE3=3
      ITAPE6=6
      ITAP34=34
      ITAP37=37
C4-21-88  MAXCOR=600000
C2-16-89  MAXCOR=360000
      MAXBUF=4096
      MAXBF3=MAXBUF*3
      MAXBF6=MAXBUF*6
c5-11-88  INTMX=1296
C2-16-89  INTMX=1296*4
      INTMX=1296*20
      MAXBAS=256
      INPUT=5
      CALL LOCATE(INPUT,'# MAKE37 #',IERR)
C
      WRITE(6,1)
      WRITE(3,1)
C
      ITOLER = 0
      ITEST  = 0
      IPRNT  = 0
C4-21-88
      IF(IERR.EQ.0) READ(5,2) ITOLER,ITEST,IPRNT
      IF(IERR.NE.0) WRITE(6,11)
C
      IF(ITOLER.EQ.0) ITOLER=12
      TOLER=10.0D+00**(-ITOLER)
C
      IOFF(1)=0
      DO 101 I=1,255
  101 IOFF(I+1)=IOFF(I)+I
C
C   READ IN INTEGRAL INFORMATION FROM 34 FILE
      CALL RFILE(ITAP34)
      CALL WREADW(ITAP34,NKIND,1,1,IEND)
      CALL WREADW(ITAP34,ICLOS,1,IEND,IEND)
      CALL WREADW(ITAP34,BLABEL,20,IEND,IEND)
      CALL WREADW(ITAP34,ENUC,2,IEND,IEND)
      CALL WREADW(ITAP34,NST,1,IEND,IEND)
      CALL WREADW(ITAP34,ND,NST,IEND,IEND)
      CALL WREADW(ITAP34,ITYP,NST,IEND,IEND)
      CALL WREADW(ITAP34,NDEG,NST,IEND,IEND)
      CALL WREADW(ITAP34,NS,1,IEND,IEND)
      CALL WREADW(ITAP34,MTYPE,2*NS,IEND,IEND)
      CALL WREADW(ITAP34,LAPU,1,IEND,IEND)
      CALL WREADW(ITAP34,MS,LAPU,IEND,IEND)
      CALL WREADW(ITAP34,MNL,LAPU,IEND,IPARA)
C     WRITE(6,30) IPARA
C  30 FORMAT(2X,' IPARA = ',I10/)
      ISADR=I2SEC(IPARA)+1
      CALL RSETSA(ITAP34,ISADR)
C
      WRITE(6,4) BLABEL
C     WRITE(3,4) BLABEL
C     WRITE(6,5) ENUC
      WRITE(3,5) ENUC
C     WRITE(6,6) NST,(NDEG(I),I=1,NST)
      WRITE(3,6) NST,(NDEG(I),I=1,NST)
C
      NSYM=0
      NBASIS=0
      DO 102 I=1,NST
      IF(NDEG(I).GT.0) NSYM=NSYM+1
      NBASIS=NBASIS+NDEG(I)
  102 CONTINUE
      IDEG(1)=0
      LSYM(1)=0
      IF(NSYM.EQ.1) GO TO 203
      II=0
      DO 103 I=2,NST
      IF(NDEG(I).LE.0) GO TO 202
  201 II=II+1
      NN=NDEG(II)
      IF(NN.EQ.0) GO TO 201
      IDEG(I)=IDEG(I-1)+NN
      LSYM(I)=LSYM(I-1)+IOFF(NN+1)
      GO TO 103
  202 LSYM(I)=LSYM(I-1)
      IDEG(I)=IDEG(I-1)
  103 CONTINUE
  203 CONTINUE
      IF(NBASIS.GT.MAXBAS) GO TO 299
      NTRI=IOFF(NBASIS+1)
C
      WRITE(6,7) ITOLER,ITEST,IPRNT,INTMX,NBASIS,NTRI,NSYM
C
C   CREATE SO INTEGRAL FILES
      WRITE(3,21)
   21 FORMAT(//,2X,' NOW YOU ARE IN RDONE'/)
      IBUFHF=4471
      IC1=1
      IC2=IC1+NTRI
      IC3=IC2+NTRI
      IC4=IC3+NTRI
      IC5=IC4+NTRI
      IA5=IC5+IC5-1
      ICMAX=IC5+IBUFHF
      WRITE(3,8) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................S       H       T       V       LBLI    STVI....
      CALL RDONE(CC(IC1),CC(IC2),CC(IC3),CC(IC4),IA(IA5),CC(IC5),
C.......................
     1           IBUFHF)
C
      WRITE(3,22)
   22 FORMAT(//,2X,' NOW YOU ARE IN RDTWO'/)
      IBUFHF=4471
      IC1=1
      IA1=1
      IC2=IC1+IBUFHF
      IA2=IC2+IC2-1
      IC3=IC2+MAXBF3
      IC4=IC3+INTMX
      IC5=IC4+INTMX
      IC6=IC5+INTMX
      IA6=IC6+IC6-1
      IC7=IC6+INTMX
      IA7=IC7+IC7-1
      ICMAX=IC7+INTMX
      WRITE(3,8) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................LBLI    PKI     LBLO    BUFO    PA      PB......
      CALL RDTWO(IA(IA1),CC(IC1),IA(IA2),CC(IC2),CC(IC3),CC(IC4),
C................PC      LBIJ    LBKL...........
     1           CC(IC5),IA(IA6),IA(IA7),IBUFHF)
C
C   READ TAPE37 TO CHECK
      IF(ITEST.EQ.0) GO TO 400
      WRITE(3,23)
   23 FORMAT(//,2X,' NOW YOU ARE IN READIT'/)
C
      CALL ZERO(CC,MAXBF3)
      CALL IZERO(IA,MAXBF6)
      IC1=1
      IA1=1
C.................LBLI    BUFI....
      CALL READIT(IA(IA1),CC(IC1))
      GO TO 400
C
  299 CONTINUE
      WRITE(6,9) NBASIS,MAXBAS
      WRITE(6,9) NBASIS,MAXBAS
      STOP
  399 CONTINUE
      WRITE(3,10) ICMAX,MAXCOR
      WRITE(3,10) ICMAX,MAXCOR
      STOP
C
  400 CONTINUE
      CALL RCLOSE(ITAP34,3)
      CALL TSTOP(6)
C
      RETURN
C2-16-89  STOP
      END
      SUBROUTINE RDONE(S,H,T,V,LBLI,STVI,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION S(NTRI),H(NTRI),T(NTRI),V(NTRI)
      DIMENSION LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' S MATRIX'/)
    2 FORMAT(//,2X,' T MATRIX'/)
    3 FORMAT(//,2X,' V MATRIX'/)
    4 FORMAT(//,2X,' H MATRIX'/)
C
C   READ IN ONE ELECTRON INTEGRALS
C
C   S INTEGRALS
      CALL ONEI(S,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL PRINT(S,NTRI,NBASIS,6)
C
C   T INTEGRALS
  201 CONTINUE
      CALL ONEI(T,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,2)
      CALL PRINT(T,NTRI,NBASIS,6)
C
C   V INTEGRALS
  202 CONTINUE
      CALL ONEI(V,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 203
      WRITE(6,3)
      CALL PRINT(V,NTRI,NBASIS,6)
C
C   TOTAL ONE ELECTRON INTEGRALS
  203 CONTINUE
      DO 101 I=1,NTRI
      H(I)=T(I)+V(I)
  101 CONTINUE
      IF(IPRNT.LE.3) GO TO 204
      WRITE(6,4)
      CALL PRINT(H,NTRI,NBASIS,6)
C
  204 CONTINUE
      RETURN
      END
      SUBROUTINE ONEI(X,LBLI,STVI,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION X(NTRI),LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP37
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,8I5,3F15.7)
C
      CALL ZERO(X,NTRI)
C
      IBUFSZ=8942
      IBUFS3=1491
      INTI=0
      NBLI=0
  200 CONTINUE
      NBLI=NBLI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
C*    IF(IPRNT.GE.5)
C*   *WRITE(6,1) ILSTI,NBUF
      DO 101 I=1,NBUF
      JSM=ISHFT(LBLI(I+2),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+2),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      IIJJ=IOFF(II)+JJ
      STV0=STVI(I+IBUFS3)
      X(IIJJ)=STV0
C*    IF(IPRNT.LE.6) GO TO 101
C*    WRITE(6,2) I,IOR,ISM,JOR,JSM,II,JJ,IIJJ,STV0
  101 CONTINUE
      INTI=INTI+NBUF
      IF(ILSTI.EQ.0) GO TO 200
C
      RETURN
      END
      SUBROUTINE RDTWO(LBLI,PKI,LBLO,BUFO,PA,PB,PC,LBIJ,LBKL,
     1                 INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION LBLI(INBUFS*2),PKI(INBUFS),LBLO(MAXBF6),BUFO(MAXBF3)
      DIMENSION PA(INTMX),PB(INTMX),PC(INTMX)
      DIMENSION LBIJ(INTMX),LBKL(INTMX)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF3,MAXBF6
      COMMON/PASS1/II,JJ,KK,LL
      COMMON/PASS2/PKII
      COMMON/PASS3/NINT
      COMMON/PASS4/INTMX
      COMMON/PASS6/IBL,NINTO,NBUFO
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP37
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,9I5,3F15.7)
    3 FORMAT(//,2X,' NUMBER OF BUFFERS READ      = ',I10
     1         ,5X,' NUMBER OF INTEGRALS READ    = ',I10)
    4 FORMAT(   2X,' NUMBER OF BUFFERS WRITTEN   = ',I10
     1         ,5X,' NUMBER OF INTEGRALS WRITTEN = ',I10/)
C
      CALL RFILE(ITAP37)
C
      IBUFSZ=8942
      IBUFQT=2236
      IBL=0
      NINTI=0
      NINTO=0
      NBUFI=0
      NBUFO=0
      NINT=0
  200 CONTINUE
      NBUFI=NBUFI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
C4-21-88  IF(IPRNT.GE.5)
C4-21-88  WRITE(6,1) ILSTI,NBUF
      DO 101 I=1,NBUF
      LOR=ISHFT(LBLI(I+I+2),-2)
      LSM=ISHFT(LOR,-8)
      KOR=ISHFT(LSM,-3)
      KSM=ISHFT(KOR,-8)+1
      KOR=IAND(KOR,255)
      LSM=IAND(LSM,7)+1
      LOR=IAND(LOR,255)
      III=IAND(LBLI(I+I+2),3)
      JSM=ISHFT(LBLI(I+I+1),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+I+1),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      KK=KOR+IDEG(KSM)
      LL=LOR+IDEG(LSM)
      PKII=PKI(I+IBUFQT)
C     IF(IPRNT.LE.4) GO TO 202
C     WRITE(6,2) III,IOR,ISM,JOR,JSM,KOR,KSM,LOR,LSM,PKII
C 202 CONTINUE
C
C   FORM ELEMENTS OF THE J AND 1/2K MATRICES
C   FOR A BLOCK OF INTEGRALS
      CALL JKMAT(PA,PB,PC,LBIJ,LBKL)
      IF(III.NE.0.AND.NINT.NE.0) THEN
        CALL PACKIT(LBLO,BUFO,PA,PB,PC,LBIJ,LBKL,0)
      END IF
  101 CONTINUE
      NINTI=NINTI+NBUF
      IF(ILSTI.EQ.0) GO TO 200
C
C   FOR THE LAST BUFFER
      CALL PACKIT(LBLO,BUFO,PA,PB,PC,LBIJ,LBKL,1)
C
      WRITE(6,3) NBUFI,NINTI
      WRITE(6,4) NBUFO,NINTO
C
C   END OF PROCESSING
      CALL SREW(ITAP37)
      CALL RCLOSE(ITAP37,3)
      RETURN
      END
      SUBROUTINE JKMAT(PA,PB,PC,LBIJ,LBKL)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION PA(INTMX),PB(INTMX),PC(INTMX)
      DIMENSION LBIJ(INTMX),LBKL(INTMX)
      COMMON/PASS1/I,J,K,L
      COMMON/PASS4/INTMX
      COMMON/SIGNS/IOFF(256),IPRNT
C
      IJ=IOFF(I)+J
      IK=IOFF(I)+K
      IL=IOFF(I)+L
      JK=IOFF(MAX0(J,K))+MIN0(J,K)
      JL=IOFF(MAX0(J,L))+MIN0(J,L)
      KL=IOFF(K)+L
C
C   SORT INTEGRAL TYPE
      IF(I-L) 202,201,202
C
C   (11/11)
  201 IX=1
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,7)
      GO TO 230
C
  202 IF(J-L) 208,203,211
  203 IF(K-L) 205,204,205
C   (21/11)=(12/11)=(11/21)=(11/12)
  204 IX=4
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,7)
      GO TO 230
C
  205 IF(I-K) 207,206,207
C   (21/21)=(21/12)=(12/21)=(12/12)
  206 IX=5
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,5)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,6)
      GO TO 230
C
C   (31/21)=(31/12)=(13/21)=(13/12)=(21/31)=(21/13)=(12/31)=(12/13)
  207 IX=11
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,5)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,6)
      GO TO 230
C
  208 IF(K-L) 210,209,210
C   (31/22)=(13/22)=(22/31)=(22/13)
  209 IX=8
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,1)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,3)
      GO TO 230
C
C   (41/32)=(41/23)=(14/32)=(14/23)=(32/41)=(32/14)=(23/41)=(23/14)
  210 IX=14
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,1)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,3)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IL,JK,3)
      GO TO 230
C
  211 IF(I-J) 212,212,217
  212 IF(I-K) 213,213,214
C   (22/21)=(22/12)=(21/22)=(12/22)
  213 IX=3
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,7)
      GO TO 230
C
  214 IF(K-L) 215,215,216
C   (22/11)=(11/22)
  215 IX=2
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,1)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,2)
      GO TO 230
C
C   (33/21)=(33/12)=(21/33)=(12/33)
  216 IX=6
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,1)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,2)
      GO TO 230
C
  217 IF(I-K) 218,218,219
C   (32/31)=(32/13)=(23/31)=(23/13)=(31/32)=(31/23)=(13/32)=(13/23)
  218 IX=9
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,5)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,6)
      GO TO 230
C
  219 IF(J-K) 220,221,222
C   (42/31)=(42/13)=(24/31)=(24/13)=(31/42)=(31/24)=(13/42)=(13/24)
  220 IX=13
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,1)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,2)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IL,JK,3)
      GO TO 230
 
C   (32/21)=(32/12)=(23/21)=(23/12)=(21/32)=(21/23)=(12/32)=(12/23)
  221 IX=10
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,4)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IL,JK,6)
      GO TO 230
C
  222 IF(K-L) 223,223,224
C   (32/11)=(23/11)=(11/32)=(11/23)
  223 IX=7
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,1)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,2)
      GO TO 230
C
C   (43/21)=(43/12)=(34/21)=(34/12)=(21/43)=(21/34)=(12/43)=(12/34)
  224 IX=12
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,1)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IK,JL,2)
      CALL FINDIT(PA,PB,PC,LBIJ,LBKL,IL,JK,2)
C
  230 CONTINUE
      RETURN
      END
      SUBROUTINE FINDIT(PA,PB,PC,LBIJ,LBKL,IJ,KL,IABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION PA(INTMX),PB(INTMX),PC(INTMX)
      DIMENSION LBIJ(INTMX),LBKL(INTMX)
      COMMON/PASS2/PKI
      COMMON/PASS3/NINT
      COMMON/PASS4/INTMX
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' NINT EXCEEDS INTMX IN FINDIT'/
     1          2X,' NINT = ',I5,' INTMX = ',I5/
     2          2X,' --- STOP !! ---')
C
      IF(NINT.EQ.0) GO TO 201
C
C   FIND EXISTENCE OF INTEGRAL TYPE
      DO 101 I=1,NINT
      IF(LBIJ(I).EQ.IJ.AND.LBKL(I).EQ.KL) GO TO 202
  101 CONTINUE
C
C   NEW INTEGRAL TYPE
  201 CONTINUE
      NINT=NINT+1
      IF(NINT.GT.INTMX) THEN
        WRITE(6,1) NINT,INTMX
        STOP
      END IF
      IPOS=NINT
      LBIJ(IPOS)=IJ
      LBKL(IPOS)=KL
      PA(IPOS)=A00
      PB(IPOS)=A00
      PC(IPOS)=A00
      GO TO 203
C
C   INTEGRAL TYPE ALREADY EXISTS
  202 CONTINUE
      IPOS=I
C
C   FILL PA(IJ/KL) , PB(IK/JL) AND PC(IL/JK) ARRAYS
  203 CONTINUE
      GO TO (301,302,303,304,305,306,307),IABC
C
  301 CONTINUE
      PA(IPOS)=PKI
      GO TO 310
C
  302 CONTINUE
      PB(IPOS)=PKI
      GO TO 310
C
  303 CONTINUE
      PC(IPOS)=PKI
      GO TO 310
C
  304 CONTINUE
      PA(IPOS)=PKI
      PB(IPOS)=PKI
      GO TO 310
C
  305 CONTINUE
      PA(IPOS)=PKI
      PC(IPOS)=PKI
      GO TO 310
C
  306 CONTINUE
      PB(IPOS)=PKI
      PC(IPOS)=PKI
      GO TO 310
C
  307 CONTINUE
      PA(IPOS)=PKI
      PB(IPOS)=PKI
      PC(IPOS)=PKI
C
  310 CONTINUE
      RETURN
      END
      SUBROUTINE PACKIT(LBLO,BUFO,PA,PB,PC,LBIJ,LBKL,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION LBLO(MAXBF6),BUFO(MAXBF3)
      DIMENSION PA(INTMX),PB(INTMX),PC(INTMX)
      DIMENSION LBIJ(INTMX),LBKL(INTMX)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF3,MAXBF6
      COMMON/PASS3/NINT
      COMMON/PASS4/INTMX
      COMMON/PASS5/TOLER
      COMMON/PASS6/IBL,NINTO,NBUFO
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP37
      DATA A00,QUAR,HALF / 0.0D+00 , 0.25D+00 , 0.5D+00 /
    2 FORMAT(2X,3I5,3F10.5,5X,2F10.5)
C
C   THIS SUBROUTINE FORMS J AND 1/2 K MATRICES
C     PA(I) CONTAINS INTEGRALS OF (IJ/KL) TYPE
C     PB(I) CONTAINS INTEGRALS OF (IK/JL) TYPE
C     PC(I) CONTAINS INTEGRALS OF (IL/JK) TYPE
C
C     V1 = (IJ/KL) - 1/4*( (IK/JL) + (IL/JK) )
C     V2 = 1/4*( (IK/JL) + (IL/JK) )
C
      IF(IFLAG.NE.0) GO TO 205
C
      DO 101 I=1,NINT
      IJ=LBIJ(I)
      KL=LBKL(I)
      TA=PA(I)
      TB=PB(I)
      TC=PC(I)
      V2=(TB+TC)*QUAR
      V1=TA-V2
      IF(IJ.EQ.KL) THEN
        V1=V1*HALF
        V2=V2*HALF
      END IF
      IF(DABS(V1).LT.TOLER.AND.DABS(V2).LT.TOLER) GO TO 101
      IBL=IBL+1
      LBLO(IBL+IBL-1)=IJ
      LBLO(IBL+IBL  )=KL
      BUFO(IBL+MAXBUF       )=V1
      BUFO(IBL+MAXBUF+MAXBUF)=V2
C*    IF(IPRNT.LT.5) GO TO 201
C*    WRITE(6,2) I,IJ,KL,TA,TB,TC,V1,V2
C*201 CONTINUE
      IF(IBL.LT.MAXBUF) GO TO 101
      LBLO(1)=LBLO(1)*(MAXBUF+1)+MAXBUF
      LBLO(2)=LBLO(2)*(MAXBUF+1)
      CALL SWRIT(ITAP37,LBLO,MAXBF6)
      NINTO=NINTO+IBL
      NBUFO=NBUFO+1
C
C  FOR A NEW BUFFER
      IBL=0
C
  101 CONTINUE
      NINT=0
      RETURN
C
C  FOR THE LAST BUFFER
  205 CONTINUE
      LBLO(1)=LBLO(1)*(MAXBUF+1)+IBL
      LBLO(2)=LBLO(2)*(MAXBUF+1)+1
      CALL SWRIT(ITAP37,LBLO,MAXBF6)
      NINTO=NINTO+IBL
      NBUFO=NBUFO+1
      CALL SREW(ITAP37)
C
      RETURN
      END
      SUBROUTINE READIT(LBLI,BUFI)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION LBLI(MAXBF6),BUFI(MAXBF3)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF3,MAXBF6
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP37
    1 FORMAT(//,2X,' READ TAPE37 FOR A TEST'/)
    2 FORMAT(2X,3I5,5X,3F10.5)
    3 FORMAT(//,2X,' NUMBER OF BUFFERS READ      = ',I10
     1         ,5X,' NUMBER OF INTEGRALS READ    = ',I10)
C
      WRITE(6,1)
      CALL RFILE(ITAP37)
      CALL SREW(ITAP37)
      NBUFI=0
      NINTI=0
  200 CONTINUE
      NBUFI=NBUFI+1
      CALL SREAD(ITAP37,LBLI,MAXBF6)
      NBUF=MOD(LBLI(1),MAXBUF+1)
      ILSTI=MOD(LBLI(2),MAXBUF+1)
      LBLI(1)=LBLI(1)/(MAXBUF+1)
      LBLI(2)=LBLI(2)/(MAXBUF+1)
      WRITE(6,*) ' NBUF,ILSTI',NBUF,ILSTI
      DO 101 I=1,NBUF
      IJ=LBLI(I+I-1)
      KL=LBLI(I+I  )
      V1=BUFI(I+MAXBUF)
      V2=BUFI(I+MAXBUF+MAXBUF)
      WRITE(6,2) I,IJ,KL,V1,V2
C
  101 CONTINUE
      NINTI=NINTI+NBUF
      IF(ILSTI.EQ.0) GO TO 200
C
      WRITE(6,3) NBUFI,NINTI
C
      CALL SREW(ITAP37)
      CALL RCLOSE(ITAP37,3)
      RETURN
      END
