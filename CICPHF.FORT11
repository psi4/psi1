      subroutine fentry(z,iz,maxcor)
C***********************************************************************
C GENERAL COUPLED-PERTURBED HARTREE-FOCK PROGRAM FOR CI FIRST        ***
C***********************************************************************
C   NOTICE OF PROGRAM MODIFICATION                                     *
C***********************************************************************
c Moved to PSI distribution disk on 020289 - clj.
C***********************************************************************
C      BY:  WESLEY ALLEN                                               *
C    DATE:  JANUARY 5, 1987                                            *
C  REASON:  ADD INPUT OPTION TO ALLOW 3 REF. CI GRADIENT CALCULATIONS. *
C           KSPE= NO. OF SPECIAL ORBITALS.  LSPE(I) CONTAINS THE       *
C           INTEGER LABELS OF THE SPECIAL ORBITALS, I.E. THE NUMBERS   *
C           ASSIGNED TO THEM AS IN THE DRT INPUT.                      *
C           ONLY KSPE=2 WORKS CURRENTLY WITH THE 3 REFERENCES          *
C           (SPE1)2      (SPE2)2     (SPE1)(SPE2) (OPEN-SHELL SINGLET) *
C      BY:  WESLEY ALLEN                                               *
C    DATE:  NOVEMBER 1, 1986                                           *
C  REASON:  FIXING UP THE CI DIPOLE MOMENT                             *
C  REASON:  (SEE GRCPHF PROGRAM FOR A DETAILED DESCRIPTION OF THE BUG) *
C      BY:  TJL                                                        *
C    DATE:  AUGUST 3, 1985                                             *
C  REASON:  WRITE CI ENERGY TO FILE 11                                 *
C      BY:  TJL                                                        *
C    DATE:  APRIL 14, 1985                                             *
C  REASON:  IMPLEMENT COR'S AND VIR'S FOR OPEN SHELL                   *
C  REASON:  OPEN SHELL SINGLETS STILL DO NOT WORK; WITH OR WITHOUT C/V *
C  REASON:  COR'S AND VIR'S FOR DIPOLE MOMENTS HAVE ALSO BEEN IMPL.    *
C  REASON:  THESE HAVE NOT BEEN TESTED.                                *
C     UNIT 3 TO CHECK                                                  *
C  REASON:  CHANGE UNIT NUMBERS !! 2=>52, 82=>56, 21=>55,  JTAP1=>94   *
C  REASON:  CHANGE UNIT NUMBERS !! 8=>58, 20=>53, 22=>42,  JTAP2=>96   *
C  REASON:  CHANGE UNIT NUMBERS !!12=>54, 57=>47         , IUTAP=>98   *
C      BY:  RICHARD REMINGTON                                          *
C    DATE:  FEBRUARY 22, 1985                                          *
C  REASON:  ADD SUBROUTINE PRN11 IN ORDER TO WRITE CI GRADIENTS INTO   *
C           FILES 11, 30, AND THE OUTPUT (FILE6).                      *
C***********************************************************************
C
      REAL*8 Z(maxcor)
      INTEGER IZ(1)
clj00389      EQUIVALENCE (IZ(1), Z(1))
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /FILES/ IT54,IT97
C
 1000 FORMAT(///,10X,' >>>>> GENERAL CPHF CALCULATION COMPLETED <<<<< ')
C
clj030389      MAXCOR=1200000
      ICHK = 3
      NOUT = 6
      IT30 = 30
      IT42 = 42
      IT47 = 47
      IT52 = 52
      IT54 = 54
      IT58 = 58
      IT94 = 94
      IT96 = 96
      IT97 = 97
C
      CALL TSTART(3)
      CALL TSTART(6)
      CALL NOUNFL
C
      CALL MAIN(IZ,Z,MAXCOR)
C
      CALL RCLOSE(IT96,3)
CTJL  CALL RCLOSE(IT30,3)
C
      WRITE(NOUT,1000)
C
      CALL TSTOP(3)
      CALL TSTOP(6)
C
      STOP
      END
      SUBROUTINE MAIN(IZ,Z,MAXCOR)
      IMPLICIT INTEGER (A-Z)
      REAL*8 Z(MAXCOR),FOCC,DRTVER,CI1,CI2,CITR,H11,H12,H22,ONE
      REAL*8 DERC1,DERC2
      INTEGER IZ(1),IA47(192),LABEL(26),CICOEF(2)
CWA
      COMMON /INPSPE/ KSPE,LSPE(5)
CWA
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ SYMORB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /POINT/ FOCC(5),IPOINT(5),JPOINT(5),NSORB(5)
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON/OCCS2/NUMCOR,NCOR,FDOC,CORDOC,NUMVIR,FVIR,LUOC,NUMDEP,VUOC
      COMMON /TCSCF/ DERC1,DERC2,CI1,CI2,H11,H12,H22,ONE,ITCSCF
      COMMON /LOC42/ IA42(100),IBF2AT(284)
CTJL  COMMON /DRTI/ IA(30000)
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
      COMMON /CALCJ/ ICALT,IDERT,ICIT
C
      EQUIVALENCE (CICOEF,CITR)
C
      WRITE(NOUT,1000)
 1000 FORMAT(//10X,'THE GENERAL COUPLED PERTURBED HARTREE-FOCK PROGRAM',
     +       /,10X,'          BASED ON LUCK AND A GOOD GUESS         ',
     +      //,10X,'            GRCPHF PROGRAM WRITTEN BY            ',
     +       /,10X,'          PATIENT BUT FRUSTRATED PEOPLE      ',//)
C
C  READ IN SOME CONSTANTS FROM TAPES 42,47,58
C
C     WRITE(ICHK,2222)
C2222 FORMAT(/'  IN MAIN')
CTJL  DRTTOP=30000
C
      INPUT=5
      CALL LOCATE(INPUT,'# GRCPHF #',IERR)
      IF (IERR .EQ. 0) THEN
CWA
        READ(INPUT,'(3I5)') IPRINT,ICIDIP,KSPE
        IF(KSPE.NE.0) READ(INPUT,'(5I5)') (LSPE(I),I=1,KSPE)
      ELSE
        WRITE(NOUT,990)
        IPRINT = 0
        ICIDIP = 0
 990    FORMAT(/' # GRCPHF # NOT FOUND IN INPUT FILE; USING DEFAULTS')
      END IF
C     WRITE(ICHK,2300) IPRINT
C2300 FORMAT(/'  IPRINT=',I5)
      CALL RFILE(IT30)
      CALL RFILE(IT42)
      CALL RFILE(IT47)
      CALL RFILE(IT58)
CTJL  WRITE(ICHK,9002)
9002  FORMAT(' BEFORE TAPE47 READ')
      CALL WREADW(IT47,IA47,192,1,JUNK)
CTJL  WRITE(ICHK,9003)
9003  FORMAT(' BEFORE TAPE42 READ ')
      CALL WREADW(IT42,IA42,100,1,JUNK)
CTJL  WRITE(ICHK,9004)
9004  FORMAT(' AFTER TAPE 42 READ')
      NBF=IA47(1)
      IOCC=IA47(2)
      JOCC=IA47(3)
      KOCC=IA47(4)
      NIJ=IA47(5)
      NAT=IA47(6)
      NDF=NAT*3
      NTYPES=IA47(7)
      ICALT=IA47(8)
      IDERT=IA47(9)
      ICIT=IA47(10)
      CICOEF(1) = IA47(14)
      CICOEF(2) = IA47(15)
      CI1 = CITR
      CICOEF(1) = IA47(16)
      CICOEF(2) = IA47(17)
      CI2 = CITR
      WRITE(*,*) ' THE CI COEFFICIENTS '
      WRITE(*,*) CI1,CI2
C
C  CHECK FOR ERRORS ON 47
C
      IF (ICALT .EQ. 3) THEN
        ITCSCF=0
      ELSE IF (ICALT .EQ. 4) THEN
        ITCSCF=1
      ELSE
        WRITE(NOUT,1001) ICALT
        CALL MABORT
 1001   FORMAT(/'  THIS PROGRAM DOES GENERAL SCF OR TCSCF'
     1  /'  CAN NOT HANDLE YOUR CALTYP OF :',I5)
      END IF
CTJL  WRITE(ICHK,9005)
9005  FORMAT(' FIRST TEST')
C     IF (ITCSCF .EQ. 1) THEN
C       WRITE(NOUT,1002)
C1002   FORMAT(/'  TEMPORARILY CANNOT DO SCF 2ND OF TCSCF')
C       CALL MABORT
C     END IF
      IF (IA47(10).EQ.1) THEN
         IF (IA47(9).NE.2) THEN
             WRITE(NOUT,1003) IA47(9)
1003         FORMAT(/' THIS IS SCF SECOND . YOUR DERTYP IS : ',I5)
             CALL MABORT
         END IF
      ELSE IF (IA47(10).EQ.2.OR.IA47(10).EQ.4) THEN
         IF (IA47(9).NE.1) THEN
            WRITE(NOUT,1004) IA47(9)
1004        FORMAT(/' THIS IS CI FIRST . YOUR DERTYP IS : ',I5)
            CALL MABORT
         END IF
      ELSE
         WRITE(NOUT,1005) IA47(10)
1005     FORMAT(/' THIS IS CI OR SCF . YOUR CITYP IS : ',I5)
         CALL MABORT
      END IF
C
      NAT42=IA42(2)
      NUM=IA42(3)
      NBSET=IA42(8)
      WRITE(*,*) ' NBSET ' ,NBSET
      ISALC=IA42(12)
      ISA2LC=IA42(13)
      IHALC=IA42(14)
      ITALC=IA42(17)
C
C  COMPARE 22 DATA TO 47 DATA AS A CHECK
C
CTJL  IF (NAT42 .NE. NAT) THEN
C       WRITE(NOUT,1006) NAT42,NAT
C       CALL MABORT
C1006   FORMAT(/'  THE NUMBER OF ATOMS IS INCONSISTANT: ',2I5)
C     END IF
C     IF (NUM .NE. NBF) THEN
C       WRITE(NOUT,1007) NUM,NBF
C       CALL MABORT
C1007   FORMAT(/'  THE NUMBER OF BASIS FUNCTIONS IS INCONSISTANT: ',
C    *  2I5)
C     END IF
C
      CALL WREADW(IT58,DRTVER,INTOWP(1),1,END)
      CALL WREADW(IT58,LABEL,26,END,END)
      CALL WREADW(IT58,NBF,1,END,END)
      CALL WREADW(IT58,NSYM,1,END,END)
      CALL WREADW(IT58,NORBS,1,END,END)
      END=END+3
      CALL WREADW(IT58,NREFS,1,END,END)
      END=END+5
      CALL WREADW(IT58,ORBSYM,1,END,END)
      CALL WREADW(IT58,SYMORB,1,END,END)
      CALL WREADW(IT58,NUMIJ,1,END,END)
      CALL WREADW(IT58,NGROUP,1,END,END)
      END=END+1
      CALL WREADW(IT58,NMAX,1,END,END)
CTJL  WRITE(NOUT,1008) DRTVER,LABEL,NBF,NSYM,NORBS,NREFS,ORBSYM,NUMIJ,
C    1NGROUP,NMAX
C1008 FORMAT(/'  READING DATA FROM DRT TAPE, VERSION=',F10.6
C    1/'  LABEL FROM DRT: ',26A3/
C    2/'  DRT INFORMATION:'/'  NBF=',I5,'  NSYM=',I5,'  NORBS=',I5,
C    3/'  NREFS=',I5,'  ORBSYM=',I5,' NUMIJ=',I5,'  NGROUP=',I5,
CTJL 4'  NMAX=',I5)
      IF (NORBS .NE. NBF) THEN
        WRITE(NOUT,1009) NORBS,NBF
        CALL MABORT
 1009   FORMAT(/'  THIS DRT CONTAINS FROZEN ORBITALS.'
     1  /'  NORBS=',I6,'   NBF=',I6)
      END IF
      IF (NORBS .NE. IA47(1)) THEN
        WRITE(NOUT,1010) NORBS,IA47(1)
        CALL MABORT
 1010   FORMAT(/'  THE NUMBER OF ORBITALS BETWEEN TAPES 47 AND 8 IS INCO
     *N SISTANT.'/'  NORBS=',I6,'  FROM IT47=',I6)
      END IF
      IF (NREFS .NE. 1) THEN
        WRITE(NOUT,1011) NREFS
        CALL MABORT
 1011   FORMAT(/'  THE NUMBER OF REFERENCES IS: ',I5,
     1  /'  THIS PROGRAM HANDLES ONLY SINGLE REFERENCES!')
      END IF
C
C  ALLOCATE CORE FOR DRT ARRAYS
C
      IOFF=1
      IJORD=IOFF+NUMIJ
CTJL
      IJDEP = IJORD + NUMIJ
CTJL  KADD=IJORD+NUMIJ
      KADD=IJDEP+NUMIJ
      LADD=KADD+SYMORB
      IJADD=LADD+SYMORB
      IJGRP=IJADD+NUMIJ
      ORBTBF=IJGRP+NUMIJ
      IOUT=ORBTBF+NORBS
      ORBSYM=IOUT+NORBS
      JCODE=ORBSYM+NORBS
      JT1C=JCODE+NORBS
      DROL=JT1C+4*NDF+NBSET*NDF
      ITOP=DROL+NORBS
CTJL  WRITE(NOUT,2012) ITOP,DRTTOP
C2012 FORMAT(/'  THERE ARE ',I5,'  WORDS NEEDED ',I5,'  AVAILABLE')
CTJL  IF (ITOP .GT. DRTTOP) THEN
      IF (ITOP .GT. INTOWP(MAXCOR)) THEN
        WRITE(NOUT,1012) ITOP,INTOWP(MAXCOR)
        CALL MABORT
 1012   FORMAT(/'  FOR DRT ARRAYS, PROGRAM REQUESTS ',I8,'  WORDS.'
     1  /'  ONLY ',I8,'  ARE AVAILABLE. INCREASE MAXCOR')
      END IF
      CALL ZERO(IZ,ITOP)
C
      CALL GETDRT(IZ(KADD),IZ(LADD),IZ(IJADD),IZ(IJGRP),IZ(ORBTBF),
     1IZ(IOUT),IZ(ORBSYM),IZ(JCODE),NGROUP)
      CALL ALLOC(IZ(ORBTBF),IZ(JCODE),IZ(IJORD),IZ(IOFF),IZ(IJDEP))
C
      IF (ITCSCF .EQ. 1) IJIND=IJIND+2
      IJIND2=IJIND
      IJIND3=IJIND2+NDF
C
C  READ IN DATA FOR SHELL TYPES
C
      CALL WREADW(IT47,FOCC,INTOWP(5),IA47(104),JUNK)
      CALL WREADW(IT47,NSORB,5,IA47(105),JUNK)
      WRITE(ICHK,1050) (FOCC(III), III=1,5), (NSORB(JJJ),JJJ=1,5)
 1050 FORMAT(/'  FOCC:',5F5.3/'  NSORB:',5I5)
      CALL REGIST
C
C ALLOCATE CORE FOR PRELIMINARY ARRAYS
C
      EIG = IADTWP(ITOP)
CTJL  EIG=1
      OCC=EIG+NORBS
      ALPHA=OCC+NORBS
      BETA=ALPHA+NUMIJ
      EPS=BETA+NUMIJ
      VEC=EPS+NUMIJ
      SCR=VEC+NORBS*NORBS
      TOP=SCR+NORBS*NORBS
      CALL ZERO(Z(EIG),TOP-EIG)
C
C  GET SOME ARRAYS FROM IT47 AND ROTATE TO DRT ORDER
C
      CALL READ47(IA47,IZ(IOFF),IZ(DROL),IZ(ORBTBF),Z(EIG),Z(OCC),
     1Z(ALPHA),Z(BETA),Z(EPS),Z(VEC),Z(SCR))
C
C  GET DERIVATIVE INTEGRALS FROM TAPE42; TRANSFORM TO MO BASIS
C
      SS=SCR
      SCR1=SS+NUMIJ
      SCR2=SCR1+NUMIJ
      BUF=SCR2+NUMIJ
      ITOP=BUF+NDF*NUMIJ*NBSET
      IF (ITOP .GT. MAXCOR) THEN
        WRITE(NOUT,1020) ITOP,MAXCOR
        CALL MABORT
 1020   FORMAT(/'  REQUIRE ',I8,'  WORDS OF CORE FOR DERMAT.'
     1  /'  ONLY ',I8,'  WORDS ARE AVAILABLE.')
      END IF
      CALL ZERO(Z(SS),ITOP-SS)
      IF(ITCSCF.EQ.1) THEN
      CALL DRMAT2(Z(VEC),Z(SCR1),Z(SCR2),Z(SS),Z(BUF),Z(BUF),
     1IZ(IOFF),IZ(JT1C))
      ELSE
      CALL DERMAT(Z(VEC),Z(SCR1),Z(SCR2),Z(SS),Z(BUF),Z(BUF),
     1IZ(IOFF),IZ(JT1C))
      END IF
C
C  CONSTRUCT DERIV FOCK MATRIX
C
CTJL  EPA=VEC
      EPA=SS
C
C     LSTEPA IS FOR THE NBSET DERIV LAGRANGIAN FOR CI FIRST
C     (LENGTH NUMIJ)
C
CTJL
      NEPA = EPA
C     IF(ITCSCF.EQ.1) THEN
      HA11 = EPA
      HA22 = HA11 + NDF
      HA12 = HA22 + NDF
      EPA = HA12 + NDF
C     END IF
CTJL
      LSTEPA=EPA
      TA=EPA+NORBS*NORBS
      HA=TA+NUMIJ
      BUF=HA+NUMIJ
      ITOP=BUF+NBSET*NUMIJ
      CALL ZERO(Z(NEPA),ITOP-NEPA)
C
C IF TCSCF-CI GRADIENT CALCULATION CALL FAMAT2.
C
      IF(ITCSCF.EQ.1) THEN
      CALL FAMAT2(Z(EPA),Z(TA),Z(HA),Z(BUF),IZ(IOFF),IZ(JT1C),
     1  IZ(IOUT),IZ(DROL),Z(LSTEPA),Z(ALPHA),Z(BETA))
      CALL HAMAT(Z(HA),Z(BUF),IZ(IOFF),IZ(JT1C),IZ(IOUT),IZ(DROL),
     1  Z(HA11),Z(HA22),Z(HA12))
      ELSE
      CALL FAMAT(Z(EPA),Z(TA),Z(HA),Z(BUF),IZ(IOFF),IZ(JT1C),
     1  IZ(IOUT),IZ(DROL),Z(LSTEPA))
      END IF
C
C  CONSTRUCT A AND B0 MATRICIES IN 'CC' AND SOLVE A*U=B0
C
C
C  THE EXTRA ARRAYS ECIJA(NUMIJ,NDF),BOX(NDF),X(NDF)
C  ARE ALLOCATED FOR CONVENIENCE OVER THE TOP OF SOME OF THESE
C  ARRAYS FOR CI FIRST
C  ( U(NORBS,NORBS) IS STILL UNUSED IN CI FIRST)
C
CTJL  LG=EPA
CTJL  U=LG+NORBS*NORBS
CTJL  SS=U+NORBS*NORBS
CTJL  W=SS+NUMIJ*NDF
CTJL  ECIJA=W
CTJL  BOX=W+NUMIJ*NDF
CTJL  X=W
CTJL
      EX = EPA + NORBS*NORBS
      EX2 = EX + IJIND
      RS = EX2 + IJIND
      EAVF = RS + (NUMDEP)*NDF
      DIP = EAVF + NUMIJ
      U = DIP + NUMIJ*3
CTJL
CTJL  U=EPA+NORBS*NORBS
      LG=U
      SS=LG+NORBS*NORBS
      W=SS+NUMIJ*NDF
      BOX=W
      X=BOX+NDF
      ZETA=W+NORBS*NORBS*NDF
      CC=ZETA+NUMIJ*NORBS
      C=CC+IJIND*IJIND
      INTS=CC+IJIND*IJIND3
      BUF=INTS+NMAX
      E11=BUF+NORBS*NORBS
      E22=E11+NORBS*NORBS
      E12=E22+NORBS*NORBS
      ITOP=E12+NORBS*NORBS
      IF (ITOP .GT. MAXCOR) THEN
        WRITE(NOUT,1030) ITOP,MAXCOR
        CALL MABORT
 1030   FORMAT(/'  PROGRAM REQUESTED ',I8,'  WORDS BEFORE B0MAT.'
     1  /'  THERE ARE ONLY ',I8,'  WORDS AVAILABLE.')
      END IF
CTJL
      CALL ZERO(Z(EX),ITOP-EX)
CTJL
      CALL B0MAT(Z(ALPHA),Z(BETA),Z(EPS),Z(EPA),Z(U),Z(SS),Z(W),
     1Z(ZETA),Z(CC),Z(OCC),Z(EIG),Z(INTS),Z(BUF),IZ(IJORD),IZ(IOFF),
     2IZ(KADD),IZ(LADD),IZ(IJGRP),IZ(IJADD),IZ(ORBSYM),IZ(ORBTBF),
     3IZ(JCODE),IZ(JT1C),Z(E11),Z(E22),Z(E12),Z(LG),Z(BOX),
     4Z(C),Z(X),IZ(IOUT),Z(EX),Z(RS),IZ(IJDEP),Z(VEC),Z(DIP),Z(EAVF),
     5Z(LSTEPA),Z(EX2),Z(HA11),Z(HA22),Z(HA12))
      IF (ICIT.EQ.2.OR.ICIT.EQ.4) RETURN
      U=1
      W=U+NORBS*NORBS*NDF
      EPA=U
      SA=EPA+NORBS*NORBS*NDF
      UAWB=W+NORBS*NORBS*NDF
      SAEB=UAWB+NDF*NDF
      DTOT=SAEB+NDF*NDF
      ITOP=DTOT+NDF*NDF
      IF (ITOP .GT. MAXCOR) THEN
        WRITE(NOUT,1031) ITOP,MAXCOR
 1031   FORMAT(/'  FOR FINAL ',I8,'  WORDS ARE REQUIRED.'
     1  /'  ONLY ',I8,'  WORDS AVAILABLE.')
        CALL MABORT
      END IF
      CALL ZERO(Z,ITOP)
      CALL FINAL(Z(U),Z(W),Z(EPA),Z(SA),Z(UAWB),Z(SAEB),Z(DTOT),
     1IZ(JT1C),IZ(IOFF))
      RETURN
      END
      SUBROUTINE REGIST
      IMPLICIT INTEGER (A-Z)
      REAL*8 FOCC
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ SYMORB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /POINT/ FOCC(5),IPOINT(5),JPOINT(5),NSORB(5)
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
C
CTJL  WRITE(ICHK,2222)
C2222 FORMAT(/'  IN REGIST')
      IPOINT(1)=IOCC+1
      JPOINT(1)=1
      DO 10 I=2,NTYPES+1
        JPOINT(I)=JPOINT(I-1)+NSORB(I-1)
 10   IPOINT(I)=IPOINT(I-1)+NSORB(I)
      IT1=NTYPES+1
      WRITE(*,101)
      WRITE(*,99) (IPOINT(I), I=1,IT1)
      WRITE(*,102)
      WRITE(*,99) (JPOINT(I), I=1,IT1)
  99  FORMAT(2X,5I5)
 101  FORMAT('  THE IPOINT ARRAY:')
 102  FORMAT('  THE JPOINT ARRAY:')
      RETURN
      END
      SUBROUTINE MOCONV(SA,NNA,SM,NNM,EAO,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER P,Q,PQ
      DIMENSION SA(NNA),SM(NNM),EAO(NBF,NORBS),U(NORBS),T(NNA)
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
C
      A0=0.0D+00
      A1=1.0D+00
      A1S2=0.50D+00
      DO 101 IJ=1,NNA
 101  T(IJ)=SA(IJ)
      DO 102 IJ=1,NNM
 102  SM(IJ)=A0
C
      PQ=0
      DO 40 P=1,NBF
        DO 5 II=1,NORBS
 5      U(II)=A0
        E=A1
        DO 20 Q=1,P
          PQ=PQ+1
          IF (P .EQ. Q) E=A1S2
          F=T(PQ)*E
          DO 10 J=1,NORBS
 10       U(J)=U(J)+EAO(Q,J)*F
 20     CONTINUE
        IJ=0
        DO 30 I=1,NORBS
          U1I=U(I)
          DO 25 J=1,I
            IJ=IJ+1
            SM(IJ)=SM(IJ)+U1I*EAO(P,J)+U(J)*EAO(P,I)
 25       CONTINUE
 30     CONTINUE
 40   CONTINUE
      RETURN
      END
      SUBROUTINE READ47(IA47,IOFF,DROL,ORBTBF,EIG,OCC,ALPHA,BETA,
     1EPS,VEC,SCR)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER IOFF(NUMIJ),ORBTBF(NORBS),IA47(192),DROL(NORBS),IREP(2)
      DIMENSION EIG(NORBS),OCC(NORBS),ALPHA(NUMIJ),BETA(NUMIJ)
      DIMENSION EPS(NUMIJ),VEC(NORBS,NORBS),SCR(2,NORBS)
      EQUIVALENCE (IREP(1),REPN)
      COMMON /REN/ REPNUC
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
C
C READ DATA FROM IT47
CTJL  WRITE(ICHK,2222)
C2222 FORMAT(/'  IN READ47')
      IREP(1)=IA47(12)
      IREP(2)=IA47(13)
      REPNUC=REPN
      WRITE(ICHK,3333)REPNUC
      WRITE(NOUT,3333) REPNUC
 3333 FORMAT(/'  THE NUCLEAR REPULSION ENERGY FROM TAPE47 =',F20.10)
      CALL WREADW(IT47,EIG,INTOWP(NORBS),IA47(103),JUNK)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,101) 'EIG  '
        WRITE(NOUT,102) (EIG(III),III=1,NORBS)
      END IF
C
      CALL WREADW(IT47,ALPHA,INTOWP(NUMIJ),IA47(106),JUNK)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,101) 'ALPHA'
        CALL PRINT(ALPHA,NUMIJ,NORBS,NOUT)
      END IF
C
      CALL WREADW(IT47,BETA,INTOWP(NUMIJ),IA47(107),JUNK)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,101) 'BETA '
        CALL PRINT(BETA,NUMIJ,NORBS,NOUT)
      END IF
C
      NORBSQ=NORBS*NORBS
      CALL WREADW(IT47,VEC,INTOWP(NORBSQ),IA47(110),JUNK)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,101) 'VEC  '
        CALL MATOUT(VEC,NORBS,NORBS,NORBS,NORBS,NOUT)
      END IF
C
      CALL WREADW(IT47,EPS,INTOWP(NUMIJ),IA47(111),JUNK)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,101) 'EPS  '
        CALL PRINT(EPS,NUMIJ,NORBS,NOUT)
      END IF
C
      CALL WREADW(IT47,SCR,INTOWP(2*NORBS),IA47(113),JUNK)
      DO 301 I=1,NORBS
 301  OCC(I)=SCR(1,I)+SCR(2,I)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,101) 'OCC  '
        WRITE(NOUT,102) (OCC(III),III=1,NORBS)
      END IF
C
      CALL WREADW(IT47,DROL,NORBS,IA47(117),JUNK)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,101) '   DROL '
        WRITE(NOUT,104) (DROL(III),III=1,NORBS)
        WRITE(NOUT,*) ' ORBTBF ',ORBTBF
      END IF
C
C RE-ORDER TO DRT ORDERING
      CALL ORDER(EIG,SCR,ORBTBF)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,103) 'EIG  '
        WRITE(NOUT,102) (EIG(III),III=1,NORBS)
      END IF
C
      CALL ORDER(OCC,SCR,ORBTBF)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,103) 'OCC  '
        WRITE(NOUT,102) (OCC(III),III=1,NORBS)
      END IF
C
      CALL ORDER1(ALPHA,SCR,IOFF,ORBTBF)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,103) 'ALPHA'
        CALL PRINT(ALPHA,NUMIJ,NORBS,NOUT)
      END IF
C
      CALL ORDER1(BETA,SCR,IOFF,ORBTBF)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,103) 'BETA '
        CALL PRINT(BETA,NUMIJ,NORBS,NOUT)
      END IF
C
      CALL ORDER2(VEC,SCR,ORBTBF)
      IF (IAND(IPRINT,2) .NE. 0) THEN
        WRITE(NOUT,103) 'VEC  '
        CALL MATOUT(VEC,NORBS,NORBS,NORBS,NORBS,NOUT)
      END IF
C
 101  FORMAT(3X,A5,'  ARRAY AS READ FROM TAPE47:')
 102  FORMAT(5F15.6)
 103  FORMAT(3X,A5,'  ARRAY AFTER RE-ORDERING TO DRT:')
 104  FORMAT(10I5)
      RETURN
      END
      SUBROUTINE ORDER(A,SCR,ORBTBF)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER ORBTBF(NORBS)
      DIMENSION A(NORBS),SCR(NORBS)
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
C
      DO 101 I=1,NORBS
        SCR(I)=A(I)
 101  A(I)=0.0D+00
C
      DO 102 IOR=1,NORBS
        IBF=ORBTBF(IOR)
CTJL
CTJL  WRITE(*,*) ' IOR,IBF ',IOR,IBF
 102  A(IOR)=SCR(IBF)
      RETURN
      END
      SUBROUTINE ORDER1(A,SCR,IOFF,ORBTBF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NUMIJ),SCR(NUMIJ)
      INTEGER ORBTBF(NORBS),IOFF(NUMIJ)
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
C
      DO 101 IJ=1,NUMIJ
        SCR(IJ)=A(IJ)
 101  A(IJ)=0.0D+00
C
      IJ=0
      DO 102 IOR=1,NORBS
        IBF=ORBTBF(IOR)
        DO 102 JOR=1,IOR
          IJ=IJ+1
          JBF=ORBTBF(JOR)
          IBM=MAX0(IBF,JBF)
          JBM=MIN0(IBF,JBF)
          IJBF=IOFF(IBM)+JBM
 102  A(IJ)=SCR(IJBF)
      RETURN
      END
      SUBROUTINE ORDER2(A,SCR,ORBTBF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NORBS,NORBS),SCR(NORBS,NORBS)
      INTEGER ORBTBF(NORBS)
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
C
      DO 101 I=1,NORBS
        DO 101 J=1,NORBS
          SCR(I,J)=A(I,J)
 101  A(I,J)=0.0D+00
C
      DO 102 IOR=1,NORBS
        IBF=ORBTBF(IOR)
        DO 102 J=1,NORBS
 102  A(J,IOR)=SCR(J,IBF)
C
      RETURN
      END
      SUBROUTINE DERMAT(VEC,SCR1,SCR2,SS,BUF1,BUF2,IOFF,JT1C)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION VEC(NORBS,NORBS),SCR1(NUMIJ),SCR2(NUMIJ),
     1BUF1(NUMIJ,NDF),BUF2(NUMIJ,NDF,NBSET),SS(NUMIJ)
      INTEGER IOFF(NUMIJ),JT1C(1)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /LOC42/ IA42(100),IBF2AT(284)
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
C
CTJL  WRITE(ICHK,2222)
C2222 FORMAT(/'  IN DERMAT')
      CALL RFILE(IT94)
CIBM  CALL SREW(IT94)
      CALL WREADW(IT42,IBF2AT,NORBS,IA42(11),JUNK)
C
C READ IN IT42 DATA; TRANSFORM TO MO BASIS; STORE ON IT94
C
C READ S DERIVATIVE INTEGRALS
      CALL WREADW(IT42,BUF1,INTOWP(NUMIJ*3),IA42(12),JUNK)
      CALL SAMAT(BUF1,NUMIJ,SS,NUMIJ,VEC,IOFF,SCR1,SCR2,JT1C)
C
C READ H DERIVATIVE INTEGRALS
      CALL WREADW(IT42,BUF1,INTOWP(NUMIJ*NDF),IA42(14),JUNK)
      IS=JT1C(NDF)+INTOWP(NUMIJ)
      DO 107 IABC=1,NDF
        IF (IAND(IPRINT,4) .NE. 0) THEN
          WRITE(NOUT,1001) IABC
 1001     FORMAT(/'  THE HA MATRIX FOR DEGREE OF FREEDOM ',I5)
          CALL PRINT(BUF1(1,IABC),NUMIJ,NORBS,NOUT)
        END IF
        CALL MOCONV(BUF1(1,IABC),NUMIJ,SS,NUMIJ,VEC,SCR1,SCR2)
        JT1C(IABC+NDF)=IS
        CALL WWRITW(IT94,SS,INTOWP(NUMIJ),IS,IS)
        IF (IAND(IPRINT,4) .NE. 0) THEN
          WRITE(NOUT,1002) IABC
 1002     FORMAT(/'  THE HM MATRIX FOR DEGREE OF FREEDOM ',I5)
          CALL PRINT(SS,NUMIJ,NORBS,NOUT)
          WRITE(NOUT,1003) IABC,JT1C(IABC+NDF),IS
 1003     FORMAT(/'  HM FOR DEGREE ',I5,'  WRITTEN TO WORD ',I8,
     1    '  NEXT WORD IS ',I8)
        END IF
 107  CONTINUE
C
C  READ 2E DERIVATIVE INTEGRALS (T MATRIX)
CTJL  WRITE(ICHK,*) ' IA42(17),NBSET,NDF,NUMIJ = ',
CTJL 1    IA42(17),NBSET,NDF,NUMIJ
      CALL WREADW(IT42,BUF2,INTOWP(NBSET*NDF*NUMIJ),IA42(17),JUNK)
      IJT=2*NDF
      DO 108 ISET = 1,NBSET
        DO 108 IABC = 1,NDF
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(NOUT,1004) ISET,IABC
 1004       FORMAT(/'  THE TA MATRIX FOR SET ',I5,'  DEGREE ',
     *      I5)
            CALL PRINT(BUF2(1,IABC,ISET),NUMIJ,NORBS,NOUT)
          END IF
          CALL MOCONV(BUF2(1,IABC,ISET),NUMIJ,SS,NUMIJ,VEC,SCR1,
     *    SCR2)
          IJT=IJT+1
          JT1C(IJT)=IS
          CALL WWRITW(IT94,SS,INTOWP(NUMIJ),IS,IS)
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(NOUT,1005) ISET,IABC
 1005       FORMAT(/'  THE TM MATRIX FOR SET ',I5,'  DEGREE ',
     *      I5)
            CALL PRINT(SS,NUMIJ,NORBS,NOUT)
            WRITE(NOUT,1006) IABC,IJT,JT1C(IJT),IS
 1006       FORMAT(/'  TM FOR DEGREE ',I5,'  IN JT1C ',I5/
     1      '  WRITTEN TO WORD',I5,'  NEXT WORD IS ',I8)
          END IF
 108  CONTINUE
      RETURN
      END
      SUBROUTINE SAMAT(SA,NNA,SS,NNM,VEC,IOFF,U,T,JT1C)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SA(NNA,NDF),SS(NNM),VEC(NORBS,NORBS),U(1),T(1)
      INTEGER IOFF(NUMIJ),JT1C(1)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /LOC42/ IA42(100),IBF2AT(284)
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' SA (MO BASIS) MATRIX, IABC = ',I5,' IXYZ = ',I5/)
C
C   TRANSFORM SA INTEGRALS FROM AO TO MO BASIS
      WRITE(ICHK,2222)
 2222 FORMAT(/'  IN SAMAT')
      IS=1
      KABC=0
      IF (IAND(IPRINT,4) .NE. 0) THEN
        DO 1010 IABC=1,3
          WRITE(NOUT,1011) IABC
 1011     FORMAT(/'  THE S MATRIX AS READ FROM 42 FOR XYZ = ',I5)
          CALL PRINT(SA(1,IABC),NUMIJ,NORBS,NOUT)
 1010   CONTINUE
        WRITE(NOUT,1012) (IBF2AT(III), III=1,NORBS)
 1012   FORMAT(/'  IBF2AT:',10I5)
      END IF
C
      DO 105 IABC=1,NAT
        DO 104 IXYZ=1,3
          KABC=KABC+1
C
          DO 101 I=1,NUMIJ
  101     SS(I)=ZERO
C
          DO 103 I=1,NORBS
            IA=IOFF(I)
            DO 102 J=1,I
              IF(IBF2AT(I).NE.IABC.AND.IBF2AT(J).NE.IABC)
     *        GO TO 102
              IJ=IA+J
              SX=SA(IJ,IXYZ)
              IF(IBF2AT(I).NE.IABC) SX=-SX
              SS(IJ)=SX
  102       CONTINUE
  103     CONTINUE
C
          IF (IAND(IPRINT,4) .NE. 0) THEN
            WRITE(NOUT,1001) KABC
 1001       FORMAT(/'  THE SA MATRIX FOR DEGREE OF FREEDOM',I5)
            CALL PRINT(SS,NUMIJ,NORBS,NOUT)
          END IF
C
          CALL MOCONV(SS,NNM,SS,NNM,VEC,U,T)
          JT1C(KABC)=IS
          CALL WWRITW(IT94,SS,INTOWP(NUMIJ),IS,IS)
C
          IF (IAND(IPRINT,4) .NE. 0) THEN
            WRITE(NOUT,1002) KABC
 1002       FORMAT(/'  THE SM MATRIX FOR DEGREE OF FREEDOM',I5)
            CALL PRINT(SS,NUMIJ,NORBS,NOUT)
            WRITE(NOUT,1003) KABC,JT1C(KABC),IS
 1003       FORMAT(/'  MO S MATRIX ',I5,'  WRITTEN TO POSITION ',I8,'  N
     *EXT POSITION ',I8)
          END IF
  104   CONTINUE
  105 CONTINUE
C
      RETURN
      END
      SUBROUTINE FAMAT(EPA,TA,HA,BUF,IOFF,JT1C,IOUT,DROL,LSTEPA)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER IOFF(NUMIJ),JT1C(1),IOUT(NORBS),DROL(NORBS)
      DIMENSION EPA(NORBS,NORBS),TA(NUMIJ),HA(NUMIJ),BUF(NUMIJ,NBSET)
      REAL*8    LSTEPA(NUMIJ)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /POINT/ FOCC(5),IPOINT(5),JPOINT(5),NSORB(5)
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
      COMMON /CALCJ/ ICALT,IDERT,ICIT
C
      WRITE(ICHK,2222)
 2222 FORMAT(/'  IN FAMAT')
      NORBSQ=NORBS*NORBS
      IHA=JT1C(NDF+1)
      IEA=2*NDF+NBSET*NDF
      ISEA=JT1C(IEA)+INTOWP(NUMIJ)
      DO 1 IDF=1,NDF
        IEA=IEA+1
        DO 10 I=1,NORBS
          DO 10 J=1,NORBS
 10     EPA(I,J)=0.0D+00
C
        CALL WREADW(IT94,HA,INTOWP(NUMIJ),IHA,IHA)
        IF (IAND(IPRINT,32) .NE. 0) THEN
          WRITE(NOUT,1101) IDF,IHA
 1101     FORMAT(/'  HA FOR DEGREE OF FREEDOM ',I5,'   IHA=',I8)
          CALL PRINT(HA,NUMIJ,NORBS,NOUT)
        END IF
        DO 2 IBSET=1,NBSET
          ITA=2*NDF+(IBSET-1)*NDF+IDF
          CALL WREADW(IT94,TA,INTOWP(NUMIJ),JT1C(ITA),JUNK)
          IF (IAND(IPRINT,32) .NE. 0) THEN
            WRITE(NOUT,1102) IDF,ITA,JT1C(ITA)
 1102       FORMAT(/'  TA FOR DEGREE ',I5,'   ITA=',I8,'  JT1C=',I8)
            CALL PRINT(TA,NUMIJ,NORBS,NOUT)
          END IF
          F=FOCC(IBSET)/(2.0D+00)
CTJL  WRITE(*,*) ' NBSET,OCC ',IBSET,FOCC(IBSET)
          DO 2 J=1,NUMIJ
CTJL    BUF(J,IBSET)=TA(J)
        BUF(J,IBSET)=HA(J)*F+TA(J)
C       IF(IDF.EQ.1.OR.IDF.EQ.3.AND.IBSET.EQ.2.OR.IBSET.EQ.3) THEN
C       IF(BUF(J,IBSET).GT.1.0D-6) THEN
C       WRITE(*,*) ' J,IDF ',J,IDF
C       WRITE(*,*) ' H,F,T,EA ',HA(J),F,TA(J),BUF(J,IBSET)
C       END IF
C       END IF
 2      CONTINUE
C
        DO 3 ITYP=1,NTYPES
          IMIN=JPOINT(ITYP)
          IMAX=JPOINT(ITYP+1)-1
CTJL    IF(IDF.EQ.1) THEN
CTJL    WRITE(*,*) ' ITYP,IMIN,IMAX ',ITYP,IMIN,IMAX
CTJL    END IF
          DO 3 IYY=IMIN,IMAX
            IBF=DROL(IYY)
            IORB=IOUT(IBF)
            DO 3 JYY=1,NORBS
              JBF=DROL(JYY)
              JORB=IOUT(JBF)
CTJL    IF(IDF.EQ.1) THEN
CTJL    WRITE(*,*) ' IBF,IORB,JBF,JORB ',IBF,IORB,JBF,JORB
CTJL    END IF
              IJMN=MIN0(IORB,JORB)
              IJMX=MAX0(IORB,JORB)
              IJ=IOFF(IJMX)+IJMN
C3      EPA(IORB,JORB)=BUF(IJ,ITYP)
        EPA(IORB,JORB)=BUF(IJ,ITYP)
C       IF(IDF.EQ.1.OR.IDF.EQ.3.AND.ITYP.EQ.2.OR.ITYP.EQ.3) THEN
C       IF(EPA(IORB,JORB).GT.1.0D-6) THEN
C       WRITE(*,*) ' IDF,I,J,EPA ',IDF,IORB,JORB,EPA(IORB,JORB)
C       END IF
C       END IF
 3      CONTINUE
C
        JT1C(IEA)=ISEA
        CALL WWRITW(IT94,EPA,INTOWP(NORBS*NORBS),ISEA,ISEA)
        IF (IAND(IPRINT,32) .NE. 0) THEN
          WRITE(NOUT,1103) IDF,IEA,JT1C(IEA)
 1103     FORMAT(/'  EPA FOR DEGREE ',I5,'   IEA=',I8,'  JT1C=',
     *    I8)
          CALL MATOUT(EPA,NORBS,NORBS,NORBS,NORBS,NOUT)
        END IF
 1    CONTINUE
C
C     CODE FOR NBSET EPA FOR CI FIRST
C
CTJL  IF (ICIT.EQ.1) RETURN
      CALL RFILE(IT96)
      ISEA=1
      IADHA=JT1C(NDF+1)
      IADTA=JT1C(2*NDF+(NBSET-1)*NDF+1)
      DO 312 IDF=1,NDF
      CALL WREADW(IT94,HA,INTOWP(NUMIJ),IADHA,IADHA)
      CALL WREADW(IT94,TA,INTOWP(NUMIJ),IADTA,IADTA)
         DO 311 IJ=1,NUMIJ
         LSTEPA(IJ)=HA(IJ)+TA(IJ)
C
  311    CONTINUE
CTJL  WRITE(*,*) ' IN FAMAT; ISEA = ',ISEA,'   BEFORE'
      CALL WWRITW(IT96,LSTEPA,INTOWP(NUMIJ),ISEA,ISEA)
CTJL  WRITE(*,*) ' IN FAMAT; ISEA = ',ISEA,'   AFTER '
        IF (IAND(IPRINT,32) .NE. 0) THEN
CTJL    IF (IDF.EQ.1) THEN
          WRITE(NOUT,1104) IDF
 1104     FORMAT(/'  LSTEPA FOR DEGREE ',I5)
          CALL PRINT(LSTEPA,NUMIJ,NORBS,NOUT)
        END IF
  312 CONTINUE
      RETURN
      END
      FUNCTION DOT(A,NA,B,NB,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(1),B(1)
      IAPT=1
      IBPT=1
      D=0.0
      DO 10 I=1,N
        D=D+A(IAPT)*B(IBPT)
        IAPT=IAPT+NA
        IBPT=IBPT+NB
 10   CONTINUE
      DOT=D
      RETURN
      END
      SUBROUTINE ALLOC(ORBTBF,JCODE,IJORD,IOFF,IJDEP)
      IMPLICIT INTEGER (A-Z)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ SYMORB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON/OCCS2/NUMCOR,NCOR,FDOC,CORDOC,NUMVIR,FVIR,LUOC,NUMDEP,VUOC
      COMMON /TYPES/ NTYDOC,NTYUOC
      DIMENSION ORBTBF(NORBS),JCODE(NORBS),IJORD(NUMIJ),IOFF(NUMIJ)
      DIMENSION IJDEP(NUMIJ)
      DIMENSION ITYP(9)
C
CTJL  WRITE(ICHK,2222)
C2222 FORMAT(/'  IN ALLOC')
      CALL IZERO(ITYP,9)
CTJL  WRITE(*,*) ' JCODE ',JCODE
C
      IOFF(1) = 0
      DO 314 I=1,NUMIJ-1
        IOFF(I+1) = IOFF(I) + I
  314 CONTINUE
C
      DO 315 IORB=1,NORBS
        NTYP=JCODE(IORB)
        IF (NTYP.GT.9 .OR. NTYP.LE.0) THEN
          WRITE(NOUT,201) IORB,NTYP
 201      FORMAT(/'   JCODE(',I3,')=',I4/
     1    '   I DO NOT RECOGNIZE THIS TYPE.')
          CALL MABORT
        END IF
        ITYP(NTYP)=ITYP(NTYP)+1
  315 CONTINUE
      IF (ITYP(1).NE.0 .OR. ITYP(2).NE.0) THEN
        WRITE(NOUT,202)
 202    FORMAT(/'  THERE ARE SOME FZC OR FZV IN THE DRT'/
     1  '  I CAN NOT RUN A GRADIENT FROM THIS.')
        CALL MABORT
      END IF
      NUOC=ITYP(4)+ITYP(6)
      LFERM=NUOC+1
      NDOC=NUOC+ITYP(3)+ITYP(5)
CTJL
      NTYDOC = ITYP(3) + ITYP(5)
      NTYUOC = ITYP(4) + ITYP(6)
      NUMVIR = ITYP(4)
      VUOC = NUMVIR*ITYP(6)
      FVIR = ITYP(6) + 1
      LUOC = FVIR - 1
      NUMCOR = ITYP(3)
      NCOR = LFERM + NUMCOR - 1
      FDOC = LFERM + NUMCOR
      IF(NUMCOR.EQ.0) NCOR = -999
      CORDOC = ITYP(5)*NUMCOR
      NUMDEP = VUOC + CORDOC
CTJL  WRITE(*,*) ' NUMDEP,CORDOC,VUOC',NUMDEP,CORDOC,VUOC
C     DO 9240 IJ = 1,NUMIJ
C     IJDEP(IJ) = NUMDEP + 1
C9240 CONTINUE
      IJDC = 0
      DO 9200 I = FDOC,NDOC
      DO 9210 J = LFERM,NCOR
      IJ = IOFF(I) + J
      IJDC = IJDC + 1
      IJDEP(IJ) = IJDC
 9210 CONTINUE
 9200 CONTINUE
      DO 9220 I = FVIR,NUOC
      DO 9230 J = 1,LUOC
      IJ = IOFF(I) + J
      IJDC = IJDC + 1
      IJDEP(IJ) = IJDC
 9230 CONTINUE
 9220 CONTINUE
      WRITE(*,*) ' THE NUMBER OF DEPENDENT  PAIRS IS',IJDC
      IF(NUMDEP.EQ.0) NUMDEP = 1
CTJL  WRITE(*,*) ' NUMCOR,NCOR,FDOC,CORDOC',NUMCOR,NCOR,FDOC,CORDOC
CTJL
CWA
C     WRITE(6,*) ' JCODE AND ITYP ARRAYS'
C     WRITE(6,'(14I5)') (JCODE(I),I=1,NBF)
C     WRITE(6,'(14I5)') (ITYP(I),I=1,9)
CWA
      NOP=NDOC+1
      NALP=NDOC+ITYP(7)
      NSA=NALP+1
      NSB=NALP+ITYP(9)
      NSPE=ITYP(9)
      WRITE(*,*) ' THE NUMBER OF SPECIAL ORBITALS IS',NSPE
      IF (NSB.NE.NORBS) THEN
        WRITE(NOUT,203) NSB,NORBS
 203    FORMAT(/'   ORBITALS MISCOUNTED IN ALLOC',2I5)
        CALL MABORT
      END IF
C
C     WRITE(NOUT,"('  IORB  IBF JCODE')")
C     DO IORB=1,NORBS
C     IBF=ORBTBF(IORB)
C     NTYP=JCODE(IBF)
C     WRITE(NOUT,"(3I5)") IORB,IBF,NTYP
C     END DO
      IF (ITYP(3)+ITYP(5) .EQ. 0) THEN
        WRITE(NOUT,204)
 204    FORMAT(/'  THERE ARE NO DOUBLY OCCUPIED ORBITALS.'/
     1  '  IT IS NECESSARY TO MODIFY THE PROGRAM. ')
        CALL MABORT
      END IF
C
C  CHECK TO SEE IF THE ORDER OF THE DRT ORBS IS AS EXPECTED
C
      DO 316 IORB=1,NUOC
        IBF=ORBTBF(IORB)
        NTYP=JCODE(IBF)
        IF(NTYP.NE.6 .AND. NTYP.NE.4) GOTO 10
  316 CONTINUE
      DO 317 IORB=LFERM,NDOC
        IBF=ORBTBF(IORB)
        NTYP=JCODE(IBF)
        IF(NTYP.NE.3 .AND. NTYP.NE.5) GOTO 10
  317 CONTINUE
      IF (ITYP(7).EQ.0) THEN
        NOP=0
        NALP=0
      ELSE
        DO 318 IORB=NOP,NALP
          IBF=ORBTBF(IORB)
          IF (JCODE(IBF).NE.7) GOTO 10
  318   CONTINUE
      END IF
      IF (NSPE.EQ.0) THEN
        NSA=0
        NSB=0
      ELSE
        DO 319 IORB=NSA,NSB
          IBF=ORBTBF(IORB)
          IF (JCODE(IBF).NE.9) GOTO 10
  319   CONTINUE
      END IF
      GOTO 12
 10   WRITE(NOUT,205) IORB,IBF,JCODE(IBF)
 205  FORMAT(/'  THE DRT ORBITALS ARE OUT OF ORDER.'/
     1'  IORB=',I5,'  IBF=',I5,'  NTYPE=',I5)
      CALL MABORT
 12   CONTINUE
      WRITE(NOUT,206) 1,NUOC,LFERM,NDOC
 206  FORMAT(/'  THE UNOCCUPIED ORBITALS:     ',2I5/
     1'  THE DOUBLY OCCUPIED ORBITALS:',2I5/)
      IF (NOP.NE.0) WRITE(NOUT,207) NOP,NALP
 207  FORMAT('  THE SINGLY OCCUPIED ORBITALS:',2I5/)
      IF (NSPE.NE.0) WRITE(NOUT,208) NSA,NSB
 208  FORMAT('  THE SPECIAL ORBITALS:        ',2I5/)
C
C  CONSRTUCT DRT TO INDEP PAIR ORDERING ARRAY
      DO 320 II=1,NUMIJ
        IJORD(II)=0
  320 CONTINUE
      IJIND=0
      DO 321 I=LFERM,NDOC
        IO=IOFF(I)
        DO 322 J=1,NUOC
          IJ=IO+J
          IJIND=IJIND+1
          IJORD(IJ)=IJIND
  322   CONTINUE
  321 CONTINUE
      IF (NOP.EQ.0) GOTO 14
      DO 323 I=NOP,NALP
        IO=IOFF(I)
        DO 324 J=1,NDOC
          IJ=IO+J
          IJIND=IJIND+1
          IJORD(IJ)=IJIND
  324   CONTINUE
  323 CONTINUE
 14   CONTINUE
      IF (NSPE.EQ.0) GOTO 16
      DO 325 I=NSA,NSB
        IO=IOFF(I)
        DO 326 J=1,I-1
          IJ=IO+J
          IJIND=IJIND+1
          IJORD(IJ)=IJIND
  326   CONTINUE
  325 CONTINUE
 16   CONTINUE
      WRITE(NOUT,209) IJIND,IJIND+2
 209  FORMAT('  THE NUMBER OF INDEPENDENT PAIRS IS',I5/
     1'  PLUS THE TWO CI COEFFICIENTS MAKES',I5/)
      RETURN
      END
      SUBROUTINE GETDRT(KADD,LADD,IJADD,IJGRP,ORBTBF,IOUT,ORBSYM,JCODE,
     1NGROUP)
      IMPLICIT INTEGER (A-Z)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
CWA
      COMMON /INPSPE/ KSPE,LSPE(5)
CWA
      DIMENSION KADD(ISYMRB),LADD(ISYMRB),IJADD(NUMIJ),IJGRP(NUMIJ)
      DIMENSION JCODE(NORBS),IOUT(NBF),ORBTBF(NORBS),ORBSYM(NORBS)
C
      WRITE(ICHK,2222)
 2222 FORMAT(/'  IN GETDRT')
      END=48+INTOWP(1)
      CALL WREADW(IT58,KADD,ISYMRB,END,END)
      CALL WREADW(IT58,LADD,ISYMRB,END,END)
      CALL WREADW(IT58,IJADD,NUMIJ,END,END)
      CALL WREADW(IT58,IJGRP,NUMIJ,END,END)
      END=END+4*NORBS+NGROUP
      CALL WREADW(IT58,IOUT,NBF,END,END)
      CALL WREADW(IT58,ORBSYM,NORBS,END,END)
      END=END+NBF
      CALL WREADW(IT58,JCODE,NBF,END,END)
      CALL WREADW(IT58,ORBTBF,NORBS,END,END)
CWA
      DO 330  I=1,KSPE
 330  JCODE(LSPE(I))=9
CWA
      IF (IAND(IPRINT,1) .NE. 0) THEN
        WRITE(NOUT,*) '  KADD:'
        WRITE(NOUT,710)  KADD
        WRITE(NOUT,*) '  LADD:'
        WRITE(NOUT,710)  LADD
        WRITE(NOUT,*) '  IJADD:'
        WRITE(NOUT,710)  IJADD
        WRITE(NOUT,*) '  IJGRP:'
        WRITE(NOUT,710)  IJGRP
        WRITE(NOUT,*) '  IOUT:'
        WRITE(NOUT,710)  IOUT
        WRITE(NOUT,*) '  ORBSYM:'
        WRITE(NOUT,710)  ORBSYM
        WRITE(NOUT,*) '  JCODE:'
        WRITE(NOUT,710)  JCODE
        WRITE(NOUT,*) '  ORBTBF:'
        WRITE(NOUT,710)  ORBTBF
      END IF
 710  FORMAT(16I5)
C
      RETURN
      END
      SUBROUTINE B0MAT(ALPHA,BETA,EPS,EPA,U,SS,W,ZETA,CC,OCC,EIG,
     1INTS,BUF,IJORD,IOFF,KADD,LADD,IJGRP,IJADD,ORBSYM,ORBTBF,JCODE,
     2JT1C,E11,E22,E12,LG,BOX,C,X,IOUT,EX,RS,IJDEP,VEC,DIP,EAVF,
     3LSTEPA,EX2,HA11,HA22,HA12)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*16 DET
      REAL*8 INTS(NMAX),E11(1),E22(1),E12(1),LG(NORBS,NORBS),BOXX(9)
      REAL*8 CDIP(3),A2,DEBYE,FAC,A1,A1S2,EAVF(NUMIJ),LSTEPA(NUMIJ)
      REAL*8 EX2(IJIND),HA11(NDF),HA22(NDF),HA12(NDF)
      LOGICAL IVIR,JVIR
      INTEGER FDOC,CORDOC,IJDEP(NUMIJ),FVIR,VUOC
      DIMENSION ALPHA(NUMIJ),BETA(NUMIJ),EPS(NUMIJ),EPA(NORBS,NORBS),
     1U(NORBS,NORBS),SS(NUMIJ,NDF),W(NORBS,NORBS,NDF),BUF(NUMIJ),
     2ZETA(NUMIJ,NORBS),CC(IJIND,IJIND3),OCC(NORBS),EIG(NORBS),
     3BOX(NDF),X(NDF),C(IJIND,NDF),XCIJA(28),EX(IJIND),RS(NUMDEP,NDF),
     4 VEC(NORBS,NORBS),DIP(NUMIJ,3)
      INTEGER IJORD(NUMIJ),IOFF(NUMIJ),KADD(1),LADD(1),IJGRP(1),
     1IJADD(1),ORBSYM(1),ORBTBF(1),JCODE(1),IA47(192),
     2JT1C(1),IOUT(NORBS),IAJT(20)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /POINT/ FOCC(5),IPOINT(5),JPOINT(5),NSORB(5)
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON/OCCS2/NUMCOR,NCOR,FDOC,CORDOC,NUMVIR,FVIR,LUOC,NUMDEP,VUOC
      COMMON /LOC42/ IA42(100),IBF2AT(284)
      COMMON /CALCJ/ ICALT,IDERT,ICIT
      COMMON /TCSCF/ DERC1,DERC2,CI1,CI2,H11,H12,H22,ONE,ITCSCF
C
      WRITE(ICHK,2222)
 2222 FORMAT(/'  IN B0MAT')
      NORBSQ=NORBS*NORBS
      A1S2=0.50D+00
      A4 = 4.0D+00
      A2 = 2.0D+00
      A1 = 1.0D+00
      DEBYE = 2.541765480D+00
      IT98=98
C
C  READ BACK IN S DERIVATIVE INTEGRALS
C
      IS=1
      DO 101 IDF=1,NDF
        CALL WREADW(IT94,SS(1,IDF),INTOWP(NUMIJ),IS,IS)
        IF (IAND(IPRINT,64) .NE. 0) THEN
          WRITE(NOUT,1101) IDF
 1101     FORMAT(/'  THE SA MATRIX FOR DEGREE ',I5,'  AS READ IN B0MAT')
          CALL PRINT(SS(1,IDF),NUMIJ,NORBS,NOUT)
        END IF
 101  CONTINUE
CTJL
C  INITIALIZE ROUTINE FOR CALCULATION OF A MATRIX.
CTJL
      CALL GETA(CC,EPS,ZETA,ALPHA,BETA)
      CALL GETB(CC,EPS,ZETA,ALPHA,BETA,SS)
      CALL GETCV(RS,EX,EAVF,LG,SS)
CTJL
C
C  CONSTRUCT ETA,ZETA,W,A,B0
C
CTJL  WRITE(ICHK,2223)
C2223 FORMAT(/'  CALLING GETINT')
      CALL GETINT(CC,EPS,ZETA,OCC,ALPHA,BETA,IJORD,KADD,LADD,IJADD,
     1IJGRP,ORBSYM,INTS,SS,EPA,JT1C,IOFF,EAVF)
CTJL  DO 173 I=1,NORBS
C     IO = IOFF(I)
C     DO 174 J=1,I
CTJL  IJ = IO + J
CTJL  WRITE(*,*) ' I,J,ALP,BET ',I,J,ALPHA(IJ),BETA(IJ)
C 174 CONTINUE
C     WRITE(*,*) ' I,OCC(I) ',I,OCC(I)
C 173 CONTINUE
CTJL  IF (IAND(IPRINT,16) .NE. 0) THEN
CTJL    WRITE(NOUT,2231)
C2231   FORMAT(/'  THE A MATRIX AS CONSTRUCTED IN GETINT:')
CTJL    CALL MATOUT(CC,IJIND,IJIND3,IJIND,IJIND3,NOUT)
CTJL  END IF
      IF (ICIT.EQ.1) GOTO 2300
C
C     READ LAGRANGIAN  AND ZERO OUT BOX
C
      CALL ZERO(BOX,NDF)
      CALL WREADW(IT47,IA47,192,1,JUNK)
      WRITE(ICHK,9014) IA47(120)
9014  FORMAT(' IA47(120) ',I8)
      CALL WREADW(IT47,LG,INTOWP(NORBS*NORBS),IA47(120),
     1 JUNK)
C     WRITE(ICHK,9015)
C9015 FORMAT(' READ IN LAGRANGIAN ')
CTJL  WRITE(*,*) ' CI LAGRANGIAN'
CTJL  CALL MATOUT(LG,NORBS,NORBS,NORBS,NORBS,NOUT)
C
C
C   CALL FOR CI FIRST DERIVATIVE
C
CTJL
CTJL    WRITE(*,*) ' THE A AND B MATRICES BEFORE '
CTJL    CALL MATOUT(CC,IJIND,IJIND3,IJIND,IJIND3,NOUT)
CTJL
      CALL GTINTS(CC,EPS,ZETA,OCC,ALPHA,BETA,IJORD,KADD,LADD,IJADD,
     1IJGRP,ORBSYM,INTS,SS,EPA,JT1C,IOFF,EX,RS,LG,IJDEP,BOX,EAVF,
     2LSTEPA,E11,E12,E22)
C
      CALL GTINT2(CC,EPS,ZETA,OCC,ALPHA,BETA,IJORD,KADD,LADD,IJADD,
     1IJGRP,ORBSYM,INTS,SS,EPA,JT1C,IOFF,EX,RS,LG,IJDEP,BOX,EAVF,
     2LSTEPA,EX2,E11,E12,E22,HA11,HA22,HA12)
C
CTJL
CTJL  WRITE(*,*) ' THE EX VECTOR'
C     DO 28847 ITJL = 1,IJIND
C     WRITE(*,*) ITJL,EX(ITJL)
CTJL  EX(ITJL) = EX(ITJL)*A2
28847 CONTINUE
CTJL
CTJL  IF (IAND(IPRINT,16) .NE. 0) THEN
C       WRITE(NOUT,2231)
C2231   FORMAT(/'  THE A MATRIX AS CONSTRUCTED IN GETINT:')
C       CALL MATOUT(CC,IJIND,IJIND3,IJIND,IJIND3,NOUT)
CTJL  END IF
C     WRITE(NOUT,9022)
C9022 FORMAT(/' B0 MATRIX AS WRITTEN TO IT96')
C     CALL MATOUT(C,IJIND,NDF,IJIND,NDF,NOUT)
C
C     STORE B0 ON IT96
C
CTJL  CALL RFILE(IT96)   THIS IS NOW DONE IN FAMAT
      IC=1
      CALL WWRITW(IT96,C,INTOWP(IJIND*NDF),IC,JUNK)
      WRITE(ICHK,9011)
9011  FORMAT(' C WRITTEN TO IT96 ')
      CALL ZERO(C,IJIND)
C
C     READ LAGRANGIAN
C
CTJL  CALL WREADW(IT47,IA47,192,1,JUNK)
CTJL  WRITE(ICHK,9014) IA47(120)
C9014 FORMAT(' IA47(120) ',I8)
CTJL  CALL WREADW(IT47,LG,INTOWP(NORBS*NORBS),IA47(120),
CTJL 1 JUNK)
CTJL  WRITE(ICHK,9015)
C9015 FORMAT(' READ IN LAGRANGIAN ')
C     WRITE(*,*) ' CI LAGRANGIAN'
C     CALL MATOUT(LG,NORBS,NORBS,NORBS,NORBS,NOUT)
CTJL
      DO 400 IXDF=1,NDF
CTJL  WRITE(*,*) ' BOX ,IDF',BOX(IXDF),IXDF
      DO 410 I=1,NORBS
      DO 420 R=1,I-1
      IR=IOFF(I)+R
      BOX(IXDF)=BOX(IXDF)-SS(IR,IXDF)*(LG(I,R)+LG(R,I))
 420  CONTINUE
      II=IOFF(I)+I
      BOX(IXDF)=BOX(IXDF)-SS(II,IXDF)*LG(I,I)
 410  CONTINUE
CTJL  WRITE(*,*) ' BOX ,IDF',BOX(IXDF),IXDF
 400  CONTINUE
CTJL
CTJL  WRITE(NOUT,*) (BOX(IXDF),IXDF=1,NDF)
CTJL
C     WRITE(*,*) ' THE EX2 VECTOR'
C     DO 29847 ITJL = 1,IJIND
C     WRITE(*,*) ITJL,EX2(ITJL)
29847 CONTINUE
CTJL  DO 26847 IDF = 1,NDF
CTJL  WRITE(*,*) ' THE RS VECTOR FOR DEGREE OF FREEDOM',IDF
CTJL  DO 27847 ITJL = 1,CORDOC
CTJL  WRITE(*,*) ITJL,RS(ITJL,IDF)
27847 CONTINUE
26847 CONTINUE
CTJL
C     IR=0
C     DO 430 I=1,NORBS
C     DO 440 R=1,I
C        IR=IR+1
C        INDEX=IJORD(IR)
C        IF(INDEX.NE.0)C(INDEX,1)=LG(R,I)-LG(I,R)
C        IF(INDEX.NE.0)C(INDEX,1)=((LG(R,I)-LG(I,R)) - EX(INDEX))
C440  CONTINUE
C430  CONTINUE
CTJL  FAC = -A1
      DO 120 I=LFERM,NDOC
      IO=IOFF(I)
      DO 130 J=1,NUOC
      FAC = OCC(J)-OCC(I)
      IJ=IO+J
      IJND=IJORD(IJ)
      C(IJND,1)=((LG(J,I)-LG(I,J)) + FAC*EX(IJND) + EX2(IJND))
CTJL  WRITE(*,*) ' J,I,IJND,EX2 ',J,I,IJND,EX2(IJND)
  130 CONTINUE
  120 CONTINUE
      IF (NOP.EQ.0) GOTO 200
      DO 140 I=NOP,NALP
      IO=IOFF(I)
      DO 150 J=1,NDOC
CTJL  FAC =  -A1S2
CTJL  IF(J.GE.LFERM) FAC = A1S2
      FAC = OCC(J)-OCC(I)
CTJL  WRITE(*,*) ' IN ALP:UOC,DOC PART: FAC ',FAC
      IJ=IO+J
      IJND=IJORD(IJ)
      C(IJND,1)=((LG(J,I)-LG(I,J)) + FAC*EX(IJND) + EX2(IJND))
CTJL  WRITE(*,*) ' J,I,IJND,EX2 ',J,I,IJND,EX2(IJND)
CTJL  WRITE(*,*) ' J,I,OJ,OI,F',J,I,OCC(J),OCC(I),FAC
  150 CONTINUE
  140 CONTINUE
  200 CONTINUE
      IF (NSPE.EQ.0) GOTO 110
      DO 160 I=NSA,NSB
      IO=IOFF(I)
      DO 170 J=1,I-1
      FAC = OCC(J)-OCC(I)
      IJ=IO+J
      IJND=IJORD(IJ)
      C(IJND,1)=((LG(J,I)-LG(I,J)) + FAC*EX(IJND) + EX2(IJND))
  170 CONTINUE
  160 CONTINUE
  110 CONTINUE
C
      IF(ITCSCF.EQ.1) THEN
CWA
C  REMEMBER THAT LG(I,J) IS TWICE THE LAGRANGIAN AND WE THUS
C  ARE SOLVING FOR 2Z.
      XXWA1=DERC1
      XXWA2=DERC2
      DERC1=-A4*CI1*XXWA1
      DERC2=-A4*CI2*XXWA2
      C(IJIND-1,1) = DERC1
      C(IJIND,1) = DERC2
      END IF
CWA   WRITE(*,*) '  ITCSCF,DERC1,DERC2 ',ITCSCF,DERC1,DERC2
      WRITE(6,*) '  ITCSCF,ETA1,ETA2 ',ITCSCF,DERC1,DERC2
C
CTJL  DO 329 I=1,IJIND
C     WRITE(NOUT,3001) I,C(I,1)
C3001 FORMAT(/' I = ',I6,' C(I,1) = ',F20.8)
C 329 CONTINUE
C
C     SOLVE FOR Z IN AT*Z=C
C
      CALL FLINX(CC,IJIND,IJIND,1,DET)
C     WRITE(NOUT,301) DET
CTJL  WRITE(*,*) '  THE Z-VECTOR '
C     DO 330 I=1,IJIND
C     WRITE(*,*) I,C(I,1)
C3309 FORMAT(5X,I5,F20.15)
C 330 CONTINUE
      DO 331 I=1,IJIND
      CC(I,1)=C(I,1)
  331 CONTINUE
C
C     READ IN B0
C
      CALL WREADW(IT96,C,INTOWP(IJIND*NDF),IC,JUNK)
CTJL  WRITE(NOUT,9021)
C9021 FORMAT(/' B0 MATRIX FROM IT96')
C       CALL MATOUT(C,IJIND,NDF,IJIND,NDF,NOUT)
CTJL  DO 332 IIJ=1,IJIND
C     WRITE(*,*) ' IJIND,CC ',IIJ,CC(IIJ,1)
      DO 332 IDF=1,NDF
CTJL  WRITE(*,*) '  (XIJ+XJI)*SA ',BOX(IDF),IDF
      DO 333 IIJ=1,IJIND
CTJL  IF(IDF.EQ.3) THEN
CTJL  WRITE(NOUT,*) C(IIJ,IDF),CC(IIJ,1),CC(IIJ,1)*C(IIJ,IDF),IDF,IIJ
CTJL  END IF
CTJL  BOXX(IDF)=C(IIJ,IDF)*CC(IIJ,1)
      BOX(IDF) = BOX(IDF) + C(IIJ,IDF)*CC(IIJ,1)
  333 CONTINUE
  332 CONTINUE
CTJL  WRITE(*,*)
CTJL  WRITE(NOUT,*) (IDF,BOXX(IDF),IDF=1,NDF)
CWA
C  REMEMBER THAT LG(I,J) IS TWICE THE LAGRANGIAN AND WE THUS
C  SOLVED FOR 2Z.
      DO 334 IDF=1,NDF
      BOX(IDF)=BOX(IDF)*A1S2
CTJL  WRITE(*,*) ' BOX FROM CPHF ',BOX(IDF),IDF
  334 CONTINUE
      WRITE(*,*)
C
      CALL WREADW(IT42,IA42,100,1,JUNK)
      CALL WREADW(IT42,X,INTOWP(NDF),IA42(15),JUNK)
      DO 335 IDF=1,NDF
CTJL  WRITE(*,*) ' BOX FROM DERIV ',X(IDF),IDF
      BOX(IDF)=BOX(IDF)+X(IDF)
 335  CONTINUE
C
      CALL PRN11(BOX,NDF)
C
CTJL
CTJL WRITE OUT IOUT , IJORD AND Z MATRICES FOR USE IN CALCULATION
CTJL OF CI DIPOLE MOMENTS
CTJL
CTJL  IAJT(1)=21
CTJL  IAJT(2)=IAJT(1)+INTOWP(NORBS)
CTJL  IAJT(3)=IAJT(2)+INTOWP(NUMIJ)
CTJL  IAJT(4)=IAJT(3)+INTOWP(IJIND)
CTJL  IAJT(11)=NBF
CTJL  IAJT(12)=NUMIJ
CTJL  IAJT(13)=INTOWP(IJIND)
CTJL  CALL WWRITW(IT96,IAJT,20,1,JUNK)
CTJL  WRITE(ICHK,*) ' AFTER WRITE 1'
CTJL  CALL WWRITW(IT96,IOUT,NBF,IAJT(1),JUNK)
CTJL  WRITE(ICHK,*) ' AFTER WRITE 2'
CTJL  CALL WWRITW(IT96,IJORD,NUMIJ,IAJT(2),JUNK)
CTJL  WRITE(ICHK,*) ' AFTER WRITE 3'
CTJL  CALL WWRITW(IT96,CC,INTOWP(IJIND),IAJT(3),JUNK)
CTJL  WRITE(ICHK,*) ' AFTER WRITE 4'
C
C  LET'S CALCULATE THE CI DIPOLE MOMENT IF DESIRED.
C
      IF(ICIDIP.EQ.1) CALL CIDIP(DIP,VEC,E11,EPA,CC,IOFF,IJORD,IJDEP,
     1  EAVF,LG,OCC,ORBSYM)
CTJL  READ(27,3333) NBATRI
C3333 FORMAT(10I5)
C     DO 3334 I = 1,NBATRI
C     READ(27,3335) DIP(I,1),DIP(I,2),DIP(I,3)
C3335 FORMAT(3F20.10)
C3334 CONTINUE
CTJL
C     CALL ZERO(CDIP,3)
CTJL  CALL MATOUT(VEC,NORBS,NORBS,NORBS,NORBS,6)
C     DO 170 IDIP = 1,3
C     CALL SQUR(DIP(1,IDIP),LG,NBF)
CTJL  CALL PRINT(DIP(1,IDIP),NUMIJ,NORBS,6)
CTJL  CALL MATOUT(LG,NORBS,NORBS,NORBS,NORBS,6)
C     CALL ZERO(EPA,NBF*NBF)
C     CALL MXMB(VEC,NBF,1,LG,1,NBF,EPA,1,NBF,NBF,NBF,NBF)
C     CALL ZERO(LG,NBF*NBF)
C     CALL MXMB(EPA,1,NBF,VEC,1,NBF,LG,1,NBF,NBF,NBF,NBF)
CTJL  CALL MATOUT(LG,NORBS,NORBS,NORBS,NORBS,6)
C     IJ = 0
C     DO 180 I = 1,NBF
C     DO 190 J = 1,I
C     IJ = IJ + 1
C     IJND = IJORD(IJ)
C     IF(IJND.EQ.0) GOTO 190
C     CDIP(IDIP) = CDIP(IDIP) + LG(I,J)*CC(IJND,1)
CTJL  WRITE(*,*) ' IJIND,CC ',IJND,CC(IJND,1)
CTJL  WRITE(*,*) ' I,J,IDIP,CDIP',I,J,IDIP,CDIP(IDIP)
CTJL  WRITE(*,*) ' LG,CC ',LG(I,J),CC(IJND,1)
C 190 CONTINUE
C 180 CONTINUE
C 170 CONTINUE
C     DO 200 I=1,3
C     CDIP(I) = CDIP(I)*DEBYE
C 200 CONTINUE
C     WRITE(*,3335) (CDIP(I),I=1,3)
CTJL
C
      RETURN
C
C
C
C  SOLVE FOR U IN A*U=B0
C
2300  CALL GTINT3(CC,EPS,ZETA,OCC,ALPHA,BETA,IJORD,KADD,LADD,IJADD,
     1IJGRP,ORBSYM,INTS,BUF,ORBTBF,JCODE,EIG,SS,EPA,W,JT1C,IOFF,
     2E11,E22,E12)
      CALL GTINT4(CC,EPS,ZETA,OCC,ALPHA,BETA,IJORD,KADD,LADD,IJADD,
     1IJGRP,ORBSYM,INTS,BUF,ORBTBF,JCODE,EIG,SS,EPA,W,JT1C,IOFF,
     2E11,E22,E12)
CTJL  IF (IAND(IPRINT,16) .NE. 0) THEN
CTJL    WRITE(NOUT,2231)
CTJL    CALL MATOUT(CC,IJIND,IJIND3,IJIND,IJIND3,NOUT)
CTJL  END IF
      WRITE(ICHK,2224)
 2224 FORMAT(/'  CALLING FLIN')
      CALL FLINX(CC,IJIND,IJIND,NDF,DET)
CTJL  WRITE(NOUT,301) DET
 301  FORMAT(/'  DETERMINANT FROM FLIN    =',G18.8)
C
C  FILL OUT U ARRAY FOR EACH DEGREE OF FREEDOM
C
      CALL RFILE(IT98)
CIBM  CALL SREW(IT98)
      IU=1
      DO 201 IDF=1,NDF
C
        DO 202 I=1,NORBS
          DO 202 J=1,NORBS
 202    U(I,J)=0.0D+00
C
        IJ=0
        NCVIRT=0
        DO 203 I=1,NORBS
          IVIR=.FALSE.
          IF (I.LT.LFERM) NCVIRT=NCVIRT+1
          DO 203 J=1,I
            JVIR=.FALSE.
            IF (J.LT.LFERM) NCVIRT=NCVIRT+1
            IJ=IJ+1
            INDEX=IJORD(IJ)
            IF (INDEX .NE. 0) U(I,J)=CC(INDEX,IDF+IJIND)
            U(J,I)= -U(I,J)-SS(IJ,IDF)
            IF (NCVIRT.EQ.1) THEN
C           IF (IVIR.XOR.JVIR) THEN
              TEMP=U(I,J)
              U(I,J)=U(J,I)
              U(J,I)=TEMP
            END IF
 203    CONTINUE
C
        DO 204 I=1,NORBS
          II=IOFF(I)+I
 204    U(I,I)=-A1S2*SS(II,IDF)
C
        IF (IAND(IPRINT,16) .NE. 0) THEN
          WRITE(NOUT,1001) IDF
 1001     FORMAT(/'  THE U MATRIX FOR DEGREE OF FREEDOM ',I4)
          CALL MATOUT(U,NORBS,NORBS,NORBS,NORBS,NOUT)
        END IF
C
        CALL WWRITW(IT98,U,INTOWP(NORBSQ),IU,IU)
 201  CONTINUE
C
      RETURN
      END
      SUBROUTINE FINAL(U,W,EPA,SA,UAWB,SAEB,DTOT,JT1C,IOFF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION U(NORBS,NORBS,NDF),W(NORBS,NORBS,NDF),SA(NUMIJ,NDF),
     1EPA(NORBS,NORBS,NDF),UAWB(NDF,NDF),SAEB(NDF,NDF),DTOT(NDF,NDF)
      INTEGER JT1C(1),IOFF(NUMIJ)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON /LOC42/ IA42(100),IBF2AT(284)
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
C
C  COMPUTE S(A)*EPA(B) CONTRIBUTION TO FCM
C
      WRITE(ICHK,*) '  IN SUBROUTINE FINAL'
      A2=2.0D+00
      NORBSQ=NORBS*NORBS
      IS=1
      DO 101 IDF=1,NDF
 101  CALL WREADW(IT94,SA(1,IDF),INTOWP(NUMIJ),IS,IS)
C
      IEA=2*NDF+NBSET*NDF+1
      ISEA=JT1C(IEA)
      DO 102 IDF=1,NDF
C       WRITE(NOUT,1001) IDF,ISEA
C1001   FORMAT(/'  READING EPA FOR DEGREE ',I5,'  FROM WORD ',I8)
 102  CALL WREADW(IT94,EPA(1,1,IDF),INTOWP(NORBSQ),ISEA,ISEA)
C
      DO 201 IDFA=1,NDF
        DO 201 IDFB=1,NDF
          DO 202 K=LFERM,NORBS
            KO=IOFF(K)
            DO 202 L=LFERM,K
              KL=KO+L
              SAEB(IDFA,IDFB)=SAEB(IDFA,IDFB)-A2*SA(KL,IDFA)*EPA(K,L,
     *        IDFB)
              IF (K .NE. L)
     1        SAEB(IDFA,IDFB)=SAEB(IDFA,IDFB)-A2*SA(KL,IDFA)*EPA(L,K,
     *        IDFB)
 202      CONTINUE
 201  CONTINUE
      WRITE(NOUT,*) '  FINISHED SAEB'
C
C  COMPUTE U(A)*W(B) CONTRIBUTION TO FCM
C
      IU=1
      IWA=3*NDF+NBSET*NDF+1
      ISWA=JT1C(IWA)
      DO 106 IDF=1,NDF
CC      WRITE(NOUT,1002) IDF,IU
 1002   FORMAT(/'  READING U FOR DEGREE ',I5,'  FROM WORD ',I8)
        CALL WREADW(IT98,U(1,1,IDF),INTOWP(NORBSQ),IU,IU)
CC    CALL MATOUT(U(1,1,IDF),NORBS,NORBS,NORBS,NORBS,NOUT)
CC      WRITE(NOUT,1003) IDF,ISWA
 1003   FORMAT(/'  READING W FOR DEGREE ',I5,'  FROM WORD ',I8)
        CALL WREADW(IT94,W(1,1,IDF),INTOWP(NORBSQ),ISWA,ISWA)
CC    CALL MATOUT(W(1,1,IDF),NORBS,NORBS,NORBS,NORBS,NOUT)
 106  CONTINUE
C
      DO 203 IDFA=1,NDF
        DO 203 IDFB=1,NDF
          DO 204 K=1,NORBS
            DO 204 L=LFERM,NORBS
              UAWB(IDFA,IDFB)=UAWB(IDFA,IDFB)+U(K,L,IDFB)*W(K,L,IDFA)
 204      CONTINUE
 203  CONTINUE
      WRITE(NOUT,*) '  FINISHED UAWB'
C
      WRITE(NOUT,*) '  THE SA*EB CONTRIBUTION TO FCM:'
      CALL MATOUT(SAEB,NDF,NDF,NDF,NDF,NOUT)
      WRITE(NOUT,*) '  THE UA*WB CONTRIBUTION TO FCM:'
      CALL MATOUT(UAWB,NDF,NDF,NDF,NDF,NOUT)
C
      CALL WREADW(IT42,DTOT,INTOWP(NDF*NDF),IA42(16),JUNK)
      WRITE(NOUT,*) '  THE AO CONTRIBUTIO TO FCM FROM TAPE42:'
      CALL MATOUT(DTOT,NDF,NDF,NDF,NDF,NOUT)
C
      DO 301 IDF=1,NDF
        DO 301 JDF=1,NDF
          DTOT(IDF,JDF)=DTOT(IDF,JDF)+SAEB(IDF,JDF)+UAWB(IDF,JDF)
 301  CONTINUE
C
      WRITE(NOUT,1004)
 1004 FORMAT(//'   THE TOTAL FORCE CONSTANT MATRIX:'//)
      CALL MATOUT(DTOT,NDF,NDF,NDF,NDF,NOUT)
C
      WRITE(15,'(2I5)') NAT,NAT*6
      WRITE(15,1005) ((DTOT(II,JJ), JJ=1,NDF), II=1,NDF)
 1005 FORMAT(3F20.10)
C
      RETURN
      END
      SUBROUTINE ABORTS
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      WRITE(NOUT,*) ' ABORTS CALLED '
      WRITE(ICHK,*) ' ABORTS CALLED '
      STOP
      END
      SUBROUTINE PRN11(DER1,NAT)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      REAL*8 DER1(3,NAT),A30(100)
      INTEGER IA30(400),IPTR30(400)
      INTEGER IALBEL(20),IBLBEL(20),LBLDRT(26)
      CHARACTER*52 TITLE
CCCC  CHARACTER*8  SCFTYP,CALTYP
      CHARACTER*1 LET(3)
      LOGICAL OPEN
C
      DIMENSION ZAN(50),GEOM(3,50)
C
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /CALCJ/ ICALT,IDERT,ICIT
      COMMON /FILES/ IT54,IT97
C
      DATA LET   /'X','Y','Z'/
      DATA TITLE /'---------- CI GRADIENTS PLUS CPHF TERMS ----------'/
C
      EQUIVALENCE (IA30,A30)
      ITAP11 = 11
C
CC      IF (CALTYP.NE.'SCF  '.AND.CALTYP.NE.'CI   '.AND.
CC   #  CALTYP.NE.'MCSCF') THEN
CC        WRITE (NOUT,902) CALTYP,LEVEL,IPRINT
CC902     FORMAT (//,' UNKNOWN CALCULATION TYPE: ',A5,1X,A5,I5,//)
CC        STOP
CC      END IF
C
C     ----- GET CONSTANTS FROM TAPE30 -----
C
      CALL SREW(IT30)
      CALL WREADW(IT30,IA30,200,101,JUNK)
C
      IEND   =  IA30(1)
      MPOINT =  IA30(2)
      MCONST =  IA30(3)
      MCALCS =  IA30(4)
      NCALCS =  IA30(5)
      NAT    = IA30(19)
      NUM    = IA30(22)
      NNP    = IA30(23)
      NSHELL = IA30(27)
      NIRRED = IA30(28)
      NT     = IA30(29)
      NPRIM  = IA30(32)
      MXT    = IA30(36)
      NISO   = IA30(40)
C
C     ----- READ POINTERS FROM TAPE30 -----
C
      JUNK   = 101+MCONST
      CALL WREADW(IT30,IPTR30,MPOINT,JUNK,JUNK)
C
C     ----- NOW GO FOR THE GUSTO -----
C
      CALL WREADW(IT30,   ZAN,    INTOWP(NAT),IPTR30(1),JUNK)
C
C     ----- AND GET LOCATION OF INDIVIDUAL CALCULATION TO GET GEOM
C
      JUNK   = 101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(IT30, LOCCAL, 1,JUNK,JUNK)
C
      CALL WREADW(IT30, IA30, 60,LOCCAL,LOCCAL)
C
      DO 500  ILBL=1,20
         IALBEL(ILBL) =  IA30(ILBL)
CCCC     CALL ITC(IA30(ILBL),0,ALABEL(ILBL))
  500 CONTINUE
C
      WRITE(3,*) ' ICALT =',ICALT,' IDERT = ',IDERT,' ICIT = ',ICIT
CCCC  IF(CITYP.NE.'CI    ' .AND. DERTYP.EQ.'FIRST ') THEN
CC    WRITE (ITAP11,899) (IA30(I),I=1,20)
C 899 FORMAT (20A4,/)
CC    WRITE (NOUT,900) (IA30(I),I=1,20)
C 900 FORMAT (/,(1X,20A4)/)
CCCC  END IF
C
      LOCCAL=LOCCAL+20
      CALL WREADW(IT30,  GEOM,  INTOWP(3*NAT),LOCCAL,LOCCAL)
C
C     ----- GET ENERGIES AND WRITE OUT -----
C
      CALL WREADW(IT30,   IA30,     INTOWP(10),LOCCAL,LOCCAL)
C
      ESCF = A30(2)
C
CTJL GET CI ENERGY
      CALL RFILE(IT54)
      CALL DCDLBL(IT54,LBLDRT,LBLDRT,IX,IX,IX,EGUESS,ECI,CZERO)
CTJL
      WRITE (NOUT,901) A30(1)
  901 FORMAT (/,1X,' NUCLEAR REPULSION ENERGY =',F20.10)
      WRITE (NOUT,902) ESCF
  902 FORMAT (  1X,' SCF ENERGY               =',F20.10)
      WRITE (NOUT,903) ECI
  903 FORMAT (  1X,' CI ENERGY                =',F20.10,/)
C
C     -------  NOW WRITE CI GRADIENTS TO FILE11  --------
C
  111 FORMAT (20A4,/)
  112 FORMAT (I5,F20.10)
  113 FORMAT (4F20.10)
  114 FORMAT (20X,3F20.10)
C
      WRITE (11,111) (IALBEL(I),I=1,20)
      WRITE (11,112) NAT,ECI
      DO 100  NG = 1,NAT
        WRITE (11,113)  ZAN(NG),GEOM(1,NG),GEOM(2,NG),GEOM(3,NG)
  100 CONTINUE
      DO 200  ND = 1,NAT
        WRITE (11,114)  DER1(1,ND),DER1(2,ND),DER1(3,ND)
  200 CONTINUE
C
C     -----  NOW WRITE CI GRADIENTS TO OUTPUT FILE  -----
C
      WRITE (NOUT,61) TITLE
   61 FORMAT (//,T11,A50,//,' CENTER',T15,'X',T35,'Y',T55,'Z')
      DO 63  IC=1,NAT
        WRITE (NOUT,62) IC,DER1(1,IC),DER1(2,IC),DER1(3,IC)
   62   FORMAT (/,1X,I4,3F20.12)
   63 CONTINUE
C
C     -------  NOW WRITE CI GRADIENTS TO FILE30  --------
C
      JUNK=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(IT30,LOCCAL,1,JUNK,JUNK)
C
      LOCCAL=LOCCAL+61
      CALL WREADW(IT30,LOCDER,1,LOCCAL,JUNK)
      IF (LOCDER.LE.0) THEN
        LOCDER=IEND
        IEND=IEND+INTOWP(3*NAT)
        CALL WWRITW(IT30,LOCDER,1,LOCCAL,JUNK)
        CALL WWRITW(IT30,IEND,1,101,JUNK)
      END IF
C
      CALL WWRITW(IT30,DER1,INTOWP(3*NAT),LOCDER,JUNK)
C
      CALL RCLOSE(IT30,3)
C
C
      RETURN
      END
      SUBROUTINE SQUR(T,SQ,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SQ(2),T(2)
      IJ=0
      II=0
      DO 20 I=1,N
      JJ=0
      DO 10 J=1,I
      IJ=IJ+1
      SQ(II+J)=T(IJ)
      SQ(JJ+I)=T(IJ)
10    JJ=JJ+N
20    II=II+N
      RETURN
      END
      SUBROUTINE CIDIP(DIPINT,VEC,SCR1,SCR2,Z,IOFF,IJORD,IJDEP,EAVF,LG,
     1 OCC,ORBSYM)
      IMPLICIT INTEGER (A-Z)
C
      REAL*8 DIPINT(NUMIJ,3),VEC(NORBS,NORBS),SCR1(NORBS,NORBS)
      REAL*8 SCR2(NORBS,NORBS),Z(IJIND),CIDM(3),CIDC(3),CIDT(3)
      REAL*8 EAVF(NUMIJ),LG(NBF,NBF),OCC(NBF)
      REAL*8 DEBYE,FAC,A0,A1,A1S2,CITM,FAC2,A4,KAPPA1,KAPPA2
      REAL*8 DERC1,DERC2,CI1,CI2,H11,H12,H22,ONE,KAPPA(3)
      INTEGER IOFF(NUMIJ),IJORD(NUMIJ),IJDEP(NUMIJ),ORBSYM(NBF)
C
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON/OCCS2/NUMCOR,NCOR,FDOC,CORDOC,NUMVIR,FVIR,LUOC,NUMDEP,VUOC
      COMMON/TCSCF/DERC1,DERC2,CI1,CI2,H11,H12,H22,ONE,ITCSCF
C
      DATA DEBYE / 2.541765480D+00 /
      DATA A0,A1,A1S2,A4 / 0.0D+00,1.0D+00,0.5D+00,4.0D0/
      DATA A2 / 2.0D0/
C
    1 FORMAT(5X,'THE CI DIPOLE MOMENT ',10X,3F20.10)
    2 FORMAT(5X,'CORRECTION TO CI D.M.',10X,3F20.10)
    3 FORMAT(5X,'THE TOTAL CI DIPOLE MOMENT',5X,3F20.10)
    4 FORMAT(5X,'MAGNITUDE OF THE CI D.M.',7X,F20.10,5X,'DEBYES')
    5 FORMAT(//,5X,'KAPPA CONTRIBUTION TO DIPOLE MOMENT'/)
    6 FORMAT(5X,3F20.10)
C
      DIPTAP = 59
      WPOINT = 1
      CALL RFILE(DIPTAP)
      CALL WREADW(DIPTAP,DIPINT,INTOWP(3*NUMIJ),WPOINT,WPOINT)
      CALL WREADW(DIPTAP,CIDM,INTOWP(3),WPOINT,WPOINT)
C
      CALL ZERO(CIDC,3)
CTJL  CALL MATOUT(VEC,NORBS,NORBS,NORBS,NORBS,6)
      DO 110 IDIP = 1,3
      CALL SQUR(DIPINT(1,IDIP),SCR1,NBF)
CTJL  CALL PRINT(DIPINT(1,IDIP),NUMIJ,NORBS,6)
CTJL  CALL MATOUT(SCR1,NORBS,NORBS,NORBS,NORBS,6)
      CALL ZERO(SCR2,NBF*NBF)
      CALL MXMB(VEC,NBF,1,SCR1,1,NBF,SCR2,1,NBF,NBF,NBF,NBF)
      CALL ZERO(SCR1,NBF*NBF)
      CALL MXMB(SCR2,1,NBF,VEC,1,NBF,SCR1,1,NBF,NBF,NBF,NBF)
C     WRITE(*,*) ' IDIP = ',IDIP
C     CALL MATOUT(SCR1,NORBS,NORBS,NORBS,NORBS,6)
CTJL  FAC = A1
CWA
C  OCC(I) CORRESPONDS TO F(I).
C  Z IS REALLY 2Z.
      DO 120 I=LFERM,NDOC
      IO=IOFF(I)
C     ISM = ORBSYM(I)
      DO 130 J=1,NUOC
      FAC = OCC(I) - OCC(J)
      IJ=IO+J
      IJND=IJORD(IJ)
C     JSM = ORBSYM(J)
C     IF(IDIP.EQ.3)WRITE(*,*)' DI,HZ,Z ',CIDC(IDIP),SCR1(I,J),Z(IJND)
C     IF(IDIP.EQ.3)WRITE(*,*)' ISM,JSM ',ISM,JSM
      CIDC(IDIP) = CIDC(IDIP) + SCR1(I,J)*Z(IJND)*FAC
  130 CONTINUE
  120 CONTINUE
C     WRITE(*,*)
      IF (NOP.EQ.0) GOTO 200
      DO 140 I=NOP,NALP
      IO=IOFF(I)
      DO 150 J=1,NDOC
C     FAC =  A1S2
C     IF(J.GE.LFERM) FAC = -A1S2
      FAC = OCC(I) - OCC(J)
      IJ=IO+J
      IJND=IJORD(IJ)
C     IF(IDIP.EQ.2)WRITE(*,*)' DI,HY,Z ',CIDC(IDIP),SCR1(I,J),Z(IJND)
      CIDC(IDIP) = CIDC(IDIP) + SCR1(I,J)*Z(IJND)*FAC
  150 CONTINUE
  140 CONTINUE
  200 CONTINUE
C     WRITE(*,*)
      IF (NSPE.EQ.0) GOTO 520
      DO 160 I=NSA,NSB
      IO=IOFF(I)
      DO 170 J=1,I-1
      FAC = OCC(I) - OCC(J)
      IJ=IO+J
      IJND=IJORD(IJ)
      CIDC(IDIP) = CIDC(IDIP) + SCR1(I,J)*Z(IJND)*FAC
  170 CONTINUE
  160 CONTINUE
CWA
C  ZETA IS REALLY 2ZETA.
      IF(ITCSCF.EQ.1)THEN
          KAPPA1=SCR1(NSB,NSB)-SCR1(NSA,NSA)
          KAPPA2=(Z(IJIND-1)*CI2-Z(IJIND)*CI1)*CI1*CI2
          KAPPA(IDIP)=-A2*KAPPA1*KAPPA2
          CIDC(IDIP)=CIDC(IDIP)+KAPPA(IDIP)
          KAPPA(IDIP)=KAPPA(IDIP)*DEBYE
      END IF
  520 CONTINUE
CTJL
      IJ = 0
      DO 500 I = 1,NBF
      II = IOFF(I) + I
      DO 510 J = 1,I
      JJ = IOFF(J) + J
      IJ = IJ + 1
      IJCV = IJDEP(IJ)
      IF(IJCV.EQ.0) GO TO 510
CWA   FAC = A1/(EAVF(JJ)-EAVF(II))
      FAC = A1/(EAVF(II)-EAVF(JJ))
C     IF(IDIP.EQ.3) WRITE(*,*)' DI,HZ ',CIDC(IDIP),SCR1(I,J)
C     FAC2 = (LG(J,I)-LG(I,J))
C     IF(IDIP.EQ.2)WRITE(*,*)' FAC,X ',FAC,FAC2
      CIDC(IDIP) = CIDC(IDIP) + FAC*(LG(J,I)-LG(I,J))*SCR1(I,J)
  510 CONTINUE
  500 CONTINUE
CTJL
  110 CONTINUE
      WRITE(6,5)
      WRITE(6,6) (KAPPA(I),I=1,3)
      DO 210 I=1,3
      CIDC(I) = CIDC(I)*DEBYE
      CIDT(I) = CIDC(I) + CIDM(I)
  210 CONTINUE
      WRITE(*,*)
      WRITE(*,*)
      WRITE(*,1) (CIDM(I),I=1,3)
      WRITE(*,2) (CIDC(I),I=1,3)
      WRITE(*,3) (CIDT(I),I=1,3)
      WRITE(*,*)
      WRITE(*,*)
      CITM = CIDT(1)*CIDT(1) + CIDT(2)*CIDT(2) + CIDT(3)*CIDT(3)
      CITM = DSQRT(CITM)
      WRITE(*,4) CITM
C
      RETURN
      END
      SUBROUTINE FAMAT2(EPA,BUF,HM,TM,IOFF,JT1C,IOUT,DROL,LSTEPA,ALPHA,
     1 BETA)
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INTEGER IOFF(NUMIJ),JT1C(1),IOUT(NORBS),DROL(NORBS)
      REAL*8 EPA(NORBS,NORBS),TM(NUMIJ,NBSET),HM(NUMIJ)
      REAL*8 LSTEPA(NUMIJ),ALPHA(NUMIJ),BETA(NUMIJ),BUF(NUMIJ)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /POINT/ FOCC(5),IPOINT(5),JPOINT(5),NSORB(5)
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
      COMMON /CALCJ/ ICALT,IDERT,ICIT
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON /TYPES/ NTYDOC,NTYUOC
C
      DATA A0,A1S2 / 0.0D+00 , 0.5D+00 /
C
C   CALL BACK HM AND TM MATRICES AND FORM FA MATRICES
C   SEE EQS.(15) AND (32)
C
      IHA = JT1C(NDF+1)
      IEA = 2*NDF + NBSET*NDF
      ISEA = JT1C(IEA) + INTOWP(NUMIJ)
C
      NUMORB = NTYDOC + NTYUOC + 2
      IF(NUMORB.NE.NBF) THEN
      WRITE(*,*) ' NUMBER OF ORBITALS DOES NOT ADD UP IN FAMAT2 '
      WRITE(*,*) ' NUMORB,NBF ',NUMORB,NBF
      CALL MABORT
      END IF
C
      DO 1 IDF=1,NDF
      IEA = IEA + 1
      CALL ZERO(EPA,NORBS*NORBS)
CTJL  WRITE(*,*)' IN FAMAT2 READING HM AT ',IHA
C     CALL MATOUT(EPA,NORBS,NORBS,NORBS,NORBS,NOUT)
      CALL WREADW(IT94,HM,INTOWP(NUMIJ),IHA,IHA)
CTJL  CALL PRINT(HM,NUMIJ,NORBS,NOUT)
C
      DO 2 IBSET = 1,NBSET
      ITA = 2*NDF + (IDF-1)*NBSET + IBSET
CTJL  WRITE(*,*)' IDF,IBSET,ITA,JT1C ',IDF,IBSET,ITA,JT1C(ITA)
      CALL WREADW(IT94,TM(1,IBSET),INTOWP(NUMIJ),JT1C(ITA),JUNK)
CTJL  WRITE(*,*)' TM MATRIX IN FAMAT2 FOR DEGREE ',IDF,' AND SET ',IBSET
CTJL  CALL PRINT(TM(1,IBSET),NUMIJ,NORBS,NOUT)
  2   CONTINUE
C
C   STORE DERIVATIVE LAGRANGIAN MATRICES
      DO 3 ITYP = 1,NTYPES
      IMIN = JPOINT(ITYP)
      IMAX = JPOINT(ITYP+1) - 1
      FAC = FOCC(ITYP)*A1S2
      DO 5 IYY = IMIN,IMAX
      IBF = DROL(IYY)
      IORB = IOUT(IBF)
      DO 6 JORB = 1,NBF
      IJ = IOFF(MAX0(IORB,JORB)) + MIN0(IORB,JORB)
      VALU = HM(IJ)*FAC
      DO 4 KTYP = 1,NTYPES
      KYY = JPOINT(KTYP)
      KBF = DROL(KYY)
      KORB = IOUT(KBF)
      IK = IOFF(MAX0(IORB,KORB)) + MIN0(IORB,KORB)
CTJL  WRITE(*,*) ' I,J,K,A,B,TMA '
CTJL  WRITE(*,*)IORB,JORB,KORB,ALPHA(IK),BETA(IK),TM(IJ,KTYP*2-1)
      VALU = VALU + ALPHA(IK)*TM(IJ,KTYP*2-1)
     1         + BETA(IK)*TM(IJ,KTYP*2)
  4   CONTINUE
      EPA(IORB,JORB) = VALU
  6   CONTINUE
  5   CONTINUE
  3   CONTINUE
C
      JT1C(IEA) = ISEA
      CALL WWRITW(IT94,EPA,INTOWP(NORBS*NORBS),ISEA,ISEA)
CTJL  WRITE(6,*) ' EPA MATRIX FOR DEGREE OF FREEDOM ',IDF
CTJL  CALL MATOUT(EPA,NBF,NBF,NBF,NBF,6)
  1   CONTINUE
C
C   STORE DERIVATIVE AVERAGED FOCK
      CALL RFILE(IT96)
      ISEA = 1
      IADHA = JT1C(NDF+1)
CTJL  IADTA = JT1C(2*NDF+(NBSET-1)*NDF+1)
      DO 15 IDF=1,NDF
      IADTA = JT1C(2*NDF+IDF*NBSET)
      CALL WREADW(IT94,HM,INTOWP(NUMIJ),IADHA,IADHA)
      CALL WREADW(IT94,TM,INTOWP(NUMIJ),IADTA,IADTA)
CTJL  CALL ZERO(TM,NUMIJ)
      DO 14 I=1,NUMIJ
  14  BUF(I)=HM(I)+TM(I,1)
CT14  CONTINUE
CTJL  WRITE(6,*) ' EAVF MATRIX FOR DEGREE OF FREEDOM ',IDF
CTJL  CALL PRINT(BUF,NUMIJ,NBF,6)
      CALL WWRITW(IT96,BUF,INTOWP(NUMIJ),ISEA,ISEA)
  15  CONTINUE
C
      RETURN
      END
      SUBROUTINE DRMAT2(VEC,SCR1,SCR2,SS,BUF1,BUF2,IOFF,JT1C)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION VEC(NORBS,NORBS),SCR1(NUMIJ),SCR2(NUMIJ),
     1BUF1(NUMIJ,NDF),BUF2(NUMIJ,NDF,NBSET),SS(NUMIJ)
      INTEGER IOFF(NUMIJ),JT1C(1)
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /LOC42/ IA42(100),IBF2AT(284)
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
C
CTJL  WRITE(ICHK,2222)
C2222 FORMAT(/'  IN DERMAT')
      CALL RFILE(IT94)
CIBM  CALL SREW(IT94)
      CALL WREADW(IT42,IBF2AT,NORBS,IA42(11),JUNK)
C
C READ IN IT42 DATA; TRANSFORM TO MO BASIS; STORE ON IT94
C
C READ S DERIVATIVE INTEGRALS
      CALL WREADW(IT42,BUF1,INTOWP(NUMIJ*3),IA42(12),JUNK)
      CALL SAMAT(BUF1,NUMIJ,SS,NUMIJ,VEC,IOFF,SCR1,SCR2,JT1C)
C
C READ H DERIVATIVE INTEGRALS
      CALL WREADW(IT42,BUF1,INTOWP(NUMIJ*NDF),IA42(14),JUNK)
      IS=JT1C(NDF)+INTOWP(NUMIJ)
      DO 107 IABC=1,NDF
        IF (IAND(IPRINT,4) .NE. 0) THEN
          WRITE(NOUT,1001) IABC
 1001     FORMAT(/'  THE HA MATRIX FOR DEGREE OF FREEDOM ',I5)
          CALL PRINT(BUF1(1,IABC),NUMIJ,NORBS,NOUT)
        END IF
        CALL MOCONV(BUF1(1,IABC),NUMIJ,SS,NUMIJ,VEC,SCR1,SCR2)
        JT1C(IABC+NDF)=IS
        CALL WWRITW(IT94,SS,INTOWP(NUMIJ),IS,IS)
        IF (IAND(IPRINT,4) .NE. 0) THEN
          WRITE(NOUT,1002) IABC
 1002     FORMAT(/'  THE HM MATRIX FOR DEGREE OF FREEDOM ',I5)
          CALL PRINT(SS,NUMIJ,NORBS,NOUT)
          WRITE(NOUT,1003) IABC,JT1C(IABC+NDF),IS
 1003     FORMAT(/'  HM FOR DEGREE ',I5,'  WRITTEN TO WORD ',I8,
     1    '  NEXT WORD IS ',I8)
        END IF
 107  CONTINUE
C
C  READ 2E DERIVATIVE INTEGRALS (T MATRIX)
CTJL  WRITE(*,*) ' IA42(17),NBSET,NDF,NUMIJ = ',
CTJL 1    IA42(17),NBSET,NDF,NUMIJ
      CALL WREADW(IT42,BUF2,INTOWP(NBSET*NDF*NUMIJ),IA42(17),JUNK)
CTJL  CALL ZERO(BUF2,NBSET*NDF*NUMIJ)
CTJL  WRITE(*,*) ' LAST WORD + 1 = ',JUNK
CTJL  WRITE(*,*) ' LAST ELEMENT ',BUF2(28,9,7)
      IJT=2*NDF
      DO 108 IABC = 1,NDF
        DO 108 ISET = 1,NBSET
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(NOUT,1004) ISET,IABC
 1004       FORMAT(/'  THE TA MATRIX FOR SET ',I5,'  DEGREE ',
     *      I5)
            CALL PRINT(BUF2(1,IABC,ISET),NUMIJ,NORBS,NOUT)
          END IF
          CALL MOCONV(BUF2(1,IABC,ISET),NUMIJ,SS,NUMIJ,VEC,SCR1,
     *    SCR2)
          IJT=IJT+1
          JT1C(IJT)=IS
          CALL WWRITW(IT94,SS,INTOWP(NUMIJ),IS,IS)
          IF (IAND(IPRINT,8) .NE. 0) THEN
            WRITE(NOUT,1005) ISET,IABC
 1005       FORMAT(/'  THE TM MATRIX FOR SET ',I5,'  DEGREE ',
     *      I5)
            CALL PRINT(SS,NUMIJ,NORBS,NOUT)
            WRITE(NOUT,1006) IABC,IJT,JT1C(IJT),IS
 1006       FORMAT(/'  TM FOR DEGREE ',I5,'  IN JT1C ',I5/
     1      '  WRITTEN TO WORD',I5,'  NEXT WORD IS ',I8)
          END IF
 108  CONTINUE
      RETURN
      END
      SUBROUTINE HAMAT(HM,TM,IOFF,JT1C,IOUT,DROL,HA11,HA22,HA12)
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INTEGER IOFF(NUMIJ),JT1C(1),IOUT(NORBS),DROL(NORBS)
      REAL*8 TM(NUMIJ,NBSET),HM(NUMIJ),HA11(NDF),HA22(NDF),HA12(NDF)
      REAL*8 H11,H12,H22
      COMMON /TAPES/ NOUT,ICHK,IT30,IT42,IT47,IT52,IT58,IT94,IT96,IT98
      COMMON /DIMSG/ ISYMRB,NUMIJ,NBF,NMAX,NBFORB,NSYM,NDF,NORBS
      COMMON /POINT/ FOCC(5),IPOINT(5),JPOINT(5),NSORB(5)
      COMMON /FUNCS/ IOCC,JOCC,KOCC,NTYPES,NBSET,NAT
      COMMON /IEXT/ IPRINT,IGRP,ICIDIP
      COMMON /CALCJ/ ICALT,IDERT,ICIT
      COMMON /OCCS/ NSPE,NSA,NSB,NALP,NOP,NDOC,LFERM,NUOC,IJIND,IJIND3
      COMMON /TYPES/ NTYDOC,NTYUOC
      COMMON /TCSCF/ DERC1,DERC2,CI1,CI2,H11,H12,H22,ONE,ITCSCF
      DATA A0,A1S2,A2,A4 / 0.0D+00 , 0.5D+00 , 2.0D+00 , 4.0D+00 /
    1 FORMAT(//,2X,' HA MATRICES'/)
    2 FORMAT(//,2X,I5,5F15.8)
    3 FORMAT(//,2X,' HA11 MATRIX'/)
    4 FORMAT(//,2X,' HA22 MATRIX'/)
    5 FORMAT(//,2X,' HA12 MATRIX'/)
    6 FORMAT(//,2X,' D1N MATRIX'/)
    7 FORMAT(//,2X,' D1E MATRIX'/)
    8 FORMAT(//,2X,' D1W MATRIX'/)
    9 FORMAT(//,2X,' EGRAD MATRIX'/)
C
      IF(DABS(CI1).GT.DABS(CI2)) THEN
C
      IHA = JT1C(NDF+1)
      IEA = 2*NDF + NBSET*NDF
      ISEA = JT1C(IEA) + INTOWP(NUMIJ)
      DO 115 IDF=1,NDF
      IEA = IEA + 1
C
CTJL  WRITE(*,*)' IN HAMAT READING HM AT ',IHA
      CALL WREADW(IT94,HM,INTOWP(NUMIJ),IHA,IHA)
CTJL  CALL PRINT(HM,NUMIJ,NORBS,NOUT)
C
      DO 315 IBSET = 1,NBSET
      ITA = 2*NDF + (IDF-1)*NBSET + IBSET
      CALL WREADW(IT94,TM(1,IBSET),INTOWP(NUMIJ),JT1C(ITA),JUNK)
CTJL  WRITE(*,*)' TM MATRIX IN FAMAT2 FOR DEGREE ',IDF,' AND SET ',IBSET
CTJL  CALL PRINT(TM(1,IBSET),NUMIJ,NORBS,NOUT)
  315 CONTINUE
C
      ELEC1 = A0
      DO 110 I = LFERM,NDOC
      II = IOFF(I+1)
      ELEC1 = ELEC1 + HM(II)*A2
  110 CONTINUE
      ELEC2 = A0
      DO 111 I = LFERM,NDOC
      II = IOFF(I+1)
      ELEC2 = ELEC2 + TM(II,1)*A2 - TM(II,2)
  111 CONTINUE
C
      M = NSB
      N = NSA
      MM = IOFF(M+1)
      NN = IOFF(N+1)
      AH11 = HM(MM)*A2 + TM(MM,3)
      AH22 = HM(NN)*A2 + TM(NN,5)
      AH12 = TM(MM,6)
      DO 112 I = LFERM,NDOC
      II = IOFF(I+1)
      AH11 = AH11 + TM(II,3)*A4 - TM(II,4)*A2
      AH22 = AH22 + TM(II,5)*A4 - TM(II,6)*A2
  112 CONTINUE
      HA11(IDF) = ELEC1 + ELEC2 + AH11
      HA22(IDF) = ELEC1 + ELEC2 + AH22
      HA12(IDF) = AH12
CTJL  IF(IPRNT.LE.3) GO TO 115
CTJL  WRITE(6,2) IDF,ELEC1,ELEC2,AH11,AH22,AH12
  115 CONTINUE
C
C     IF(IPRNT.LE.2) GO TO 201
CTJL  WRITE(6,3)
C     CALL MATOUT(HA11,3,NAT,3,NAT,6)
C     WRITE(6,4)
C     CALL MATOUT(HA22,3,NAT,3,NAT,6)
C     WRITE(6,5)
CTJL  CALL MATOUT(HA12,3,NAT,3,NAT,6)
C
      ELSE
C
      IHA = JT1C(NDF+1)
      IEA = 2*NDF + NBSET*NDF
      ISEA = JT1C(IEA) + INTOWP(NUMIJ)
      DO 215 IDF=1,NDF
      IEA = IEA + 1
C
CTJL  WRITE(*,*)' IN HAMAT READING HM AT ',IHA
      CALL WREADW(IT94,HM,INTOWP(NUMIJ),IHA,IHA)
CTJL  CALL PRINT(HM,NUMIJ,NORBS,NOUT)
C
      DO 415 IBSET = 1,NBSET
      ITA = 2*NDF + (IDF-1)*NBSET + IBSET
      CALL WREADW(IT94,TM(1,IBSET),INTOWP(NUMIJ),JT1C(ITA),JUNK)
CTJL  WRITE(*,*)' TM MATRIX IN FAMAT2 FOR DEGREE ',IDF,' AND SET ',IBSET
CTJL  CALL PRINT(TM(1,IBSET),NUMIJ,NORBS,NOUT)
  415 CONTINUE
C
      ELEC1 = A0
      DO 210 I = LFERM,NDOC
      II = IOFF(I+1)
      ELEC1 = ELEC1 + HM(II)*A2
  210 CONTINUE
      ELEC2 = A0
      DO 211 I = LFERM,NDOC
      II = IOFF(I+1)
      ELEC2 = ELEC2 + TM(II,1)*A2 - TM(II,2)
  211 CONTINUE
C
      N = NSB
      M = NSA
      MM = IOFF(M+1)
      NN = IOFF(N+1)
      AH11 = HM(MM)*A2 + TM(MM,3)
      AH22 = HM(NN)*A2 + TM(NN,5)
      AH12 = TM(MM,6)
      DO 212 I = LFERM,NDOC
      II = IOFF(I+1)
      AH11 = AH11 + TM(II,3)*A4 - TM(II,4)*A2
      AH22 = AH22 + TM(II,5)*A4 - TM(II,6)*A2
  212 CONTINUE
      HA22(IDF) = ELEC1 + ELEC2 + AH11
      HA11(IDF) = ELEC1 + ELEC2 + AH22
      HA12(IDF) = AH12
CTJL  IF(IPRNT.LE.3) GO TO 215
CTJL  WRITE(6,2) IDF,ELEC1,ELEC2,AH11,AH22,AH12
  215 CONTINUE
C
C     IF(IPRNT.LE.2) GO TO 201
CTJL  WRITE(6,3)
C     CALL MATOUT(HA11,3,NAT,3,NAT,6)
C     WRITE(6,4)
C     CALL MATOUT(HA22,3,NAT,3,NAT,6)
C     WRITE(6,5)
CTJL  CALL MATOUT(HA12,3,NAT,3,NAT,6)
      END IF
C
C   CALCULATE SCF DERIVATIVES FOR A TEST
C 201 C1SQ = FOCC(2)*A1S2
C     C2SQ = FOCC(3)*A1S2
C     MN = M + IOFF(N)
C     C12P = BETA(MN)*A2
C     C1 = DSQRT(C1SQ)
C     C2 = DSQRT(C2SQ)
C     IF(BETA(MN).LT.ZERO) C2=-C2
C     DO 120 IABC=1,N3N
C     D1E(IABC) = H11A(IABC)*C1SQ + H22A(IABC)*C2SQ + H12A(IABC)*C12P
C     D1T(IABC) = D1E(IABC) + D1W(IABC)
C     E1T(IABC) = D1T(IABC)
C 120 CONTINUE
C     IF(IPRNT.LE.2) GO TO 202
C***  WRITE(6,6)
C***  CALL MATOUT(D1N,3,NATOMS,3,NATOMS,6)
C     WRITE(6,7)
C     CALL MATOUT(D1E,3,NATOMS,3,NATOMS,6)
C     WRITE(6,8)
C     CALL MATOUT(D1W,3,NATOMS,3,NATOMS,6)
C     WRITE(6,9)
C     CALL MATOUT(D1T,3,NATOMS,3,NATOMS,6)
C
C 202 CONTINUE
C     CALL SREW(ITAP44)
C     CALL SREW(JTAPE1)
      RETURN
      END
