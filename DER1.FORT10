C***********************************************************************
c Moved to PSI distribution disk on 020289 - clj.
C***********************************************************************
C* LAST UPDATED NOVEMBER 11, 1987 BY RICHARD REMINGTON                 *
C* VARIABLE DLIM CHANGED FROM 1.0E-10 TO 1.0E-16 FOR BETTER PRECISION; *
C* ALSO PUT DLIM IN COMMON TOLER                                       *
C***********************************************************************
C* LAST UPDATED ON APRIL 27, 1985 BY YUKIO YAMAGUCHI                   *
C***********************************************************************
      SUBROUTINE JK2DER(DTYP,DT,D1T,D2T,BMAT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DTYP(NBATRI,NTYPEP),DT(NBATRI),D1T(3,NATOM),D2T(N3N,N3N)
      DIMENSION BMAT(NBATRI,3,NATOM,NTREAD)
      DIMENSION M0(8),M1(8),M2(8),M3(8)
      DIMENSION IX(10),IY(10),IZ(10),LX(20),LY(20),LZ(20),
     1          KX(10),KY(10),KZ(10),JX(10),JY(10),JZ(10)
      LOGICAL IANDJ,KANDL,SAME,EQUAL,DFOCK1,DFOCK2,IDOUBL
      COMMON/ABDEN/ABDENS(1296)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/DERIN/DERINT(1296,9)
      COMMON/DIJPR/PIJ(100),DIJ(100),XIJ(100),YIJ(100),ZIJ(100),
     1             AIJ(100),BIJ(100),ABIJ(100),TIJ(100)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D1INT/DD1(9)
      COMMON/D2INT/DD2(45)
      COMMON/EXPNT/AIT,BJT,CKT,AIBJT,CKDLT,RHOTSQ,AI,BJ,CK,PPIJ,PPKL
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/ZS(200),CS(200)
      COMMON/GAUSB/KNUC(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/GAUSE/MXSPDF(50),MINSH(3,50),MAXSH(3,50)
      COMMON/GEOIN/XAB,YAB,ZAB,XCD,YCD,ZCD,PXX,PYY,PZZ
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/NDERS/NDERIV
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/POSIX/IPOS(100),JPOS(100),KPOS(100),LPOS(100),IMUL(100)
      COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/ROOTS/NONZER
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NIJMAX,NKLMAX,IOFFST
      COMMON/SHELL/ISH,JSH,KSH,LSH
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      DATA ZERO,HALF,ONE,TEN / 0.0D+00 , 0.5D+00 , 1.0D+00 , 10.0D+00 /
      DATA PI252 / 34.986836655250D+00 /
      DATA ITOL / 20 /
      DATA KX / 1,65, 1, 1,129, 1, 1,65,65, 1/
      DATA KY / 1, 1,65, 1, 1,129, 1,65, 1,65/
      DATA KZ / 1, 1, 1,65, 1, 1,129, 1,65,65/
      DATA JX / 0,16, 0, 0,32, 0, 0,16,16, 0/
      DATA JY / 0, 0,16, 0, 0,32, 0,16, 0,16/
      DATA JZ / 0, 0, 0,16, 0, 0,32, 0,16,16/
      DATA LX / 0, 4, 0, 0, 8, 0, 0, 4, 4, 0
     1,        12, 0, 0, 8, 8, 4, 0, 4, 0, 4/
      DATA LY / 0, 0, 4, 0, 0, 8, 0, 4, 0, 4
     1,        0, 12, 0, 4, 0, 8, 8, 0, 4, 4/
      DATA LZ / 0, 0, 0, 4, 0, 0, 8, 0, 4, 4
     1,        0, 0, 12, 0, 4, 0, 4, 8, 8, 4/
      DATA IX / 0, 1, 0, 0, 2, 0, 0, 1, 1, 0/
      DATA IY / 0, 0, 1, 0, 0, 2, 0, 1, 0, 1/
      DATA IZ / 0, 0, 0, 1, 0, 0, 2, 0, 1, 1/
C
C   CALCULATE TWO ELECTRON CONTRIBUTIONS TO THE DERIVATIVES
C
      TOL=ITOL*2.30258D+00
C
      ICOUNT=0
      DFOCK1=IDFOCK.GE.1
      DFOCK2=IDFOCK.GE.2
C
      DO 101 I=1,NATOM
      DO 101 J=1,3
      D1T(J,I)=ZERO
  101 CONTINUE
      IF(DFOCK1) THEN
      DO 102 I=1,NBATRI
      DO 102 J=1,3
      DO 102 K=1,NATOM
      DO 102 L=1,NTYPEP
      BMAT(I,J,K,L)=ZERO
  102 CONTINUE
      END IF
      IF(NDERIV.GE.2) THEN
      DO 103 I=1,N3N
      DO 103 J=1,N3N
      D2T(I,J)=ZERO
  103 CONTINUE
      END IF
C
C%%%%%%%%%%%%%%%%%%%%%
C%%%%%---ATOMS---%%%%%
C%%%%%%%%%%%%%%%%%%%%%
C
      DO 9000 IAT=1,NATOM
      DO 8000 JAT=1,IAT
      DO 7000 KAT=1,IAT
      DO 6000 LAT=1,KAT
C
C$$$$$$$$$$$$$$$$$$$$$$$$$$
C$$$$$ANGULAR MOMENTUM$$$$$
C$$$$$$$$$$$$$$$$$$$$$$$$$$
C
      DO 5000 ISPDF=1,MXSPDF(IAT)
      JMXSPD=MXSPDF(JAT)
      IF(IAT.EQ.JAT) JMXSPD=ISPDF
      DO 4000 JSPDF=1,JMXSPD
      KMXSPD=MXSPDF(KAT)
      IF(IAT.EQ.KAT) KMXSPD=ISPDF
      DO 3000 KSPDF=1,KMXSPD
      LMXSPD=MXSPDF(LAT)
      IF(KAT.EQ.LAT) LMXSPD=KSPDF
      DO 2000 LSPDF=1,LMXSPD
C
C################
C#####ISHELL#####
C################
C
      DO 1000 II=MINSH(ISPDF,IAT),MAXSH(ISPDF,IAT)
C
      DO 111 IT=1,NISO
  111 INDOUT(IT)=ISO(II,IT)
      CALL ISOOUT
      DO 112 IT=1,NT
      ID=INDIN(IT)
      IF(ID.GT.II) GO TO 1000
      M0(IT)=ID
  112 CONTINUE
C
C################
C#####JSHELL#####
C################
C
      MAXJJ=MAXSH(JSPDF,JAT)
      IF(MAXJJ.GT.II) MAXJJ=II
      DO 900 JJ=MINSH(JSPDF,JAT),MAXJJ
C
      DO 113 IT=1,NISO
  113 INDOUT(IT)=ISO(JJ,IT)
      CALL ISOOUT
      DO 114 IT=1,NT
      IDT=M0(IT)
      JDT=INDIN(IT)
      IF(JDT.GT.II) GO TO 900
      ID=MAX0(IDT,JDT)
      JD=MIN0(IDT,JDT)
      IF(ID.EQ.II.AND.JD.GT.JJ) GO TO 900
      M1(IT)=ID
      M2(IT)=JD
  114 CONTINUE
C
C################
C#####KSHELL#####
C################
C
      MAXKK=MAXSH(KSPDF,KAT)
      IF(MAXKK.GT.II) MAXKK=II
      DO 800 KK=MINSH(KSPDF,KAT),MAXKK
C
      DO 115 IT=1,NISO
  115 INDOUT(IT)=ISO(KK,IT)
      CALL ISOOUT
      DO 116 IT=1,NT
      KD=INDIN(IT)
      IF(KD.GT.II) GO TO 800
      M3(IT)=KD
  116 CONTINUE
C
C################
C#####LSHELL#####
C################
C
      MAXLL=MAXSH(LSPDF,LAT)
      IF(MAXLL.GT.KK) MAXLL=KK
      IF(II.EQ.KK.AND.MAXLL.GT.JJ) MAXLL=JJ
      DO 700 LL=MINSH(LSPDF,LAT),MAXLL
C
      DO 117 IT=1,NISO
  117 INDOUT(IT)=ISO(LL,IT)
      CALL ISOOUT
      N4=0
      DO 118 IT=1,NT
      LDT=INDIN(IT)
      IF(LDT.GT.II) GO TO 700
      KDT=M3(IT)
      KD=MAX0(KDT,LDT)
      LD=MIN0(KDT,LDT)
      ID=M1(IT)
      JD=M2(IT)
      IF(ID.NE.II.AND.KD.NE.II) GO TO 118
      IF(KD.LT.ID) GO TO 201
      IF(KD.EQ.ID.AND.LD.LE.JD) GO TO 201
      ND=ID
      ID=KD
      KD=ND
      ND=JD
      JD=LD
      LD=ND
  201 IF(JD.LT.JJ) GO TO 118
      IF(JD.GT.JJ) GO TO 700
      IF(KD.LT.KK) GO TO 118
      IF(KD.GT.KK) GO TO 700
      IF(LD.LT.LL) GO TO 118
      IF(LD.GT.LL) GO TO 700
      N4=N4+1
  118 CONTINUE
C
      Q4=DFLOAT(NT)/DFLOAT(N4)
      CALL REDUN2(II,JJ,KK,LL,Q4,KNUC)
      IF(NPASS.EQ.0) GO TO 700
C
      IANDJ=ISH.EQ.JSH
C
      IATOM=KNUC(ISH)
      AX=C(1,IATOM)
      AY=C(2,IATOM)
      AZ=C(3,IATOM)
      IGMIN=KSTART(ISH)
      IGMAX=IGMIN+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)
C
      JATOM=KNUC(JSH)
      BX=C(1,JATOM)
      BY=C(2,JATOM)
      BZ=C(3,JATOM)
      JGMIN=KSTART(JSH)
      JGMAX=JGMIN+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)
C
      EQUAL=IATOM.EQ.JATOM
C
      MIJ=0
      JMAX=MAXJ
      III=-1
      DO 122 I=MINI,MAXI
      III=III+1
      JJJ=-1
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
C***  IF(IANDJ) JMAX=I
      DO 121 J=MINJ,JMAX
      JJJ=JJJ+1
      MIJ=MIJ+1
      NFAC=1
      IF(IANDJ.AND.I.EQ.J) NFAC=2
      IMUL(MIJ)=NFAC
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IPOS(MIJ)=LOCI+III
      JPOS(MIJ)=LOCJ+JJJ
  121 CONTINUE
  122 CONTINUE
C
      XAB=AX-BX
      YAB=AY-BY
      ZAB=AZ-BZ
      RAB=XAB*XAB+YAB*YAB+ZAB*ZAB
C
      NIJ=0
      DO 124 IG=IGMIN,IGMAX
      CSI=CS(IG)
      AI=ZS(IG)
      AXI=AI*AX
      AYI=AI*AY
      AZI=AI*AZ
C***  IF(IANDJ) JGMAX=IG
      DO 123 JG=JGMIN,JGMAX
      CSJ=CS(JG)
      BJ=ZS(JG)
      BXJ=BJ*BX
      BYJ=BJ*BY
      BZJ=BJ*BZ
      PPIJ=AI+BJ
      AXB=AI*BJ
      TTIJ=ONE/PPIJ
      TMPIJ=(AXB*RAB)*TTIJ
      IF(TMPIJ.GT.TOL) GO TO 123
      NIJ=NIJ+1
      AIJ(NIJ)=AI
      BIJ(NIJ)=BJ
      ABIJ(NIJ)=AXB
      PIJ(NIJ)=PPIJ
      TIJ(NIJ)=TTIJ
      PXIJ=(AXI+BXJ)*TTIJ
      PYIJ=(AYI+BYJ)*TTIJ
      PZIJ=(AZI+BZJ)*TTIJ
      XIJ(NIJ)=PXIJ
      YIJ(NIJ)=PYIJ
      ZIJ(NIJ)=PZIJ
      DD=CSI*CSJ*TTIJ*DEXP(-TMPIJ)*PI252
C***  IF(IANDJ.AND.IG.NE.JG) THEN
C***  DIJ(NIJ)=DD+DD
C***  ELSE
      DIJ(NIJ)=DD
C***  END IF
  123 CONTINUE
  124 CONTINUE
C
      IF(NIJ.EQ.0) GO TO 700
C
      KANDL=KSH.EQ.LSH
C***  SAME=ISH.EQ.KSH.AND.JSH.EQ.LSH
C
      KATOM=KNUC(KSH)
      CX=C(1,KATOM)
      CY=C(2,KATOM)
      CZ=C(3,KATOM)
      KGMIN=KSTART(KSH)
      KGMAX=KGMIN+KNG(KSH)-1
      LKT=KTYPE(KSH)
      MINK=KMIN(KSH)
      MAXK=KMAX(KSH)
      LOCK=KLOC(KSH)
C
      LATOM=KNUC(LSH)
      DX=C(1,LATOM)
      DY=C(2,LATOM)
      DZ=C(3,LATOM)
      LGMIN=KSTART(LSH)
      LGMAX=LGMIN+KNG(LSH)-1
      LLT=KTYPE(LSH)
      MINL=KMIN(LSH)
      MAXL=KMAX(LSH)
      LOCL=KLOC(LSH)
C
      MKL=0
      LMAX=MAXL
      KKK=-1
      DO 126 K=MINK,MAXK
      KKK=KKK+1
      LLL=-1
      NX=KX(K)
      NY=KY(K)
      NZ=KZ(K)
      IF(KANDL) LMAX=K
      DO 125 L=MINL,LMAX
      LLL=LLL+1
      MKL=MKL+1
      KLX(MKL)=NX+LX(L)
      KLY(MKL)=NY+LY(L)
      KLZ(MKL)=NZ+LZ(L)
      KPOS(MKL)=LOCK+KKK
      LPOS(MKL)=LOCL+LLL
  125 CONTINUE
  126 CONTINUE
C
      XCD=CX-DX
      YCD=CY-DY
      ZCD=CZ-DZ
      RCD=XCD*XCD+YCD*YCD+ZCD*ZCD
C
C***  MAXIND=MKL
C***  DO 128 I=1,MIJ
C***  IF(SAME) MAXIND=I
C***  ISAME(I)=MAXIND
C*128 CONTINUE
C
      NIMAX=LIT-1
      NJMAX=LJT-1
      NKMAX=LKT-1
      NLMAX=LLT-1
      NIJMAX=NIMAX+NJMAX
      NKLMAX=NKMAX+NLMAX
C
C     ----- CALCULATE NUMBER OF ROOTS FOR DERIVATIVES -----
C
      NROOTS=(LIT+LJT+LKT+LLT-2+NDERIV)/2
C
C     ----- FORM PRODUCTS OF DENSITY MATRIX ELEMENTS -----
C
      CALL DAB(DTYP,DT,Q4)
      IF(Q4.EQ.ZERO) GO TO 700
C
      IF(IDFOCK.GE.1) THEN
      IF(NPASS.EQ.1) THEN
      MAXD=9
      ELSE IF(NPASS.EQ.4) THEN
      MAXD=3
      ELSE
      MAXD=6
      END IF
      MIJKL=MIJ*MKL
      DO 130 I=1,MIJKL
      DO 130 J=1,MAXD
      DERINT(I,J)=ZERO
  130 CONTINUE
      END IF
      DO 131 I=1,9
  131 DD1(I)=ZERO
      IF(NDERIV.GE.2) THEN
      DO 132 I=1,45
  132 DD2(I)=ZERO
      END IF
C
C========================
C===K AND L PRIMITIVES===
C========================
C
      MAXLG=LGMAX
      DO 600 KG=KGMIN,KGMAX
      CSK=CS(KG)
      CK=ZS(KG)
      CXK=CK*CX
      CYK=CK*CY
      CZK=CK*CZ
C
      IF(KANDL) MAXLG=KG
      DO 500 LG=LGMIN,MAXLG
      CSL=CS(LG)
      DL=ZS(LG)
      DXL=DL*DX
      DYL=DL*DY
      DZL=DL*DZ
      PPKL=CK+DL
      CXD=CK*DL
      TTKL=ONE/PPKL
      CKT=CK*TTKL
      CKDLT=CXD*TTKL
      TMPKL=(CK*DL*RCD)*TTKL
      IF(TMPKL.GT.TOL) GO TO 500
      PXKL=(CXK+DXL)*TTKL
      PYKL=(CYK+DYL)*TTKL
      PZKL=(CZK+DZL)*TTKL
      PAXKL=(PXKL-AX)*PPKL
      PAYKL=(PYKL-AY)*PPKL
      PAZKL=(PZKL-AZ)*PPKL
      PCXKL=(PXKL-CX)*PPKL
      PCYKL=(PYKL-CY)*PPKL
      PCZKL=(PZKL-CZ)*PPKL
      DD=CSK*CSL*TTKL*DEXP(-TMPKL)
      IF(KANDL.AND.KG.NE.LG) THEN
      DKL=DD+DD
      ELSE
      DKL=DD
      END IF
C
C============================
C===PAIR OF I,J PRIMITIVES===
C============================
C
      DO 400 IJG=1,NIJ
      AI=AIJ(IJG)
      BJ=BIJ(IJG)
      AXB=ABIJ(IJG)
      PPIJ=PIJ(IJG)
      TTIJ=TIJ(IJG)
      AIT=AI*TTIJ
      BJT=BJ*TTIJ
      AIBJT=AXB*TTIJ
      PPP=PPIJ*PPKL
      PSUM=PPIJ+PPKL
      PPT=ONE/PSUM
      PPQ=DSQRT(PPT)
      DENS=DIJ(IJG)*DKL*PPQ
      RHO=PPP*PPT
      PXIJ=XIJ(IJG)
      PYIJ=YIJ(IJG)
      PZIJ=ZIJ(IJG)
      PXX=PXIJ-PXKL
      PYY=PYIJ-PYKL
      PZZ=PZIJ-PZKL
      XX=RHO*(PXX*PXX+PYY*PYY+PZZ*PZZ)
      PAXIJ=(PXIJ-AX)*PPIJ
      PAYIJ=(PYIJ-AY)*PPIJ
      PAZIJ=(PZIJ-AZ)*PPIJ
      PCXIJ=(PXIJ-CX)*PPIJ
      PCYIJ=(PYIJ-CY)*PPIJ
      PCZIJ=(PZIJ-CZ)*PPIJ
      C1X=PCXIJ+PCXKL
      C2X=PCXKL*PPIJ
      C3X=PAXIJ+PAXKL
      C4X=PAXIJ*PPKL
      C1Y=PCYIJ+PCYKL
      C2Y=PCYKL*PPIJ
      C3Y=PAYIJ+PAYKL
      C4Y=PAYIJ*PPKL
      C1Z=PCZIJ+PCZKL
      C2Z=PCZKL*PPIJ
      C3Z=PAZIJ+PAZKL
      C4Z=PAZIJ*PPKL
C
C     ----- ROOTS AND WEIGHTS FOR QUADRATURE
C
      IF(NROOTS.LE.3) THEN
      CALL RT123
      ELSE IF(NROOTS.EQ.4) THEN
      CALL ROOT4
      ELSE IF(NROOTS.EQ.5) THEN
      CALL ROOT5
      ELSE IF(NROOTS.GT.5.AND.NROOTS.LE.9) THEN
      CALL DROOT
      ELSE
      STOP ' WEIRD NUMBER OF ROOTS'
      END IF
      IOFFST=0
      NONZER=0
C
C:::::::::::::::::::::
C:::::---ROOTS---:::::
C:::::::::::::::::::::
C
      DO 300 IROOT=1,NROOTS
      U2=U(IROOT)*RHO
      RHOTSQ=U2*RHO/(RHO+U2)
      F00=DENS*WT(IROOT)
      NONZER=NONZER+1
      DUM=PPP+U2*PSUM
      DUMT=ONE/DUM
      DUMTH=DUMT*HALF
      BP01=(PPIJ+U2)*DUMTH
      B00=U2*DUMTH
      B10=(PPKL+U2)*DUMTH
      XCP00=(U2*C1X+C2X)*DUMT
      XC00 =(U2*C3X+C4X)*DUMT
      YCP00=(U2*C1Y+C2Y)*DUMT
      YC00 =(U2*C3Y+C4Y)*DUMT
      ZCP00=(U2*C1Z+C2Z)*DUMT
      ZC00 =(U2*C3Z+C4Z)*DUMT
C
      IF(NDERIV.GE.2) GO TO 220
C   FOR FIRST DERIVATIVES
      GO TO (211,212,213,214),NPASS
      STOP ' WEIRD NUMBER OF NPASS'
  211 CONTINUE
      CALL XYZIJK
      GO TO 215
  212 CONTINUE
      CALL XYZIJ
      GO TO 215
  213 CONTINUE
      CALL XYZIK
      GO TO 215
  214 CONTINUE
      CALL XYZI
  215 CONTINUE
      IOFFST=IOFFST+256
      GO TO 300
C
C   FOR SECOND DERIVATIVES
  220 CONTINUE
      GO TO (221,222,223,224),NPASS
      STOP ' WEIRD NUMBER OF NPASS'
  221 CONTINUE
      CALL TWOIJK
      CALL MK2IJK
      GO TO 225
  222 CONTINUE
      CALL TWOIJ
      CALL MK2IJ
      GO TO 225
  223 CONTINUE
      CALL TWOIK
      CALL MK2IK
      GO TO 225
  224 CONTINUE
      CALL TWOI
      CALL MK2I
  225 CONTINUE
C
  300 CONTINUE
C
C::::::::::::::::::::::::::::
C:::::---END OF ROOTS---:::::
C::::::::::::::::::::::::::::
C
      IF(NDERIV.GE.2) GO TO 400
      IF(NONZER.EQ.0) GO TO 400
      IF(IDFOCK.NE.0) GO TO 240
C
C  TWO-ELECTRON FIRST DERIVATIVES ONLY
      GO TO (231,232,233,234),NPASS
      STOP ' WEIRD NUMBER OF PASS'
  231 CONTINUE
      CALL FRMIJK
      GO TO 400
  232 CONTINUE
      CALL FRMIJ
      GO TO 400
  233 CONTINUE
      CALL FRMIK
      GO TO 400
  234 CONTINUE
      CALL FRMI
      GO TO 400
C
C   TWO-ELECTRON FIRST DERIVATIVES AND DERIVATIVE FOCK
  240 CONTINUE
      GO TO (241,242,243,244),NPASS
  241 CONTINUE
      CALL MAKIJK
      GO TO 400
  242 CONTINUE
      CALL MAKIJ
      GO TO 400
  243 CONTINUE
      CALL MAKIK
      GO TO 400
  244 CONTINUE
      CALL MAKI
  400 CONTINUE
  500 CONTINUE
  600 CONTINUE
C
      IF(IDFOCK.NE.0) THEN
      CALL MAKGRD(MIJKL)
      CALL MAKEB(BMAT,DTYP,DT,Q4)
      END IF
C***  ICOUNT=ICOUNT+1
      CALL FORMEG(D1T)
      IF(NDERIV.GE.2) THEN
      CALL FORME2(D2T)
      END IF
C
C===========================
C=====END OF PRIMITIVES=====
C===========================
C
  700 CONTINUE
  800 CONTINUE
  900 CONTINUE
 1000 CONTINUE
C
C#######################
C#####END OF SHELLS#####
C#######################
C
 2000 CONTINUE
 3000 CONTINUE
 4000 CONTINUE
 5000 CONTINUE
C
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C$$$$$END OF ANGULAR MOMENTUM$$$$$
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C
 6000 CONTINUE
 7000 CONTINUE
 8000 CONTINUE
 9000 CONTINUE
C
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C%%%%%---END OF ATOMS---%%%%%
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C
      IF(DFOCK1) THEN
      DO 140 ITYP=1,NTREAD
      DO 140 IABC=1,NATOM
      DO 140 IXYZ=1,3
      IJ=0
      DO 139 I=1,NBASIS
      DO 139 J=1,I
      IJ=IJ+1
      IF(I.EQ.J) GO TO 139
      BMAT(IJ,IXYZ,IABC,ITYP)=BMAT(IJ,IXYZ,IABC,ITYP)*HALF
  139 CONTINUE
CC    WRITE(6,*) ' ITYP,IABC,IXYZ ',ITYP,IABC,IXYZ
CC    CALL PRINT(BMAT(1,IXYZ,IABC,ITYP),NBATRI,NBASIS,6)
  140 CONTINUE
      END IF
C
      RETURN
      END
      SUBROUTINE REDUN2(II,JJ,KK,LL,Q4,KATOM)
C     ----- THIS VERSION HALVES Q4 TO ACCOUNT FOR DUPLICATION -----
C                     OF [II,JJ] OR [IJ,IJ]
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION KATOM(200)
      LOGICAL IANDJ,IANDK,IANDL,JANDK,JANDL,KANDL
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/SHELL/ISH,JSH,KSH,LSH
      COMMON/TOLER/DLIM
      DATA HALF / 0.5D+00 /
C
      DO 101 I=1,4
  101 NATMS(I)=0
C
      IAT=KATOM(II)
      JAT=KATOM(JJ)
      KAT=KATOM(KK)
      LAT=KATOM(LL)
      IANDJ=IAT.EQ.JAT
      IANDK=IAT.EQ.KAT
      IANDL=IAT.EQ.LAT
      JANDK=JAT.EQ.KAT
      JANDL=JAT.EQ.LAT
      KANDL=KAT.EQ.LAT
      IF(.NOT.IANDJ) GO TO 300
      IF(.NOT.IANDK) GO TO 200
      IF(.NOT.IANDL) GO TO 100
C
C     ----- IAT = JAT = KAT = LAT -----
C
      NPASS=0
      GO TO 1000
C
C     ----- IAT = JAT = KAT _ LAT ----
C
  100 CONTINUE
      NATMS(1)=LAT
      NATMS(2)=IAT
      ISH=LL
      JSH=KK
      KSH=JJ
      LSH=II
      NPASS=4
      GO TO 1000
C
C     ----- IAT = JAT _ KAT = LAT ----
C
  200 IF(.NOT.KANDL) GO TO 250
      IF(KK.EQ.LL) Q4=Q4*HALF
      NATMS(1)=KAT
      NATMS(2)=LAT
      NATMS(3)=IAT
      ISH=KK
      JSH=LL
      KSH=II
      LSH=JJ
      NPASS=2
      GO TO 1000
C
C     ----- IAT = JAT _ KAT _ LAT -----
C
  250 CONTINUE
      NATMS(1)=KAT
      NATMS(2)=LAT
      NATMS(3)=IAT
      ISH=KK
      JSH=LL
      KSH=II
      LSH=JJ
      NPASS=2
      GO TO 1000
C
C     ----- IAT = KAT = LAT _ JAT -----
C
  300 IF(.NOT.IANDK) GO TO 500
      IF(.NOT.IANDL) GO TO 400
      NATMS(1)=JAT
      NATMS(2)=IAT
      ISH=JJ
      JSH=II
      KSH=KK
      LSH=LL
      NPASS=4
      GO TO 1000
C
C     ----- IAT = KAT _ JAT = LAT -----
C     ----- IAT = KAT _ JAT _ LAT -----
C
  400 CONTINUE
      IF(II.EQ.KK.AND.JJ.EQ.LL) Q4=Q4*HALF
      NATMS(1)=JAT
      NATMS(2)=LAT
      NATMS(3)=IAT
      ISH=JJ
      JSH=II
      KSH=LL
      LSH=KK
      NPASS=3
      GO TO 1000
C
C     ----- JAT = KAT = LAT _ IAT -----
C
  500 IF(.NOT.JANDK) GO TO 700
      IF(.NOT.JANDL) GO TO 600
      NATMS(1)=IAT
      NATMS(2)=JAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=4
      GO TO 1000
C
C     ----- JAT = KAT _ IAT _ LAT -----
C
  600 CONTINUE
      NATMS(1)=IAT
      NATMS(2)=LAT
      NATMS(3)=JAT
      ISH=II
      JSH=JJ
      KSH=LL
      LSH=KK
      NPASS=3
      GO TO 1000
C
C     ----- JAT = LAT _ IAT _ KAT -----
C
  700 IF(.NOT.JANDL) GO TO 800
      NATMS(1)=IAT
      NATMS(2)=KAT
      NATMS(3)=JAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=3
      GO TO 1000
C
C     ----- KAT = LAT _ IAT _ JAT ----
C
  800 IF(.NOT.KANDL) GO TO 900
      NATMS(1)=IAT
      NATMS(2)=JAT
      NATMS(3)=KAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=2
      GO TO 1000
C
C     ----- IAT _ JAT _ KAT _ LAT ----
C
  900 CONTINUE
      NATMS(1)=IAT
      NATMS(2)=JAT
      NATMS(3)=KAT
      NATMS(4)=LAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=1
C
C     -----
C
 1000 CONTINUE
      RETURN
      END
      SUBROUTINE DAB(D,DT,Q4)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D(NBATRI,NTYPEP),DT(NBATRI)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COUPL/ALP(5,5),BET(5,5)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA4/MMIJ,MMKL,ISAME(100)
      COMMON/POSIX/IPOS(100),JPOS(100),KPOS(100),LPOS(100),IMUL(100)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TCSCF/SOCC1,SOCC2,SOCC12
      COMMON/TOLER/DLIM
      DATA ZERO,HALF,TWO,FOUR,EIGHT / 0.0D+00 , 0.5D+00, 2.0D+00 ,
     1                                4.0D+00 , 8.0D+00 /
C
      DMAX=ZERO
C
      NN=0
      DO 103 II=1,MMIJ
      IT=IPOS(II)
      JT=JPOS(II)
      NFAC=IMUL(II)
      DO 102 JJ=1,MMKL
      KT=KPOS(JJ)
      LT=LPOS(JJ)
      NN=NN+1
      IJT=IOFF(MAX0(IT,JT))+MIN0(IT,JT)
      KLT=IOFF(MAX0(KT,LT))+MIN0(KT,LT)
      IF(IJT.LT.KLT) GO TO 301
      I=MAX0(IT,JT)
      J=MIN0(IT,JT)
      K=MAX0(KT,LT)
      L=MIN0(KT,LT)
      GO TO 302
  301 CONTINUE
      I=MAX0(KT,LT)
      J=MIN0(KT,LT)
      K=MAX0(IT,JT)
      L=MIN0(IT,JT)
C
  302 CONTINUE
      MIJ=IOFF(MAX0(I,J))+MIN0(I,J)
      MKL=IOFF(MAX0(K,L))+MIN0(K,L)
      MIK=IOFF(MAX0(I,K))+MIN0(I,K)
      MJL=IOFF(MAX0(J,L))+MIN0(J,L)
      MIL=IOFF(MAX0(I,L))+MIN0(I,L)
      MJK=IOFF(MAX0(J,K))+MIN0(J,K)
C
      GO TO (201,202,203,204,204,205),ISTYPE
C
C     ----- CLOSED SHELL SINGLET -----
C
  201 CONTINUE
      DFAC=DT(MIJ)*DT(MKL)*FOUR-DT(MIK)*DT(MJL)-DT(MIL)*DT(MJK)
      GO TO 210
C
C     ----- HIGH-SPIN OPEN-SHELL -----
C
  202 CONTINUE
      DFAC=DT(MIJ)*DT(MKL)*FOUR-DT(MIK)*DT(MJL)-DT(MIL)*DT(MJK)
     1                         -D(MIK,2)*D(MJL,2)-D(MIL,2)*D(MJK,2)
      GO TO 210
C
C     ----- OPEN SHELL SINGLET -----
C
  203 CONTINUE
      DFAC=(DT(MIJ)*DT(MKL)-D(MIJ,2)* D(MKL,2)
     1 +    D(MIJ,3)*D(MKL,4)+D(MIJ,4)*D(MKL,3))*FOUR
     2 -    DT(MIK)*DT(MJL)-DT(MIL)*DT(MJK)
     3 +    D(MIK,2)*D(MJL,2)+D(MIL,2)*D(MJK,2)
     4 +    (D(MIK,3)*D(MJL,4)+D(MIK,4)*D(MJL,3)
     5 +    D(MIL,3)*D(MJK,4)+D(MIL,4)*D(MJK,3))*TWO
      GO TO 210
C
C     ----- GENERAL OPEN SHELL SCF -----
C
  204 CONTINUE
      DFAC1=ZERO
      DFAC2=ZERO
      DO 101 ITYP=1,NTYPES
      DO 101 JTYP=1,NTYPES
      DFAC1=DFAC1+D(MIJ,ITYP)*D(MKL,JTYP)*ALP(ITYP,JTYP)
      DFAC2=DFAC2+(D(MIK,ITYP)*D(MJL,JTYP)+D(MIL,ITYP)*D(MJK,JTYP))*
     1      BET(ITYP,JTYP)
  101 CONTINUE
      DFAC=DFAC1*TWO+DFAC2
      GO TO 210
C
C     ----- TWO-CONFIGURATION SCF (GVB) -----
C
  205 CONTINUE
       DFAC=(DT(MIJ)*DT(MKL)-D(MIJ,2)*D(MKL,2)
     1  +   D(MIJ,3)*D(MKL,3)*SOCC1+D(MIJ,4)*D(MKL,4)*SOCC2)*FOUR
     2                   -DT(MIK)* DT(MJL)- DT(MIL)* DT(MJK)
     3  +      D(MIK,2)*D(MJL,2)+D(MIL,2)*D(MJK,2)
     4  +    (D(MIK,3)*D(MJL,4)+D(MIK,4)*D(MJL,3)
     5  +     D(MIL,3)*D(MJK,4)+D(MIL,4)*D(MJK,3))*SOCC12
      GO TO 210
C
  210 CONTINUE
C
      IF(I.EQ.J) DFAC=DFAC*HALF
      IF(K.EQ.L) DFAC=DFAC*HALF
      DFAC=DFAC*Q4*DFLOAT(NFAC)
      IF(DABS(DFAC).GT.DMAX) DMAX=DABS(DFAC)
      ABDENS(NN)=DFAC
  102 CONTINUE
  103 CONTINUE
C
      IF(DMAX.LT.DLIM) Q4=ZERO
C
      RETURN
      END
      SUBROUTINE FORMEG(D1T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1T(3,NATOM)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/TOLER/DLIM
C
      IF(NPASS.EQ.1) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))+XJDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))+YJDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))+ZJDER
        D1T(1,NATMS(3))=D1T(1,NATMS(3))+XKDER
        D1T(2,NATMS(3))=D1T(2,NATMS(3))+YKDER
        D1T(3,NATMS(3))=D1T(3,NATMS(3))+ZKDER
        D1T(1,NATMS(4))=D1T(1,NATMS(4))-XIDER-XJDER-XKDER
        D1T(2,NATMS(4))=D1T(2,NATMS(4))-YIDER-YJDER-YKDER
        D1T(3,NATMS(4))=D1T(3,NATMS(4))-ZIDER-ZJDER-ZKDER
      ELSE IF(NPASS.EQ.2) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))+XJDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))+YJDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))+ZJDER
        D1T(1,NATMS(3))=D1T(1,NATMS(3))-XIDER-XJDER
        D1T(2,NATMS(3))=D1T(2,NATMS(3))-YIDER-YJDER
        D1T(3,NATMS(3))=D1T(3,NATMS(3))-ZIDER-ZJDER
      ELSE IF(NPASS.EQ.3) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))+XKDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))+YKDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))+ZKDER
        D1T(1,NATMS(3))=D1T(1,NATMS(3))-XIDER-XKDER
        D1T(2,NATMS(3))=D1T(2,NATMS(3))-YIDER-YKDER
        D1T(3,NATMS(3))=D1T(3,NATMS(3))-ZIDER-ZKDER
      ELSE IF(NPASS.EQ.4) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))-XIDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))-YIDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))-ZIDER
      ELSE
        STOP 'INVALID VALUE OF NPASS IN FORMEG'
      END IF
      RETURN
      END
      SUBROUTINE FORME2(D2T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D2T(N3N,N3N)
      COMMON/D2INT/DXIDXI,DXIDXJ,DXIDXK,
     1             DXJDXJ,DXJDXK,DXKDXK,
     2             DYIDYI,DYIDYJ,DYIDYK,
     3             DYJDYJ,DYJDYK,DYKDYK,
     4             DZIDZI,DZIDZJ,DZIDZK,
     5             DZJDZJ,DZJDZK,DZKDZK,
     6             DXIDYI,DXJDYI,DXKDYI,
     7             DXIDYJ,DXJDYJ,DXKDYJ,
     8             DXIDYK,DXJDYK,DXKDYK,
     9             DXIDZI,DXJDZI,DXKDZI,
     A             DXIDZJ,DXJDZJ,DXKDZJ,
     B             DXIDZK,DXJDZK,DXKDZK,
     C             DYIDZI,DYJDZI,DYKDZI,
     D             DYIDZJ,DYJDZJ,DYKDZJ,
     E             DYIDZK,DYJDZK,DYKDZK
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/TOLER/DLIM
C
      IF(NPASS.EQ.1) THEN
      I=(NATMS(1)-1)*3
      J=(NATMS(2)-1)*3
      K=(NATMS(3)-1)*3
      L=(NATMS(4)-1)*3
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,J+1)=D2T(I+1,J+1)+DXIDXJ
      D2T(I+1,J+2)=D2T(I+1,J+2)+DXIDYJ
      D2T(I+1,J+3)=D2T(I+1,J+3)+DXIDZJ
C
      D2T(I+1,K+1)=D2T(I+1,K+1)+DXIDXK
      D2T(I+1,K+2)=D2T(I+1,K+2)+DXIDYK
      D2T(I+1,K+3)=D2T(I+1,K+3)+DXIDZK
C
      D2T(I+1,L+1)=D2T(I+1,L+1)-DXIDXI-DXIDXJ-DXIDXK
      D2T(I+1,L+2)=D2T(I+1,L+2)-DXIDYI-DXIDYJ-DXIDYK
      D2T(I+1,L+3)=D2T(I+1,L+3)-DXIDZI-DXIDZJ-DXIDZK
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,J+1)=D2T(I+2,J+1)+DXJDYI
      D2T(I+2,J+2)=D2T(I+2,J+2)+DYIDYJ
      D2T(I+2,J+3)=D2T(I+2,J+3)+DYIDZJ
C
      D2T(I+2,K+1)=D2T(I+2,K+1)+DXKDYI
      D2T(I+2,K+2)=D2T(I+2,K+2)+DYIDYK
      D2T(I+2,K+3)=D2T(I+2,K+3)+DYIDZK
C
      D2T(I+2,L+1)=D2T(I+2,L+1)-DXIDYI-DXJDYI-DXKDYI
      D2T(I+2,L+2)=D2T(I+2,L+2)-DYIDYI-DYIDYJ-DYIDYK
      D2T(I+2,L+3)=D2T(I+2,L+3)-DYIDZI-DYIDZJ-DYIDZK
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,J+1)=D2T(I+3,J+1)+DXJDZI
      D2T(I+3,J+2)=D2T(I+3,J+2)+DYJDZI
      D2T(I+3,J+3)=D2T(I+3,J+3)+DZIDZJ
C
      D2T(I+3,K+1)=D2T(I+3,K+1)+DXKDZI
      D2T(I+3,K+2)=D2T(I+3,K+2)+DYKDZI
      D2T(I+3,K+3)=D2T(I+3,K+3)+DZIDZK
C
      D2T(I+3,L+1)=D2T(I+3,L+1)-DXIDZI-DXJDZI-DXKDZI
      D2T(I+3,L+2)=D2T(I+3,L+2)-DYIDZI-DYJDZI-DYKDZI
      D2T(I+3,L+3)=D2T(I+3,L+3)-DZIDZI-DZIDZJ-DZIDZK
C
      D2T(J+1,J+1)=D2T(J+1,J+1)+DXJDXJ
      D2T(J+1,J+2)=D2T(J+1,J+2)+DXJDYJ
      D2T(J+1,J+3)=D2T(J+1,J+3)+DXJDZJ
C
      D2T(J+1,K+1)=D2T(J+1,K+1)+DXJDXK
      D2T(J+1,K+2)=D2T(J+1,K+2)+DXJDYK
      D2T(J+1,K+3)=D2T(J+1,K+3)+DXJDZK
C
      D2T(J+1,L+1)=D2T(J+1,L+1)-DXIDXJ-DXJDXJ-DXJDXK
      D2T(J+1,L+2)=D2T(J+1,L+2)-DXJDYI-DXJDYJ-DXJDYK
      D2T(J+1,L+3)=D2T(J+1,L+3)-DXJDZI-DXJDZJ-DXJDZK
C
      D2T(J+2,J+2)=D2T(J+2,J+2)+DYJDYJ
      D2T(J+2,J+3)=D2T(J+2,J+3)+DYJDZJ
C
      D2T(J+2,K+1)=D2T(J+2,K+1)+DXKDYJ
      D2T(J+2,K+2)=D2T(J+2,K+2)+DYJDYK
      D2T(J+2,K+3)=D2T(J+2,K+3)+DYJDZK
C
      D2T(J+2,L+1)=D2T(J+2,L+1)-DXIDYJ-DXJDYJ-DXKDYJ
      D2T(J+2,L+2)=D2T(J+2,L+2)-DYIDYJ-DYJDYJ-DYJDYK
      D2T(J+2,L+3)=D2T(J+2,L+3)-DYJDZI-DYJDZJ-DYJDZK
C
      D2T(J+3,J+3)=D2T(J+3,J+3)+DZJDZJ
C
      D2T(J+3,K+1)=D2T(J+3,K+1)+DXKDZJ
      D2T(J+3,K+2)=D2T(J+3,K+2)+DYKDZJ
      D2T(J+3,K+3)=D2T(J+3,K+3)+DZJDZK
C
      D2T(J+3,L+1)=D2T(J+3,L+1)-DXIDZJ-DXJDZJ-DXKDZJ
      D2T(J+3,L+2)=D2T(J+3,L+2)-DYIDZJ-DYJDZJ-DYKDZJ
      D2T(J+3,L+3)=D2T(J+3,L+3)-DZIDZJ-DZJDZJ-DZJDZK
C
      D2T(K+1,K+1)=D2T(K+1,K+1)+DXKDXK
      D2T(K+1,K+2)=D2T(K+1,K+2)+DXKDYK
      D2T(K+1,K+3)=D2T(K+1,K+3)+DXKDZK
C
      D2T(K+1,L+1)=D2T(K+1,L+1)-DXIDXK-DXJDXK-DXKDXK
      D2T(K+1,L+2)=D2T(K+1,L+2)-DXKDYI-DXKDYJ-DXKDYK
      D2T(K+1,L+3)=D2T(K+1,L+3)-DXKDZI-DXKDZJ-DXKDZK
C
      D2T(K+2,K+2)=D2T(K+2,K+2)+DYKDYK
      D2T(K+2,K+3)=D2T(K+2,K+3)+DYKDZK
C
      D2T(K+2,L+1)=D2T(K+2,L+1)-DXIDYK-DXJDYK-DXKDYK
      D2T(K+2,L+2)=D2T(K+2,L+2)-DYIDYK-DYJDYK-DYKDYK
      D2T(K+2,L+3)=D2T(K+2,L+3)-DYKDZI-DYKDZJ-DYKDZK
C
      D2T(K+3,K+3)=D2T(K+3,K+3)+DZKDZK
C
      D2T(K+3,L+1)=D2T(K+3,L+1)-DXIDZK-DXJDZK-DXKDZK
      D2T(K+3,L+2)=D2T(K+3,L+2)-DYIDZK-DYJDZK-DYKDZK
      D2T(K+3,L+3)=D2T(K+3,L+3)-DZIDZK-DZJDZK-DZKDZK
C
      D2T(L+1,L+1)=D2T(L+1,L+1)+DXIDXI+DXIDXJ+DXIDXK+DXIDXJ+DXJDXJ
     #                         +DXJDXK+DXIDXK+DXJDXK+DXKDXK
      D2T(L+1,L+2)=D2T(L+1,L+2)+DXIDYI+DXIDYJ+DXIDYK+DXJDYI+DXJDYJ
     #                         +DXJDYK+DXKDYI+DXKDYJ+DXKDYK
      D2T(L+1,L+3)=D2T(L+1,L+3)+DXIDZI+DXIDZJ+DXIDZK+DXJDZI+DXJDZJ
     #                         +DXJDZK+DXKDZI+DXKDZJ+DXKDZK
C
      D2T(L+2,L+2)=D2T(L+2,L+2)+DYIDYI+DYIDYJ+DYIDYK+DYIDYJ+DYJDYJ
     #                         +DYJDYK+DYIDYK+DYJDYK+DYKDYK
      D2T(L+2,L+3)=D2T(L+2,L+3)+DYIDZI+DYIDZJ+DYIDZK+DYJDZI+DYJDZJ
     #                         +DYJDZK+DYKDZI+DYKDZJ+DYKDZK
C
      D2T(L+3,L+3)=D2T(L+3,L+3)+DZIDZI+DZIDZJ+DZIDZK+DZIDZJ+DZJDZJ
     #                         +DZJDZK+DZIDZK+DZJDZK+DZKDZK
C
      ELSE IF(NPASS.EQ.2) THEN
      I=(NATMS(1)-1)*3
      J=(NATMS(2)-1)*3
      K=(NATMS(3)-1)*3
      IF(I.EQ.J) THEN
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXJ
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYJ
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZJ
      END IF
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,J+1)=D2T(I+1,J+1)+DXIDXJ
      D2T(I+1,J+2)=D2T(I+1,J+2)+DXIDYJ
      D2T(I+1,J+3)=D2T(I+1,J+3)+DXIDZJ
C
      D2T(I+1,K+1)=D2T(I+1,K+1)-DXIDXI-DXIDXJ
      D2T(I+1,K+2)=D2T(I+1,K+2)-DXIDYI-DXIDYJ
      D2T(I+1,K+3)=D2T(I+1,K+3)-DXIDZI-DXIDZJ
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,J+1)=D2T(I+2,J+1)+DXJDYI
      D2T(I+2,J+2)=D2T(I+2,J+2)+DYIDYJ
      D2T(I+2,J+3)=D2T(I+2,J+3)+DYIDZJ
C
      D2T(I+2,K+1)=D2T(I+2,K+1)-DXIDYI-DXJDYI
      D2T(I+2,K+2)=D2T(I+2,K+2)-DYIDYI-DYIDYJ
      D2T(I+2,K+3)=D2T(I+2,K+3)-DYIDZI-DYIDZJ
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,J+1)=D2T(I+3,J+1)+DXJDZI
      D2T(I+3,J+2)=D2T(I+3,J+2)+DYJDZI
      D2T(I+3,J+3)=D2T(I+3,J+3)+DZIDZJ
C
      D2T(I+3,K+1)=D2T(I+3,K+1)-DXIDZI-DXJDZI
      D2T(I+3,K+2)=D2T(I+3,K+2)-DYIDZI-DYJDZI
      D2T(I+3,K+3)=D2T(I+3,K+3)-DZIDZI-DZIDZJ
C
      D2T(J+1,J+1)=D2T(J+1,J+1)+DXJDXJ
      D2T(J+1,J+2)=D2T(J+1,J+2)+DXJDYJ
      D2T(J+1,J+3)=D2T(J+1,J+3)+DXJDZJ
C
      D2T(J+1,K+1)=D2T(J+1,K+1)-DXIDXJ-DXJDXJ
      D2T(J+1,K+2)=D2T(J+1,K+2)-DXJDYI-DXJDYJ
      D2T(J+1,K+3)=D2T(J+1,K+3)-DXJDZI-DXJDZJ
C
      D2T(J+2,J+2)=D2T(J+2,J+2)+DYJDYJ
      D2T(J+2,J+3)=D2T(J+2,J+3)+DYJDZJ
C
      D2T(J+2,K+1)=D2T(J+2,K+1)-DXIDYJ-DXJDYJ
      D2T(J+2,K+2)=D2T(J+2,K+2)-DYIDYJ-DYJDYJ
      D2T(J+2,K+3)=D2T(J+2,K+3)-DYJDZI-DYJDZJ
C
      D2T(J+3,J+3)=D2T(J+3,J+3)+DZJDZJ
C
      D2T(J+3,K+1)=D2T(J+3,K+1)-DXIDZJ-DXJDZJ
      D2T(J+3,K+2)=D2T(J+3,K+2)-DYIDZJ-DYJDZJ
      D2T(J+3,K+3)=D2T(J+3,K+3)-DZIDZJ-DZJDZJ
C
      D2T(K+1,K+1)=D2T(K+1,K+1)+DXIDXI+DXIDXJ+DXIDXJ+DXJDXJ
      D2T(K+1,K+2)=D2T(K+1,K+2)+DXIDYI+DXIDYJ+DXJDYI+DXJDYJ
      D2T(K+1,K+3)=D2T(K+1,K+3)+DXIDZI+DXIDZJ+DXJDZI+DXJDZJ
C
      D2T(K+2,K+2)=D2T(K+2,K+2)+DYIDYI+DYIDYJ+DYIDYJ+DYJDYJ
      D2T(K+2,K+3)=D2T(K+2,K+3)+DYIDZI+DYIDZJ+DYJDZI+DYJDZJ
C
      D2T(K+3,K+3)=D2T(K+3,K+3)+DZIDZI+DZIDZJ+DZIDZJ+DZJDZJ
C
      ELSE IF(NPASS.EQ.3) THEN
      I=(NATMS(1)-1)*3
      K=(NATMS(2)-1)*3
      L=(NATMS(3)-1)*3
      IF(I.EQ.K) THEN
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXK
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYK
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZK
      END IF
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,K+1)=D2T(I+1,K+1)+DXIDXK
      D2T(I+1,K+2)=D2T(I+1,K+2)+DXIDYK
      D2T(I+1,K+3)=D2T(I+1,K+3)+DXIDZK
C
      D2T(I+1,L+1)=D2T(I+1,L+1)-DXIDXI-DXIDXK
      D2T(I+1,L+2)=D2T(I+1,L+2)-DXIDYI-DXIDYK
      D2T(I+1,L+3)=D2T(I+1,L+3)-DXIDZI-DXIDZK
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,K+1)=D2T(I+2,K+1)+DXKDYI
      D2T(I+2,K+2)=D2T(I+2,K+2)+DYIDYK
      D2T(I+2,K+3)=D2T(I+2,K+3)+DYIDZK
C
      D2T(I+2,L+1)=D2T(I+2,L+1)-DXIDYI-DXKDYI
      D2T(I+2,L+2)=D2T(I+2,L+2)-DYIDYI-DYIDYK
      D2T(I+2,L+3)=D2T(I+2,L+3)-DYIDZI-DYIDZK
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,K+1)=D2T(I+3,K+1)+DXKDZI
      D2T(I+3,K+2)=D2T(I+3,K+2)+DYKDZI
      D2T(I+3,K+3)=D2T(I+3,K+3)+DZIDZK
C
      D2T(I+3,L+1)=D2T(I+3,L+1)-DXIDZI-DXKDZI
      D2T(I+3,L+2)=D2T(I+3,L+2)-DYIDZI-DYKDZI
      D2T(I+3,L+3)=D2T(I+3,L+3)-DZIDZI-DZIDZK
C
      D2T(K+1,K+1)=D2T(K+1,K+1)+DXKDXK
      D2T(K+1,K+2)=D2T(K+1,K+2)+DXKDYK
      D2T(K+1,K+3)=D2T(K+1,K+3)+DXKDZK
C
      D2T(K+1,L+1)=D2T(K+1,L+1)-DXIDXK-DXKDXK
      D2T(K+1,L+2)=D2T(K+1,L+2)-DXKDYI-DXKDYK
      D2T(K+1,L+3)=D2T(K+1,L+3)-DXKDZI-DXKDZK
C
      D2T(K+2,K+2)=D2T(K+2,K+2)+DYKDYK
      D2T(K+2,K+3)=D2T(K+2,K+3)+DYKDZK
C
      D2T(K+2,L+1)=D2T(K+2,L+1)-DXIDYK-DXKDYK
      D2T(K+2,L+2)=D2T(K+2,L+2)-DYIDYK-DYKDYK
      D2T(K+2,L+3)=D2T(K+2,L+3)-DYKDZI-DYKDZK
C
      D2T(K+3,K+3)=D2T(K+3,K+3)+DZKDZK
C
      D2T(K+3,L+1)=D2T(K+3,L+1)-DXIDZK-DXKDZK
      D2T(K+3,L+2)=D2T(K+3,L+2)-DYIDZK-DYKDZK
      D2T(K+3,L+3)=D2T(K+3,L+3)-DZIDZK-DZKDZK
C
      D2T(L+1,L+1)=D2T(L+1,L+1)+DXIDXI+DXIDXK+DXIDXK+DXKDXK
      D2T(L+1,L+2)=D2T(L+1,L+2)+DXIDYI+DXIDYK+DXKDYI+DXKDYK
      D2T(L+1,L+3)=D2T(L+1,L+3)+DXIDZI+DXIDZK+DXKDZI+DXKDZK
C
      D2T(L+2,L+2)=D2T(L+2,L+2)+DYIDYI+DYIDYK+DYIDYK+DYKDYK
      D2T(L+2,L+3)=D2T(L+2,L+3)+DYIDZI+DYIDZK+DYKDZI+DYKDZK
C
      D2T(L+3,L+3)=D2T(L+3,L+3)+DZIDZI+DZIDZK+DZIDZK+DZKDZK
C
      ELSE IF(NPASS.EQ.4) THEN
      I=(NATMS(1)-1)*3
      J=(NATMS(2)-1)*3
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,J+1)=D2T(I+1,J+1)-DXIDXI
      D2T(I+1,J+2)=D2T(I+1,J+2)-DXIDYI
      D2T(I+1,J+3)=D2T(I+1,J+3)-DXIDZI
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,J+1)=D2T(I+2,J+1)-DXIDYI
      D2T(I+2,J+2)=D2T(I+2,J+2)-DYIDYI
      D2T(I+2,J+3)=D2T(I+2,J+3)-DYIDZI
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,J+1)=D2T(I+3,J+1)-DXIDZI
      D2T(I+3,J+2)=D2T(I+3,J+2)-DYIDZI
      D2T(I+3,J+3)=D2T(I+3,J+3)-DZIDZI
C
      D2T(J+1,J+1)=D2T(J+1,J+1)+DXIDXI
      D2T(J+1,J+2)=D2T(J+1,J+2)+DXIDYI
      D2T(J+1,J+3)=D2T(J+1,J+3)+DXIDZI
C
      D2T(J+2,J+2)=D2T(J+2,J+2)+DYIDYI
      D2T(J+2,J+3)=D2T(J+2,J+3)+DYIDZI
C
      D2T(J+3,J+3)=D2T(J+3,J+3)+DZIDZI
C
      ELSE
         STOP 'INVALID VALUE OF NPASS IN FORME2'
      END IF
      RETURN
      END
      SUBROUTINE MAKGRD(N)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DERIN/DERINT(1296,9)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/TOLER/DLIM
C
      IF(NPASS.EQ.1) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      XJDER=DOT(DERINT(1,4),ABDENS,N)
      YJDER=DOT(DERINT(1,5),ABDENS,N)
      ZJDER=DOT(DERINT(1,6),ABDENS,N)
      XKDER=DOT(DERINT(1,7),ABDENS,N)
      YKDER=DOT(DERINT(1,8),ABDENS,N)
      ZKDER=DOT(DERINT(1,9),ABDENS,N)
      ELSE IF(NPASS.EQ.2) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      XJDER=DOT(DERINT(1,4),ABDENS,N)
      YJDER=DOT(DERINT(1,5),ABDENS,N)
      ZJDER=DOT(DERINT(1,6),ABDENS,N)
      ELSE IF(NPASS.EQ.3) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      XKDER=DOT(DERINT(1,4),ABDENS,N)
      YKDER=DOT(DERINT(1,5),ABDENS,N)
      ZKDER=DOT(DERINT(1,6),ABDENS,N)
      ELSE IF(NPASS.EQ.4) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      ELSE
        STOP 'INVALID VALUE OF NPASS IN MAKGRD'
      END IF
      RETURN
      END
      SUBROUTINE SYMD(D1T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1T(3,NATOM)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/TOLER/DLIM
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,' GRADIENT BEFORE SYMDE')
    2 FORMAT (/,' ICT:',(15I4))
    3 FORMAT (/,' INVT:',(15I4))
    4 FORMAT (//,' TRANSFORMATION MATRICES:',/,(3(/,1X,3F15.6),//))
C
      WRITE(3,1)
      CALL MATOUT(D1T,3,NATOM,3,NATOM,3)
      WRITE(3,2) ICT
      WRITE(3,3) INVT
      WRITE(3,4) (((PTR(IQ,JQ,KQ),IQ=1,3),JQ=1,3),KQ=1,NT)
C
      IF(NT.EQ.1) RETURN
C
C   SYMMETRIZE GRADIENT VECTOR
C
      DO 105 IC=1,NATOM
      DO 101 IT=1,NT
      IF(ICT(IC,IT).GT.IC) GO TO 105
  101 CONTINUE
      DEDX=ZERO
      DEDY=ZERO
      DEDZ=ZERO
      DO 102 IT=1,NT
      ICNU=ICT(IC,IT)
      DEDXP=D1T(1,ICNU)
      DEDYP=D1T(2,ICNU)
      DEDZP=D1T(3,ICNU)
      DEDX=DEDX+DEDXP*PTR(1,1,IT)+DEDYP*PTR(2,1,IT)+DEDZP*PTR(3,1,IT)
      DEDY=DEDY+DEDXP*PTR(1,2,IT)+DEDYP*PTR(2,2,IT)+DEDZP*PTR(3,2,IT)
      DEDZ=DEDZ+DEDXP*PTR(1,3,IT)+DEDYP*PTR(2,3,IT)+DEDZP*PTR(3,3,IT)
  102 CONTINUE
      D1T(1,IC)=DEDX
      D1T(2,IC)=DEDY
      D1T(3,IC)=DEDZ
      DO 104 IT=1,NT
      ICNU=ICT(IC,IT)
      IF(ICNU.EQ.IC) GO TO 104
      IF(IT.EQ.NT) GO TO 201
      IT1=IT+1
      DO 103 JT=IT1,NT
      IF(ICT(IC,JT).EQ.ICNU) GO TO 104
  103 CONTINUE
  201 CONTINUE
      JT=INVT(IT)
      D1T(1,ICNU)=D1T(1,IC)*PTR(1,1,JT)+D1T(2,IC)*PTR(2,1,JT)
     1                                 +D1T(3,IC)*PTR(3,1,JT)
      D1T(2,ICNU)=D1T(1,IC)*PTR(1,2,JT)+D1T(2,IC)*PTR(2,2,JT)
     1                                 +D1T(3,IC)*PTR(3,2,JT)
      D1T(3,ICNU)=D1T(1,IC)*PTR(1,3,JT)+D1T(2,IC)*PTR(2,3,JT)
     1                                 +D1T(3,IC)*PTR(3,3,JT)
  104 CONTINUE
  105 CONTINUE
C
      FACT=ONE/DFLOAT(NT)
      DO 106 J=1,NATOM
      DO 106 I=1,3
      D1T(I,J)=D1T(I,J)*FACT
  106 CONTINUE
C
      RETURN
      END
      SUBROUTINE SYMH(D2T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D2T(N3N,N3N)
      DIMENSION TH(3,3),WH(3,3),RH(3,3),WK(3,3)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      DATA ZERO,ONE / 0.0D+00, 1.0D+00 /
C
      IF(NT.EQ.1) RETURN
C
C   SYMMETRIZE FORCE-CONSTANT MATRIX
C
      DO 2000 IC=1,NATOM
      DO 101 IT=1,NT
      ICNEW=ICT(IC,IT)
      IF(ICNEW.GT.IC) GO TO 2000
  101 CONTINUE
      DO 1000 JC=1,IC
      DO 102 IT=1,NT
      ICNEW=MAX0(ICT(IC,IT),ICT(JC,IT))
      JCNEW=MIN0(ICT(IC,IT),ICT(JC,IT))
      IF(ICNEW.GT.IC) GO TO 1000
      IF(ICNEW.EQ.IC.AND.JCNEW.GT.JC) GO TO 1000
  102 CONTINUE
      IJPR1=IOFF(IC)+JC
C
C   SUMMATION OF ALL PARTIAL CONTRIBUTION TO CORRECT MATRIX
      DO 103 I=1,3
      DO 103 J=1,3
  103 WH(J,I)=ZERO
      DO 115 IT=1,NT
      ICNEW=MAX0(ICT(IC,IT),ICT(JC,IT))
      JCNEW=MIN0(ICT(IC,IT),ICT(JC,IT))
      IJPR2=IOFF(ICNEW)+JCNEW
      IINDX=(ICNEW-1)*3
      JINDX=(JCNEW-1)*3
      IF(ICT(JC,IT).GT.ICT(IC,IT)) GO TO 201
      DO 104 I=1,3
      DO 104 J=1,3
  104 TH(J,I)=D2T(IINDX+J,JINDX+I)
      GO TO 202
  201 CONTINUE
      DO 105 I=1,3
      DO 105 J=1,3
  105 TH(I,J)=D2T(IINDX+J,JINDX+I)
  202 CONTINUE
      DO 106 I=1,3
      DO 106 J=1,3
  106 RH(J,I)=PTR(J,I,IT)
      DO 108 I=1,3
      DO 108 J=1,3
      SUM=ZERO
      DO 107 K=1,3
  107 SUM=SUM+TH(J,K)*RH(K,I)
  108 WK(J,I)=SUM
      DO 110 I=1,3
      DO 110 J=1,3
      SUM=ZERO
      DO 109 K=1,3
  109 SUM=SUM+RH(K,J)*WK(K,I)
  110 WH(J,I)=WH(J,I)+SUM
  115 CONTINUE
C
      IINDX=(IC-1)*3
      JINDX=(JC-1)*3
      DO 116 I=1,3
      DO 116 J=1,3
  116 D2T(IINDX+J,JINDX+I)=WH(J,I)
C
C   TRANSFER CORRECT BLOCK INTO EQUIVALENT BLOCKS
C
      DO 125 IT=1,NT
      ICNEW=MAX0(ICT(IC,IT),ICT(JC,IT))
      JCNEW=MIN0(ICT(IC,IT),ICT(JC,IT))
      IJPR2=IOFF(ICNEW)+JCNEW
      IF(IJPR2.EQ.IJPR1) GO TO 125
      IF(IT.EQ.NT) GO TO 203
      IT1=IT+1
      DO 117 JT=IT1,NT
      ICSAM=MAX0(ICT(IC,JT),ICT(JC,JT))
      JCSAM=MIN0(ICT(IC,JT),ICT(JC,JT))
      IJPR3=IOFF(ICSAM)+JCSAM
      IF(IJPR3.EQ.IJPR2) GO TO 125
  117 CONTINUE
  203 CONTINUE
      N=INVT(IT)
      DO 118 I=1,3
      DO 118 J=1,3
  118 RH(J,I)=PTR(J,I,N)
      DO 120 I=1,3
      DO 120 J=1,3
      SUM=ZERO
      DO 119 K=1,3
  119 SUM=SUM+WH(J,K)*RH(K,I)
  120 WK(J,I)=SUM
      DO 122 I=1,3
      DO 122 J=1,3
      SUM=ZERO
      DO 121 K=1,3
  121 SUM=SUM+RH(K,J)*WK(K,I)
  122 TH(J,I)=SUM
      IINDX=(ICNEW-1)*3
      JINDX=(JCNEW-1)*3
      IF(ICT(JC,IT).GT.ICT(IC,IT)) GO TO 204
      DO 123 I=1,3
      DO 123 J=1,3
  123 D2T(IINDX+J,JINDX+I)=TH(J,I)
      GO TO 125
  204 CONTINUE
      DO 124 I=1,3
      DO 124 J=1,3
  124 D2T(IINDX+J,JINDX+I)=TH(I,J)
C
  125 CONTINUE
C
 1000 CONTINUE
 2000 CONTINUE
C
      FACT=ONE/DFLOAT(NT)
      DO 130 IC=1,N3N
      DO 130 JC=1,N3N
  130 D2T(IC,JC)=D2T(IC,JC)*FACT
      DO 131 I=1,N3N
      DO 131 J=1,I
  131 D2T(J,I)=D2T(I,J)
C
      RETURN
      END
      SUBROUTINE MAKEB(B,D,DT,Q4)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NBATRI,N3N,NTREAD),D(NBATRI,NTYPEP),DT(NBATRI)
      DIMENSION M(6),DENS(6),NUMC(4)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/CENTR/NCENTR
      COMMON/COUPL/ALP(5,5),BET(5,5)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/PARA4/MMIJ,MMKL,ISAME(100)
      COMMON/POSIX/IPOS(100),JPOS(100),KPOS(100),LPOS(100),IMUL(100)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      EQUIVALENCE (DENS(1),DIJ),(DENS(2),DKL),(DENS(3),DJL)
      EQUIVALENCE (DENS(4),DIL),(DENS(5),DIK),(DENS(6),DJK)
      EQUIVALENCE (M(1),MKL),(M(2),MIJ),(M(3),MIK)
      EQUIVALENCE (M(4),MJK),(M(5),MJL),(M(6),MIL)
      DATA NUMC/4,3,3,2/
      DATA ZERO,HALF,TWO,FOUR / 0.0D+00 , 0.5D+00 , 2.0D+00 , 4.0D+00 /
C
      NCENTR=NUMC(NPASS)
C
      NN=0
      DO 110 II=1,MMIJ
      IT=IPOS(II)
      JT=JPOS(II)
      NFAC=IMUL(II)
      DO 109 JJ=1,MMKL
      KT=KPOS(JJ)
      LT=LPOS(JJ)
      NN=NN+1
      IJT=IOFF(MAX0(IT,JT))+MIN0(IT,JT)
      KLT=IOFF(MAX0(KT,LT))+MIN0(KT,LT)
      IF(IJT.LT.KLT) GO TO 301
      I=MAX0(IT,JT)
      J=MIN0(IT,JT)
      K=MAX0(KT,LT)
      L=MIN0(KT,LT)
      GO TO 302
  301 CONTINUE
      I=MAX0(KT,LT)
      J=MIN0(KT,LT)
      K=MAX0(IT,JT)
      L=MIN0(IT,JT)
C
  302 CONTINUE
      MIJ=IOFF(MAX0(I,J))+MIN0(I,J)
      MKL=IOFF(MAX0(K,L))+MIN0(K,L)
      MIK=IOFF(MAX0(I,K))+MIN0(I,K)
      MJL=IOFF(MAX0(J,L))+MIN0(J,L)
      MIL=IOFF(MAX0(I,L))+MIN0(I,L)
      MJK=IOFF(MAX0(J,K))+MIN0(J,K)
C
      FACT=Q4
      IF(I.EQ.J) FACT=FACT*HALF
      IF(K.EQ.L) FACT=FACT*HALF
C
C     ----- THIS FACTOR OF TWO IS NEEDED BECAUSE ONLY GENERATE
C               ONE OF TWO POSSIBLE DERIVATIVES OF [II,KL]     -----
C
      FACT=FACT*DFLOAT(NFAC)
C
      GO TO (201,203,203,203,204,204),ISTYPE
      STOP ' WRONG ISTYPE '
C
C     ----- CLOSED SHELL SINGLET -----
C
  201 CONTINUE
      FAC4=FACT*FOUR
      DIJ=DT(MIJ)*FAC4
      DKL=DT(MKL)*FAC4
      DJL=-DT(MJL)*FACT
      DIL=-DT(MIL)*FACT
      DIK=-DT(MIK)*FACT
      DJK=-DT(MJK)*FACT
C
      CALL MBMAT(B,DENS,M,NN,1)
      GO TO 205
C
C     ----- HIGH-SPIN OPEN-SHELL -----
C
C*202 CONTINUE
C---TEMPORARILY COMMENTED OUT---USE GENERAL OPEN-SHELL FORMALISM
C*    FAC2=FACT+FACT
C*    FAC4=FAC2+FAC2
C*    DIJ=DT(MIJ)*FAC4
C*    DKL=DT(MKL)*FAC4
C*    DJL=-D(MJL,1)*FAC2
C*    DIL=-D(MIL,1)*FAC2
C*    DIK=-D(MIK,1)*FAC2
C*    DJK=-D(MJK,1)*FAC2
C*
C*    CALL MBMAT(B,DENS,M,NN,1)
C*
C*    DJL=D(MJL,2)*FAC2
C*    DIL=D(MIL,2)*FAC2
C*    DIK=D(MIK,2)*FAC2
C*    DJK=D(MJK,2)*FAC2
C*
C*    CALL MBMAT2(B,DENS,M,NN,2)
C*    GO TO 205
C
C     ----- OPEN-SHELL SINGLET AND GENERAL OPEN SHELL -----
C
  203 CONTINUE
C   FOR OCCUPIED SPACE
      FAC2=FACT+FACT
      DO 102 ITYP=1,NTYPES
      DIJ=ZERO
      DKL=ZERO
      DJL=ZERO
      DIL=ZERO
      DIK=ZERO
      DJK=ZERO
      DO 101 JTYP=1,NTYPES
      DIJ=DIJ+D(MIJ,JTYP)*ALP(ITYP,JTYP)
      DKL=DKL+D(MKL,JTYP)*ALP(ITYP,JTYP)
      DJL=DJL+D(MJL,JTYP)*BET(ITYP,JTYP)
      DIL=DIL+D(MIL,JTYP)*BET(ITYP,JTYP)
      DIK=DIK+D(MIK,JTYP)*BET(ITYP,JTYP)
      DJK=DJK+D(MJK,JTYP)*BET(ITYP,JTYP)
  101 CONTINUE
      DIJ=DIJ*FAC2
      DKL=DKL*FAC2
      DJL=DJL*FACT
      DIL=DIL*FACT
      DIK=DIK*FACT
      DJK=DJK*FACT
C
      CALL MBMAT(B,DENS,M,NN,ITYP)
  102 CONTINUE
C
C   FOR CORES AND VIRTUALS
      IF(NTYPES.EQ.1) GO TO 205
      IF(IAFOCK.EQ.0) GO TO 205
      FAC4=FAC2+FAC2
      DIJ=DT(MIJ)*FAC4
      DKL=DT(MKL)*FAC4
      DJL=-DT(MJL)*FACT
      DIL=-DT(MIL)*FACT
      DIK=-DT(MIK)*FACT
      DJK=-DT(MJK)*FACT
C
      CALL MBMAT(B,DENS,M,NN,NTREAD)
      GO TO 205
C
C     ----- TWO-CONFIGURATION SCF (GVB) -----
C
  204 CONTINUE
C   FOR OCCUPIED SPACE
      FAC2=FACT+FACT
      DO 103 ITYP=1,NTYPES
      DIJ=D(MIJ,ITYP)*FAC2
      DKL=D(MKL,ITYP)*FAC2
      DJL=D(MJL,ITYP)*FACT
      DIL=D(MIL,ITYP)*FACT
      DIK=D(MIK,ITYP)*FACT
      DJK=D(MJK,ITYP)*FACT
C
      CALL MBMATC(B,DENS,M,NN,ITYP)
  103 CONTINUE
C
C   FOR CORES AND VIRTUALS
      IF(IAFOCK.EQ.0) GO TO 205
      FAC4=FAC2+FAC2
      DIJ=DT(MIJ)*FAC4
      DKL=DT(MKL)*FAC4
      DJL=-DT(MJL)*FACT
      DIL=-DT(MIL)*FACT
      DIK=-DT(MIK)*FACT
      DJK=-DT(MJK)*FACT
C
      CALL MBMAT(B,DENS,M,NN,NTREAD)
C
  205 CONTINUE
C
  109 CONTINUE
  110 CONTINUE
C
      RETURN
      END
      SUBROUTINE MBMAT(B,D,M,NN,ISET)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NBATRI,3,NATOM,NTREAD)
      DIMENSION D(6),D2(6),DC(6),M(6),M2(6),MC(6)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CENTR/NCENTR
      COMMON/DERIN/DERINT(1296,3,3)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/TOLER/DLIM
      DATA ZERO / 0.0D+00 /
C
      DO 104 IXYZ=1,3
      TEMP=ZERO
      DO 102 I=1,NCENTR-1
      T=DERINT(NN,IXYZ,I)
      TEMP=TEMP+T
      IATOM=NATMS(I)
      DO 101 J=1,6
      B(M(J),IXYZ,IATOM,ISET)=B(M(J),IXYZ,IATOM,ISET)+T*D(J)
  101 CONTINUE
  102 CONTINUE
C
C   USE TRANSLATIONAL INVARIANCE FOR LAST ATOM
      IATOM=NATMS(NCENTR)
      DO 103 J=1,6
      B(M(J),IXYZ,IATOM,ISET)=B(M(J),IXYZ,IATOM,ISET)-TEMP*D(J)
  103 CONTINUE
C
  104 CONTINUE
C
      RETURN
C
C------------------------------------------------------------MBMAT2
C
      ENTRY MBMAT2(B,D2,M2,NN2,ISET2)
C
      DO 108 IXYZ=1,3
      TEMP=ZERO
      DO 106 I=1,NCENTR-1
      T=DERINT(NN2,IXYZ,I)
      TEMP=TEMP+T
      IATOM=NATMS(I)
      DO 105 J=3,6
      B(M2(J),IXYZ,IATOM,ISET2)=B(M2(J),IXYZ,IATOM,ISET2)+T*D2(J)
  105 CONTINUE
  106 CONTINUE
C
C   USE TRANSLATIONAL INVARIANCE FOR LAST ATOM
      IATOM=NATMS(NCENTR)
      DO 107 J=3,6
      B(M2(J),IXYZ,IATOM,ISET2)=B(M2(J),IXYZ,IATOM,ISET2)-TEMP*D2(J)
  107 CONTINUE
C
  108 CONTINUE
C
      RETURN
C
C------------------------------------------------------------MBMATC
C
      ENTRY MBMATC(B,DC,MC,NNC,ISETC)
C
      IBSET=ISETC*2-1
      JBSET=ISETC*2
      DO 116 IXYZ=1,3
      TEMP=ZERO
      DO 113 I=1,NCENTR-1
      T=DERINT(NNC,IXYZ,I)
      TEMP=TEMP+T
      IATOM=NATMS(I)
      DO 111 J=1,2
      B(MC(J),IXYZ,IATOM,IBSET)=B(MC(J),IXYZ,IATOM,IBSET)+T*DC(J)
  111 CONTINUE
      DO 112 J=3,6
      B(MC(J),IXYZ,IATOM,JBSET)=B(MC(J),IXYZ,IATOM,JBSET)+T*DC(J)
  112 CONTINUE
  113 CONTINUE
C
C   USE TRANSLATIONAL INVARIANCE FOR LAST ATOM
      IATOM=NATMS(NCENTR)
      DO 114 J=1,2
      B(MC(J),IXYZ,IATOM,IBSET)=B(MC(J),IXYZ,IATOM,IBSET)-TEMP*DC(J)
  114 CONTINUE
      DO 115 J=3,6
      B(MC(J),IXYZ,IATOM,JBSET)=B(MC(J),IXYZ,IATOM,JBSET)-TEMP*DC(J)
  115 CONTINUE
C
  116 CONTINUE
C
      RETURN
      END
      SUBROUTINE SYMF1(B)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NBATRI,3,NATOM,NTREAD)
      DIMENSION TX(10,10),TY(10,10),TZ(10,10)
      DIMENSION UX(10,10),UY(10,10),UZ(10,10)
      DIMENSION VX(10,10),VY(10,10),VZ(10,10)
      DIMENSION MI(8),MJ(8),MIAT(8),MOP(8)
      LOGICAL IANDJ
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
C
      IF(NT.EQ.1) RETURN
C
      FACT=ONE/DFLOAT(NT)
C
C::::::::::::::::::::::::::
C:::::OPEN-SHELL TYPES:::::
C::::::::::::::::::::::::::
C
      DO 1000 IBSET=1,NTREAD
C
C     ----- FIND A BLOCK (I,J) -----
C
C#################
C#####I SHELL#####
C#################
C
      DO 900 II=1,NSHELL
C
      DO 101 ITR=1,NISO
  101 INDOUT(ITR)=ISO(II,ITR)
      CALL ISOOUT
      DO 102 ITR=1,NT
      IST=INDIN(ITR)
      IF(IST.GT.II) GO TO 900
  102 MI(ITR)=IST
      LIT=KTYPE(II)
      MINI=KMIN(II)
      MAXI=KMAX(II)
      LOCI=KLOC(II)-MINI
C
C#################
C#####J SHELL#####
C#################
C
      DO 800 JJ=1,II
C
      DO 103 ITR=1,NISO
  103 INDOUT(ITR)=ISO(JJ,ITR)
      CALL ISOOUT
      DO 104 ITR=1,NT
      JST=INDIN(ITR)
      MJ(ITR)=JST
      IF(JST.GT.II) GO TO 800
      IST=MI(ITR)
      ISH=MAX0(IST,JST)
      JSH=MIN0(IST,JST)
      IF(ISH.EQ.II.AND.JSH.GT.JJ) GO TO 800
  104 CONTINUE
      LJT=KTYPE(JJ)
      MINJ=KMIN(JJ)
      MAXJ=KMAX(JJ)
      LOCJ=KLOC(JJ)-MINJ
      IANDJ=II.EQ.JJ
      JMAX=MAXJ
C
C   FIND THEM THERE EQUIVALENT BLOCKS
C   TRANSFER THE EQUIVALENT BLOCK INTO T-MATRIX
C   COMPUTE R T R
C   PUT RESULT BACK INTO THE (I,J) BLOCK OF H-MATRIX
C
      DO 400 IAT=1,NATOM
C
      DO 105 ITR=1,NT
  105 MIAT(ITR)=ICT(IAT,ITR)
      DO 106 I=1,10
      DO 106 J=1,10
      VX(J,I)=ZERO
      VY(J,I)=ZERO
      VZ(J,I)=ZERO
  106 CONTINUE
      DO 107 ITR=1,NT
      MOP(ITR)=0
      MIT=MI(ITR)
      MJT=MJ(ITR)
      MOI=1
      IF(MIT.LT.MJT) MOI=-1
      MII=MAX0(MIT,MJT)
      MJJ=MIN0(MIT,MJT)
      IF(MII.NE.II.OR.MJJ.NE.JJ) GO TO 107
      MOP(ITR)=MOI
      IF(IAT.LT.MIAT(ITR)) GO TO 400
  107 CONTINUE
      DO 110 ITR=1,NT
      NTR=ITR
      NIAT=MIAT(NTR)
      KK=MI(ITR)
      LL=MJ(ITR)
      LOCK=KLOC(KK)-KMIN(KK)
      LOCL=KLOC(LL)-KMIN(LL)
      DO 108 K=MINI,MAXI
      LCK=LOCK+K
      IF(IANDJ) JMAX=K
      DO 108 L=MINJ,JMAX
      LCL=LOCL+L
      LCKL=IOFF(MAX0(LCK,LCL))+MIN0(LCK,LCL)
      TX(K,L)=B(LCKL,1,NIAT,IBSET)
      TY(K,L)=B(LCKL,2,NIAT,IBSET)
      TZ(K,L)=B(LCKL,3,NIAT,IBSET)
      IF(IANDJ) THEN
      TX(L,K)=B(LCKL,1,NIAT,IBSET)
      TY(L,K)=B(LCKL,2,NIAT,IBSET)
      TZ(L,K)=B(LCKL,3,NIAT,IBSET)
      END IF
  108 CONTINUE
      CALL RDFR(TX,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(TY,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(TZ,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      DO 109 I=MINI,MAXI
      DO 109 J=MINJ,MAXJ
      VX(I,J)=VX(I,J) + PTR(1,1,NTR)*TX(I,J)
     1                + PTR(2,1,NTR)*TY(I,J)
     2                + PTR(3,1,NTR)*TZ(I,J)
      VY(I,J)=VY(I,J) + PTR(1,2,NTR)*TX(I,J)
     1                + PTR(2,2,NTR)*TY(I,J)
     2                + PTR(3,2,NTR)*TZ(I,J)
      VZ(I,J)=VZ(I,J) + PTR(1,3,NTR)*TX(I,J)
     1                + PTR(2,3,NTR)*TY(I,J)
     2                + PTR(3,3,NTR)*TZ(I,J)
  109 CONTINUE
  110 CONTINUE
C
      DO 120 ITR=1,NT
      IF(MOP(ITR).EQ.0) GO TO 120
      MOI=MOP(ITR)
      NTR=INVT(ITR)
      JAT=MIAT(NTR)
      IF(MOI.LT.0) GO TO 201
      MINX=MINI
      MAXX=MAXI
      LXT=LIT
      MINY=MINJ
      MAXY=MAXJ
      LYT=LJT
      DO 111 I=1,10
      DO 111 J=1,10
      TX(J,I)=ZERO
      TY(J,I)=ZERO
      TZ(J,I)=ZERO
      UX(J,I)=VX(J,I)
      UY(J,I)=VY(J,I)
      UZ(J,I)=VZ(J,I)
  111 CONTINUE
      GO TO 203
  201 MINX=MINJ
      MAXX=MAXJ
      LXT=LJT
      MINY=MINI
      MAXY=MAXI
      LYT=LIT
  202 CONTINUE
      DO 112 I=1,10
      DO 112 J=1,10
      TX(J,I)=ZERO
      TY(J,I)=ZERO
      TZ(J,I)=ZERO
      UX(J,I)=VX(I,J)
      UY(J,I)=VY(I,J)
      UZ(J,I)=VZ(I,J)
  112 CONTINUE
C
  203 CONTINUE
      CALL RDFR(UX,MINX,MAXX,LXT,MINY,MAXY,LYT,NTR)
      CALL RDFR(UY,MINX,MAXX,LXT,MINY,MAXY,LYT,NTR)
      CALL RDFR(UZ,MINX,MAXX,LXT,MINY,MAXY,LYT,NTR)
      DO 113 I=MINI,MAXI
      DO 113 J=MINJ,MAXJ
      TX(I,J)=TX(I,J) + PTR(1,1,NTR)*UX(I,J)
     1                + PTR(2,1,NTR)*UY(I,J)
     2                + PTR(3,1,NTR)*UZ(I,J)
      TY(I,J)=TY(I,J) + PTR(1,2,NTR)*UX(I,J)
     1                + PTR(2,2,NTR)*UY(I,J)
     2                + PTR(3,2,NTR)*UZ(I,J)
      TZ(I,J)=TZ(I,J) + PTR(1,3,NTR)*UX(I,J)
     1                + PTR(2,3,NTR)*UY(I,J)
     2                + PTR(3,3,NTR)*UZ(I,J)
  113 CONTINUE
      DO 115 I=MINI,MAXI
      LCI=LOCI+I
      JMAX=MAXJ
      IF(IANDJ) JMAX=I
      DO 115 J=MINJ,JMAX
      LCJ=LOCJ+J
      LCIJ=IOFF(MAX0(LCI,LCJ))+MIN0(LCI,LCJ)
      B(LCIJ,1,JAT,IBSET)=TX(I,J)*FACT
      B(LCIJ,2,JAT,IBSET)=TY(I,J)*FACT
      B(LCIJ,3,JAT,IBSET)=TZ(I,J)*FACT
  115 CONTINUE
  120 CONTINUE
C
  400 CONTINUE
C
C   FOR EACH BLOCK(K,L) EQUIVALENT TO (I,J)
C   FIND THE TRANSFORMATION THAT MAPS (K,L) TO (I,J)
C   COMPUTE (R)T(R)
C   PUT THE RESULT BACK INTO THE (K,L) BLOCK OF THE H-MATRIX
C
      DO 600 ITR=1,NT
      IF(ITR.EQ.1) GO TO 600
      KK=MI(ITR)
      LL=MJ(ITR)
      K=MAX0(KK,LL)
      L=MIN0(KK,LL)
      IF(K.EQ.II.AND.L.EQ.JJ) GO TO 600
      NTR=ITR+1
      IF(NTR.GT.NT) GO TO 205
      DO 121 IT=NTR,NT
      IX=MI(IT)
      JX=MJ(IT)
      I=MAX0(IX,JX)
      J=MIN0(IX,JX)
      IF(I.EQ.K.AND.J.EQ.L) GO TO 600
  121 CONTINUE
  205 CONTINUE
C
      NTR=INVT(ITR)
      DO 500 IAT=1,NATOM
C
      DO 122 I=1,10
      DO 122 J=1,10
      TX(J,I)=ZERO
      TY(J,I)=ZERO
      TZ(J,I)=ZERO
  122 CONTINUE
      DO 123 JTR=1,NT
  123 MIAT(JTR)=ICT(IAT,JTR)
      NIAT=MIAT(NTR)
      DO 125 K=MINI,MAXI
      LCK=LOCI+K
      IF(IANDJ) JMAX=K
      DO 125 L=MINJ,JMAX
      LCL=LOCJ+L
      LCKL=IOFF(MAX0(LCK,LCL))+MIN0(LCK,LCL)
      VX(K,L)=B(LCKL,1,NIAT,IBSET)
      VY(K,L)=B(LCKL,2,NIAT,IBSET)
      VZ(K,L)=B(LCKL,3,NIAT,IBSET)
      IF(.NOT.IANDJ) GO TO 125
      VX(L,K)=B(LCKL,1,NIAT,IBSET)
      VY(L,K)=B(LCKL,2,NIAT,IBSET)
      VZ(L,K)=B(LCKL,3,NIAT,IBSET)
  125 CONTINUE
      CALL RDFR(VX,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(VY,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(VZ,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      DO 126 I=MINI,MAXI
      DO 126 J=MINJ,MAXJ
      TX(I,J)=TX(I,J) + PTR(1,1,NTR)*VX(I,J)
     1                + PTR(2,1,NTR)*VY(I,J)
     2                + PTR(3,1,NTR)*VZ(I,J)
      TY(I,J)=TY(I,J) + PTR(1,2,NTR)*VX(I,J)
     1                + PTR(2,2,NTR)*VY(I,J)
     2                + PTR(3,2,NTR)*VZ(I,J)
      TZ(I,J)=TZ(I,J) + PTR(1,3,NTR)*VX(I,J)
     1                + PTR(2,3,NTR)*VY(I,J)
     2                + PTR(3,3,NTR)*VZ(I,J)
  126 CONTINUE
      LOCK=KLOC(KK)-KMIN(KK)
      LOCL=KLOC(LL)-KMIN(LL)
      NIAT=IAT
      DO 127 K=MINI,MAXI
      LCK=LOCK+K
      IF(IANDJ) JMAX=K
      DO 127 L=MINJ,JMAX
      LCL=LOCL+L
      LCKL=IOFF(MAX0(LCK,LCL))+MIN0(LCK,LCL)
      B(LCKL,1,NIAT,IBSET)=TX(K,L)
      B(LCKL,2,NIAT,IBSET)=TY(K,L)
      B(LCKL,3,NIAT,IBSET)=TZ(K,L)
  127 CONTINUE
C
  500 CONTINUE
C
  600 CONTINUE
C
  800 CONTINUE
  900 CONTINUE
C
C###############################
C#####END OF I AND J SHELLS#####
C###############################
C
 1000 CONTINUE
C
C:::::::::::::::::::::::::::::::::
C:::::END OF OPEN-SHELL TYPES:::::
C:::::::::::::::::::::::::::::::::
C
      RETURN
      END
      SUBROUTINE RDFR(T,MINK,MAXK,LKT,MINL,MAXL,LLT,NTR)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION V(10),T(10,10)
      COMMON/GAUSC/TT(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/TOLER/DLIM
      DATA ZERO / 0.0D+00 /
C
C   RIGHT MULTIPLY T BY R
C   RESULT BACK IN T
C
      GO TO (203,202,201),LLT
C
C     D SHELL
C
  201 CONTINUE
      DO 104 K=MINK,MAXK
      DO 102 L=5,10
      DUM=ZERO
      DO 101 N=5,10
  101 DUM=DUM+T(K,N)*DTR(N-4,L-4,NTR)
  102 V(L)=DUM
      DO 103 L=5,10
  103 T(K,L)=V(L)
  104 CONTINUE
      GO TO 203
C
C     P SHELL
C
  202 CONTINUE
      DO 108 K=MINK,MAXK
      DO 106 L=2,4
      DUM=ZERO
      DO 105 N=2,4
  105 DUM=DUM+T(K,N)*PTR(N-1,L-1,NTR)
  106 V(L)=DUM
      DO 107 L=2,4
  107 T(K,L)=V(L)
  108 CONTINUE
C
C   LEFT MULTIPLY T BY R
C   RESULT BACK IN T
C
  203 CONTINUE
      GO TO (210,205,204), LKT
C
C     D SHELL
C
  204 CONTINUE
      DO 114 L=MINL,MAXL
      DO 112 K=5,10
      DUM=ZERO
      DO 111 N=5,10
      DUM=DUM+T(N,L)*DTR(N-4,K-4,NTR)
  111 CONTINUE
      V(K)=DUM
  112 CONTINUE
      DO 113 K=5,10
      T(K,L)=V(K)
  113 CONTINUE
  114 CONTINUE
      GO TO 210
C
C     P SHELL
C
  205 CONTINUE
      DO 118 L=MINL,MAXL
      DO 116 K=2,4
      DUM=ZERO
      DO 115 N=2,4
      DUM=DUM+T(N,L)*PTR(N-1,K-1,NTR)
  115 CONTINUE
      V(K)=DUM
  116 CONTINUE
      DO 117 K=2,4
      T(K,L)=V(K)
  117 CONTINUE
  118 CONTINUE
C
  210 CONTINUE
      RETURN
      END
      SUBROUTINE DERFK1(D1TOT,D2TOT,DFH,DFS,BMAT,SS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1TOT(3,NATOM),D2TOT(N3N,N3N)
      DIMENSION DFH(NBATRI,N3N),DFS(NBATRI,3),BMAT(NBATRI,N3N,NTREAD)
      DIMENSION SS(NBATRI)
      DIMENSION IBF2AT(256)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/MFSEC/MFILE,NSECT
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      DATA ZERO / 0.0D+00 /
C
C   LOCATION OF MATRICES IN TAPE42
C   (1) E1A
C   (2) E2A
C   (3) SA (N3NXX*NTRIL)
C   (4) HA (N3NXX*NTRIL)
C   (5) TA (N3NXX*NTRIL*NBSET)
C
      ITAP42=42
      CALL RFILE(ITAP42)
C
      CALL SWRIT(ITAP42,D1TOT,N3N*2)
      CALL SWRIT(ITAP42,D2TOT,N3N*N3N*2)
C
      CALL BFTOAT(IBF2AT)
C
C   SAVE SA MATRICES ON TAPE42
      KABC=0
      DO 106 IABC=1,NATOM
      DO 105 IXYZ=1,3
      KABC=KABC+1
      DO 102 I=1,NBATRI
  102 SS(I)=ZERO
      DO 104 I=1,NBASIS
      IA=IOFF(I)
      DO 103 J=1,I
      IF(IBF2AT(I).NE.IABC.AND.IBF2AT(J).NE.IABC) GO TO 103
      IJ=IA+J
      SX=DFS(IJ,IXYZ)
      IF(IBF2AT(I).NE.IABC) SX=-SX
      SS(IJ)=SX
  103 CONTINUE
  104 CONTINUE
CC    CALL PRINT(SS,NBATRI,NBASIS,6)
      CALL SWRIT(ITAP42,SS,NBATR2)
  105 CONTINUE
  106 CONTINUE
C
C   SAVE HA MATRICES ON TAPE42
      DO 107 IABC=1,N3N
CC    CALL PRINT(DFH(1,IABC),NBATRI,NBASIS,6)
      CALL SWRIT(ITAP42,DFH(1,IABC),NBATR2)
  107 CONTINUE
C
C   SAVE TA MATRICES ON TAPE42
      DO 109 ITYP=1,NTREAD
      DO 108 IABC=1,N3N
CC    WRITE(6,*) 'TA MATRIX,ITYP,IABC = ',ITYP,IABC
CC    CALL PRINT(BMAT(1,IABC,ITYP),NBATRI,NBASIS,6)
      CALL SWRIT(ITAP42,BMAT(1,IABC,ITYP),NBATR2)
  108 CONTINUE
  109 CONTINUE
C
      CALL RCLOSE(ITAP42,3)
      RETURN
      END
      SUBROUTINE BFTOAT(IBF2AT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION IBF2AT(256)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/TOLER/DLIM
C
      DO 102 ISHELL=1,NSHELL
      IATOM=KATOM(ISHELL)
      MINBF=KLOC(ISHELL)
      MAXBF=MINBF+KMAX(ISHELL)-KMIN(ISHELL)
      DO 101 IBF=MINBF,MAXBF
      IBF2AT(IBF)=IATOM
  101 CONTINUE
  102 CONTINUE
C
      RETURN
      END
      SUBROUTINE VADD(A,B,C,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(N),B(N),C(N)
C
      DO 101 I=1,N
      A(I)=B(I)+C(I)
  101 CONTINUE
      RETURN
      END
      SUBROUTINE FOLD(A,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(N,N)
C
      DO 101 J=1,N
      DO 101 I=1,J-1
      A(I,J)=A(I,J)+A(J,I)
      A(J,I)=A(I,J)
  101 CONTINUE
C
      RETURN
      END
      SUBROUTINE PRNONE(TITLE,D1E)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1E(3,NATOM)
      CHARACTER*52 TITLE
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
    1 FORMAT (//,T10,A52,//,' CENTER',T15,'X',T35,'Y',T55,'Z')
    2 FORMAT (/,1X,I4,3F20.12)
C
      WRITE (6,1) TITLE
      DO 101 I=1,NATOM
      WRITE (6,2) I,D1E(1,I),D1E(2,I),D1E(3,I)
  101 CONTINUE
      RETURN
      END
      SUBROUTINE PRNTWO(TITLE,D2E)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D2E(N3N,N3N)
      CHARACTER*52 TITLE
      CHARACTER LET(3)*1
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      DATA LET /'X','Y','Z'/
    1 FORMAT (//,T10,A52,//,(I26,3I30))
    2 FORMAT (/,T7,12(9X,A1))
    3 FORMAT (/,I5,A1,4X,(12F10.6))
C
      WRITE(6,1) TITLE,(IC,IC=1,NATOM)
      WRITE(6,2) ((LET(I),I=1,3),IC=1,NATOM)
      DO 102 IC=1,NATOM
      DO 101 I=1,3
      IT=3*(IC-1)+I
      WRITE(6,3) IC,LET(I),(D2E(IT,IDQ),IDQ=1,N3N)
  101 CONTINUE
  102 CONTINUE
      RETURN
      END
