      SUBROUTINE INPSCF
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         SEARCH: C02-06-89  *
C*  DATE:  FEBRUARY  6, 1989                                          *
C*  REASON: POSSIBLE LOOP PROBLEMS, NON-STANDARD F77.                 *
C**********************************************************************
C******************************************************
C***LAST UPDATED ON JUNE 15, 1987 BY YUKIO YAMAGUCHI***
C***MAXSHL HAS BEEN CHANGED FROM 15 TO 20           ***
C******************************************************
C
C INPUT ROUTINE FOR SCFJ
C JUST TO SET UP DYNAMICAL ALLOCATION
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER BLABEL(20)
      INTEGER ND(10),MNL(142),MS(142),MTYPE(2,20),ITYP(20)
      CHARACTER TAPE*8,ETIQ*40
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/ENRGY/ESCF,ENUC,SCFCON,NITER
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4,MAXCOR,ICMAX
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36,TAPE
      COMMON/ZIJKL/IJKLA,IJKLM
      COMMON/ZNELE/NDOCC,NSOCC,IREAD,IWF
      COMMON/ZNSTT/NST
      COMMON/ZSYMM/IDOCC(10),ISOCC(10)
      COMMON/ZZIOR/IORDER,IREO(150)
      COMMON/ZZDII/NDIIS,NODIIS,ICOUP,ICAS
      COMMON/ZZPEX/PEXC(99),INDPEX(20,99),NCPEX,IPEX,MOPEX(20),NORPEX
     1 ,IICO
      COMMON/ZZLVS/ZLVS,NLVS,NROOT,NWF
      COMMON/ZZOCB/IOCB
      COMMON/SUPMX/ISUPMX,IISDUM(4),INOSYM
      INTEGER TYPE(5),IOPT(10)
      DATA ZERO,ONE,TWO/0.0D0,1.0D0,2.0D0/
    1 FORMAT(/,2X,' THE PROGRAM TO DO SCF'/)
    2 FORMAT(12I5)
    3 FORMAT(A8,2X)
   88 FORMAT(' CONV CRITERION = ',D10.3,' MAX ITER =',I4)
   90 FORMAT(8I5)
   91 FORMAT(A40)
   92 FORMAT(' SCF LABEL = ',A40)
   93 FORMAT('SYMMETRY ',I1, ':',8I5)
  500 FORMAT(A4,6X,10I5)
  555 FORMAT(14I5)
  601 FORMAT(A10,(20I3))
      INPUT=5
      CALL LOCATE(INPUT,'# SCF ####',IERR)
      IF(IERR.NE.0)THEN
               WRITE(6,*)' NO SCF INPUT'
               STOP
      END IF
      READ(5,91)ETIQ
      WRITE(6,92)ETIQ
      READ(5,2)NLVS,ICONV,IWF,IREAD,NROOT,IORDER,IPRNT,NODIIS,NDIIS
     1,NITER
      IF(ICONV.EQ.0)ICONV=8
      IF(NDIIS.EQ.0)NDIIS=6
      SCFCON=10.0D0**(-ICONV)
      IF(NITER.EQ.0)NITER=40
      WRITE(6,*)'INPUT OPTIONS FOR GVBSCF:'
      WRITE(6,2)NLVS,ICONV,IWF,IREAD,NROOT,IORDER,IPRNT,NODIIS,NDIIS
     1,NITER
      NWF=IWF
      IWF=IABS(IWF)
      WRITE(6,*)'================================'
      IF(IWF.EQ.0)WRITE(6,*)'CLOSED SHELL CALCULATION'
      IF(IWF.EQ.1)WRITE(6,*)'OPEN SHELL CALCULATION'
      IF(IWF.EQ.2)WRITE(6,*)'TCSCF CLOSED SHELL CALCULATION'
      IF(IWF.EQ.3)WRITE(6,*)'TCSCF OPEN SHELL CALCULATION'
      IF(IWF.EQ.4)WRITE(6,*)'EXCITED OPEN-SHELL SINGLET CALCULATION'
      IF(IWF.EQ.5)WRITE(6,*)'GENERAL GVB CLOSED SHELL CALCULATION'
      IF(IWF.EQ.6)WRITE(6,*)'GENERAL GVB OPEN SHELL CALCULATION'
      IF(IWF.GE.10)THEN
         WRITE(6,*)'GENERAL PAIR-EXCITATION MCSCF'
         IPEX=1
      END IF
      ICAS=0
      IF(IWF.EQ.4)THEN
               IWF=10
               IPEX=1
               ICAS=1
      END IF
      IF(NROOT.EQ.0)THEN
      NROOT=1
      IF(ICAS.EQ.1)NROOT=2
      END IF
      IICO=0
      IF(IWF.EQ.11)THEN
               WRITE(6,*)'MUST INPUT CONFIGURATIONS'
               IICO=1
      ELSE IF (IWF.EQ.12)THEN
               WRITE(6,*)'COMPLETE PAIRED-DOUBLE-EXCITED MCSCF'
               IICO=2
      END IF
      ICOUP=0
      IF(NDIIS.LT.0)ICOUP=1
      IF(NDIIS.EQ.-1)NDIIS=0
      NDIIS=IABS(NDIIS)
      IF(NWF.LT.0)THEN
               WRITE(6,*)'PULAY''S FORMULAE USED (PSEUDOEIGENVALUE)'
               GOTO 560
      END IF
      IF(ICOUP.EQ.0)THEN
               WRITE(6,*)'OCBSE METHOD IS ALWAYS USED FOR GRADIENT PART'
               IOCB=0
      ELSE
               IF(NDIIS.NE.0)IOCB=1
               WRITE(6,*)'COUPOP METHOD MAY BE USED FOR GRADIENT PART'
      END IF
  560 CONTINUE
      WRITE(6,*)'================================'
      WRITE(6,88)SCFCON,NITER
C MUST BE CHANGED TO ACCOUNT FOR SEVERAL SYMMETRIES
      IF(IORDER.EQ.1)THEN
               READ(5,555)(IREO(I),I=1,NBASIS)
      END IF
C     DO 200 I=1,NST
C     II=0
C     IF(NDEG(I).GT.0)THEN
C     READ(5,555)(IREO(J),J=II+1,II+NDEG(I))
C     DO 201 J=II+1,II+NDEG(I)
C 201          IREO(J)=IREO(J)+IDEG(I)
C     II=II+NDEG(I)
C     END IF
C 200 CONTINUE
C MUST BE CHANGED TO ACCOUNT FOR SEVERAL SYMMETRIES
      NSOCC=0
      NDOCC=0
      K5T=0
      DO 108 I=1,NST
      READ(5,90)IDOCC(I),ISOCC(I),K1,K2,K3,K4,K5
C     WRITE(6,93)I,IDOCC(I),ISOCC(I),K1,K2,K3,K4,K5
      ISOCC(I)=ISOCC(I)+K1+K2+K3+K4
      K5T=K5T+K5
      NDOCC=NDOCC+IDOCC(I)
  108 NSOCC=NSOCC+ISOCC(I)
      WRITE(3,*)'NDOCC=',NDOCC
      WRITE(3,*)'NSOCC=',NSOCC
      IF(K5T.NE.0)THEN
      WRITE(3,*)'K5T=',K5T
      END IF
C SUPERMATRIX
      ISUPMX=1
      INOSYM=0
      CALL LOCATE(5,'# SUPMX ##',IERR)
      IF(IERR.NE.0)GOTO 100
      READ(5,'(4I5)')ISUPMX,INOSYM
  100 IF(ISUPMX.NE.0)WRITE(6,*)'SUPERMATRIX APPROACH'
      IF(ISUPMX.NE.0)WRITE(3,*)'SUPERMATRIX APPROACH'
      IF(INOSYM.NE.0)WRITE(6,*)'INOSYM ACTIVATED'
      IF(INOSYM.NE.0)WRITE(3,*)'INOSYM ACTIVATED'
      RETURN
      END
      SUBROUTINE GENSCF(MOTYPE,MOPOS)
C
C GENERAL SCF INPUT      /    MIQUEL DURAN I PORTAS
C                        /    DEPARTAMENT DE QUIMICA FISICA
C***********             /    UNIVERSITAT AUTONOMA DE BARCELONA
C SCF INPUT              /    BELLATERRA, BARCELONA, SPAIN
C***********             /
C # SCF #######          /    CCREM AT EB0UB051
C                        /
C A)                     /    34-3-692-0200 EXT. 1669
C IN FORMAT (14I5) :
C NLVS,ICONV,IOPEN,IREAD,IROOT,IORDER,IPRNT,NODIIS,NDIIS,NITER
C
C NLVS......... NUMBER OF ITERATIONS THAT THE LEVEL SHIFT MUST BE DONE
C ICONV........ 10**(-ICONV) CONVERGENCE IN BOTH THE D.M. AND THE ITRSHL
C IOPEN........ 0 CLOSED SHELL
C               1 OPEN SHELL
C               2 CLOSED SHELL TCSCF (GVB-1)
C               3 OPEN SHELL TCSCF (GVB-1)
C               4 EXCITED SAME SYMM O.S.SINGLET
C               5 CLOSED-SHELL GVB
C               6 OPEN-SHELL GVB
C              10 COMPLETE PEMCSCF
C              11 NON COMPLETE PEMCSCF (CONFIGURATIONS READ FROM # PEX #
C              12 COMPLETE DOUBLE-PAIRED-EXCITED MCSCF
C       *** NOTE: IF IOPEN<0, A PSEUDOEIGENVALUE METHOD IS USED, THAT
C                 WORKS FINE FOR CONVERGENCE <10**-4. IT DOES NOT
C                 CARRY CONVERGENCE FURTHER THAN 10**-10
C IREAD........ 0 CORE GUESS
C               1 GUESS IN TAPE30
C IROOT........ ROOT DESIRED IN A CASSCF. DEFAULT 2
C IORDER....... 0 NO REORDERING
C               1 REORDER ACCORDING TO INTEGER VECTOR INPUT IT AFTER
C                 THIS LINE. NUMBER ORBITALS AS C1 SYMMETRY ALWAYS
C IPRNT........ -1 TO 7; AMOUNT OF INFORMATION DISPLAYED
C NODIIS....... 10**(-NODIIS) IS THE ERROR VALUE AT WHICH DIIS STARTS
C NDIIS........ NUMBER OF NDIIS ITERATIONS TO EXTRAPOLATE FOCK MATRICES
C               IF DIIS WANTS TO BE PERFORMED, NDIIS MUST BE POSITIVE
C               FOR CLOSED-SHELL CALCULATIONS AND NEGATIVE FOR OPEN-
C               SHELL AND MCSCF CALCULATIONS. IF PSEUDOEIGENVALUE
C               METHODS ARE USED (IOPEN<0), NDIIS MUST BE POSITIVE.
C NITER........ MAXIMUM NUMBER OF SCF ITERATIONS
C
C B)
C FOR EACH SYMMETRY, IN FORMAT 5I5...
C NCLO(I),NOPEN(I),GVB1(I),GVB2(I),GVB3(I),NORPEX(I),NELPEX(I)
C ENDLOOP
C LIKE PITZER'S PROGRAM....
C
C C)
C COUPLING CONSTANTS FOR THE OPEN SHELL:
C N*(N+1) A,B CONSTANTS, N=NO. OPEN SHELLS
C NOTE THAT TCSCF REQUIRES DUMMY INPUT OF 3 LINES, WHILE PEMCSCF DOESN'T
C
C D)
C DAMPING PARAMETER, LEVEL SHIFT (FIRST ONE NOT USED ACTUALLY)
C
C # PEX ##########
C INPUT THE CONFIGURATIONS, ONE PER LINE. FORMAT 8I1. NORPEX DATA
C ONE CONFIGURATION PER LINE. AN 1 MEANS OCCUPIED ORBITAL, AN 0 VACANT.
C
C # MOFLIP ####### NO LONGER NECESSARY !!! ***
C SWITCHING OF A PAIR OF MO'S IF NECESSARY AFTER DIAGONALIZATION
C BY COUPOP. ENTER I AND J IN FREE FORMAT. THIS IS NECESSARY IF TWO OR
C MORE OPEN SHELLS ARE RUN IN THE SAME SYMMETRY, AND THE ORDERING OF
C THEM IS INVERSE TO THEIR OCCUPATIONS.
C # COUPLING ####
C COUPLING PARAMETERS... F(I),ALPHA(I,J),BETA(I,J) (GODDARD'S WAY)
C ENTER IN FREE FORMAT, LOWER TRIANGULAR FORM.
C
C # EFIELD ############
C ELECTRIC FIELD EFFECT
C INPUT ONE LINE WITH    IFIELD,DISPLA
C WHERE IFIELD IS 1 IF ELECTRIC FIELD IS TO INCLUDED
C                 0 IF NOT
C       DISPLA IS THE DISPLACEMENT TO BE USED
C ACTUALLY, THE FX,FY AND FZ DISPLACEMENTS ARE READ FROM FILE
C 14, SO THE FILE 'NAME' FILE14 HAS TO BE READY WITH FX,FY,FZ
C OUTPUT IS TO FILE16.
C
C # SUPMX ##
C     ISUPMX (FORMAT I5)... IF THIS INPUT EXISTS AND ISUPMX=1,
C     THE TWO-ELECTRON INTEGRALS ARE SET UP IN SUPERMATRIX FORM.
C     INOSYM MUST BE SET TO 1 TO RUN THIRD-DERIVATIVE PROGRAM PX3RD
C
C******************************************************************
C
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/ZNELE/NDOCC,NSOCC,IREAD,IWF,NSHL,NFIRST,NLAST
      COMMON/ZNSTT/NST
      PARAMETER(MAXSHL=20)
      COMMON/ZZGEN/ALFA(MAXSHL,MAXSHL),BETA(MAXSHL,MAXSHL),OCC(MAXSHL)
     1 ,NOMO(MAXSHL),ISHT(MAXSHL),IGVB,ISGVB,IBEGIN(MAXSHL)
      COMMON/ZZGVB/NPAIR,IIGVB(3,2),IWPAIR(MAXSHL)
      COMMON/ZZSYM/ISPOS(20)
      COMMON/ZZIOR/IORDER,IORD(150)
      COMMON/ZZPEX/PEXC(99),INDPEX(20,99),NCPEX,IPEX,MOPEX(20),NORPEX
     1 ,IICO
      COMMON/ZZCOI/ICOI(5050)
      COMMON/ZZLVS/ZLVS,NLVS,NROOT
      INTEGER NELGVB(MAXSHL),IFACT(MAXSHL+3),XX(MAXSHL),IR(MAXSHL)
      INTEGER TYPE(5),IOPT(10),MOTYPE(*),MOPOS(*)
      INTEGER YCL(MAXSHL),YOP(MAXSHL),YGVB(MAXSHL,3)
     1, YPEX(MAXSHL),YELPEX(MAXSHL)
      LOGICAL MAJOR
      DATA ZERO,ONE,TWO/0.0D0,1.0D0,2.0D0/
      DATA MAXPAI/3/MAXPEX/99/NORPMX/20/
  500 FORMAT(A4,6X,10I5)
  510 FORMAT(8I5)
  511 FORMAT(' SYMMETRY ',I1,2X,8I5)
  555 FORMAT(14I5)
  567 FORMAT('              CLSD OPEN GVB1 GVB2 GVB3 YPEX YELPEX')
  601 FORMAT(A10,(20I3))
 6499 FORMAT('CONFIGURATION ',I3,' : ',8I3)
      CALL LOCATE(5,'# SCF ####',IERR)
      IF(IERR.NE.0)THEN
               WRITE(6,*)'NO SCF INPUT'
               STOP
      ENDIF
      READ(5,'(A4)')XXX
      READ(5,*)XXXX
      IF(IORDER.EQ.1)THEN
               READ(5,555)(IORD(I),I=1,NBASIS)
               WRITE(6,*)' REORDERING...'
               WRITE(6,555)(IORD(I),I=1,NBASIS)
      END IF
      NSH=0
      MOP=0
      NOSHH=0
      ISP=0
      IHSOP=0
      NDOCC=0
      NSOCC=0
      IGVB=0
      WRITE(6,*)'***** GVBSCF INFORMATION *****'
      WRITE(6,*)'SCF OCCUPATION INPUT'
      WRITE(6,567)
      NDOCC=0
      NSOCC=0
      NSO=0
      NORPEX=0
      DO 200 I=1,NST
      READ(5,510)YCL(I),YOP(I),(YGVB(I,J),J=1,3),YPEX(I),YELPEX(I)
      NDOCC=NDOCC+YCL(I)
      NSO=NSO+YOP(I)
      IF(YOP(I).NE.0)NOSHH=NOSHH+1
      NORPEX=NORPEX+YPEX(I)
      NELPEX=NELPEX+YELPEX(I)
      NSOCC=NSOCC+YOP(I)+YGVB(I,1)+YGVB(I,2)+YGVB(I,3)+YPEX(I)
  200 WRITE(6,511)I,YCL(I),YOP(I),(YGVB(I,J),J=1,3),YPEX(I),YELPEX(I)
      WRITE(3,*)'NDOCC,NSOCC,NSO',NDOCC,NSOCC,NSO
      NELPEX=NELPEX/2
      IF(IPEX.EQ.1)THEN
               WRITE(6,*)'ELECTRONS IN SYSTEM = ',2*NDOCC+NSO+2*NELPEX
      END IF
C     IF(IPEX.EQ.1 .OR. IWF.EQ.2 .OR.IWF.EQ.3)THEN
      IF(IWF.EQ.2)THEN
C FOR PEMCSCF DUMMY INPUT (LIKE FOR TCSCF)
C ONLY FOR TCSCF
               READ(5,'(2F20.10)')AA,BB
               READ(5,'(2F20.10)')AA,BB
               READ(5,'(2F20.10)')AA,BB
      END IF
      DO 554 I=1,NBASIS
      MOTYPE(I)=NBASIS
  554 MOPOS(I)=0
      IGVB1=0
      IOSHS=1
      OCC(1)=TWO
      NOMO(1)=NDOCC
      ISHT(1)=1
      IBEGIN(1)=1
      NSH=1
      IF(NOSHH.EQ.1)THEN
               WRITE(6,*)'COUPLING CONSTANTS FOR OPEN SHELL :'
               READ(5,'(2F20.10)')AA,BB
               WRITE(6,'(2F20.5)')AA,BB
               HSOP=1
      ELSE IF (NOSHH.EQ.2)THEN
               WRITE(6,*)'COUPLING CONSTANTS FOR OPEN SHELL :'
               READ(5,'(2F20.10)')AA,BB
               WRITE(6,'(2F20.5)')AA,BB
               READ(5,'(2F20.10)')AA,BB
               WRITE(6,'(2F20.5)')AA,BB
               IF(BB.EQ.3.0D0)OSHS=1
               IF(BB.EQ.-1.0D0)HSOP=1
               READ(5,'(2F20.10)')AA,BB
               WRITE(6,'(2F20.5)')AA,BB
      ELSE IF (NOSHH.GT.2)THEN
               WRITE(6,*)'NOT READY FOR MORE THAN 2 SHELLS IN OPEN'
               STOP
      END IF
C
C READ LEVEL SHIFT
C
      READ(5,'(2F20.10)')XDUM,ZLVS
      WRITE(6,*)' LEVEL SHIFT = ',ZLVS
      IF(HSOP.EQ.1)THEN
               ISHT(2)=2
               NOMO(2)=NSO
               NSH=2
               OCC(2)=ONE
               WRITE(6,*)'HIGH-SPIN OPEN SHELL'
      END IF
      IF(OSHS.EQ.1)THEN
               ISHT(2)=4
               ISHT(3)=4
               NSH=3
               OCC(2)=ONE
               OCC(3)=ONE
               NOMO(2)=1
               NOMO(3)=1
               IF(NSO.NE.2)THEN
                       WRITE(6,*)'OSHS AND NSO.NE.2'
                       STOP
               END IF
               WRITE(6,*)'OPEN-SHELL SINGLET'
      END IF
      IF(NSOCC.EQ.0)WRITE(6,*)' CLOSED-SHELL SINGLET'
      IF(NSOCC.NE.0 .AND. IWF.EQ.0)GOTO 999
      IF(NSOCC.EQ.0 .AND. IWF.NE.0)GOTO 999
      IF(NSO.EQ.NSOCC.AND.IWF.GT.3)GOTO 999
      IF(NSO.NE.NSOCC.AND.IWF.LT.2)GOTO 999
      IF(IPEX.EQ.1 .AND. NSO.NE.NSOCC-NORPEX)THEN
               WRITE(6,*)'NO GVB AND PEMCSCF SIMULTANEOUSLY'
               STOP
      END IF
      IF(NORPEX.GT.NORPMX)THEN
               WRITE(6,*)'TOO MANY PEX SHELL - MAXIMUM ', NORPMX
               STOP
      END IF
      IF(NORPEX.GT.0 .AND.IPEX.EQ.0 .OR.
     1   NORPEX.GT.0 .AND. NELPEX.EQ.0 .OR.
     2   NORPEX.EQ.0 .AND.IPEX.EQ.1 .OR.
     4   NELPEX.GT.NORPEX .OR.
     3   NORPEX.EQ.0 .AND. NELPEX.GT.0)THEN
               WRITE(6,*)'IWF,NORPEX AND NELPEX NOT IN AGREEMENT'
               STOP
      END IF
      DO 201 I=1,NST
               IF(YCL(I).GT.0)THEN
                  DO 2202 J=1,YCL(I)
                       NNN=J+IDEG(I)
 2202                  MOTYPE(NNN)=1
               END IF
               IF(HSOP.EQ.1.AND.YOP(I).GT.0)THEN
                  IF(IHSOP.EQ.0)THEN
                    IBEGIN(2)=IDEG(I)+YCL(I)+1
                    IHSOP=1
                  END IF
                  DO 204 J=1,YOP(I)
                       NNN=J+IDEG(I)+YCL(I)
                       MOTYPE(NNN)=2
                       ISP=ISP+1
                       ISPOS(ISP)=NNN
                       MOP=MOP+1
                       MOPOS(NNN)=MOP
  204             CONTINUE
               END IF
               IF(OSHS.EQ.1)THEN
                  IF(YOP(I).GT.1)THEN
                       WRITE(6,*)'NOT READY FOR OSHS SAME SYMM'
                       STOP
                  END IF
                  IF(YOP(I).EQ.1 .OR. YOP(I).EQ.2)THEN
                       NNN=IDEG(I)+YCL(I)+1
                       IOSHS=IOSHS+1
                       MOTYPE(NNN)=IOSHS
                       IBEGIN(IOSHS)=NNN
                       MOP=MOP+1
                       ISP=ISP+1
                       MOPOS(NNN)=MOP
                       ISPOS(ISP)=NNN
                  END IF
                  IF(YOP(I).EQ.2)THEN
                       NNN=IDEG(I)+YCL(I)+2
                       IOSHS=IOSHS+1
                       MOTYPE(NNN)=IOSHS
                       IBEGIN(IOSHS)=NNN
                       MOP=MOP+1
                       ISP=ISP+1
                       MOPOS(NNN)=MOP
                       ISPOS(ISP)=NNN
                  END IF
               END IF
  201 CONTINUE
      IF(IPEX.EQ.1)GOTO 10000
      DO 202 NGVB=1,3
C SCAN EACH GVB PAIR
               IGVB1=0
C SCAN EACH SYMMETRY
         DO 203 I=1,NST
               IYGVB1=0
  345          IYGVB1=IYGVB1+1
               IF(IYGVB1.GT.YGVB(I,NGVB))GOTO 203
               IGVB1=IGVB1+1
               IF(IGVB1.GT.2)THEN
                       WRITE(6,*)'MORE THAN 3 ORBITALS IN SHELL',NGVB
                       STOP
               END IF
               NSH=NSH+1
               NNN=YCL(I)+YOP(I)+IDEG(I)+IYGVB1+NELGVB(I)
               IIGVB(NGVB,IGVB1)=NNN
               IF(IGVB1.EQ.1)THEN
                       IGVB=NNN
                       ISGVB=NSH
               END IF
               MOTYPE(NNN)=NSH
               NOMO(NSH)=1
               ISHT(NSH)=3
               OCC(NSH)=ONE
               IWPAIR(NSH)=NPAIR+1
               IBEGIN(NSH)=NNN
               MOP=MOP+1
               ISP=ISP+1
               MOPOS(NNN)=MOP
               ISPOS(ISP)=NNN
               GOTO 345
  203 CONTINUE
      IF(IGVB1.EQ.1)THEN
               WRITE(6,*)'ONLY 1 M.O. FOR SHELL ',NGVB
               STOP
      END IF
      IF(IGVB1.NE.0)WRITE(6,*)'GVB SHELL NUMBER ',NGVB
      IF(IGVB1.NE.0)NPAIR=NPAIR+1
      DO 876 K=1,NST
876   NELGVB(K)=NELGVB(K)+YGVB(K,NGVB)
  202 CONTINUE
      IF(NPAIR.NE.0)NCPEX=1
      GOTO 20000
10000 CONTINUE
C
C INPUT FOR PE-MCSCF
C
C HOW MANY CONFIGURATIONS??
      IFACT(1)=1
      DO 128 I=2,20
  128 IFACT(I)=IFACT(I-1)*I
      IF(NORPEX.EQ.NELPEX)THEN
      IFACT2=1
      ELSE
      IFACT2=IFACT(NORPEX-NELPEX)
      ENDIF
      NCONF=IFACT(NORPEX)/(IFACT(NELPEX)*IFACT2)
      WRITE(6,*)'NCONF=',NCONF
      NCPEX=NCONF
      IF(NCPEX.GT.MAXPEX .AND. IICO.EQ.0)THEN
               WRITE(6,*)'TOO MANY CONFIGURATIONS',
     1         ' NCONF,MAXPEX=',NCONF,MAXPEX
               STOP
      END IF
      NMOPEX=0
      DO 826 I=1,NST
               NOX=YPEX(I)
               DO 827 IOX=1,NOX
                       NSH=NSH+1
                       NNN=YCL(I)+YOP(I)+IDEG(I)+IOX
                       MOTYPE(NNN)=NSH
                       NOMO(NSH)=1
                       ISHT(NSH)=5
                       IBEGIN(NSH)=NNN
                       MOP=MOP+1
                       ISP=ISP+1
                       MOPOS(NNN)=MOP
                       ISPOS(ISP)=NNN
                       NMOPEX=NMOPEX+1
                       MOPEX(NMOPEX)=NNN
  827          CONTINUE
  826   CONTINUE
C
C INDEX CONSTRUCTION
C
      IF(IICO.EQ.1)THEN
C
C CONFIGURATIONS ARE BEING READ
C
C FIRST LINE - NUMBER OF CONFIGURATIONS TO BE ENTERED  (NCONF)
C MORE LINES - INDPEX (NU,I),NU=1,NORPEX
C
               CALL LOCATE(5,'# PEX ####',IERR)
               IF(IERR.NE.0)THEN
                       WRITE(6,*)'NO PEX INPUT'
                       STOP
               END IF
               WRITE(6,*)'READING CONFIGURATIONS FROM # PEX ###'
               READ(5,*)NCPEX
               WRITE(6,*)'NCPEX=',NCPEX
               NCONF=NCPEX
      IF(NCPEX.GT.MAXPEX )THEN
               WRITE(6,*)'TOO MANY CONFIGURATIONS',
     1         ' NCONF,MAXPEX=',NCONF,MAXPEX
               STOP
      END IF
               DO 1567 I=1,NCONF
 1567                  READ(5,'(20I1)')(INDPEX(IU,I),IU=1,NORPEX)
               GOTO 20020
      ELSE IF (IICO.EQ.2)THEN
C COMPLETE DOUBLY-EXCITED MCSCF
               NCONF=NELPEX*(NORPEX-NELPEX)+1
               DO 531 J=1,NCONF
               DO 532 I=1,NELPEX
532                    INDPEX(I,J)=1
               DO 533 I=NELPEX+1,NORPEX
533                    INDPEX(I,J)=0
531            CONTINUE
               ICONF=1
               DO 534 I=1,NELPEX
               DO 534 J=NELPEX+1,NORPEX
               ICONF=ICONF+1
               INDPEX(I,ICONF)=0
534            INDPEX(J,ICONF)=1
               NCONF=ICONF
               NCPEX=NCONF
               WRITE(6,*)'PAIRED DOUBLY EXCITED, NCONF= ',NCONF
               GOTO 20020
      END IF
C
C COMPLETE PEX MCSCF
C
      DO 501 I=1,NELPEX
               IR(I)=1
               DO 501 J=1,NCONF
  501                  INDPEX(I,J)=0
      IR(NELPEX)=0
      ICONF=0
  513 N=NELPEX
  521 IR(N)=IR(N)+1
      IF(IR(N).GT.NORPEX)THEN
               IF(N.EQ.1)GOTO 512
               IR(N)=1
               N=N-1
               GOTO 521
      END IF
      MAJOR=.TRUE.
      DO 514 I=1,NELPEX-1
  514          MAJOR=MAJOR.AND.(IR(I+1).GT.IR(I))
      IF(MAJOR)THEN
               ICONF=ICONF+1
               DO 515 I=1,NELPEX
  515                  INDPEX(IR(I),ICONF)=1
      END IF
      GOTO 513
  512 CONTINUE
C     WRITE(6,*)'ICONF=',ICONF
      IF(ICONF.NE.NCONF)THEN
               WRITE(6,*)'ICONF NE NCONF - INTERNAL ERROR'
               WRITE(6,*)'ICONF =', ICONF
               STOP
      END IF
20020 CONTINUE
C     DO 499 I=1,NCONF
C 499 WRITE(6,6499)I,(INDPEX(IU,I),IU=1,NORPEX)
C
C GENERATE MATRIX OF DIVERGENCES
C
      DO 1201 IC=1,NCONF
      DO 1201 JC=1,IC
      IJC=IOFF(IC)+JC
      NDIV=0
      DO 1202 IO=1,NORPEX
 1202 IF(INDPEX(IO,IC).NE.INDPEX(IO,JC))NDIV=NDIV+1
      ICOI(IJC)=NDIV/2
 1201 CONTINUE
C     WRITE(6,'(20I3)')(ICOI(IJ),IJ=1,IJC)
C
20000 CONTINUE
C
C**********************
C
      NSHL=NSH
      IF(NSH.GT.MAXSHL)THEN
               WRITE(6,*)'NUMBER OF SHELLS > ',MAXSHL
               WRITE(6,*)'MUST CHANGE DIMENSIONING'
               CALL EXIT
      END IF
      IF(IPRNT.GE.0)THEN
      WRITE(6,601)'MOTYPE',(MOTYPE(I),I=1,NBASIS)
      WRITE(6,601)'NOMO  ',(NOMO  (I),I=1,NSHL  )
      WRITE(6,601)'ISHT  ',(ISHT  (I),I=1,NSHL  )
      WRITE(6,601)'IBEGIN',(IBEGIN(I),I=1,NSHL  )
      IF(NSOCC.GT.0)WRITE(6,601)'ISPOS ',(ISPOS (I),I=1,NSOCC )
      IF(NSOCC.GT.0)WRITE(6,601)'MOPOS ',(MOPOS (I),I=1,NBASIS)
      IF(NPAIR.GT.0)WRITE(6,601)'IWPAIR ',(IWPAIR(I),I=1,NSHL)
      WRITE(6,*)'NDOCC,NSOCC,NSHL=',NDOCC,NSOCC,NSHL
      IF(NPAIR.GT.0)WRITE(6,*)'NUMBER OF GVB PAIRS = ',NPAIR
      DO 156 I=1,NPAIR
 156  WRITE(6,*)' PAIR',I,' BETWEEN ORBITALS ',IIGVB(I,1),IIGVB(I,2)
      IF(NPAIR.GT.0)WRITE(6,*)'IGVB,ISGVB=',IGVB,ISGVB
      END IF
      IF(NPAIR.GT.3)THEN
               WRITE(6,*)'AT PRESENT ONLY',MAXPAI,' PAIRS ALLOWED'
               WRITE(6,*)'AND ',NPAIR,' PAIRS ARE REQUESTED'
               STOP
      END IF
      IF(IPEX.EQ.1)WRITE(6,601)'MOPEX',(MOPEX(I),I=1,NORPEX)
      DO 710 I=1,NSH
          IT=ISHT(I)
          DO 711 J=1,NSH
               ALFA(I,J)=OCC(I)*OCC(J)/TWO
               BETA(I,J)=-OCC(I)*OCC(J)/(TWO*TWO)
               JT=ISHT(J)
               IF(IT.EQ.2 .AND. JT.EQ.2)BETA(I,J)=-ONE/TWO
               IF(IT.EQ.3 .AND. JT.EQ.3)THEN
                   IF(IWPAIR(I).EQ.IWPAIR(J))THEN
                       ALFA(I,J)=ZERO
                       BETA(I,J)=ZERO
                   END IF
               END IF
               IF((IT.EQ.1 .AND. JT.EQ.4).OR.
     1                 (IT.EQ.4.AND.JT.EQ.1))  THEN
                       ALFA(I,J)=ONE
                       ALFA(J,I)=ONE
                       BETA(I,J)=-ONE/TWO
                       BETA(J,I)=-ONE/TWO
               END IF
               IF(IT.EQ.4.AND.JT.EQ.4)THEN
                       IF(I.EQ.J)THEN
                       ALFA(I,J)=ZERO
                       BETA(I,J)=ZERO
                       ELSE
                       ALFA(I,J)=ONE/TWO
                       BETA(I,J)=ONE/TWO
                       END IF
               END IF
  711 CONTINUE
      IF(IT.EQ.3)ALFA(I,I)=OCC(I)/TWO
      IF(IT.EQ.3)BETA(I,I)=ZERO
  710 CONTINUE
C
C ARE THERE SPECIAL COUPLING CONSTANTS?
C
      CALL LOCATE(5,'# COUPLING ####',IERR)
      IF(IERR.NE.0)GOTO 800
      WRITE(6,*)'READING COUPLING CONSTANTS FROM # COUPLING ###'
      READ(5,*)(OCC(I),I=1,NSHL)
      WRITE(6,*)(OCC(I),I=1,NSHL)
      READ(5,*)((ALFA(I,J),J=1,I),I=1,NSHL)
      WRITE(6,*)((ALFA(I,J),J=1,I),I=1,NSHL)
      READ(5,*)((BETA(I,J),J=1,I),I=1,NSHL)
      WRITE(6,*)((BETA(I,J),J=1,I),I=1,NSHL)
      DO 794 I=1,NSHL
  794 OCC(I)=OCC(I)*TWO
      DO 780 I=2,NSHL
      DO 780 J=1,I-1
      ALFA(J,I)=ALFA(I,J)
      BETA(J,I)=BETA(I,J)
  780 CONTINUE
  800 CONTINUE
      IF(IPRNT.GE.1)THEN
      WRITE(6,*)'ALFA'
      CALL MATOUT(ALFA,MAXSHL,MAXSHL,NSHL+1,NSHL+1,6)
      WRITE(6,*)'BETA'
      CALL MATOUT(BETA,MAXSHL,MAXSHL,NSHL+1,NSHL+1,6)
      CALL OUTMX(OCC,NSHL,1,6,'OCC')
      WRITE(6,*)'******************************'
      END IF
      RETURN
  999 WRITE(6,*)'THE VALUE GIVEN FOR IOPEN IS NOT '
      WRITE(6,*)'COMPATIBLE WITH THE SPECIFIED ORBITAL OCCUPATIONS'
      STOP
      END
      SUBROUTINE UPDGVB(S1,S2,HM,ZJM,ZKM,ITER,MOTYPE,MOPOS,P3
     1   ,HAMIJ,HAMEIV,HAMEIG,HAMIJ1)
C
C GET CI COEFFICIENTS AND UPDATE ALFA,BETA AND F MATRICES
C
C FOR N GVB SHELLS
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 K12,K21
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/ENRGY/ESCF,ENUC,TOL,NITER,IDUM,EKIN,EONE,ETOT,ETWO,EPOT,VIR
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4,MAXCOR,NCRUSD
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/ZIJKL/IJKLA,IJKLM
      COMMON/ZNELE/NDOCC,NSOCC,IREAD,IWF,NSHELL,NFIRST,NLAST
      COMMON/ZZMXO/IJDIM,IJMAX,NBL
      PARAMETER(MAXSHL=20)
      COMMON/ZZGEN/ALFA(MAXSHL,MAXSHL),BETA(MAXSHL,MAXSHL),OCC(MAXSHL)
     1 ,NOMO(MAXSHL),ISHT(MAXSHL),IGVB,ISGVB,IBEGIN(MAXSHL)
      COMMON/ZZGVB/NPAIR,IIGVB(3,2),IWPAIR(MAXSHL)
      COMMON/ZZSYM/ISPOS(20)
      COMMON/ZZPEX/PEXC(99),INDPEX(20,99),NCPEX,IPEX,MOPEX(20),NORPEX
     1 ,IICO
      COMMON/ZZDII/NDIIS,NODIIS,ICOUP,ICAS
      COMMON/ZZLVS/ZLVS,NLVS,NROOT
      DIMENSION HAMIJ(*),HAMEIG(NCPEX,*),HAMEIV(*),HAMIJ1(*)
      DIMENSION Y(3),YEIG(2,2),YEIV(2),YOLD(6),YNEW(6)
      DIMENSION HM(*),ZJM(NTRI,*),ZKM(NTRI,*),MOTYPE(*),MOPOS(*)
      DIMENSION P3(*),AAA(2),BBB(2)
      DATA ZERO,PT5,ONE,TWO/0.0D0,0.5D0,1.0D0,2.D0/
      DATA YCONV/1.0D-10/
  600 FORMAT(9I2)
      IF(IPEX.EQ.1)THEN
               CALL UPDPEX(HM,ZJM,ZKM,ITER,MOTYPE,MOPOS,P3
     1                     ,HAMIJ,HAMEIG,HAMEIV,HAMIJ1)
               S1=HAMEIV(NROOT)
               RETURN
      END IF
      IF(NPAIR.GT.1)GOTO 5000
C
C FOR ONLY ONE PAIR THERE IS A SPECIAL FORMULA
C
      I=IBEGIN(ISGVB)
      J=IBEGIN(ISGVB+1)
      II=IOFF(I)+I
      JJ=IOFF(J)+J
      HC11=HM(II)
      HC22=HM(JJ)
      IM=MOPOS(I)
      JM=MOPOS(J)
      Y11=HC11+PT5*ZJM(II,IM)
      Y22=HC22+PT5*ZJM(JJ,JM)
      DO 2 KK=1,NSOCC
            K=ISPOS(KK)
            KT=MOTYPE(K)
            IF(ISHT(KT).EQ.2)THEN
               Y11=Y11+ZJM(II,KK)-PT5*ZKM(II,KK)
               Y22=Y22+ZJM(JJ,KK)-PT5*ZKM(JJ,KK)
            END IF
    2 CONTINUE
      K12=ZKM(II,JM)
      K21=ZKM(JJ,IM)
      YA=Y22-Y11
      IF(K12.EQ.ZERO)STOP 'K12=0'
      COC=YA/K12
      AFLA=COC-DSQRT(ONE+COC*COC)
      S1=ONE/DSQRT(ONE+AFLA*AFLA)
      S2=AFLA*S1
 1000 CONTINUE
      IF(IPRNT.GE.1)WRITE(6,*)'S1,S2=',S1,S2
 3000 CONTINUE
C COMPUTE HAMILTONIAN...
C     CALL HAMILT(HM,ZJM,ZKM,P3,MOTYPE,MOPOS)
      OCC(ISGVB)=TWO*S1*S1
      OCC(ISGVB+1)=TWO*S2*S2
      DO 787 I=1,NSHELL
               ALFA(I,ISGVB)=PT5*OCC(I)*OCC(ISGVB)
               BETA(I,ISGVB)=-PT5*PT5*OCC(I)*OCC(ISGVB)
               ALFA(I,ISGVB+1)=PT5*OCC(I)*OCC(ISGVB+1)
               BETA(I,ISGVB+1)=-PT5*PT5*OCC(I)*OCC(ISGVB+1)
               ALFA(ISGVB,I)=ALFA(I,ISGVB)
               BETA(ISGVB,I)=BETA(I,ISGVB)
               ALFA(ISGVB+1,I)=ALFA(I,ISGVB+1)
 787           BETA(ISGVB+1,I)=BETA(I,ISGVB+1)
      BETA(ISGVB,ISGVB)=ZERO
      BETA(ISGVB+1,ISGVB+1)=ZERO
      BETA(ISGVB,ISGVB+1)=S1*S2
      BETA(ISGVB+1,ISGVB)=S1*S2
      ALFA(ISGVB,ISGVB)=PT5*OCC(ISGVB)
      ALFA(ISGVB+1,ISGVB+1)=PT5*OCC(ISGVB+1)
      ALFA(ISGVB,ISGVB+1)=ZERO
      ALFA(ISGVB+1,ISGVB)=ZERO
      GOTO 4000
C
C ITERATION SCHEMA FOR NPAIR GVB PAIRS
C
 5000 CONTINUE
C     YCONV=TOL
      NITERY=0
      CALL AZERO(YNEW,2*NPAIR)
 3500 CONTINUE
      CALL AMOVE(YNEW,YOLD,2*NPAIR)
      DO 2000 NP=1,NPAIR
      I=IIGVB(NP,1)
      J=IIGVB(NP,2)
      II=IOFF(I)+I
      JJ=IOFF(J)+J
      HC11=HM(II)
      HC22=HM(JJ)
      IM=MOPOS(I)
      JM=MOPOS(J)
      IT=MOTYPE(I)
      JT=MOTYPE(J)
C     WRITE(6,*)'PAIR,I,J = ',NP,I,J
C     WRITE(6,*)'IM,HM,IT,JT = ',IM,JM,IT,JT
      Y11=HC11+PT5*ZJM(II,IM)
      Y22=HC22+PT5*ZJM(JJ,JM)
      DO 21 KK=1,NSOCC
            K=ISPOS(KK)
            KT=MOTYPE(K)
            IF(IWPAIR(KT).EQ.NP)GOTO 21
C              WRITE(6,*)'IWPAIR(KT),NP',IWPAIR(KT),NP
               Y11=Y11+OCC(KT)*(ZJM(II,KK)-PT5*ZKM(II,KK))
               Y22=Y22+OCC(KT)*(ZJM(JJ,KK)-PT5*ZKM(JJ,KK))
   21 CONTINUE
      Y12=PT5*ZKM(II,JM)
      Y(1)=Y11
      Y(2)=Y12
      Y(3)=Y22
C     CALL OUTTM(Y,3,2,6,'Y MATRIX')
      CALL RSP(2,2,3,Y,YEIV,1,YEIG,AAA,BBB)
C     CALL OUTMX(YEIV,2,1,6,'YEIV')
C     CALL OUTMX(YEIG,2,2,6,'YEIG')
      OCC(IT)=TWO*YEIG(1,1)**2
      OCC(JT)=TWO*YEIG(2,1)**2
C ADD COEFFICIENTS TO YNEW VECTOR TO TEST FOR CONVERGENCE
      YNEW(2*NP-1)=YEIG(1,1)
      YNEW(2*NP  )=YEIG(2,1)
 2000 CONTINUE
C
      YMAX=ABS(YOLD(1)-YNEW(1))
      DO 252 II=1,2*NPAIR
      YEL=ABS(YOLD(II)-YNEW(II))
  252 IF(YEL.GT.YMAX)YMAX=YEL
      NITERY=NITERY+1
      IF(NITERY.GT.100)THEN
               WRITE(6,*)'NON CONVERGENCE IN GVB PAIR COMPUTATION'
               STOP
      END IF
C     WRITE(6,*)'YEL=',YEL
      IF(YEL.GT.YCONV)GOTO 3500
C RECONSTRUCT COUPLING CONSTANTS
      IF(IPRNT.GE.1)WRITE(6,*)'NITERY=',NITERY
      IF(IPRNT.GE.1)CALL OUTMX(OCC,NSHELL,1,6,'NEW OCC VECTOR')
      IF(IPRNT.EQ.0)GOTO 400
      DO 89 I=1,NSHELL
  89  IF(ISHT(I).EQ.3)WRITE(6,*)'CI COEF-SHELL',I,'=',DSQRT(OCC(I)/TWO)
 400  CONTINUE
      DO 888 NP=1,NPAIR
      IB=IIGVB(NP,1)
      JB=IIGVB(NP,2)
      IT=MOTYPE(IB)
      JT=MOTYPE(JB)
      DO 887 I=1,NSHELL
               ALFA(I,IT)=PT5*OCC(I)*OCC(IT)
               BETA(I,IT)=-PT5*PT5*OCC(I)*OCC(IT)
               ALFA(I,JT)=PT5*OCC(I)*OCC(JT)
               BETA(I,JT)=-PT5*PT5*OCC(I)*OCC(JT)
               ALFA(IT,I)=ALFA(I,IT)
               BETA(IT,I)=BETA(I,IT)
               ALFA(JT,I)=ALFA(I,JT)
 887           BETA(JT,I)=BETA(I,JT)
      BETA(IT,IT)=ZERO
      BETA(JT,JT)=ZERO
      S1=DSQRT(OCC(IT)/TWO)
      S2=-DSQRT(OCC(JT)/TWO)
      BETA(IT,JT)=S1*S2
      BETA(JT,IT)=S1*S2
      ALFA(IT,IT)=PT5*OCC(IT)
      ALFA(JT,JT)=PT5*OCC(JT)
      ALFA(IT,JT)=ZERO
      ALFA(JT,IT)=ZERO
  888 CONTINUE
 4000 CONTINUE
      IF(IPRNT.LT.2)RETURN
      WRITE(6,*)'ALFA'
      CALL MATOUT(ALFA,MAXSHL,MAXSHL,NSHELL+1,NSHELL+1,6)
      WRITE(6,*)'BETA'
      CALL MATOUT(BETA,MAXSHL,MAXSHL,NSHELL+1,NSHELL+1,6)
      IF(NPAIR.EQ.1)CALL OUTMX(OCC,NSHELL,1,6,'OCC')
      WRITE(6,600)(NOMO(I),I=1,NSHELL)
      RETURN
      END
      SUBROUTINE UPDPEX(HM,ZJM,ZKM,ITER,MOTYPE,MOPOS,P3
     1                  ,HAMIJ,HAMEIG,HAMEIV,HAMIJ1)
C
C UPDATE CI COEFFICIENTS OF OS-PE-MCSCF
C
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/ENRGY/ESCF,ENUC,TOL,NITER,IDUM,EKIN,EONE,ETOT,ETWO,EPOT,VIR
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4,MAXCOR,NCRUSD
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/ZIJKL/IJKLA,IJKLM
      COMMON/ZNELE/NDOCC,NSOCC,IREAD,IWF,NSHELL,NFIRST,NLAST
      COMMON/ZZMXO/IJDIM,IJMAX,NBL
      PARAMETER(MAXSHL=20)
      COMMON/ZZGEN/ALFA(MAXSHL,MAXSHL),BETA(MAXSHL,MAXSHL),OCC(MAXSHL)
     1 ,NOMO(MAXSHL),ISHT(MAXSHL),IGVB,ISGVB,IBEGIN(MAXSHL)
      COMMON/ZZGVB/NPAIR,IIGVB(3,2),IWPAIR(MAXSHL)
      COMMON/ZZSYM/ISPOS(20)
      COMMON/ZZPEX/PEXC(99),INDPEX(20,99),NCPEX,IPEX,MOPEX(20),NORPEX
     1 ,IICO
      COMMON/ZZCOI/ICOI(5050)
      COMMON/ZZDII/NDIIS,NODIIS,ICOUP,ICAS
      COMMON/ZZLVS/ZLVS,NLVS,NROOT
      DIMENSION HAMIJ(*),HAMEIG(NCPEX,NCPEX),HAMEIV(NCPEX)
      DIMENSION Y(3),YEIG(2,2),YEIV(2),YOLD(6),YNEW(6)
      DIMENSION HM(*),ZJM(NTRI,*),ZKM(NTRI,*),MOTYPE(*),MOPOS(*)
      DIMENSION P3(*),AAA(99),BBB(99),IPQ(2)
      DIMENSION HAMIJ1(*)
      DATA ZERO,PT5,ONE,TWO/0.0D0,0.5D0,1.0D0,2.D0/
      DATA EPS/1.0D-20/FOUR/4.0D0/
      PI=DATAN(ONE)*FOUR
C     TH=ONE/DSQRT(TWO)
      TH=DSQRT(TWO)
      NCONF=NCPEX
C
C CONSTRUCT THE HAMILTONIAN MATRIX
C
      NAMIJ=IOFF(NCONF+1)
C
C FIRST EVALUATE A COMMON PART TO ALL HAMILTONIAN ELEMENTS
C
      HC1=ZERO
      DO 101 I=1,NBASIS
      IT=MOTYPE(I)
      IST=ISHT(IT)
      IF(IT.EQ.NBASIS)IST=NBASIS
      II=IOFF(I+1)
      IF(IST.EQ.1)THEN
      HC1=HC1+HM(II)+P3(II)
      ELSE IF(IST.LE.4) THEN
      HC1=HC1+OCC(IT)*P3(II)
      END IF
 101  CONTINUE
      HC2=ZERO
      DO 102 I=1,NBASIS
      IT=MOTYPE(I)
      II=IOFF(I+1)
      IST=ISHT(IT)
      IF(IT.EQ.NBASIS)IST=NBASIS
      IF(IST.GT.4)GOTO 102
C02-06-89     DO 102 J=1,NBASIS
      DO 103 J=1,NBASIS
      JT=MOTYPE(J)
      JST=ISHT(JT)
      IF(JT.EQ.NBASIS)JST=NBASIS
C02-06-89     IF(JST.EQ.1 .OR. JST.GT.4)GOTO 102
      IF(JST.EQ.1 .OR. JST.GT.4)GOTO 103
      JH=MOPOS(J)
      FAC=ONE
      IF(IST.EQ.1)FAC=TWO
      HC2=HC2+FAC*(ALFA(IT,JT)*ZJM(II,JH)+BETA(IT,JT)*ZKM(II,JH))
C02-06-89  102  CONTINUE
 103  CONTINUE
 102  CONTINUE
      HCORE=HC1+HC2
      IF(IPRNT.GE.1)WRITE(6,*)'HCORE=',HCORE
      IF(ICAS.EQ.0)GOTO 9000
      M=MOPEX(1)
      N=MOPEX(2)
      MM=IOFF(M+1)
      NN=IOFF(N+1)
      MH=MOPOS(M)
      NH=MOPOS(N)
      MN=IOFF(MAX0(M,N))+MIN0(M,N)
C
C HAMILTONIAN ELEMENTS FOR A 3X3 CASSCF
C
      HAMIJ(1)=HCORE+TWO*HM(MM)+ZJM(MM,MH)
      HAMIJ(2)=TH*(HM(MN)+ZKM(MN,MH))
      HAMIJ(3)=HCORE+HM(MM)+HM(NN)+ZJM(NN,MH)+ZKM(NN,MH)
      HAMIJ(4)=ZKM(NN,MH)
      HAMIJ(5)=TH*(HM(MN)+ZKM(MN,NH))
      HAMIJ(6)=HCORE+TWO*HM(NN)+ZJM(NN,NH)
      NAMIJ=6
      NCONF=3
      IF(IPRNT.GE.1)
     *CALL OUTTM(HAMIJ,NAMIJ,NCONF,6,'HAMILTONIAN')
      CALL AMOVE(HAMIJ,HAMIJ1,NAMIJ)
      CALL RSP(NCONF,NCONF,NAMIJ,HAMIJ,HAMEIV,1,HAMEIG,AAA,BBB)
      IROOT=2
      DO 745 IA=1,3
  745 HAMEIV(IA)=HAMEIV(IA)+ENUC
      IF(IPRNT.GE.1)THEN
      WRITE(6,*)'EIGENVECTORS AND EIGENVALUES'
      CALL EIVOUT(HAMEIG,HAMEIV,NCONF,NCONF,NCONF,NCONF,6)
      END IF
      CALL AMOVE(HAMEIG(NROOT,NROOT),PEXC,NCONF)
C     IF(ABS(ONE-PEXC(2)).LT.EPS)THEN
C              ZETA=PI/FOUR
C     ELSE
C              STOP 'NOT READY'
C     END IF
C ROTATE M AND N
C     COSZ=COS(ZETA)
C     SINZ=SIN(ZETA)
C     DO 56 I=1,NBASIS
C     HAMIJ (I)=COSZ*T1(I,M)+SINZ*T1(I,N)
C 56  HAMIJ1(I)=SINZ*T1(I,M)-COSZ*T1(I,N)
C     CALL AMOVE(HAMIJ ,T1(1,M),NBASIS)
C     CALL AMOVE(HAMIJ1,T1(1,N),NBASIS)
C     IF(IPRNT.GE.1)CALL OUTMX(T1,NBASIS,NBASIS,6,'ROTATED T1 MATRIX')
C     CALL EXIT
      RETURN
 9000 CONTINUE
C
C FOR ALL PAIRS OF CONFIGURATIONS EVALUATE <I/H/J>
C
      DO 10000 IC=1,NCONF
      DO 10000 JC=1,IC
      IJC=IOFF(IC)+JC
C
C LOOP
C
C ACCORDING TO NUMBER OF DIVERGENCES BRANCH
C
      NDIV=ICOI(IJC)
      IF(NDIV.GT.1)GOTO 1200
      IF(NDIV.EQ.1)GOTO 1100
C
C NO DIVERGENCE - DIAGONAL ELEMENT
C
C ONE-ELECTRON TERM
      HC1=ZERO
      DO 105 I=1,NORPEX
      IF(INDPEX(I,IC).NE.1)GOTO 105
      IMO=MOPEX(I)
      II=IOFF(IMO+1)
      HC1=HC1+P3(II)*TWO
  105 CONTINUE
C CORE-PEX TERM
      HC2=ZERO
      DO 106 I=1,NORPEX
      IF(INDPEX(I,IC).NE.1)GOTO 106
      IMO=MOPEX(I)
      II=IOFF(IMO+1)
      IH=MOPOS(IMO)
      DO 107 J=1,NBASIS
      JT=MOTYPE(J)
      JJ=IOFF(J+1)
      JST=ISHT(JT)
      IF(JT.EQ.NBASIS)JST=NBASIS
      IF(JST.GT.4)GOTO 107
      HC2=HC2+OCC(JT)*(TWO*ZJM(JJ,IH)-ZKM(JJ,IH))
  107 CONTINUE
  106 CONTINUE
C PEX-PEX TERM
      HC3=ZERO
      DO 108 I=1,NORPEX
      IF(INDPEX(I,IC).NE.1)GOTO 108
      IMO=MOPEX(I)
      II=IOFF(IMO+1)
      IH=MOPOS(IMO)
      DO 109 J=1,NORPEX
      IF(INDPEX(J,IC).NE.1)GOTO 109
      JMO=MOPEX(J)
      JJ=IOFF(JMO+1)
      HC3=HC3+TWO*ZJM(JJ,IH)-ZKM(JJ,IH)
  109 CONTINUE
  108 CONTINUE
      HAMIJ(IJC)=HCORE+HC1+HC2+HC3
      GOTO 1500
C
C MORE THAN ONE DIVERGENCE - ZERO ELEMENT
C
 1200 HAMIJ(IJC)=ZERO
      GOTO 1500
C
C ONE DIVERGENCE
C
 1100 CONTINUE
      III=0
      DO 104 I=1,NORPEX
      IF(INDPEX(I,IC).NE.INDPEX(I,JC))THEN
      III=III+1
      IPQ(III)=I
      END IF
 104  CONTINUE
      IP=IPQ(1)
      IPMO=MOPEX(IP)
      IPP=IOFF(IPMO+1)
      IQ=IPQ(2)
      IQMO=MOPEX(IQ)
      IQH=MOPOS(IQMO)
      HAMIJ(IJC)=ZKM(IPP,IQH)
      GOTO 1500
 1500 CONTINUE
C
C END LOOP
C
10000 CONTINUE
C
C DIAGONALIZE THE HAMILTONIAN AND TAKE FIRST ROOT
C
      IF(IPRNT.GE.1)
     *CALL OUTTM(HAMIJ,NAMIJ,NCONF,6,'HAMILTONIAN')
      CALL AMOVE(HAMIJ,HAMIJ1,NAMIJ)
      CALL RSP(NCONF,NCONF,NAMIJ,HAMIJ,HAMEIV,1,HAMEIG,AAA,BBB)
      IROOT=1
      IF(IPRNT.GE.1)THEN
      WRITE(6,*)'EIGENVECTORS AND EIGENVALUES'
      CALL EIVOUT(HAMEIG,HAMEIV,NCONF,NCONF,NCONF,NCONF,6)
      WRITE(6,*)'ENERGY FROM CI = ', HAMEIV(IROOT)+ENUC
      END IF
      CALL AMOVE(HAMEIG(1,IROOT),PEXC,NCONF)
C     CALL AMOVE(HAMEIG,PEXC,NCONF)
      WRITE(3,*)'ENERGY FROM CI = ', HAMEIV(IROOT)+ENUC
 8000 CONTINUE
C
C NEW VECTOR CALCULATED; UPDATE COUPLING COEFFICIENTS
C
C     IF(ITER.GT.0)RETURN
C
C EVALUATE OCCUPATION VECTOR FOR PEX
C
      DO 801 IA=1,NORPEX
      IMO=MOPEX(IA)
      ISH=MOTYPE(IMO)
      CK=ZERO
      IF(IPRNT.GE.2)WRITE(6,*)'IA,IMO,ISH',IA,IMO,ISH
      DO 802 ICONF=1,NCONF
      IF(INDPEX(IA,ICONF).EQ.1)CK=CK+PEXC(ICONF)**2
  802 CONTINUE
      OCC(ISH)=TWO*CK
  801 CONTINUE
      IF(IPRNT.GE.1)CALL OUTMX(OCC,NSHELL,1,6,'OCC ')
      OCCT=ZERO
      DO 815 I=1,NBASIS
      IT=MOTYPE(I)
  815 IF(IT.NE.NBASIS)OCCT=OCCT+OCC(IT)
      IF(IPRNT.GE.1)WRITE(6,*)'OCCT=',OCCT
      NNOPEX=NSHELL-NORPEX
C
C COMPUTE NEW ALFA AND BETA MATRICES
C
      DO 401 I=1,NSHELL
      IF(ISHT(I).NE.5)GOTO 401
      IX=I-NNOPEX
      DO 402 J=1,I
      JX=J-NNOPEX
      IF(ISHT(J).NE.5)THEN
      ALFA(I,J)=OCC(I)*OCC(J)/TWO
      BETA(I,J)=-OCC(I)*OCC(J)/TWO/TWO
      ELSE
      CK=ZERO
      DO 803 ICONF=1,NCONF
      IF(INDPEX(IX,ICONF).EQ.1 .AND.
     1   INDPEX(JX,ICONF).EQ.1)CK=CK+PEXC(ICONF)**2
  803 CONTINUE
      ALFA(I,J)=TWO*CK
      CK=ZERO
      DO 805 IC=1,NCONF
      DO 806 JC=1,NCONF
      IJC=IOFF(MAX0(IC,JC))+MIN0(IC,JC)
      NDIV=ICOI(IJC)
      IF(NDIV.NE.1)GOTO806
      IF(INDPEX(IX,IC).NE.1)GOTO 806
      IF(INDPEX(JX,JC).NE.1)GOTO 806
      IF(INDPEX(IX,JC).EQ.1 .OR. INDPEX(JX,IC).EQ.1)GOTO 806
      CK=CK+PEXC(IC)*PEXC(JC)
  806 CONTINUE
  805 CONTINUE
      BETA(I,J)=-ALFA(I,J)/TWO+CK
      END IF
      ALFA(J,I)=ALFA(I,J)
      BETA(J,I)=BETA(I,J)
  402 CONTINUE
  401 CONTINUE
C
      IF(IPRNT.LE.0)RETURN
      WRITE(6,*)'ALFA'
      CALL MATOUT(ALFA,MAXSHL,MAXSHL,NSHELL,NSHELL,6)
      WRITE(6,*)'BETA'
      CALL MATOUT(BETA,MAXSHL,MAXSHL,NSHELL,NSHELL,6)
      RETURN
      END
