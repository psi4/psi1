c             INTDER
c
c  1. Original version by Dr Wesley D Allen  (1984 - 1987 ?)
c
c  2. Modified to perform multiple sets of transformations
c                                  - Brian F Yates   21 December  1987
c
c  3. Modified to write force constants out to BMAT
c                                  - Brian F Yates    3 February  1988
c
c  4. Core dimension reduced from 1200000 to 800000
c                                  - Brian F Yates   11 May       1988
c
c  5. Reading of gradients when GEOM=1 fixed up.  Search cbfy24
c                                  - Brian F Yates   24 September 1988
c
c  6. Use subroutine 'bottom' to find end of file. Search cbfy7
c                                  - Brian F Yates    7 October   1988
c
c  7. Include Wesley Allen's modifications of January 16 1988:
c       - Program now does  nder=4  with  neq=1
c       - Some additions for the transformation of dipole moment
c         derivatives also included
c     Include Wesley's corrections for dipole moment transformations
c     of February 15 1988.
c                                  - Brian F Yates    3 February  1989
c
c  8. Take out all routines that are in IOMR FORTRAN.
c                                  - Brian F Yates    3 February  1989
c
c  9. Moved to PSI distribution disk on 3/4/89 - clj.
c
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION AZ(700000),TYPE(200),U(200,20),IA(200,6),IU(200,0:20)
      CHARACTER LABEL*10,TYPE*5
      COMMON/MDIM/M1,M2,M3,M4,M5,M6,M7,M8,M9,M10,M11,M12
 1    FORMAT(A10)
 2    FORMAT(2I5,25X,I5)
 3    FORMAT(1X,'NO INPUT FOUND.')
      MAXCOR= 700000
      IIN1=5
      IOUT=6
      CALL TSTART(3)
      CALL TSTART(IOUT)
      CALL LOCATE(IIN1,'# INTDER #',IERR)
      IF(IERR.NE.0) GO TO 1000
      READ(IIN1,2) NA,NS,NDUM
      NAD=NA+NDUM
      NC=3*NA
      NCD=3*NAD
      M1=1
      M2=M1+NCD
      M3=M2+NA
      M4=M3+NS
      M5=M4+NS
      M6=M5+NS*NC
      M7=M6+NC*NC
      M8=M7+NC*NC
      M9=M8+NC*NC
      M10=M9+NC*NC
      M11=M10+NC*NC
      M12=M11+3*NC
      NCORE=MAXCOR-M12+1
      CALL INTDER(NAD,NC,NS,AZ(M1),AZ(M2),AZ(M3),AZ(M4),AZ(M5),AZ(M6),
     $ AZ(M7),AZ(M8),AZ(M9),AZ(M10),AZ(M11),AZ(M12),
     $ TYPE,U,IA,IU,NCORE,IFLAG)
      CALL TSTOP(3)
      CALL TSTOP(IOUT)
      STOP
 1000 WRITE(IOUT,3)
      STOP
      END
 
C////////////////////////////////////////////////////////////////////
      SUBROUTINE INTDER(NAD,NC,NS,XA,XMASS,S,SS,B,BS,A,UGF,XS,XT,XKI,
     $        Z,TYPE,U,IA,IU,NCORE,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER LABEL*10,TYPE*5,NUMTST*5
      DIMENSION IOPT(16),TYPE(NS),IA(NS,6),IU(NS,0:1),S(NS),SS(NS)
      DIMENSION Z(1),U(NS,1),IR(4),XR(4),XA(NAD,3),B(NS,NC)
      DIMENSION A(NC,NC),UGF(NC,1),BS(NC,NC),XS(NC,NC)
      DIMENSION XT(NC,NC),XMASS(1),DIP(3),XKI(NC,3)
      PARAMETER(BOHR=0.52917706D0,RAD=57.29577951D0,TOLINV=1.0D-10)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      COMMON /DIPOLE/DIP,QQ
 1    FORMAT(A10)
 3    FORMAT(16I5)
 4    FORMAT(A5,5I5,A5)
 5    FORMAT(I5,4(I4,F14.10))
 6    FORMAT(20X,3F20.10)
 7    FORMAT(1X,'B MATRIX DETERMINANT = 0 .')
 8    FORMAT(1X,'AT EQUILIBRIUM ALL INTERNAL GRADIENTS = 0 .')
 9    FORMAT(1X,'NOT ENOUGH CORE'/1X,I10,' WORDS NEEDED AND ONLY',I10,
     $          ' WORDS AVAILABLE')
 10   FORMAT(3X,'PROGRAM OPTIONS'//
     $'   NA',5X,' NSYM',5X,'  NEQ',5X,' NINV',5X,'NTEST',5X,'NFREQ',
     $5X,' NDIP',5X,'MULTI'/
     $5X,'   NS',5X,' NDER',5X,' NPRT',5X,' NDUM',5X,'NGEOM',5X,'IRINT',
     $5X,'NSTOP')
 11   FORMAT(//1X,'NUCLEAR CARTESIAN COORDINATES (BOHR)'/)
 12   FORMAT(1X,3F20.10)
 13   FORMAT(//,1X,'DEFINITION OF INTERNAL COORDINATES')
 14   FORMAT(/,1X,'SIMPLE INTERNAL COORDINATES'/)
 15   FORMAT(/,1X,'SYMMETRY INTERNAL COORDINATES'/)
 16   FORMAT('S(',I2,')=',2X,4(F13.10,' L(',I2,')',3X),
     $     5(/,8X,4(F13.10,' L(',I2,')',3X)))
 17   FORMAT('L(',I2,')=',2X,A5,4I5,A5)
 18   FORMAT(///,1X,'VALUES OF SIMPLE INTERNAL COORDINATES ',
     $      '(ANG. OR DEG.)'/)
 19   FORMAT(4(I4,F16.10))
 20   FORMAT(/,1X,'B MATRIX FOR (SYMMETRY) INTERNAL COORDINATES'/)
 21   FORMAT(6F12.6)
 22   FORMAT(//' THIS VERSION OF THE PROGRAM USES NUMERICAL '/
     $     'ZR(M,N,P,Q) AND SR(I,J,K,L) MATRICES TO COMPUTE '/
     $     'CONTRIBUTIONS TO THE QUARTIC FORCE CONSTANTS ARISING '/
     $     'FROM NONZERO GRADIENTS.')
 23   FORMAT(/' B MATRIX INVERSION UNSUCCESSFUL FOR GIVEN TOLERANCE.')
 24   FORMAT(/' B*A MATRIX'/)
 25   FORMAT(/' NA FROM INPUT IS INCONSISTENT WITH THE HEADER IN A'/
     $    ' CARTESIAN DERIVATIVE FILE.   IFLAG=',I5)
 26   FORMAT(F20.10)
 27   FORMAT(///,1X,'VALUES OF SYMMETRY INTERNAL COORDINATES ',
     $      '(ANG. OR RAD.)'/)
 28   FORMAT(3F20.10)
 29   FORMAT(F12.6)
 30   FORMAT(//,1X,'NORMAL MODE ANALYSIS IN INTERNAL COORDINATES')
 31   FORMAT(//,1X,'NORMAL MODE ANALYSIS IN CARTESIAN COORDINATES')
 32   FORMAT(/,1X,'INTDER',/1X,'A PROGRAM TO PERFORM GENERAL ',
     $ 'CURVILINEAR TRANSFORMATIONS'/' AMONG HIGHER-ORDER DERIVATIVES'/
     $ 1X,'WRITTEN BY WESLEY D. ALLEN'/)
 33   FORMAT(//'NUCLEAR MASSES'/)
 34   FORMAT(4(I4,F12.6,4X))
 35   FORMAT(I5,F20.10)
 36   FORMAT(/,1X,'EXECUTION STOPPED DUE TO ERROR IN GFMAT.',
     $      '  IFLAG=',I5)
 37   FORMAT(/,1X,'EXECUTION STOPPED DUE TO ERROR IN NORMCO.',
     $      '  IFLAG=',I5)
 38   FORMAT(1X,  'REFERENCE VALUE IS ',F20.10,' A.')
cbfy
 39   FORMAT(///' The input options specified are not compatible with ',
     $       'multiple'/' transformations, i.e. IOPT(15) > 0 (in the ',
     $       'current version of this'/' program).'/,
     $       ' Your values : NINV =',I7,',  NGEOM =',I3,
     $       ',  NFREQ =',I3,',  IRINT =',I3/
     $       ' should be   : NINV = 0 or 1,  NGEOM =  0, |NFREQ| < 4, ',
     $       '|IRINT| < 2'/)
cbfy
      IFLAG=0
      IIN1=5
      IOUT=6
      ICHECK=3
      I11=11
      I12=12
      I15=15
      I16=16
      I17=17
      I18=18
      I20=20
      I21=21
      I24=24
      I25=25
      IBMAT = 40
      ISCR1=91
      ISCR2=92
      ISCR3=93
      ISCR4=94
      ISCR5=95
      ISCR6=96
      ISCR7=97
      ISCR8=98
      ISCR9=80
      ISCR10=81
      NCHUNK=1000
      ENERGY=ZERO
      CALL NOUNFL
      CALL RFILE(ISCR1)
      CALL RFILE(ISCR2)
      CALL RFILE(ISCR3)
      CALL RFILE(ISCR4)
      CALL RFILE(ISCR6)
      CALL RFILE(ISCR7)
      CALL RFILE(ISCR8)
      CALL RFILE(ISCR9)
      CALL RFILE(ISCR10)
      CALL LOCATE(IIN1,'# INTDER #',IERR)
COMMENT111111...................
 105  READ(IIN1,3) (IOPT(K),K=1,16)
      NA=IOPT(1)
      NS=IOPT(2)
      NSYM=IOPT(3)
      NDER=IOPT(4)
      NEQ=IOPT(5)
      NPRT=IOPT(6)
      NINV=IOPT(7)
      NDUM=IOPT(8)
      NTEST=IOPT(9)
      NGEOM=IOPT(10)
      NFREQ=IOPT(11)
      IRINT=IOPT(12)
      NVEC=IOPT(13)
      NSTOP=IOPT(14)
cbfy
      MULTI=IOPT(15)
      IF ((MULTI.GT.1).AND.((NINV.GE.2).OR.(NGEOM.EQ.1).OR.
     $      (IABS(NFREQ).EQ.4).OR.(IABS(IRINT).GT.1))) THEN
         WRITE(IOUT,39) NINV,NGEOM,NFREQ,IRINT
         STOP
         END IF
cbfy
      IF(NVEC.EQ.1) THEN
         IOPT(5)=1
         NEQ=1
      END IF
      NC=3*NA
      NAD=NA+NDUM
      DO 100  J=1,NS
      IA(J,6)=0
      IF(NTEST.NE.0) IA(J,6)=NTEST
 100  CONTINUE
      DO 110  J=1,NS
      READ(IIN1,4) TYPE(J),(IA(J,K),K=1,5),NUMTST
      IF(TYPE(J).EQ.'STRE ') TYPE(J)=' STRE'
      IF(TYPE(J).EQ.'BEND ') TYPE(J)=' BEND'
      IF(TYPE(J).EQ.'LIN1 ') TYPE(J)=' LIN1'
      IF(TYPE(J).EQ.'TORS ') TYPE(J)=' TORS'
      IF(TYPE(J).EQ.' OUT '.OR.TYPE(J).EQ.'OUT  ') TYPE(J)='  OUT'
      IF(TYPE(J).EQ.' SPF '.OR.TYPE(J).EQ.'SPF  ') TYPE(J)='  SPF'
      IF(NUMTST.EQ.'  ST '.OR.NUMTST.EQ.' ST  '.OR.NUMTST.EQ.'ST   ')
     $      NUMTST='   ST'
      IF(NTEST.NE.0.AND.NUMTST.EQ.'   ST') IA(J,6)=0
      IF(TYPE(J).EQ.'  SPF') THEN
            IF(IA(J,3).NE.0)  READ(IIN1,26) S(J)
      END IF
 110  CONTINUE
      IF(NSYM.EQ.0) GO TO 125
      DO 115  K=1,NSYM
 115  IU(K,0)=0
 116  READ(IIN1,5) L,(IR(K),XR(K),K=1,4)
      IF(L.EQ.0) GO TO 125
      IPOINT=IU(L,0)
      DO 120  K=1,4
      M=IR(K)
      IF(M.GT.0) THEN
         IPOINT=IPOINT+1
         IU(L,IPOINT)=M
         U(L,IPOINT)=XR(K)
      END IF
 120  CONTINUE
      IU(L,0)=IPOINT
      GO TO 116
 125  DO 121  K=1,NSYM
      M=IU(K,0)
      UNORM=ZERO
      DO 122  L=1,M
 122  UNORM=UNORM+U(K,L)*U(K,L)
      UNORM=ONE/DSQRT(UNORM)
      DO 123  L=1,M
 123  U(K,L)=U(K,L)*UNORM
 121  CONTINUE
cbfy
      DO 800 IMULT=1,MAX(MULTI,1)
cbfy
cbfy24 Comment out following line: even if geometry is to be read from
c    input file, we still want to position the pointer at the gradients.
c     IF(NGEOM.EQ.0) THEN
cbfy
         IF (MULTI.EQ.0) THEN
cbfy
cbfy7  Replace following 2 lines with call to subroutine 'bottom'.
c126      READ(I11,1,END=127) LABEL
c         GO TO 126
          call bottom(i11)
c127      IK=2*NA+NDUM+2
 127      IK=2*NA+NDUM+1
cbfy7
          DO 128  K=1,IK
 128      BACKSPACE I11
cbfy
         ELSE
          READ(I11,1) LABEL
         END IF
cbfy
          READ(I11,35) NA11,ENERGY
          DO 130  J=1,NAD
 130      READ(I11,6) (XA(J,K),K=1,3)
cbfy
          IF ((MULTI.NE.0).AND.(NEQ.EQ.0)) THEN
c            Skip over 1st derivatives in File11
             DO 220 K=1,NA
 220            READ(I11,1) LABEL
          END IF
cbfy
cbfy24 See comment above about reading the geometry.
cbfy  ELSE IF (NGEOM.EQ.1) THEN
           IF (NGEOM.EQ.1) THEN
          DO 210  J=1,NAD
 210      READ(IIN1,28) (XA(J,K),K=1,3)
      END IF
      DO 214  J=1,NS
      IF(TYPE(J).EQ.'  SPF'.AND.IA(J,3).EQ.0) THEN
         CALL VECT1(NAD,IA(J,1),IA(J,2),XT(1,1),XA,S(J))
         S(J)=S(J)*BOHR
      END IF
 214  CONTINUE
      IF(NFREQ.NE.0.OR.NVEC.GT.0) THEN
          READ(IIN1,29) (XMASS(I),I=1,NA)
cbfy
          IF (MULTI.GT.1) THEN
             DO 230 I=1,NA
 230            BACKSPACE IIN1
          ENDIF
cbfy
      END IF
      DO 212  I=1,NA
      IF(NVEC.GT.0) THEN
          XT(I,1)=XMASS(I)
      ELSE
          XT(I,1)=ONE
      END IF
 212  CONTINUE
C     *********************************
      WRITE(IOUT,32)
      WRITE(IOUT,10)
      WRITE(IOUT,3)(IOPT(K),K=1,16)
      WRITE(IOUT,11)
      DO 133  J=1,NAD
 133  WRITE(IOUT,12) (XA(J,K),K=1,3)
      DO 131  I=1,NAD
      DO 131  J=1,3
 131  XA(I,J)=XA(I,J)*BOHR
      WRITE(IOUT,13)
      WRITE(IOUT,14)
      DO 134  J=1,NS
      NUMTST='     '
      IF(NTEST.NE.0.AND.IA(J,6).EQ.0) NUMTST='   ST'
      WRITE(IOUT,17) J,TYPE(J),(IA(J,K),K=1,4),NUMTST
      IF(TYPE(J).EQ.'  SPF') WRITE(IOUT,38) S(J)
 134  CONTINUE
      DO 136  J=1,NS
      DO 136  I=1,NC
 136  UGF(I,J)=ZERO
      IF(NSYM.EQ.0) GO TO 145
      WRITE(IOUT,15)
      DO 137  I=1,NSYM
      LL=IU(I,0)
      WRITE(IOUT,16) I,(U(I,L),IU(I,L),L=1,LL)
      DO 137  L=1,LL
      K=IU(I,L)
 137  UGF(I,K)=U(I,L)
 145  IF(LPRT(4,NPRT).LT.4) GO TO 150
      DO 141  J=1,NAD
 141  WRITE(ICHECK,142) (XA(J,K),K=1,3)
 142  FORMAT(3F10.7)
      DO 138  I=1,NSYM
 138  WRITE(ICHECK,139) (UGF(I,K),K=1,NS)
 139  FORMAT(8F10.7)
C     **********************************
COMMENT2222222222.......................
 150  CALL MACHB(NAD,NC,NS,XA,TYPE,IA,B,S)
      IF(NSYM.LE.0) THEN
         DO 154  I=1,NS
         SS(I)=S(I)
         DO 154  J=1,NC
 154     BS(I,J)=B(I,J)
      ELSE
         DO 156  J=1,NC
         DO 156  I=1,NSYM
           BS(I,J)=ZERO
           DO 158  L=1,IU(I,0)
           K=IU(I,L)
 158       BS(I,J)=BS(I,J)+U(I,L)*B(K,J)
 156     CONTINUE
         DO 160  I=1,NSYM
           SS(I)=ZERO
           DO 160  L=1,IU(I,0)
           K=IU(I,L)
 160       SS(I)=SS(I)+U(I,L)*S(K)
      END IF
      IF(NVEC.GT.0) THEN
           WRITE(IOUT,33)
           WRITE(IOUT,34) (I,XMASS(I),I=1,NA)
      END IF
      NSX=NS
      IF(NSYM.GT.0) NSX=NSYM
      NSY=NSX
      DO 162  I=1,NS
      UGF(I,1)=S(I)
      IF(TYPE(I).EQ.' BEND'.OR.TYPE(I).EQ.' LIN1'.OR.TYPE(I).EQ.
     $   ' TORS'.OR.TYPE(I).EQ.'  OUT') THEN
      UGF(I,1)=UGF(I,1)*RAD
      END IF
 162  CONTINUE
      WRITE(IOUT,18)
      WRITE(IOUT,19) (I,UGF(I,1),I=1,NS)
      IF(NSYM.GT.0) THEN
      WRITE(IOUT,27)
      WRITE(IOUT,19) (I,SS(I),I=1,NSYM)
      END IF
      IF(LPRT(1,NPRT).GE.2) THEN
         WRITE(IOUT,20)
         DO 170  I=1,NSX
         WRITE(IOUT,*) 'I= ',I
 170     WRITE(IOUT,21) (BS(I,J),J=1,NC)
      END IF
      IF(NFREQ.LT.0) GO TO 600
      IF(NINV.GT.0) THEN
           NSY=NC
           IF(NTEST.EQ.0) GO TO 175
      END IF
      CALL BINVRT(NSX,NC,XT(1,1),BS,UGF,A,IFLAG,TOLINV,1)
      IF(IFLAG.NE.0) GO TO 1002
COMMENT44444444444........................
 175  N1=1
      IF(NDER.EQ.1.AND.NEQ.EQ.0) GO TO 1004
      IF(NDER.EQ.1) THEN
         N2=1
         N3=1
         N4=1
         N5=N1+NC
         GO TO 180
      END IF
      IF(NEQ.EQ.0) THEN
         N2=1
      ELSE
         N2=NC+1
      END IF
      IF(NDER.EQ.2) THEN
         N3=1
         N4=1
         N5=N2+NC**2
         GO TO 180
      END IF
      N3=N2+NC**2
      IF(NDER.EQ.3) THEN
         N4=1
         N5=N3+NC**3
         GO TO 180
      END IF
      IF(NDER.EQ.4) THEN
         N4=N3+NC**3
         N5=N4+NC**4
         GO TO 180
      END IF
 180  NMM=NCHUNK*3
      NT=N5+NMM
      MDER=NDER+NEQ
      IF(MDER.GE.4) THEN
           NNN=NC**3
           N6=N5+NNN
           NMM=MAX0(NMM,2*NNN)
           NT=N5+NMM
      END IF
      IF(MDER.GE.5) THEN
           NNN=NC**4
           N7=NT
           N8=N7+NNN
           NT=N8+NNN
      END IF
      IF(NT.GT.NCORE) GO TO 1006
      IF(NINV.EQ.2) THEN
        CALL INPFKM(NC,NDER,NEQ,NSX,Z(N1),Z(N2),Z(N3),Z(N4))
      END IF
      IF(MDER.GE.3) THEN
         IF(ABS(NTEST).EQ.1) THEN
            CALL NUMX(NAD,NC,NS,NSX,XA,TYPE,IA,XT(1,1),A,S,UGF,XS)
         END IF
         CALL MACHX(NAD,NC,NS,NSX,IOPT,XA,TYPE,IA,A,S,U,IU,UGF,XS)
         IF(NTEST.EQ.1) THEN
            CALL SRTST1(NC,NS,NSX,NSYM,IA,XS,XT)
         END IF
      END IF
      IF (MDER.GE.4) THEN
         IF(ABS(NTEST).EQ.2) THEN
            CALL NUMY(NAD,NC,NS,NSX,XA,TYPE,IA,A,S,Z(N5),Z(N6),UGF)
         END IF
       CALL MACHY(NAD,NC,NS,NSX,IOPT,XA,TYPE,IA,A,S,U,IU,Z(N5),Z(N6))
         IF(NTEST.EQ.2) THEN
            CALL SRTST2(NC,NS,NSX,NSYM,IA,Z(N5),Z(N6))
         END IF
      END IF
      IF (MDER.GE.5) THEN
       CALL NUMZ(NAD,NC,NS,NSX,XA,TYPE,IA,A,S,Z(N5),Z(N7),Z(N8))
       CALL MACHZ(NAD,NC,NS,NSX,IOPT,XA,TYPE,IA,A,S,U,IU,Z(N7),Z(N8))
      END IF
      IF(NSTOP.EQ.1) GO TO 700
COMMENT5555555555...................................
      NRUN=0
      IF(NVEC.GT.0) THEN
         CALL VCXKI(NA,NAD,NC,XMASS,XA,XKI)
      END IF
 200  NRUN=NRUN+1
      IF(NINV.LE.0) THEN
      CALL LINTR(NC,NSX,NC,IOPT,A,XS,Z(N1),Z(N2),Z(N3),Z(N4),Z(N5),
     $         NMM,NRUN,IFLAG)
      ELSE
      CALL LINTR(NC,NC,NSX,IOPT,BS,XS,Z(N1),Z(N2),Z(N3),Z(N4),Z(N5),
     $         NMM,NRUN,IFLAG)
      END IF
      IF(IFLAG.NE.0) GO TO 1008
      IF(NVEC.GT.0) THEN
      CALL VCDER1(NA,NC,NSX,NINV,XMASS,XKI,A,Z(N1),Z(N2),
     $        Z(N3),Z(N4),Z(N5),NRUN)
      END IF
      IF(NDER.LE.1) GO TO 500
      IF(NDER.EQ.2.AND.NEQ.EQ.0) GO TO 500
      IF(NEQ.NE.0) THEN
         CALL MACHF2(NC,NSX,NINV,Z(N1),Z(N2),UGF,Z(N5))
      END IF
      IF(NDER.LE.2) GO TO 500
C      ADD X-V(M,N) CONTRIBUTIONS TO 3RD AND PERHAPS 4TH DERIVATIVES.
      CALL XF2(NDER,NC,NSX,NINV,BS,Z(N2),Z(N3),Z(N4),Z(N5),UGF,XS,XT)
      IF(NDER.EQ.3.AND.NEQ.EQ.0) GO TO 500
C      FORM Y MATRICES AND WRITE TO DISK.
      CALL TRSET(ICHECK)
      CALL TSET(ICHECK)
C      COMPLETE V(M,N,P) COMPUTATION.
      IF(NEQ.NE.0) THEN
           CALL MACHF3(NC,NSX,NINV,Z(N1),Z(N3),Z(N5),Z(N6))
      END IF
      IF(NDER.LE.3) GO TO 500
C      ADD X-V(M,N,P) CONTRIBUTIONS TO 4TH DERIVATIVES.
      CALL XF3(NC,NSX,NINV,BS,UGF,XS,XT,Z(N3),Z(N4),Z(N5))
C      ADD Y-V(M,N) CONTRIBUTIONS TO 4TH DERIVATIVES.
      CALL YF2(NC,NSX,NINV,BS,UGF,XS,Z(N2),Z(N4),Z(N5))
      IF(NDER.EQ.4.AND.NEQ.EQ.0) GO TO 500
      WRITE(IOUT,22)
C      FORM Z MATRIX ELEMENTS NUMERICALLY AND
C        COMPLETE THE V(M,N,P,Q) COMPUTATION.
      CALL MACHF4(NC,NSX,NINV,Z(N1),Z(N4),Z(N7),Z(N5))
 500  CALL FCOUT(NC,NS,NSY,NEQ,NDER,NINV,NVEC,NRUN,SS,ENERGY,
     $           Z(N1),Z(N2),Z(N3),Z(N4))
      IF(NVEC.EQ.1.AND.NRUN.LT.3) GO TO 200
 600  NFREQ=IABS(NFREQ)
      IF(NFREQ.NE.0.AND.NFREQ.NE.2) THEN
         WRITE(IOUT,30)
cbfy
         IF (IOPT(11).GT.0) THEN
c           Reposition File16
            NLINES = (NSX*NSX +2)/3 + 1
            DO 610 I=1,NLINES
 610           BACKSPACE I16
         END IF
cbfy
         CALL GFMAT(NA,NAD,NC,NSX,NFREQ,IRINT,IA,
     $           XMASS,XA,S,BS,UGF,A,XS,XT,XS,IFLAG)
         IF(IFLAG.NE.0) GO TO 1010
      END IF
      IF (NFREQ.EQ.2.OR.NFREQ.EQ.3) THEN
         WRITE(IOUT,31)
cbfy
         IF (IOPT(11).GT.0) THEN
c           Reposition File15
            NLINES = (NC*NC +2)/3 + 1
            DO 620 I=1,NLINES
 620           BACKSPACE I15
         END IF
cbfy
         CALL NORMCO(NA,NAD,NC,NSX,NFREQ,IRINT,
     $            XMASS,XA,BS,UGF,A,XS,XT,XS,IFLAG)
         IF(IFLAG.NE.0) GO TO 1012
      END IF
 700  CONTINUE
cbfy
      call srew(iscr1)
      call srew(iscr2)
      call srew(iscr3)
      call srew(iscr4)
      call srew(iscr6)
      call srew(iscr7)
      call srew(iscr8)
      call srew(iscr9)
      call srew(iscr10)
 800  CONTINUE
cbfy
      CALL RCLOSE(ISCR1,4)
      CALL RCLOSE(ISCR2,4)
      CALL RCLOSE(ISCR3,4)
      CALL RCLOSE(ISCR4,4)
      CALL RCLOSE(ISCR6,4)
      CALL RCLOSE(ISCR7,4)
      CALL RCLOSE(ISCR8,4)
      CALL RCLOSE(ISCR9,4)
      CALL RCLOSE(ISCR10,4)
      RETURN
 1002 IF(IFLAG.EQ.1) THEN
         WRITE(IOUT,7)
      ELSE IF(IFLAG.EQ.2) THEN
         WRITE(IOUT,23)
         WRITE(IOUT,24)
         DO 1003  I=1,NSX
 1003    WRITE(IOUT,21) (UGF(I,J),J=1,NSX)
      END IF
      RETURN
 1004 WRITE(IOUT,8)
      RETURN
 1006 WRITE(IOUT,9)  NT,NCORE
      RETURN
 1008 WRITE(IOUT,25) IFLAG
      RETURN
 1010 WRITE(IOUT,36) IFLAG
      RETURN
 1012 WRITE(IOUT,37) IFLAG
      RETURN
      END
C/////////////////////////////////////////////////////////////////
      SUBROUTINE MACHB(NAD,NC,NS,XA,TYPE,IA,B,S)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER IL(5)
      CHARACTER TYPE*5
      DIMENSION TYPE(NS),IA(NS,6),B(NS,NC),XA(NAD,3),S(NS)
      DIMENSION V(3,5)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0)
      DO 100  I=1,NS
         DO 5  J=1,NC
 5       B(I,J)=ZERO
           NIA=0
           K1=IA(I,1)
           K2=IA(I,2)
           K3=IA(I,3)
           K4=IA(I,4)
           K5=IA(I,5)
           IL(1)=3*(K1-1)
           IL(2)=3*(K2-1)
           IL(3)=3*(K3-1)
           IL(4)=3*(K4-1)
           IL(5)=3*(K5-1)
      IF(TYPE(I).NE.' STRE') GO TO 10
         CALL VECT1(NAD,K1,K2,V(1,1),XA,W)
         DO 6  K=1,3
  6      V(K,2)=-V(K,1)
         NIA=2
         GO TO 80
 10   IF(TYPE(I).NE.' BEND') GO TO 15
         CALL VECT2(NAD,K1,K2,K3,V(1,1),V(1,2),V(1,3),XA,W)
         NIA=3
         GO TO 80
 15   IF(TYPE(I).NE.' LIN1') GO TO 25
         CALL VECT3(NAD,K1,K2,K3,K4,V(1,1),V(1,2),V(1,3),XA,W)
         NIA=3
         GO TO 80
 25   IF(TYPE(I).NE.'  OUT') GO TO 30
         CALL VECT5(NAD,K1,K2,K3,K4,V(1,1),V(1,2),V(1,3),V(1,4),XA,W)
         NIA=4
         GO TO 80
 30   IF(TYPE(I).NE.' TORS') GO TO 35
         CALL VECT6(NAD,K1,K2,K3,K4,V(1,1),V(1,2),V(1,3),V(1,4),XA,W)
         NIA=4
         GO TO 80
 35   IF(TYPE(I).NE.'  SPF') GO TO 40
         CALL VECT1(NAD,K1,K2,V(1,1),XA,W)
         DO 36  K=1,3
 36      V(K,2)=-V(K,1)
         NIA=2
         FACT=S(I)/(W*W)
         W=ONE-S(I)/W
         DO 38  L=1,2
         DO 38  K=1,3
 38      V(K,L)=V(K,L)*FACT
         GO TO 80
 40   CONTINUE
 80   DO 85  K=1,NIA
      DO 85  J=1,3
 85   B(I,IL(K)+J)=V(J,K)
      S(I)=W
 100  CONTINUE
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE MACHX(NAD,NC,NS,NSX,IOPT,XA,TYPE,IA,A,S,U,IU,X,SR)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER TYPE*5
      INTEGER R,RP,NSX,IOPT(16)
      DIMENSION TYPE(NS),IA(NS,6),A(NC,NC),X(NC,NC),SR(NC,NC)
      DIMENSION XA(NAD,3),S(NS),U(NS,1),IU(NS,0:1)
      DIMENSION H11(3,3),H21(3,3),H22(3,3),H31(3,3),H32(3,3)
      DIMENSION H33(3,3),H41(3,3),H42(3,3),H43(3,3),H44(3,3)
      DIMENSION E21(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(/,1X,'NUMERICAL SR(I,J) AND X(M,N) MATRICES USED FOR',/,
     $  ' SIMPLE INTERNAL COORDINATE',I5)
    2 FORMAT(/,1X,'SR(I,J) AND X(M,N) MATRICES SET TO ZERO FOR',/,
     $  ' SIMPLE INTERNAL COORDINATE',I5)
      NSYM=IOPT(3)
      IF(NSYM.NE.0) THEN
         ISCR=ISCR2
      ELSE
         ISCR=ISCR1
      END IF
C     ***********************************
      DO 500  R=1,NS
         DO 10  N=1,NC
         DO 10  M=1,NC
 10      X(M,N)=ZERO
C  OPTION
         DO 49  J=1,NC
         DO 49  I=1,NC
 49      SR(I,J)=ZERO
C  **************
         IF(IA(R,6).EQ.-1) GO TO 275
         IF(TYPE(R).NE.' STRE') GO TO 25
         K1=IA(R,1)
         K2=IA(R,2)
         L1=3*(K1-1)
         L2=3*(K2-1)
         CALL HIJS1(NAD,K1,K2,XA,H11)
C   OPTION
              DO 28  J=1,3
              DO 28  I=1,3
              SR(L1+I,L1+J)=H11(I,J)
              SR(L2+I,L2+J)=H11(I,J)
              SR(L1+I,L2+J)=-H11(I,J)
 28           SR(L2+I,L1+J)=-H11(I,J)
C  *************
         CALL AHX2(NC,NSX,L1,L2,H11,A,X)
         GO TO 300
 25      IF(TYPE(R).NE.' BEND') GO TO 75
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
         CALL HIJS2(NAD,K1,K2,K3,XA,H11,H21,H31,H22,H32,H33)
C  OPTION
      DO 48  J=1,3
      DO 48  I=1,3
      SR(L1+I,L1+J)=H11(I,J)
      SR(L2+I,L1+J)=H21(I,J)
      SR(L3+I,L1+J)=H31(I,J)
      SR(L1+I,L2+J)=H21(J,I)
      SR(L2+I,L2+J)=H22(I,J)
      SR(L3+I,L2+J)=H32(I,J)
      SR(L1+I,L3+J)=H31(J,I)
      SR(L2+I,L3+J)=H32(J,I)
 48   SR(L3+I,L3+J)=H33(I,J)
C     ***********************************
         CALL AHX3(NC,NSX,L1,L2,L3,H11,H21,H31,H22,H32,H33,A,X)
         GO TO 300
 75      IF(TYPE(R).NE.' LIN1') GO TO 100
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         K4=IA(R,4)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
         CALL HIJS3(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H22,H32,H33)
C  OPTION
      DO 86  J=1,3
      DO 86  I=1,3
      SR(L1+I,L1+J)=H11(I,J)
      SR(L2+I,L1+J)=H21(I,J)
      SR(L3+I,L1+J)=H31(I,J)
      SR(L1+I,L2+J)=H21(J,I)
      SR(L2+I,L2+J)=H22(I,J)
      SR(L3+I,L2+J)=H32(I,J)
      SR(L1+I,L3+J)=H31(J,I)
      SR(L2+I,L3+J)=H32(J,I)
 86   SR(L3+I,L3+J)=H33(I,J)
C     ***********************************
         CALL AHX3(NC,NSX,L1,L2,L3,H11,H21,H31,H22,H32,H33,A,X)
         GO TO 300
 100     IF(TYPE(R).NE.'  SPF') GO TO 125
              K1=IA(R,1)
              K2=IA(R,2)
              L1=3*(K1-1)
              L2=3*(K2-1)
              CALL VECT1(NAD,K1,K2,E21,XA,T21)
              CALL HIJS1(NAD,K1,K2,XA,H11)
              FACT1=(ONE-S(R))/T21
              FACT2=TWO*FACT1/T21
              DO 102  J=1,3
              DO 104  I=1,3
 104          H11(I,J)=THREE*H11(I,J)*FACT1
 102          H11(J,J)=H11(J,J)-FACT2
C   OPTION
              DO 108  J=1,3
              DO 108  I=1,3
              SR(L1+I,L1+J)=H11(I,J)
              SR(L2+I,L2+J)=H11(I,J)
              SR(L1+I,L2+J)=-H11(I,J)
 108          SR(L2+I,L1+J)=-H11(I,J)
C  *************
         CALL AHX2(NC,NSX,L1,L2,H11,A,X)
         GO TO 300
 125     IF(TYPE(R).NE.' TORS') GO TO 175
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         K4=IA(R,4)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
         L4=3*(K4-1)
         CALL HIJS6(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H41,H22,H32,H42,
     $               H33,H43,H44)
C  OPTION
      DO 148  J=1,3
      DO 148  I=1,3
      SR(L1+I,L1+J)=H11(I,J)
      SR(L2+I,L1+J)=H21(I,J)
      SR(L3+I,L1+J)=H31(I,J)
      SR(L4+I,L1+J)=H41(I,J)
      SR(L1+I,L2+J)=H21(J,I)
      SR(L2+I,L2+J)=H22(I,J)
      SR(L3+I,L2+J)=H32(I,J)
      SR(L4+I,L2+J)=H42(I,J)
      SR(L1+I,L3+J)=H31(J,I)
      SR(L2+I,L3+J)=H32(J,I)
      SR(L3+I,L3+J)=H33(I,J)
      SR(L4+I,L3+J)=H43(I,J)
      SR(L1+I,L4+J)=H41(J,I)
      SR(L2+I,L4+J)=H42(J,I)
      SR(L3+I,L4+J)=H43(J,I)
 148  SR(L4+I,L4+J)=H44(I,J)
C     ***********************************
         CALL AHX4(NC,NSX,L1,L2,L3,L4,H11,H21,H31,H41,H22,H32,H42,
     $             H33,H43,H44,A,X)
         GO TO 300
 175     IF(IABS(IA(R,6)).NE.1) THEN
             WRITE(IOUT,2) R
             GO TO 300
         END IF
 275     CALL XIN(NC,NC,SR,-R,ISCR6)
         CALL XIN(NC,NSX,X,R,ISCR6)
         WRITE(IOUT,1) R
 300     CONTINUE
      CALL XOUT(NC,NC,SR,-R,ISCR)
      CALL XOUT(NC,NSX,X,R,ISCR)
 500  CONTINUE
 600  IF(NSYM.EQ.0) RETURN
      DO 650  R=1,NSYM
         DO 610  N=1,NSYM
         DO 610  M=1,NSYM
 610     X(M,N)=ZERO
         L=IU(R,0)
         DO 620  I=1,L
         RP=IU(R,I)
         CALL XIN(NC,NSYM,SR,RP,ISCR2)
         DO 630  N=1,NSYM
         DO 630  M=1,NSYM
 630     X(M,N)=X(M,N)+U(R,I)*SR(M,N)
 620     CONTINUE
         CALL XOUT(NC,NSYM,X,R,ISCR1)
 650  CONTINUE
C   OPTION
      DO 750  R=1,NSYM
         DO 710  N=1,NC
         DO 710  M=1,NC
 710     SR(M,N)=ZERO
         L=IU(R,0)
         DO 720  I=1,L
         RP=IU(R,I)
         CALL XIN(NC,NC,X,-RP,ISCR2)
         DO 730  N=1,NC
         DO 730  M=1,NC
 730     SR(M,N)=SR(M,N)+U(R,I)*X(M,N)
 720     CONTINUE
         CALL XOUT(NC,NC,SR,-R,ISCR1)
 750  CONTINUE
      END
C     /////////////////////////////////////////////////////////////
      SUBROUTINE AHX2(NC,NSX,L1,L2,H11,A,X)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NC,NC),X(NC,NC),H11(3,3)
      DO 10  N=1,NSX
      DO 10  M=1,N
          DO 15  I=1,3
          DO 15  J=1,3
          W1=(A(L1+I,M)-A(L2+I,M))*(A(L1+J,N)-A(L2+J,N))
  15      X(M,N)=X(M,N)+W1*H11(I,J)
  10  CONTINUE
      DO 20  N=1,NSX
      DO 20  M=1,N
  20  X(N,M)=X(M,N)
      RETURN
      END
C     /////////////////////////////////////////////////////////////
      SUBROUTINE AHX3(NC,NSX,L1,L2,L3,H11,H21,H31,H22,H32,H33,A,X)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NC,NC),X(NC,NC)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H22(3,3),H32(3,3),H33(3,3)
      DO 10  N=1,NSX
      DO 10  M=1,N
          DO 15  I=1,3
          DO 15  J=1,3
          W1=A(L1+I,M)*A(L1+J,N)
          W2=A(L2+I,M)*A(L2+J,N)
          W3=A(L3+I,M)*A(L3+J,N)
          X(M,N)=X(M,N)+W1*H11(I,J)+W2*H22(I,J)+W3*H33(I,J)
          W1=A(L2+I,M)*A(L1+J,N)+A(L1+J,M)*A(L2+I,N)
          W2=A(L3+I,M)*A(L1+J,N)+A(L1+J,M)*A(L3+I,N)
          W3=A(L3+I,M)*A(L2+J,N)+A(L2+J,M)*A(L3+I,N)
  15      X(M,N)=X(M,N)+W1*H21(I,J)+W2*H31(I,J)+W3*H32(I,J)
  10  CONTINUE
      DO 20  N=1,NSX
      DO 20  M=1,N
  20  X(N,M)=X(M,N)
      RETURN
      END
C     /////////////////////////////////////////////////////////////
      SUBROUTINE AHX4(NC,NSX,L1,L2,L3,L4,H11,H21,H31,H41,
     $            H22,H32,H42,H33,H43,H44,A,X)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NC,NC),X(NC,NC)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H41(3,3),H22(3,3),H32(3,3)
      DIMENSION H42(3,3),H33(3,3),H43(3,3),H44(3,3)
      DO 10  N=1,NSX
      DO 10  M=1,N
          DO 15  I=1,3
          DO 15  J=1,3
          W1=A(L1+I,M)*A(L1+J,N)
          W2=A(L2+I,M)*A(L2+J,N)
          W3=A(L3+I,M)*A(L3+J,N)
          W4=A(L4+I,M)*A(L4+J,N)
          X(M,N)=X(M,N)+W1*H11(I,J)+W2*H22(I,J)+W3*H33(I,J)+W4*H44(I,J)
          W1=A(L2+I,M)*A(L1+J,N)+A(L1+J,M)*A(L2+I,N)
          W2=A(L3+I,M)*A(L1+J,N)+A(L1+J,M)*A(L3+I,N)
          W3=A(L4+I,M)*A(L1+J,N)+A(L1+J,M)*A(L4+I,N)
          X(M,N)=X(M,N)+W1*H21(I,J)+W2*H31(I,J)+W3*H41(I,J)
          W1=A(L3+I,M)*A(L2+J,N)+A(L2+J,M)*A(L3+I,N)
          W2=A(L4+I,M)*A(L2+J,N)+A(L2+J,M)*A(L4+I,N)
          W3=A(L4+I,M)*A(L3+J,N)+A(L3+J,M)*A(L4+I,N)
  15      X(M,N)=X(M,N)+W1*H32(I,J)+W2*H42(I,J)+W3*H43(I,J)
  10  CONTINUE
      DO 20  N=1,NSX
      DO 20  M=1,N
  20  X(N,M)=X(M,N)
      RETURN
      END
C     /////////////////////////////////////////////////////////////
      SUBROUTINE MACHY(NAD,NC,NS,NSX,IOPT,XA,TYPE,IA,A,S,U,IU,Y,SR)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER R,P,Q,NSX,RP,IOPT(16)
      CHARACTER TYPE*5
      DIMENSION TYPE(NS),IA(NS,6),S(NS),U(NS,1),IU(NS,0:1)
      DIMENSION XA(NAD,3),A(NC,NC),Y(NC,NC,NC),SR(NC,NC,NC)
      DIMENSION H111(3,3,3),H112(3,3,3),H221(3,3,3),H222(3,3,3)
      DIMENSION H113(3,3,3),H123(3,3,3),H223(3,3,3),H331(3,3,3)
      DIMENSION H332(3,3,3),H333(3,3,3),H411(3,3,3),H421(3,3,3)
      DIMENSION H422(3,3,3),H431(3,3,3),H432(3,3,3),H433(3,3,3)
      DIMENSION H441(3,3,3),H442(3,3,3),H443(3,3,3),H444(3,3,3)
      DIMENSION E21(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(/,1X,'NUMERICAL SR(I,J,K) AND Y(M,N,P) MATRICES USED FOR',
     $ /, ' SIMPLE INTERNAL COORDINATE',I5)
    2 FORMAT(/,1X,'SR(I,J,K) AND Y(M,N,P) MATRICES SET TO ZERO FOR',
     $ /, ' SIMPLE INTERNAL COORDINATE',I5)
      NSYM=IOPT(3)
      IF(NSYM.NE.0) THEN
         ISCR=ISCR4
      ELSE
         ISCR=ISCR3
      END IF
      DO 500  R=1,NS
         DO 10  P=1,NC
         DO 10  N=1,NC
         DO 10  M=1,NC
 10      Y(M,N,P)=ZERO
         DO 11  I=1,NC
         DO 11  J=1,NC
         DO 11  K=1,NC
 11      SR(I,J,K)=ZERO
      IF(IA(R,6).EQ.-2) GO TO 275
      IF(TYPE(R).NE.' STRE') GO TO 25
      K1=IA(R,1)
      K2=IA(R,2)
      L1=3*(K1-1)
      L2=3*(K2-1)
      CALL HIJKS1(NAD,K1,K2,XA,H111)
C  OPTION
      DO 17  K=1,3
      DO 17  J=1,3
      DO 17  I=1,3
      Z=H111(I,J,K)
      SR(L1+I,L1+J,L1+K)=Z
      SR(L1+I,L1+J,L2+K)=-Z
      SR(L1+I,L2+J,L1+K)=-Z
      SR(L1+I,L2+J,L2+K)=Z
      SR(L2+I,L1+J,L1+K)=-Z
      SR(L2+I,L1+J,L2+K)=Z
      SR(L2+I,L2+J,L1+K)=Z
 17   SR(L2+I,L2+J,L2+K)=-Z
C  OPTION
      DO 20  P=1,NSX
      DO 20  N=1,P
      DO 20  M=1,N
         DO 22  I=1,3
         DO 22  J=1,3
         DO 22  K=1,3
      W1=A(L1+J,N)*(A(L1+K,P)-A(L2+K,P))-A(L2+J,N)*(A(L1+K,P)-A(L2+K,P))
      W1=(A(L1+I,M)-A(L2+I,M))*W1
 22      Y(M,N,P)=Y(M,N,P)+W1*H111(I,J,K)
 20   CONTINUE
      GO TO 300
 25   IF(TYPE(R).NE.' BEND') GO TO 75
      K1=IA(R,1)
      K2=IA(R,2)
      K3=IA(R,3)
      L1=3*(K1-1)
      L2=3*(K2-1)
      L3=3*(K3-1)
      CALL HIJKS2(NAD,K1,K2,K3,XA,H111,H112,H113,H123,H221,
     $    H222,H223,H331,H332,H333)
C  OPTION
      DO 37  K=1,3
      DO 37  J=1,3
      DO 37  I=1,3
      SR(L1+I,L1+J,L1+K)=H111(I,J,K)
      SR(L1+I,L1+J,L2+K)=H112(I,J,K)
      SR(L1+I,L1+J,L3+K)=H113(I,J,K)
      SR(L1+I,L2+J,L1+K)=H112(I,K,J)
      SR(L1+I,L2+J,L2+K)=H221(J,K,I)
      SR(L1+I,L2+J,L3+K)=H123(I,J,K)
      SR(L2+I,L2+J,L1+K)=H221(I,J,K)
      SR(L2+I,L2+J,L2+K)=H222(I,J,K)
      SR(L2+I,L2+J,L3+K)=H223(I,J,K)
      SR(L2+I,L1+J,L1+K)=H112(J,K,I)
      SR(L2+I,L1+J,L2+K)=H221(I,K,J)
      SR(L2+I,L1+J,L3+K)=H123(J,I,K)
      SR(L1+I,L3+J,L1+K)=H113(I,K,J)
      SR(L1+I,L3+J,L2+K)=H123(I,K,J)
      SR(L1+I,L3+J,L3+K)=H331(J,K,I)
      SR(L2+I,L3+J,L1+K)=H123(K,I,J)
      SR(L2+I,L3+J,L2+K)=H223(I,K,J)
      SR(L2+I,L3+J,L3+K)=H332(J,K,I)
      SR(L3+I,L1+J,L1+K)=H113(J,K,I)
      SR(L3+I,L1+J,L2+K)=H123(J,K,I)
      SR(L3+I,L1+J,L3+K)=H331(I,K,J)
      SR(L3+I,L2+J,L1+K)=H123(K,J,I)
      SR(L3+I,L2+J,L2+K)=H223(J,K,I)
      SR(L3+I,L2+J,L3+K)=H332(I,K,J)
      SR(L3+I,L3+J,L1+K)=H331(I,J,K)
      SR(L3+I,L3+J,L2+K)=H332(I,J,K)
 37   SR(L3+I,L3+J,L3+K)=H333(I,J,K)
C  OPTION
      DO 40  P=1,NSX
      DO 40  N=1,P
      DO 40  M=1,N
         DO 42  I=1,3
         DO 42  J=1,3
         DO 42  K=1,3
         W1=A(L1+I,M)*A(L1+J,N)*A(L1+K,P)
         W2=A(L2+I,M)*A(L2+J,N)*A(L2+K,P)
         W3=A(L3+I,M)*A(L3+J,N)*A(L3+K,P)
         Y(M,N,P)=Y(M,N,P)+W1*H111(I,J,K)+W2*H222(I,J,K)+W3*H333(I,J,K)
         W1=A(L1+I,M)*(A(L1+J,N)*A(L2+K,P)+A(L2+K,N)*A(L1+J,P))
         W1=W1+A(L2+K,M)*A(L1+I,N)*A(L1+J,P)
         W2=A(L1+I,M)*(A(L1+J,N)*A(L3+K,P)+A(L3+K,N)*A(L1+J,P))
         W2=W2+A(L3+K,M)*A(L1+I,N)*A(L1+J,P)
         W3=A(L3+I,M)*(A(L3+J,N)*A(L2+K,P)+A(L2+K,N)*A(L3+J,P))
         W3=W3+A(L2+K,M)*A(L3+I,N)*A(L3+J,P)
         W4=A(L3+I,M)*(A(L3+J,N)*A(L1+K,P)+A(L1+K,N)*A(L3+J,P))
         W4=W4+A(L1+K,M)*A(L3+I,N)*A(L3+J,P)
         W5=A(L2+I,M)*(A(L2+J,N)*A(L1+K,P)+A(L1+K,N)*A(L2+J,P))
         W5=W5+A(L1+K,M)*A(L2+I,N)*A(L2+J,P)
         W6=A(L2+I,M)*(A(L2+J,N)*A(L3+K,P)+A(L3+K,N)*A(L2+J,P))
         W6=W6+A(L3+K,M)*A(L2+I,N)*A(L2+J,P)
         Y(M,N,P)=Y(M,N,P)+W1*H112(I,J,K)+W2*H113(I,J,K)+W3*H332(I,J,K)
         Y(M,N,P)=Y(M,N,P)+W4*H331(I,J,K)+W5*H221(I,J,K)+W6*H223(I,J,K)
         W1=A(L1+I,M)*(A(L2+J,N)*A(L3+K,P)+A(L3+K,N)*A(L2+J,P))
         W1=W1+A(L2+J,M)*(A(L1+I,N)*A(L3+K,P)+A(L3+K,N)*A(L1+I,P))
         W1=W1+A(L3+K,M)*(A(L1+I,N)*A(L2+J,P)+A(L2+J,N)*A(L1+I,P))
 42      Y(M,N,P)=Y(M,N,P)+W1*H123(I,J,K)
 40   CONTINUE
         GO TO 300
 75      IF(TYPE(R).NE.' LIN1') GO TO 100
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         K4=IA(R,4)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
      CALL HIJKS3(NAD,K1,K2,K3,K4,XA,H111,H112,H113,H123,
     $            H221,H222,H223,H331,H332,H333)
C  OPTION
      DO 88  K=1,3
      DO 88  J=1,3
      DO 88  I=1,3
      SR(L1+I,L1+J,L1+K)=H111(I,J,K)
      SR(L1+I,L1+J,L2+K)=H112(I,J,K)
      SR(L1+I,L1+J,L3+K)=H113(I,J,K)
      SR(L1+I,L2+J,L1+K)=H112(I,K,J)
      SR(L1+I,L2+J,L2+K)=H221(J,K,I)
      SR(L1+I,L2+J,L3+K)=H123(I,J,K)
      SR(L2+I,L2+J,L1+K)=H221(I,J,K)
      SR(L2+I,L2+J,L2+K)=H222(I,J,K)
      SR(L2+I,L2+J,L3+K)=H223(I,J,K)
      SR(L2+I,L1+J,L1+K)=H112(J,K,I)
      SR(L2+I,L1+J,L2+K)=H221(I,K,J)
      SR(L2+I,L1+J,L3+K)=H123(J,I,K)
      SR(L1+I,L3+J,L1+K)=H113(I,K,J)
      SR(L1+I,L3+J,L2+K)=H123(I,K,J)
      SR(L1+I,L3+J,L3+K)=H331(J,K,I)
      SR(L2+I,L3+J,L1+K)=H123(K,I,J)
      SR(L2+I,L3+J,L2+K)=H223(I,K,J)
      SR(L2+I,L3+J,L3+K)=H332(J,K,I)
      SR(L3+I,L1+J,L1+K)=H113(J,K,I)
      SR(L3+I,L1+J,L2+K)=H123(J,K,I)
      SR(L3+I,L1+J,L3+K)=H331(I,K,J)
      SR(L3+I,L2+J,L1+K)=H123(K,J,I)
      SR(L3+I,L2+J,L2+K)=H223(J,K,I)
      SR(L3+I,L2+J,L3+K)=H332(I,K,J)
      SR(L3+I,L3+J,L1+K)=H331(I,J,K)
      SR(L3+I,L3+J,L2+K)=H332(I,J,K)
 88   SR(L3+I,L3+J,L3+K)=H333(I,J,K)
C  OPTION
      DO 90  P=1,NSX
      DO 90  N=1,P
      DO 90  M=1,N
         DO 92  I=1,3
         DO 92  J=1,3
         DO 92  K=1,3
         W1=A(L1+I,M)*A(L1+J,N)*A(L1+K,P)
         W2=A(L2+I,M)*A(L2+J,N)*A(L2+K,P)
         W3=A(L3+I,M)*A(L3+J,N)*A(L3+K,P)
         Y(M,N,P)=Y(M,N,P)+W1*H111(I,J,K)+W2*H222(I,J,K)+W3*H333(I,J,K)
         W1=A(L1+I,M)*(A(L1+J,N)*A(L2+K,P)+A(L2+K,N)*A(L1+J,P))
         W1=W1+A(L2+K,M)*A(L1+I,N)*A(L1+J,P)
         W2=A(L1+I,M)*(A(L1+J,N)*A(L3+K,P)+A(L3+K,N)*A(L1+J,P))
         W2=W2+A(L3+K,M)*A(L1+I,N)*A(L1+J,P)
         W3=A(L3+I,M)*(A(L3+J,N)*A(L2+K,P)+A(L2+K,N)*A(L3+J,P))
         W3=W3+A(L2+K,M)*A(L3+I,N)*A(L3+J,P)
         W4=A(L3+I,M)*(A(L3+J,N)*A(L1+K,P)+A(L1+K,N)*A(L3+J,P))
         W4=W4+A(L1+K,M)*A(L3+I,N)*A(L3+J,P)
         W5=A(L2+I,M)*(A(L2+J,N)*A(L1+K,P)+A(L1+K,N)*A(L2+J,P))
         W5=W5+A(L1+K,M)*A(L2+I,N)*A(L2+J,P)
         W6=A(L2+I,M)*(A(L2+J,N)*A(L3+K,P)+A(L3+K,N)*A(L2+J,P))
         W6=W6+A(L3+K,M)*A(L2+I,N)*A(L2+J,P)
         Y(M,N,P)=Y(M,N,P)+W1*H112(I,J,K)+W2*H113(I,J,K)+W3*H332(I,J,K)
         Y(M,N,P)=Y(M,N,P)+W4*H331(I,J,K)+W5*H221(I,J,K)+W6*H223(I,J,K)
         W1=A(L1+I,M)*(A(L2+J,N)*A(L3+K,P)+A(L3+K,N)*A(L2+J,P))
         W1=W1+A(L2+J,M)*(A(L1+I,N)*A(L3+K,P)+A(L3+K,N)*A(L1+I,P))
         W1=W1+A(L3+K,M)*(A(L1+I,N)*A(L2+J,P)+A(L2+J,N)*A(L1+I,P))
 92      Y(M,N,P)=Y(M,N,P)+W1*H123(I,J,K)
 90   CONTINUE
      GO TO 300
 100  IF(TYPE(R).NE.'  SPF') GO TO 125
           K1=IA(R,1)
           K2=IA(R,2)
           L1=3*(K1-1)
           L2=3*(K2-1)
           CALL VECT1(NAD,K1,K2,E21,XA,T21)
           CALL HIJKS1(NAD,K1,K2,XA,H111)
           FACT1=(ONE-S(R))*THREE/T21
           FACT2=TWO/(T21*T21)
           DO 102  K=1,3
           DO 102  J=1,3
           DO 102  I=1,3
 102       H111(I,J,K)=FACT1*(H111(I,J,K)+FACT2*E21(I)*E21(J)*E21(K))
C  OPTION
      DO 107  K=1,3
      DO 107  J=1,3
      DO 107  I=1,3
      Z=H111(I,J,K)
      SR(L1+I,L1+J,L1+K)=Z
      SR(L1+I,L1+J,L2+K)=-Z
      SR(L1+I,L2+J,L1+K)=-Z
      SR(L1+I,L2+J,L2+K)=Z
      SR(L2+I,L1+J,L1+K)=-Z
      SR(L2+I,L1+J,L2+K)=Z
      SR(L2+I,L2+J,L1+K)=Z
 107  SR(L2+I,L2+J,L2+K)=-Z
C  OPTION
      DO 110  P=1,NSX
      DO 110  N=1,P
      DO 110  M=1,N
         DO 112  I=1,3
         DO 112  J=1,3
         DO 112  K=1,3
         W=A(L1+J,N)*A(L1+K,P)-A(L1+J,N)*A(L2+K,P)
         W=W-A(L2+J,N)*A(L1+K,P)+A(L2+J,N)*A(L2+K,P)
         W=(A(L1+I,M)-A(L2+I,M))*W
 112     Y(M,N,P)=Y(M,N,P)+W*H111(I,J,K)
 110  CONTINUE
      GO TO 300
 125  IF(TYPE(R).NE.' TORS') GO TO 175
      K1=IA(R,1)
      K2=IA(R,2)
      K3=IA(R,3)
      K4=IA(R,4)
      L1=3*(K1-1)
      L2=3*(K2-1)
      L3=3*(K3-1)
      L4=3*(K4-1)
      CALL HIJKS6(NAD,K1,K2,K3,K4,XA,H111,H112,H221,H222,H113,H123,
     $      H223,H331,H332,H333,H411,H421,H422,H431,H432,H433,H441,
     $      H442,H443,H444)
C  OPTION
      DO 137  K=1,3
      DO 137  J=1,3
      DO 137  I=1,3
      SR(L1+I,L1+J,L1+K)=H111(I,J,K)
      SR(L1+I,L1+J,L2+K)=H112(I,J,K)
      SR(L1+I,L1+J,L3+K)=H113(I,J,K)
      SR(L1+I,L1+J,L4+K)=H411(K,J,I)
      SR(L1+I,L2+J,L1+K)=H112(I,K,J)
      SR(L1+I,L2+J,L2+K)=H221(J,K,I)
      SR(L1+I,L2+J,L3+K)=H123(I,J,K)
      SR(L1+I,L2+J,L4+K)=H421(K,J,I)
      SR(L1+I,L3+J,L1+K)=H113(I,K,J)
      SR(L1+I,L3+J,L2+K)=H123(I,K,J)
      SR(L1+I,L3+J,L3+K)=H331(J,K,I)
      SR(L1+I,L3+J,L4+K)=H431(K,J,I)
      SR(L1+I,L4+J,L1+K)=H411(J,K,I)
      SR(L1+I,L4+J,L2+K)=H421(J,K,I)
      SR(L1+I,L4+J,L3+K)=H431(J,K,I)
      SR(L1+I,L4+J,L4+K)=H441(J,K,I)
      SR(L2+I,L1+J,L1+K)=H112(J,K,I)
      SR(L2+I,L1+J,L2+K)=H221(I,K,J)
      SR(L2+I,L1+J,L3+K)=H123(J,I,K)
      SR(L2+I,L1+J,L4+K)=H421(K,I,J)
      SR(L2+I,L2+J,L1+K)=H221(I,J,K)
      SR(L2+I,L2+J,L2+K)=H222(I,J,K)
      SR(L2+I,L2+J,L3+K)=H223(I,J,K)
      SR(L2+I,L2+J,L4+K)=H422(K,J,I)
      SR(L2+I,L3+J,L1+K)=H123(K,I,J)
      SR(L2+I,L3+J,L2+K)=H223(I,K,J)
      SR(L2+I,L3+J,L3+K)=H332(J,K,I)
      SR(L2+I,L3+J,L4+K)=H432(K,J,I)
      SR(L2+I,L4+J,L1+K)=H421(J,I,K)
      SR(L2+I,L4+J,L2+K)=H422(J,I,K)
      SR(L2+I,L4+J,L3+K)=H432(J,K,I)
      SR(L2+I,L4+J,L4+K)=H442(J,K,I)
      SR(L3+I,L1+J,L1+K)=H113(J,K,I)
      SR(L3+I,L1+J,L2+K)=H123(J,K,I)
      SR(L3+I,L1+J,L3+K)=H331(I,K,J)
      SR(L3+I,L1+J,L4+K)=H431(K,I,J)
      SR(L3+I,L2+J,L1+K)=H123(K,J,I)
      SR(L3+I,L2+J,L2+K)=H223(J,K,I)
      SR(L3+I,L2+J,L3+K)=H332(I,K,J)
      SR(L3+I,L2+J,L4+K)=H432(K,I,J)
      SR(L3+I,L3+J,L1+K)=H331(I,J,K)
      SR(L3+I,L3+J,L2+K)=H332(I,J,K)
      SR(L3+I,L3+J,L3+K)=H333(I,J,K)
      SR(L3+I,L3+J,L4+K)=H433(K,I,J)
      SR(L3+I,L4+J,L1+K)=H431(J,I,K)
      SR(L3+I,L4+J,L2+K)=H432(J,I,K)
      SR(L3+I,L4+J,L3+K)=H433(J,I,K)
      SR(L3+I,L4+J,L4+K)=H443(J,K,I)
      SR(L4+I,L1+J,L1+K)=H411(I,J,K)
      SR(L4+I,L1+J,L2+K)=H421(I,K,J)
      SR(L4+I,L1+J,L3+K)=H431(I,K,J)
      SR(L4+I,L1+J,L4+K)=H441(I,K,J)
      SR(L4+I,L2+J,L1+K)=H421(I,J,K)
      SR(L4+I,L2+J,L2+K)=H422(I,J,K)
      SR(L4+I,L2+J,L3+K)=H432(I,K,J)
      SR(L4+I,L2+J,L4+K)=H442(I,K,J)
      SR(L4+I,L3+J,L1+K)=H431(I,J,K)
      SR(L4+I,L3+J,L2+K)=H432(I,J,K)
      SR(L4+I,L3+J,L3+K)=H433(I,J,K)
      SR(L4+I,L3+J,L4+K)=H443(I,K,J)
      SR(L4+I,L4+J,L1+K)=H441(I,J,K)
      SR(L4+I,L4+J,L2+K)=H442(I,J,K)
      SR(L4+I,L4+J,L3+K)=H443(I,J,K)
 137  SR(L4+I,L4+J,L4+K)=H444(I,J,K)
C  OPTION
      DO 140  P=1,NSX
      DO 140  N=1,P
      DO 140  M=1,N
         DO 142  I=1,3
         DO 142  J=1,3
         DO 142  K=1,3
         W1=A(L1+I,M)*A(L1+J,N)*A(L1+K,P)
         W2=A(L2+I,M)*A(L2+J,N)*A(L2+K,P)
         W3=A(L3+I,M)*A(L3+J,N)*A(L3+K,P)
         W4=A(L4+I,M)*A(L4+J,N)*A(L4+K,P)
         Y(M,N,P)=Y(M,N,P)+W1*H111(I,J,K)+W2*H222(I,J,K)
         Y(M,N,P)=Y(M,N,P)+W3*H333(I,J,K)+W4*H444(I,J,K)
         W1=A(L1+I,M)*(A(L1+J,N)*A(L2+K,P)+A(L2+K,N)*A(L1+J,P))
         W1=W1+A(L2+K,M)*A(L1+I,N)*A(L1+J,P)
         W2=A(L1+I,M)*(A(L1+J,N)*A(L3+K,P)+A(L3+K,N)*A(L1+J,P))
         W2=W2+A(L3+K,M)*A(L1+I,N)*A(L1+J,P)
         W3=A(L3+I,M)*(A(L3+J,N)*A(L2+K,P)+A(L2+K,N)*A(L3+J,P))
         W3=W3+A(L2+K,M)*A(L3+I,N)*A(L3+J,P)
         W4=A(L3+I,M)*(A(L3+J,N)*A(L1+K,P)+A(L1+K,N)*A(L3+J,P))
         W4=W4+A(L1+K,M)*A(L3+I,N)*A(L3+J,P)
         W5=A(L2+I,M)*(A(L2+J,N)*A(L1+K,P)+A(L1+K,N)*A(L2+J,P))
         W5=W5+A(L1+K,M)*A(L2+I,N)*A(L2+J,P)
         W6=A(L2+I,M)*(A(L2+J,N)*A(L3+K,P)+A(L3+K,N)*A(L2+J,P))
         W6=W6+A(L3+K,M)*A(L2+I,N)*A(L2+J,P)
         W7=A(L1+I,M)*(A(L1+J,N)*A(L4+K,P)+A(L4+K,N)*A(L1+J,P))
         W7=W7+A(L4+K,M)*A(L1+I,N)*A(L1+J,P)
         W8=A(L2+I,M)*(A(L2+J,N)*A(L4+K,P)+A(L4+K,N)*A(L2+J,P))
         W8=W8+A(L4+K,M)*A(L2+I,N)*A(L2+J,P)
         W9=A(L3+I,M)*(A(L3+J,N)*A(L4+K,P)+A(L4+K,N)*A(L3+J,P))
         W9=W9+A(L4+K,M)*A(L3+I,N)*A(L3+J,P)
         W10=A(L4+I,M)*(A(L4+J,N)*A(L1+K,P)+A(L1+K,N)*A(L4+J,P))
         W10=W10+A(L1+K,M)*A(L4+I,N)*A(L4+J,P)
         W11=A(L4+I,M)*(A(L4+J,N)*A(L2+K,P)+A(L2+K,N)*A(L4+J,P))
         W11=W11+A(L2+K,M)*A(L4+I,N)*A(L4+J,P)
         W12=A(L4+I,M)*(A(L4+J,N)*A(L3+K,P)+A(L3+K,N)*A(L4+J,P))
         W12=W12+A(L3+K,M)*A(L4+I,N)*A(L4+J,P)
         Y(M,N,P)=Y(M,N,P)+W1*H112(I,J,K)+W2*H113(I,J,K)+W3*H332(I,J,K)
         Y(M,N,P)=Y(M,N,P)+W4*H331(I,J,K)+W5*H221(I,J,K)+W6*H223(I,J,K)
         Y(M,N,P)=Y(M,N,P)+W7*H411(K,I,J)+W8*H422(K,I,J)+W9*H433(K,I,J)
      Y(M,N,P)=Y(M,N,P)+W10*H441(I,J,K)+W11*H442(I,J,K)+W12*H443(I,J,K)
         W1=A(L1+I,M)*(A(L2+J,N)*A(L3+K,P)+A(L3+K,N)*A(L2+J,P))
         W1=W1+A(L2+J,M)*(A(L1+I,N)*A(L3+K,P)+A(L3+K,N)*A(L1+I,P))
         W1=W1+A(L3+K,M)*(A(L1+I,N)*A(L2+J,P)+A(L2+J,N)*A(L1+I,P))
         W2=A(L4+I,M)*(A(L2+J,N)*A(L1+K,P)+A(L1+K,N)*A(L2+J,P))
         W2=W2+A(L2+J,M)*(A(L4+I,N)*A(L1+K,P)+A(L1+K,N)*A(L4+I,P))
         W2=W2+A(L1+K,M)*(A(L4+I,N)*A(L2+J,P)+A(L2+J,N)*A(L4+I,P))
         W3=A(L4+I,M)*(A(L3+J,N)*A(L1+K,P)+A(L1+K,N)*A(L3+J,P))
         W3=W3+A(L3+J,M)*(A(L4+I,N)*A(L1+K,P)+A(L1+K,N)*A(L4+I,P))
         W3=W3+A(L1+K,M)*(A(L4+I,N)*A(L3+J,P)+A(L3+J,N)*A(L4+I,P))
         W4=A(L4+I,M)*(A(L3+J,N)*A(L2+K,P)+A(L2+K,N)*A(L3+J,P))
         W4=W4+A(L3+J,M)*(A(L4+I,N)*A(L2+K,P)+A(L2+K,N)*A(L4+I,P))
         W4=W4+A(L2+K,M)*(A(L4+I,N)*A(L3+J,P)+A(L3+J,N)*A(L4+I,P))
         Y(M,N,P)=Y(M,N,P)+W1*H123(I,J,K)+W2*H421(I,J,K)
 142     Y(M,N,P)=Y(M,N,P)+W3*H431(I,J,K)+W4*H432(I,J,K)
 140  CONTINUE
      GO TO 300
 175  IF(IABS(IA(R,6)).NE.2) THEN
         WRITE(IOUT,2) R
         GO TO 300
      END IF
 275  CALL YIN(NC,NC,SR,-R,ISCR7)
      CALL YIN(NC,NSX,Y,R,ISCR7)
      WRITE(IOUT,1) R
 300  CONTINUE
      CALL FILL3A(NC,NSX,Y)
      CALL YOUT(NC,NC,SR,-R,ISCR)
      CALL YOUT(NC,NSX,Y,R,ISCR)
 500  CONTINUE
 600  IF(NSYM.EQ.0) RETURN
      DO 650  R=1,NSYM
         DO 610  P=1,NSYM
         DO 610  N=1,P
         DO 610  M=1,N
 610     Y(M,N,P)=ZERO
         L=IU(R,0)
         DO 620  I=1,L
         RP=IU(R,I)
         CALL YIN(NC,NSYM,SR,RP,ISCR4)
         W1=U(R,I)
         DO 630  P=1,NSYM
         DO 630  N=1,P
         DO 630  M=1,N
 630     Y(M,N,P)=Y(M,N,P)+W1*SR(M,N,P)
 620     CONTINUE
         CALL FILL3A(NC,NSYM,Y)
         CALL YOUT(NC,NSYM,Y,R,ISCR3)
 650  CONTINUE
C   OPTION
      DO 750  R=1,NSYM
         DO 710  P=1,NC
         DO 710  N=1,P
         DO 710  M=1,N
 710     SR(M,N,P)=ZERO
         L=IU(R,0)
         DO 720  I=1,L
         RP=IU(R,I)
         CALL YIN(NC,NC,Y,-RP,ISCR4)
         W1=U(R,I)
         DO 730  P=1,NC
         DO 730  N=1,P
         DO 730  M=1,N
 730     SR(M,N,P)=SR(M,N,P)+W1*Y(M,N,P)
 720     CONTINUE
         CALL FILL3A(NC,NC,SR)
         CALL YOUT(NC,NC,SR,-R,ISCR3)
 750  CONTINUE
      END
C///////////////////////////////////////////////////////////////////////
      SUBROUTINE MACHZ(NAD,NC,NS,NSX,IOPT,XA,TYPE,IA,A,S,U,IU,Z,SR)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER R,P,Q,NSX,RP,IOPT(16)
      CHARACTER TYPE*5
      DIMENSION TYPE(NS),IA(NS,6),S(NS),U(NS,1),IU(NS,0:1)
      DIMENSION XA(NAD,3),A(NC,NC),Z(NC,NC,NC,NC),SR(NC,NC,NC,NC)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(/,1X,'NUMERICAL SR(I,J,K,L) AND Z(M,N,P,Q) MATRICES USED',
     $ /, ' FOR SIMPLE INTERNAL COORDINATE',I5)
      NSYM=IOPT(3)
      IF(NSYM.NE.0) THEN
         ISCR=ISCR10
      ELSE
         ISCR=ISCR9
      END IF
      DO 500  R=1,NS
      CALL ZIN(NC,NC,SR,-R,ISCR8)
      CALL ZIN(NC,NSX,Z,R,ISCR8)
      WRITE(IOUT,1) R
 300  CONTINUE
      CALL FILL4A(NC,NC,SR)
      CALL FILL4A(NC,NSX,Z)
      CALL ZOUT(NC,NC,SR,-R,ISCR)
      CALL ZOUT(NC,NSX,Z,R,ISCR)
 500  CONTINUE
 600  IF(NSYM.EQ.0) RETURN
      DO 650  R=1,NSYM
         DO 610  Q=1,NSYM
         DO 610  P=1,Q
         DO 610  N=1,P
         DO 610  M=1,N
 610     Z(M,N,P,Q)=ZERO
         L=IU(R,0)
         DO 620  I=1,L
         RP=IU(R,I)
         CALL ZIN(NC,NSYM,SR,RP,ISCR10)
         W1=U(R,I)
         DO 630  Q=1,NSYM
         DO 630  P=1,Q
         DO 630  N=1,P
         DO 630  M=1,N
 630     Z(M,N,P,Q)=Z(M,N,P,Q)+W1*SR(M,N,P,Q)
 620     CONTINUE
         CALL FILL4A(NC,NSYM,Z)
         CALL ZOUT(NC,NSYM,Z,R,ISCR9)
 650  CONTINUE
C   OPTION
      DO 750  R=1,NSYM
         DO 710  Q=1,NC
         DO 710  P=1,Q
         DO 710  N=1,P
         DO 710  M=1,N
 710     SR(M,N,P,Q)=ZERO
         L=IU(R,0)
         DO 720  I=1,L
         RP=IU(R,I)
         CALL ZIN(NC,NC,Z,-RP,ISCR10)
         W1=U(R,I)
         DO 730  Q=1,NC
         DO 730  P=1,Q
         DO 730  N=1,P
         DO 730  M=1,N
 730     SR(M,N,P,Q)=SR(M,N,P,Q)+W1*Z(M,N,P,Q)
 720     CONTINUE
         CALL FILL4A(NC,NC,SR)
         CALL ZOUT(NC,NC,SR,-R,ISCR9)
 750  CONTINUE
      RETURN
      END
C     ////////////////////////////////////////////////////////////
      SUBROUTINE BINVRT(NS,NC,XMASS,B,D,A,IFLAG,TOLINV,ITST)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NC,NC),A(NC,NC),D(NC,1),XMASS(1)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
 1    FORMAT(//' B*BT MATRIX FOR (SYMMETRY) INTERNAL COORDINATES',/)
 2    FORMAT(8F12.6)
 3    FORMAT(/1X,'DETERMINANT OF B*BT MATRIX=',G12.5)
 4    FORMAT(//,' A MATRIX FOR (SYMMETRY) INTERNAL COORDINATES',/)
 5    FORMAT(8F12.6)
      IFLAG=0
      DO 10  J=1,NS
      DO 10  I=1,NS
      D(I,J)=ZERO
      D(I,J+NS)=ZERO
      DO 15  K=1,NC
      IK=(K-1)/3+1
 15   D(I,J)=D(I,J)+B(I,K)*B(J,K)/XMASS(IK)
 10   CONTINUE
      IF(LPRT(1,NPRT).GE.4) THEN
         WRITE(IOUT,1)
         DO 20  I=1,NS
         WRITE(IOUT,*) 'I=',I
 20      WRITE(IOUT,2) (D(I,J),J=1,NS)
      END IF
      DO 25  K=1,NS
 25   D(K,K+NS)=ONE
      CALL FLIN(D,NC,NS,NS,DET)
      WRITE(IOUT,3) DET
      IF(DET.EQ.ZERO) THEN
         IFLAG=1
         RETURN
      END IF
      DO 35  J=1,NS
      DO 35  I=1,NC
      A(I,J)=ZERO
      DO 40  K=1,NS
 40   A(I,J)=A(I,J)+B(K,I)*D(K,J+NS)
      IK=(I-1)/3+1
      A(I,J)=A(I,J)/XMASS(IK)
 35   CONTINUE
      IF(LPRT(1,NPRT).GE.3) THEN
         WRITE(IOUT,4)
         DO 45  I=1,NC
         WRITE(IOUT,*) 'I=',I
 45      WRITE(IOUT,5) (A(I,J),J=1,NS)
      END IF
      IF(ITST.EQ.0) RETURN
      DO 50  J=1,NS
      DO 50  I=1,NS
      W=ZERO
      DO 55  K=1,NC
 55   W=W+B(I,K)*A(K,J)
      D(I,J)=W
      IF(I.EQ.J) W=W-ONE
      IF(DABS(W).GT.TOLINV) IFLAG=2
 50   CONTINUE
      RETURN
      END
C     ////////////////////////////////////////////////////////////
      SUBROUTINE LINTR(NC,NSX,NSY,IOPT,A,XS,F1,F2,F3,F4,V,
     $            NMM,NRUN,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER P,Q,QQ
      DIMENSION F1(NC),F2(NC,NC),F3(NC,NC,NC),F4(NC,NC,NC,NC)
      DIMENSION IOPT(16),A(NC,NC),XS(NC,NC),V(NMM),DIP(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      COMMON /DIPOLE/DIP,QQ
 1    FORMAT(20X,3F20.10)
 2    FORMAT(8F10.7)
 3    FORMAT(3F20.10)
 4    FORMAT(F16.12)
 5    FORMAT(6F12.6)
 6    FORMAT(2I5)
 7    FORMAT(/' LINEAR TRANSFORMATION CONTRIBUTIONS TO INTERNAL'/
     $   ' COORDINATE FORCE CONSTANTS:')
 8    FORMAT(/' LINEAR TRANSFORMATION CONTRIBUTIONS TO CARTESIAN'/
     $   ' COORDINATE FORCE CONSTANTS:')
 9    FORMAT(/' QUADRATIC FORCE CONSTANTS')
 10   FORMAT(/' CUBIC FORCE CONSTANTS')
 12   FORMAT(/' QUARTIC FORCE CONSTANTS')
 13   FORMAT(3F20.10)
 14   FORMAT(20X,F20.10)
 15   FORMAT(2I5,3F20.10)
 16   FORMAT(/1X,'TOTAL CHARGE AND DIPOLE MOMENT')
 17   FORMAT(I5,3F20.10)
      IFLAG=0
      NA=IOPT(1)
      NDER=IOPT(4)
      NEQ=IOPT(5)
      NINV=IOPT(7)
      NVEC=IOPT(13)
      INP1=I11
      INP2=I15
      INP3=I20
      INP4=I24
      INP5=I17
      CF1=8.238857606D0
      CF2=15.56918890D0
      CF3=29.42151140D0
      CF4=55.59861458D0
      IF(NINV.GE.1) THEN
      INP1=I12
      INP2=I16
      INP3=I21
      INP4=I25
      INP5=I18
      CF1=ONE
      CF2=ONE
      CF3=ONE
      CF4=ONE
      END IF
      IF(NEQ.EQ.0) GO TO 120
      IF(NVEC.EQ.1) THEN
        IF(NRUN.LE.1) THEN
        READ(INP5,15) M,QQ,(DIP(I),I=1,3)
        WRITE(IOUT,16)
        WRITE(IOUT,17) QQ,(DIP(I),I=1,3)
          IF(M.NE.NA) THEN
             IFLAG=5
             RETURN
          END IF
        END IF
        READ(INP5,13) (V(IK),IK=1,NSY)
        GO TO 122
      END IF
      IF(NINV.GE.1) THEN
        READ(INP1,6) M
        IF(M.NE.NA) THEN
             IFLAG=1
             RETURN
        END IF
        READ(INP1,14)(V(IK),IK=1,NSY)
      ELSE
        READ(INP1,1)(V(IK),IK=1,NSY)
      END IF
 122  DO 110  M=1,NSX
 110  F1(M)=ZERO
      DO 115  I=1,NSY
      V(I)=V(I)*CF1
      DO 115  M=1,NSX
 115  F1(M)=F1(M)+V(I)*A(I,M)
 120  IF(NDER.LE.1) GO TO 1000
      NNC=NSY*NSY
      NM=NMM
      NR=NNC/NMM
      NL=NNC-NMM*NR
      READ(INP2,6) M,N
      IF(M.NE.NA) THEN
           IFLAG=2
           RETURN
      END IF
      DO 125  N=1,NSX
      DO 125  I=1,NSY
 125  XS(I,N)=ZERO
      KK=0
      DO 128  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(INP2,3) (V(IK),IK=1,NM)
           DO 128  IK=1,NM
           V(IK)=V(IK)*CF2
           KK=KK+1
           J=(KK-1)/NSY+1
           I=KK-NSY*(J-1)
           DO 130  N=1,NSX
 130       XS(I,N)=XS(I,N)+A(J,N)*V(IK)
 128  CONTINUE
      DO 131  N=1,NSX
      DO 131  M=1,NSX
      XX=ZERO
      DO 132  I=1,NSY
 132  XX=XX+A(I,M)*XS(I,N)
 131  F2(M,N)=XX
      DO 134  M=2,NSX
      DO 134  N=1,M-1
      F2(M,N)=(F2(M,N)+F2(N,M))/TWO
 134  F2(N,M)=F2(M,N)
      IF(NDER.LE.2) GO TO 1000
      NM=NMM
      NNC=(NSY*(NSY+1)*(NSY+2))/6
      NR=NNC/NMM
      NL=NNC-NMM*NR
      READ(INP3,6) M,N
      IF(M.NE.NA.OR.N.NE.NNC) THEN
           IFLAG=3
           RETURN
      END IF
      DO 135  P=1,NSX
      DO 135  I=1,NSY
      DO 135  J=1,I
 135  F3(I,J,P)=ZERO
      I=0
      J=0
      K=0
      DO 138  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(INP3,3) (V(IK),IK=1,NM)
          DO 138  IK=1,NM
          V(IK)=V(IK)*CF3
          IF(K.LT.J) THEN
             K=K+1
             GO TO 139
          END IF
          IF(J.LT.I) THEN
             J=J+1
             K=1
             GO TO 139
          END IF
          I=I+1
          J=1
          K=1
 139  CONTINUE
          IF(I.NE.J) THEN
             IF(J.NE.K) THEN
                DO 140  P=1,NSX
                F3(I,J,P)=V(IK)*A(K,P)+F3(I,J,P)
                F3(I,K,P)=V(IK)*A(J,P)+F3(I,K,P)
 140            F3(J,K,P)=V(IK)*A(I,P)+F3(J,K,P)
             ELSE
                DO 141  P=1,NSX
                F3(I,J,P)=V(IK)*A(J,P)+F3(I,J,P)
 141            F3(J,J,P)=V(IK)*A(I,P)+F3(J,J,P)
             END IF
          ELSE
             IF(J.NE.K) THEN
                DO 142  P=1,NSX
                F3(I,I,P)=V(IK)*A(K,P)+F3(I,I,P)
 142            F3(I,K,P)=V(IK)*A(I,P)+F3(I,K,P)
             ELSE
                DO 143  P=1,NSX
 143            F3(I,I,P)=V(IK)*A(I,P)+F3(I,I,P)
             END IF
          END IF
 138  CONTINUE
      REWIND ISCR5
      WRITE(ISCR5,3)(((F3(I,J,P),P=1,NSX),J=1,I),I=1,NSY)
      DO 144  P=1,NSX
      DO 144  N=1,P
      DO 144  I=1,NSY
 144  F3(I,N,P)=ZERO
      NND=NSY*(NSY+1)*NSX/2
      NR=NND/NMM
      NL=NND-NMM*NR
      NM=NMM
      I=1
      J=1
      P=0
      REWIND ISCR5
      DO 146  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(ISCR5,3) (V(IK),IK=1,NM)
          DO 146  IK=1,NM
          IF(P.LT.NSX) THEN
             P=P+1
             GO TO 147
          END IF
          IF(J.LT.I) THEN
             J=J+1
             P=1
             GO TO 147
          END IF
          I=I+1
          J=1
          P=1
 147  CONTINUE
          IF(I.NE.J) THEN
                DO 148  N=1,P
                F3(I,N,P)=V(IK)*A(J,N)+F3(I,N,P)
 148            F3(J,N,P)=V(IK)*A(I,N)+F3(J,N,P)
          ELSE
                DO 149  N=1,P
 149            F3(I,N,P)=V(IK)*A(I,N)+F3(I,N,P)
          END IF
 146  CONTINUE
      REWIND ISCR5
      WRITE(ISCR5,3)(((F3(I,N,P),I=1,NSY),N=1,P),P=1,NSX)
      DO 150  P=1,NSX
      DO 150  N=1,P
      DO 150  M=1,N
 150  F3(M,N,P)=ZERO
      NND=NSY*NSX*(NSX+1)/2
      NR=NND/NMM
      NL=NND-NMM*NR
      NM=NMM
      I=0
      N=1
      P=1
      REWIND ISCR5
      DO 152  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(ISCR5,3) (V(IK),IK=1,NM)
          DO 152  IK=1,NM
          IF(I.LT.NSY) THEN
             I=I+1
             GO TO 153
          END IF
          IF(N.LT.P) THEN
             N=N+1
             I=1
             GO TO 153
          END IF
          P=P+1
          N=1
          I=1
 153  CONTINUE
          DO 154  M=1,N
 154      F3(M,N,P)=V(IK)*A(I,M)+F3(M,N,P)
 152  CONTINUE
      REWIND ISCR5
      CALL FILL3A(NC,NSX,F3)
      IF(NDER.LE.3) GO TO 1000
      NM=NMM
      NNC=(NSY*(NSY+1)*(NSY+2)*(NSY+3))/24
      NR=NNC/NMM
      NL=NNC-NMM*NR
      READ(INP4,6) M,N
      IF(M.NE.NA.OR.N.NE.NNC) THEN
           IFLAG=4
           RETURN
      END IF
      DO 170  Q=1,NSX
      DO 170  I=1,NSY
      DO 170  J=1,I
      DO 170  K=1,J
 170  F4(I,J,K,Q)=ZERO
      I=0
      J=0
      K=0
      L=0
      DO 178  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(INP4,3) (V(IK),IK=1,NM)
          DO 178  IK=1,NM
          V(IK)=V(IK)*CF4
          IF(L.LT.K) THEN
             L=L+1
             GO TO 180
          END IF
          IF(K.LT.J) THEN
             K=K+1
             L=1
             GO TO 180
          END IF
          IF(J.LT.I) THEN
             J=J+1
             K=1
             L=1
             GO TO 180
          END IF
             I=I+1
             J=1
             K=1
             L=1
 180      CONTINUE
          IF(I.NE.J) THEN
             IF(J.NE.K) THEN
                IF(K.NE.L) THEN
                DO 182  Q=1,NSX
                F4(I,J,K,Q)=V(IK)*A(L,Q)+F4(I,J,K,Q)
                F4(I,J,L,Q)=V(IK)*A(K,Q)+F4(I,J,L,Q)
                F4(I,K,L,Q)=V(IK)*A(J,Q)+F4(I,K,L,Q)
 182            F4(J,K,L,Q)=V(IK)*A(I,Q)+F4(J,K,L,Q)
                ELSE
                DO 184  Q=1,NSX
                F4(I,J,K,Q)=V(IK)*A(K,Q)+F4(I,J,K,Q)
                F4(I,K,K,Q)=V(IK)*A(J,Q)+F4(I,K,K,Q)
 184            F4(J,K,K,Q)=V(IK)*A(I,Q)+F4(J,K,K,Q)
                END IF
             ELSE
                IF(K.NE.L) THEN
                DO 186  Q=1,NSX
                F4(I,J,J,Q)=V(IK)*A(L,Q)+F4(I,J,J,Q)
                F4(I,J,L,Q)=V(IK)*A(J,Q)+F4(I,J,L,Q)
 186            F4(J,J,L,Q)=V(IK)*A(I,Q)+F4(J,J,L,Q)
                ELSE
                DO 188  Q=1,NSX
                F4(I,J,J,Q)=V(IK)*A(J,Q)+F4(I,J,J,Q)
 188            F4(J,J,J,Q)=V(IK)*A(I,Q)+F4(J,J,J,Q)
                END IF
             END IF
          ELSE
             IF(J.NE.K) THEN
                IF(K.NE.L) THEN
                DO 190  Q=1,NSX
                F4(I,I,K,Q)=V(IK)*A(L,Q)+F4(I,I,K,Q)
                F4(I,I,L,Q)=V(IK)*A(K,Q)+F4(I,I,L,Q)
 190            F4(I,K,L,Q)=V(IK)*A(I,Q)+F4(I,K,L,Q)
                ELSE
                DO 192  Q=1,NSX
                F4(I,I,K,Q)=V(IK)*A(K,Q)+F4(I,I,K,Q)
 192            F4(I,K,K,Q)=V(IK)*A(I,Q)+F4(I,K,K,Q)
                END IF
             ELSE
                IF(K.NE.L) THEN
                DO 194  Q=1,NSX
                F4(I,I,I,Q)=V(IK)*A(L,Q)+F4(I,I,I,Q)
 194            F4(I,I,L,Q)=V(IK)*A(I,Q)+F4(I,I,L,Q)
                ELSE
                DO 196  Q=1,NSX
 196            F4(I,I,I,Q)=V(IK)*A(I,Q)+F4(I,I,I,Q)
                END IF
             END IF
          END IF
 178  CONTINUE
      REWIND ISCR5
      WRITE(ISCR5,3) ((((F4(I,J,K,Q),Q=1,NSX),K=1,J),J=1,I),I=1,NSY)
      DO 198  Q=1,NSX
      DO 198  P=1,Q
      DO 198  I=1,NSY
      DO 198  J=1,I
 198  F4(I,J,P,Q)=ZERO
      NND=NSY*(NSY+1)*(NSY+2)*NSX/6
      NR=NND/NMM
      NL=NND-NMM*NR
      NM=NMM
      I=1
      J=1
      K=1
      Q=0
      REWIND ISCR5
      DO 200  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(ISCR5,3) (V(IK),IK=1,NM)
          DO 200  IK=1,NM
          IF(Q.LT.NSX) THEN
            Q=Q+1
            GO TO 202
          END IF
          IF(K.LT.J) THEN
            K=K+1
            Q=1
            GO TO 202
          END IF
          IF(J.LT.I) THEN
            J=J+1
            K=1
            Q=1
            GO TO 202
          END IF
            I=I+1
            J=1
            K=1
            Q=1
 202      CONTINUE
          IF(I.NE.J) THEN
             IF(J.NE.K) THEN
                DO 204  P=1,Q
                F4(I,J,P,Q)=V(IK)*A(K,P)+F4(I,J,P,Q)
                F4(I,K,P,Q)=V(IK)*A(J,P)+F4(I,K,P,Q)
 204            F4(J,K,P,Q)=V(IK)*A(I,P)+F4(J,K,P,Q)
             ELSE
                DO 206  P=1,Q
                F4(I,J,P,Q)=V(IK)*A(J,P)+F4(I,J,P,Q)
 206            F4(J,J,P,Q)=V(IK)*A(I,P)+F4(J,J,P,Q)
             END IF
          ELSE
             IF(J.NE.K) THEN
                DO 208  P=1,Q
                F4(I,I,P,Q)=V(IK)*A(K,P)+F4(I,I,P,Q)
 208            F4(I,K,P,Q)=V(IK)*A(I,P)+F4(I,K,P,Q)
             ELSE
                DO 210  P=1,Q
 210            F4(I,I,P,Q)=V(IK)*A(I,P)+F4(I,I,P,Q)
             END IF
          END IF
 200  CONTINUE
      REWIND ISCR5
      WRITE(ISCR5,3) ((((F4(I,J,P,Q),P=1,Q),Q=1,NSX),J=1,I),I=1,NSY)
      DO 212  Q=1,NSX
      DO 212  P=1,Q
      DO 212  N=1,P
      DO 212  I=1,NSY
 212  F4(I,N,P,Q)=ZERO
      NND=NSX*(NSX+1)*NSY*(NSY+1)/4
      NR=NND/NMM
      NL=NND-NMM*NR
      NM=NMM
      P=0
      Q=0
      I=1
      J=1
      REWIND ISCR5
      DO 214  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(ISCR5,3) (V(IK),IK=1,NM)
          DO 214  IK=1,NM
          IF(P.LT.Q) THEN
            P=P+1
            GO TO 216
          END IF
          IF(Q.LT.NSX) THEN
            Q=Q+1
            P=1
            GO TO 216
          END IF
          IF(J.LT.I) THEN
            J=J+1
            P=1
            Q=1
            GO TO 216
          END IF
            I=I+1
            J=1
            P=1
            Q=1
 216      CONTINUE
          IF(I.NE.J) THEN
                DO 218  N=1,P
                F4(I,N,P,Q)=V(IK)*A(J,N)+F4(I,N,P,Q)
 218            F4(J,N,P,Q)=V(IK)*A(I,N)+F4(J,N,P,Q)
          ELSE
                DO 220  N=1,P
 220            F4(I,N,P,Q)=V(IK)*A(I,N)+F4(I,N,P,Q)
          END IF
 214  CONTINUE
      REWIND ISCR5
      WRITE(ISCR5,3) ((((F4(I,N,P,Q),I=1,NSY),N=1,P),P=1,Q),Q=1,NSX)
      DO 222  Q=1,NSX
      DO 222  P=1,Q
      DO 222  N=1,P
      DO 222  M=1,N
 222  F4(M,N,P,Q)=ZERO
      NND=NSX*(NSX+1)*(NSX+2)*NSY/6
      NR=NND/NMM
      NL=NND-NMM*NR
      NM=NMM
      N=1
      P=1
      Q=1
      I=0
      REWIND ISCR5
      DO 224  II=1,NR+1
      IF(II.EQ.NR+1) NM=NL
      READ(ISCR5,3) (V(IK),IK=1,NM)
          DO 224  IK=1,NM
          IF(I.LT.NSY) THEN
            I=I+1
            GO TO 226
          END IF
          IF(N.LT.P) THEN
            N=N+1
            I=1
            GO TO 226
          END IF
          IF(P.LT.Q) THEN
            P=P+1
            N=1
            I=1
            GO TO 226
          END IF
            Q=Q+1
            P=1
            N=1
            I=1
 226      CONTINUE
          DO 228  M=1,N
 228      F4(M,N,P,Q)=V(IK)*A(I,M)+F4(M,N,P,Q)
 224  CONTINUE
      REWIND ISCR5
      CALL FILL4A(NC,NSX,F4)
C     ****************************************
 1000 IF(LPRT(1,NPRT).LT.5) RETURN
      IF(NDER.LE.1) RETURN
      IF(NINV.LE.0) THEN
         WRITE(IOUT,7)
      ELSE
         WRITE(IOUT,8)
      END IF
      WRITE(IOUT,9)
      DO 1015  M=1,NSX
 1015 WRITE(IOUT,5) (F2(M,N),N=1,NSX)
      IF(NDER.LE.2) RETURN
      WRITE(IOUT,10)
      DO 1020  M=1,NSX
      WRITE(IOUT,*) 'M=',M
      DO 1020  N=1,NSX
 1020 WRITE(IOUT,5) (F3(M,N,P),P=1,NSX)
      IF(NDER.LE.3) RETURN
      WRITE(IOUT,12)
      DO 1030  M=1,NSX
      DO 1030  N=1,NSX
      WRITE(IOUT,*) 'M=',M,'N=',N
      DO 1030  P=1,NSX
 1030 WRITE(IOUT,5) (F4(M,N,P,Q),Q=1,NSX)
      RETURN
      END
C     ////////////////////////////////////////////////////////////
      SUBROUTINE VCXKI(NA,NAD,NC,XMASS,XA,XKI)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER QQ
      DIMENSION XMASS(NA),XA(NAD,3),DIP(3),XKI(NC,3)
      DIMENSION W(3,3),XX(3,6),B(3),RCM(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      COMMON /DIPOLE/DIP,QQ
      RMT=ZERO
      DO 80  K=1,NA
  80  RMT=RMT+XMASS(K)
      DO 90  I=1,3
      RCM(I)=ZERO
      DO 95  K=1,NA
  95  RCM(I)=RCM(I)+XA(K,I)*XMASS(K)
  90  RCM(I)=RCM(I)/RMT
      DO 100  I=1,3
      DO 100  J=1,3
      XX(I,J+3)=ZERO
 100  W(I,J)=-RMT*RCM(I)*RCM(J)
      DO 110  I=1,3
      DO 110  J=I,3
      DO 110  K=1,NA
 110  W(I,J)=W(I,J)+XA(K,I)*XA(K,J)*XMASS(K)
      XX(1,1)=W(1,3)
      XX(2,1)=-W(2,3)
      XX(3,1)=-(W(1,1)+W(2,2))
      XX(1,2)=-W(1,2)
      XX(2,2)=W(1,1)+W(3,3)
      XX(3,2)=-W(2,3)
      XX(1,3)=-(W(2,2)+W(3,3))
      XX(2,3)=W(1,2)
      XX(3,3)=W(1,3)
      XX(1,4)=ONE
      XX(2,5)=ONE
      XX(3,6)=ONE
      CALL FLIN(XX,3,3,3,DD)
      DO 1000  IX=1,NC
      II=(IX-1)/3+1
      IG=IX-3*(II-1)
      IF(IG.EQ.1) THEN
        B(1)=ZERO
        B(2)=XMASS(II)*(XA(II,3)-RCM(3))
        B(3)=-XMASS(II)*(XA(II,2)-RCM(2))
      ELSE IF(IG.EQ.2) THEN
        B(1)=-XMASS(II)*(XA(II,3)-RCM(3))
        B(2)=ZERO
        B(3)=XMASS(II)*(XA(II,1)-RCM(1))
      ELSE IF(IG.EQ.3) THEN
        B(1)=XMASS(II)*(XA(II,2)-RCM(2))
        B(2)=-XMASS(II)*(XA(II,1)-RCM(1))
        B(3)=ZERO
      END IF
      DO 1010 I=1,3
      XKI(IX,I)=ZERO
      DO 1010 J=1,3
 1010 XKI(IX,I)=XKI(IX,I)+XX(I,J+3)*B(J)
 1000 CONTINUE
      END
C     ////////////////////////////////////////////////////////////
      SUBROUTINE VCDER1(NA,NC,NSX,NINV,XMASS,XKI,A,F1,F2,F3,F4,V,NRUN)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER QQ
      DIMENSION DIP(3),XKI(NC,3),A(NC,NC),V(NC)
      DIMENSION F1(NC),F2(NC,NC),F3(NC,NC,NC),F4(NC,NC,NC,NC)
      DIMENSION AA(3,3),VK(3),XMASS(NA)
      PARAMETER(ZERO=0.0D0,DEBYE=2.54176548D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      COMMON /DIPOLE/DIP,QQ
      XMT=ZERO
      DO 10  I=1,NA
 10   XMT=XMT+XMASS(I)
      DO 15  I=1,NC
 15   V(I)=ZERO
      IF(NINV.NE.0) THEN
      DO 100  I=1,NC
      K=(I-1)/3+1
 100  V(I)=DEBYE*QQ*XMASS(K)/XMT
      ELSE
      DO 105  I=1,NSX
         XX=ZERO
         DO 110  J=1,NC
         K=(J-1)/3+1
 110     XX=XX+XMASS(K)*A(J,I)
 105  V(I)=-DEBYE*QQ*XX/XMT
      END IF
      IF(NINV.NE.0) THEN
      DO 120  I=1,NC
         DO 125  KK=1,3
 125     VK(KK)=XKI(I,KK)
         CALL MAT2(AA,VK)
         DO 130 KK=1,3
 130     V(I)=V(I)+AA(NRUN,KK)*DIP(KK)
 120  CONTINUE
      ELSE
      DO 140  I=1,NSX
         DO 145  KK=1,3
         VK(KK)=ZERO
         DO 145  J=1,NC
 145     VK(KK)=VK(KK)+A(J,I)*XKI(J,KK)
         CALL MAT2(AA,VK)
         DO 150 KK=1,3
 150     V(I)=V(I)-AA(NRUN,KK)*DIP(KK)
 140  CONTINUE
      END IF
      DO 200 I=1,NC
 200  F1(I)=F1(I)+V(I)
      END
C     ////////////////////////////////////////////////////////////
      SUBROUTINE MACHF2(NC,NS,NINV,F1,F2,X,V)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER R
      DIMENSION F1(NC),F2(NC,NC),X(NC,NC),V(NC)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
   4  FORMAT(I5)
   5  FORMAT(20X,F20.10)
      IF(NINV.GT.0) GO TO 30
      DO 10  R=1,NS
         CALL XIN(NC,NS,X,R,ISCR1)
         DO 20  N=1,NS
         DO 20  M=1,NS
 20      F2(M,N)=F2(M,N)-F1(R)*X(M,N)
 10   CONTINUE
      RETURN
cbfy
c30   REWIND I12
c     READ(I12,4) R
 30   CONTINUE
      DO 35 R=1,NS
 35        BACKSPACE I12
cbfy
      READ(I12,5)(V(R),R=1,NS)
 40   DO 50  R=1,NS
         CALL XIN(NC,NC,X,-R,ISCR1)
         DO 60  N=1,NC
         DO 60  M=1,NC
 60      F2(M,N)=F2(M,N)+V(R)*X(M,N)
 50   CONTINUE
      RETURN
      END
C     ////////////////////////////////////////////////////////////
C             (NUMB)
      SUBROUTINE MACHF3(NC,NS,NINV,F1,F3,YR,V)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER M,N,P,R
      DIMENSION F1(NC),F3(NC,NC,NC)
      DIMENSION YR(NC,NC,NC),V(NC)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
   4  FORMAT(I5)
   5  FORMAT(20X,F20.10)
      IF(NINV.GT.0) GO TO 200
      DO 100  R=1,NS
         CALL YIN(NC,NS,YR,R,ISCR3)
         DO 110  P=1,NS
         DO 110  N=1,P
         DO 110  M=1,N
 110     F3(M,N,P)=F3(M,N,P)-F1(R)*YR(M,N,P)
 100  CONTINUE
      CALL FILL3A(NC,NS,F3)
      RETURN
cbfy
c200  REWIND I12
c     READ(I12,4) R
 200  CONTINUE
      DO 205 R=1,NS
 205       BACKSPACE I12
cbfy
      READ(I12,5)(V(R),R=1,NS)
      DO 210  R=1,NS
         CALL YIN(NC,NC,YR,-R,ISCR3)
         DO 220  P=1,NC
         DO 220  N=1,P
         DO 220  M=1,N
 220     F3(M,N,P)=F3(M,N,P)+V(R)*YR(M,N,P)
 210  CONTINUE
      CALL FILL3A(NC,NC,F3)
      RETURN
      END
C//////////////////////////////////////////////////////////////////////
      SUBROUTINE MACHF4(NC,NS,NINV,F1,F4,ZR,V)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER M,N,P,Q,R
      DIMENSION F1(NC),F4(NC,NC,NC,NC)
      DIMENSION ZR(NC,NC,NC,NC),V(NC)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
   4  FORMAT(I5)
   5  FORMAT(20X,F20.10)
      IF(NINV.GT.0) GO TO 200
      DO 100  R=1,NS
         CALL ZIN(NC,NS,ZR,R,ISCR9)
         DO 110  Q=1,NS
         DO 110  P=1,Q
         DO 110  N=1,P
         DO 110  M=1,N
 110     F4(M,N,P,Q)=F4(M,N,P,Q)-F1(R)*ZR(M,N,P,Q)
 100  CONTINUE
      CALL FILL4A(NC,NS,F4)
      RETURN
 200  REWIND I12
      READ(I12,4) R
      READ(I12,5)(V(R),R=1,NS)
      DO 210  R=1,NS
         CALL ZIN(NC,NC,ZR,-R,ISCR9)
         DO 220  Q=1,NC
         DO 220  P=1,Q
         DO 220  N=1,P
         DO 220  M=1,N
 220     F4(M,N,P,Q)=F4(M,N,P,Q)+V(R)*ZR(M,N,P,Q)
 210  CONTINUE
      CALL FILL4A(NC,NC,F4)
      RETURN
      END
C     //////////////////////////////////////////////////////////////
      SUBROUTINE XF2(NDER,NC,NS,NINV,BS,F2,F3,F4,V,XR,XS,XT)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER P,Q,R,S
      DIMENSION F2(NC,NC),F3(NC,NC,NC),F4(NC,NC,NC,NC)
      DIMENSION XR(NC,NC),XS(NC,NC),XT(NC,NC),BS(NC,NC),V(NC,NC)
      PARAMETER(ZERO=0.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
  1   FORMAT(2I5)
  2   FORMAT(3F20.10)
      IF(NINV.GT.0) GO TO 100
      DO 10  R=1,NS
         CALL XIN(NC,NS,XR,R,ISCR1)
         DO 20  P=1,NS
         DO 20  N=1,P
         DO 20  M=1,N
         W=F2(P,R)*XR(M,N)+F2(N,R)*XR(M,P)+F2(M,R)*XR(N,P)
 20      F3(M,N,P)=F3(M,N,P)-W
 10   CONTINUE
      CALL FILL3A(NC,NS,F3)
      IF(NDER.LE.3) RETURN
      DO 60  R=1,NS
         DO 30  N=1,NS
         DO 30  M=1,NS
 30      XR(M,N)=ZERO
           DO 35  S=1,NS
           CALL XIN(NC,NS,XS,S,ISCR1)
           IF(R.EQ.S) THEN
             DO 40  N=1,NS
             DO 40  M=1,NS
 40          XT(M,N)=XS(M,N)
           END IF
           DO 45  N=1,NS
           DO 45  M=1,NS
 45        XR(M,N)=XR(M,N)+F2(R,S)*XS(M,N)
 35        CONTINUE
         DO 55  Q=1,NS
         DO 55  P=1,Q
         DO 55  N=1,P
         DO 55  M=1,N
         W=XT(M,N)*XR(P,Q)+XT(M,P)*XR(N,Q)+XT(M,Q)*XR(N,P)
 55      F4(M,N,P,Q)=F4(M,N,P,Q)-W
 60      CONTINUE
      CALL FILL4A(NC,NS,F4)
      RETURN
C
cbfy
c100  REWIND I16
c     READ(I16,1) M,N
 100  CONTINUE
      NLINES = (NS*NS +2)/3
      DO 105 M=1,NLINES
 105       BACKSPACE I16
cbfy
      READ(I16,2) ((V(M,N),N=1,NS),M=1,NS)
      DO 110  M=1,NS
      DO 110  J=1,NC
      XS(M,J)=ZERO
      DO 110  N=1,NS
 110  XS(M,J)=XS(M,J)+V(M,N)*BS(N,J)
      DO 120  R=1,NS
         CALL XIN(NC,NC,XR,-R,ISCR1)
         DO 125  K=1,NC
         DO 125  J=1,K
         DO 125  I=1,J
         W=XR(I,J)*XS(R,K)+XR(I,K)*XS(R,J)+XR(J,K)*XS(R,I)
 125     F3(I,J,K)=F3(I,J,K)+W
 120  CONTINUE
      CALL FILL3A(NC,NC,F3)
      IF(NDER.LE.3) RETURN
      DO 130  R=1,NS
         DO 140  J=1,NC
         DO 140  I=1,NC
 140     XR(I,J)=ZERO
         DO 145  S=1,NS
         CALL XIN(NC,NC,XS,-S,ISCR1)
         IF(R.EQ.S) THEN
            DO 150  J=1,NC
            DO 150  I=1,NC
 150        XT(I,J)=XS(I,J)
         END IF
         DO 155  J=1,NC
         DO 155  I=1,NC
 155     XR(I,J)=XR(I,J)+V(R,S)*XS(I,J)
 145     CONTINUE
         DO 160  L=1,NC
         DO 160  K=1,L
         DO 160  J=1,K
         DO 160  I=1,J
         W=XT(I,J)*XR(K,L)+XT(I,K)*XR(J,L)+XT(I,L)*XR(J,K)
 160     F4(I,J,K,L)=F4(I,J,K,L)+W
 130  CONTINUE
      CALL FILL4A(NC,NC,F4)
      RETURN
      END
C     ////////////////////////////////////////////////////////////////
      SUBROUTINE XF3(NC,NS,NINV,BS,XR,XS,XT,F3,F4,YR)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER P,Q,R,S
      DIMENSION F3(NC,NC,NC),F4(NC,NC,NC,NC),YR(NC,NC,NC)
      DIMENSION XR(NC,NC),XS(NC,NC),XT(NC,NC),BS(NC,NC)
      PARAMETER(ZERO=0.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
  1   FORMAT(2I5)
  2   FORMAT(3F20.10)
      IF(NINV.GT.0) GO TO 100
      DO 10  R=1,NS
         CALL XIN(NC,NS,XR,R,ISCR1)
         DO 20  Q=1,NS
         DO 20  P=1,Q
         DO 20  N=1,P
         DO 20  M=1,N
         W=F3(M,N,R)*XR(P,Q)+F3(M,P,R)*XR(N,Q)+F3(M,Q,R)*XR(N,P)
         W=W+F3(N,P,R)*XR(M,Q)+F3(N,Q,R)*XR(M,P)+F3(P,Q,R)*XR(M,N)
 20      F4(M,N,P,Q)=F4(M,N,P,Q)-W
 10   CONTINUE
      CALL FILL4A(NC,NS,F4)
      RETURN
C
cbfy
c100  REWIND I21
c     READ(I21,1) M,N
 100  CONTINUE
      NLINES = (NS*(NS+1)*(NS+2)/6 +2)/3
      DO 105 M=1,NLINES
 105       BACKSPACE I21
cbfy
      READ(I21,2) (((YR(M,N,P),P=1,N),N=1,M),M=1,NS)
      CALL FILL3B(NC,NS,YR)
      DO 110  R=1,NS
         CALL XIN(NC,NC,XR,-R,ISCR1)
         DO 120  L=1,NC
         DO 120  N=1,NC
           XT(N,L)=ZERO
           DO 120  P=1,NC
 120       XT(N,L)=XT(N,L)+YR(R,N,P)*BS(P,L)
         DO 125  L=1,NC
         DO 125  K=1,NC
           XS(K,L)=ZERO
           DO 125  N=1,NC
 125       XS(K,L)=XS(K,L)+XT(N,L)*BS(N,K)
         DO 130  L=1,NC
         DO 130  K=1,L
         DO 130  J=1,K
         DO 130  I=1,J
         W=XR(I,J)*XS(K,L)+XR(I,K)*XS(J,L)+XR(J,K)*XS(I,L)
         W=W+XR(K,L)*XS(I,J)+XR(J,L)*XS(I,K)+XR(I,L)*XS(J,K)
 130     F4(I,J,K,L)=F4(I,J,K,L)+W
 110  CONTINUE
      CALL FILL4A(NC,NC,F4)
      RETURN
      END
C     ////////////////////////////////////////////////////////////////
C     (OPT1) (NUMB)
      SUBROUTINE YF2(NC,NS,NINV,BS,XR,XS,F2,F4,YR)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER P,Q,R,S
      DIMENSION F2(NC,NC),F4(NC,NC,NC,NC)
      DIMENSION YR(NC,NC,NC),BS(NC,NC),XR(NC,NC),XS(NC,NC)
      PARAMETER(ZERO=0.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
  1   FORMAT(2I5)
  2   FORMAT(3F20.10)
      IF(NINV.GT.0) GO TO 200
      DO 110  R=1,NS
         CALL YIN(NC,NS,YR,R,ISCR3)
         DO 120  Q=1,NS
         DO 120  P=1,Q
         DO 120  N=1,P
         DO 120  M=1,N
         W=F2(M,R)*YR(N,P,Q)+F2(N,R)*YR(M,P,Q)
         W=W+F2(P,R)*YR(M,N,Q)+F2(Q,R)*YR(M,N,P)
 120     F4(M,N,P,Q)=F4(M,N,P,Q)-W
 110  CONTINUE
      CALL FILL4A(NC,NS,F4)
      RETURN
C
cbfy
c200  REWIND I16
c     READ(I16,1) M,N
 200  CONTINUE
      NLINES = (NS*NS +2)/3
      DO 205 M=1,NLINES
 205       BACKSPACE I16
cbfy
      READ(I16,2) ((XS(M,N),N=1,NS),M=1,NS)
      DO 210  M=1,NS
      DO 210  J=1,NC
      XR(M,J)=ZERO
      DO 210  N=1,NS
 210  XR(M,J)=XR(M,J)+XS(M,N)*BS(N,J)
      DO 220  R=1,NS
         CALL YIN(NC,NC,YR,-R,ISCR3)
         DO 230  L=1,NC
         DO 230  K=1,L
         DO 230  J=1,K
         DO 230  I=1,J
         W=YR(I,J,K)*XR(R,L)+YR(I,J,L)*XR(R,K)
         W=W+YR(I,K,L)*XR(R,J)+YR(J,K,L)*XR(R,I)
 230     F4(I,J,K,L)=F4(I,J,K,L)+W
 220  CONTINUE
      CALL FILL4A(NC,NC,F4)
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
C STRE    (OPT2) (NUMB)
      SUBROUTINE VECT1(NAD,K1,K2,V1,XA,W)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0)
      W=ZERO
      DO 5  I=1,3
      V1(I)=XA(K1,I)-XA(K2,I)
 5    W=W+V1(I)*V1(I)
      W=DSQRT(W)
      C=ONE/W
      DO 10  I=1,3
 10   V1(I)=V1(I)*C
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C BEND    (OPT2) (NUMB)
      SUBROUTINE VECT2(NAD,K1,K2,K3,V1,V2,V3,XA,W)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),E21(3),E23(3)
      PARAMETER(ONE=1.0D0)
      CALL VECT1(NAD,K1,K2,E21,XA,T12)
      CALL VECT1(NAD,K3,K2,E23,XA,T32)
      CALL SCAPRO(E21,E23,W)
      CP=W
      SP=DSQRT(ONE-W*W)
      W=DACOS(W)
      C1=ONE/(T12*SP)
      C2=ONE/(T32*SP)
      DO 5  I=1,3
      V1(I)=(CP*E21(I)-E23(I))*C1
      V3(I)=(CP*E23(I)-E21(I))*C2
  5   V2(I)=-V1(I)-V3(I)
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C LIN1   (OPT2) (NUMB)
      SUBROUTINE VECT3(NAD,K1,K2,K3,K4,V1,V2,V3,XA,W)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 V1(3),V2(3),V3(3),XA(NAD,3),E21(3),E23(3)
      DIMENSION E2M(3),EA(3),V4(3),V5(3)
      PARAMETER(ONE=1.0D0)
      CALL VECT1(NAD,K1,K2,E21,XA,T21)
      CALL VECT1(NAD,K3,K2,E23,XA,T23)
      DO 5  J=1,3
  5   EA(J)=XA(K4,J)
      CALL SCAPRO(EA,EA,D)
      D=ONE/DSQRT(D)
      DO 10  I=1,3
 10   EA(I)=D*EA(I)
      CALL VECPRO(E23,E21,E2M)
      CALL SCAPRO(EA,E2M,STHETA)
      W=DASIN(STHETA)
      CTHETA=DCOS(W)
      TTHETA=STHETA/CTHETA
      CALL VECPRO(EA,E23,V4)
      CALL VECPRO(EA,E21,V5)
      C1=ONE/(CTHETA*T21)
      C2=TTHETA/T21
      C3=ONE/(CTHETA*T23)
      C4=TTHETA/T23
      DO 15  I=1,3
      V1(I)=C1*V4(I)-C2*E21(I)
      V3(I)=-(C3*V5(I)+C4*E23(I))
 15   V2(I)=-(V1(I)+V3(I))
      RETURN
      END
C     ////////////////////////////////////////////////////////////
C LIN2
      SUBROUTINE VECT4(NAD,K1,K2,K3,K4,V1,V2,V3,XA,W)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 V1(3),V2(3),V3(3),XA(NAD,3),E21(3),E23(3)
      DIMENSION E2M(3),EA(3),V4(3),V5(3)
      PARAMETER(ONE=1.0D0)
      CALL VECT1(NAD,K1,K2,E21,XA,T21)
      CALL VECT1(NAD,K3,K2,E23,XA,T23)
      CALL VECT1(NAD,K4,K2,E2M,XA,W)
      CALL SCAPRO(E21,E2M,W1)
      W2=DSQRT(ONE-W1*W1)
      DO 5  I=1,3
  5   EA(I)=(W1*E21(I)-E2M(I))/W2
      CALL VECPRO(E23,E21,E2M)
      CALL SCAPRO(EA,E2M,STHETA)
      W=DASIN(STHETA)
      CTHETA=DCOS(W)
      TTHETA=STHETA/CTHETA
      CALL VECPRO(EA,E23,V4)
      CALL VECPRO(EA,E21,V5)
      DO 15  I=1,3
      V1(I)=(V4(I)/CTHETA-E21(I)*TTHETA)/T21
      V3(I)=-(V5(I)/CTHETA+E23(I)*TTHETA)/T23
 15   V2(I)=-(V1(I)+V3(I))
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
C OUT     (OPT2)  (NUMB)
      SUBROUTINE VECT5(NAD,K1,K2,K3,K4,V1,V2,V3,V4,XA,W)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION V1(3),V2(3),V3(3),V4(3),V5(3),V6(3),V7(3)
      DIMENSION XA(NAD,3),E23(3),E21(3),E24(3),B3P(3),B4P(3)
      PARAMETER(ONE=1.0D0)
      CALL VECT1(NAD,K1,K2,E21,XA,T21)
      CALL VECT1(NAD,K3,K2,E23,XA,T23)
      CALL VECT1(NAD,K4,K2,E24,XA,T24)
      CALL VECPRO(E23,E24,V5)
      CALL VECPRO(E24,E21,V6)
      CALL VECPRO(E21,E23,V7)
      CALL VECT2(NAD,K3,K2,K4,B3P,V2,B4P,XA,PHI)
      SPHI=DSIN(PHI)
      CALL SCAPRO(E21,V5,W)
      W=DASIN(W/SPHI)
      CG=DCOS(W)
      SG=DSIN(W)
      TG=SG/CG
      W1=CG*SPHI
      W2=ONE/(T21*W1)
      W3=TG/T21
      W4=ONE/(T23*W1)
      W5=T24*SG*W4
      W6=ONE/(T24*W1)
      W7=T23*SG*W6
      DO 10  I=1,3
      V1(I)=V5(I)*W2-E21(I)*W3
      V3(I)=V6(I)*W4+B4P(I)*W5
      V4(I)=V7(I)*W6+B3P(I)*W7
 10   V2(I)=-V1(I)-V3(I)-V4(I)
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C TORS    (OPT2) (NUMB)
      SUBROUTINE VECT6(NAD,K1,K2,K3,K4,V1,V2,V3,V4,XA,W)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),V4(3),V5(3),V6(3)
      DIMENSION E21(3),E32(3),E43(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,PI=3.14159265358979D0)
      CALL VECT1(NAD,K1,K2,E21,XA,T21)
      CALL VECT1(NAD,K2,K3,E32,XA,T32)
      CALL VECT1(NAD,K3,K4,E43,XA,T43)
      CALL VECPRO(E21,E32,V5)
      CALL VECPRO(E43,E32,V6)
      CALL SCAPRO(E21,E32,W2)
      CALL SCAPRO(E32,E43,W3)
      CP2=-W2
      CP3=-W3
      SP2=DSQRT(ONE-CP2*CP2)
      SP3=DSQRT(ONE-CP3*CP3)
      CALL SCAPRO(E21,V6,W2)
      CALL SCAPRO(V5,V6,W3)
      W3=-W3
C TRAP ROUNDING ERROR
      DASARG = W2/(SP2*SP3)
      IF (DABS(DASARG).GT.ONE) THEN
         IF ((DABS(DASARG)-ONE).LT.1.0D-12) THEN
            IF (DASARG.GT.ZERO) THEN
               DASARG =  1.0D0
               ELSE
               DASARG = -1.0D0
               ENDIF
            ENDIF
         ENDIF
      W=DASIN(DASARG)
C     W=DASIN(W2/(SP2*SP3))
      IF(W3.LT.ZERO) W=PI-W
      W1=ONE/(T21*SP2*SP2)
      W2=ONE/(T43*SP3*SP3)
      DO 5  I=1,3
      V1(I)=-W1*V5(I)
 5    V4(I)=-W2*V6(I)
      W3=(T32-T21*CP2)*W1/T32
      W4=CP3/(T32*SP3*SP3)
      W5=(T32-T43*CP3)*W2/T32
      W6=CP2/(T32*SP2*SP2)
      DO 10  I=1,3
      V2(I)=W3*V5(I)+W4*V6(I)
 10   V3(I)=W5*V6(I)+W6*V5(I)
      RETURN
      END
C     ////////////////////////////////////////////////////////////
C STRE    (OPT2)  (NUMB)
      SUBROUTINE HIJS1(NAD,K1,K2,XA,H11)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),H11(3,3)
      PARAMETER(ONE=1.0D0)
      CALL VECT1(NAD,K1,K2,V1,XA,T21)
      DO 5  J=1,3
      DO 5  I=J,3
  5   H11(I,J)=-V1(I)*V1(J)
      DO 10  I=1,3
  10  H11(I,I)=H11(I,I)+ONE
      W=ONE/T21
      DO 15  J=1,3
      DO 15  I=J,3
  15  H11(I,J)=H11(I,J)*W
      DO 20  J=1,2
      DO 20  I=J+1,3
  20  H11(J,I)=H11(I,J)
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C BEND    (OPT2)  (NUMB)
      SUBROUTINE HIJS2(NAD,K1,K2,K3,XA,H11,H21,H31,H22,H32,H33)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),E21(3),E23(3)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H22(3,3),H32(3,3),H33(3,3)
      DIMENSION H11A(3,3),H33A(3,3)
      PARAMETER(ONE=1.0D0)
         CALL VECT2(NAD,K1,K2,K3,V1,V2,V3,XA,PHI)
         CALL VECT1(NAD,K1,K2,E21,XA,T21)
         CALL VECT1(NAD,K3,K2,E23,XA,T23)
         CALL HIJS1(NAD,K1,K2,XA,H11A)
         CALL HIJS1(NAD,K3,K2,XA,H33A)
      SPHI=DSIN(PHI)
      CTPHI=DCOS(PHI)/SPHI
      W1=CTPHI
      W2=ONE/T21
      W3=W1*W2
      W4=ONE/T23
      W5=W1*W4
         DO 5  J=1,3
         DO 5  I=J,3
         H11(I,J)=H11A(I,J)*W3-V1(I)*V1(J)*W1
     $                        -(E21(I)*V1(J)+V1(I)*E21(J))*W2
         H33(I,J)=H33A(I,J)*W5-V3(I)*V3(J)*W1
     $                        -(E23(I)*V3(J)+V3(I)*E23(J))*W4
  5      CONTINUE
         DO 10  J=1,2
         DO 10  I=J+1,3
         H11(J,I)=H11(I,J)
  10     H33(J,I)=H33(I,J)
         W3=ONE/(T21*SPHI)
         DO 15  J=1,3
         W4=W2*E21(J)+W1*V1(J)
         DO 15  I=1,3
         H31(I,J)=-H33A(I,J)*W3-V3(I)*W4
         H21(I,J)=-(H11(I,J)+H31(I,J))
         H32(I,J)=-(H31(I,J)+H33(I,J))
 15      CONTINUE
         DO 20  J=1,3
         DO 20  I=1,3
         H22(I,J)=-(H21(J,I)+H32(I,J))
 20      CONTINUE
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C LIN1   (OPT2) (NUMB)
      SUBROUTINE HIJS3(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H22,H32,H33)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),E21(3),E23(3),EA(3)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H22(3,3),H32(3,3),H33(3,3)
      DIMENSION H11A(3,3),H33A(3,3),EM(3,3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0)
      CALL VECT3(NAD,K1,K2,K3,K4,V1,V2,V3,XA,TH)
      CALL VECT1(NAD,K1,K2,E21,XA,T21)
      CALL VECT1(NAD,K3,K2,E23,XA,T23)
      CALL HIJS1(NAD,K1,K2,XA,H11A)
      CALL HIJS1(NAD,K3,K2,XA,H33A)
         DO 5  J=1,3
  5      EA(J)=XA(K4,J)
           CALL SCAPRO(EA,EA,D)
           D=ONE/DSQRT(D)
           DO 10  I=1,3
  10       EA(I)=D*EA(I)
      TANTH=DTAN(TH)
      COSTH=DCOS(TH)
      EM(2,1)=EA(3)
      EM(3,1)=-EA(2)
      EM(3,2)=EA(1)
      EM(1,2)=-EM(2,1)
      EM(1,3)=-EM(3,1)
      EM(2,3)=-EM(3,2)
      DO 15  I=1,3
 15   EM(I,I)=ZERO
      DO 20  J=1,3
      DO 20  I=1,3
      H22(I,J)=ZERO
      DO 20  K=1,3
 20   H22(I,J)=H22(I,J)+EM(I,K)*H33A(K,J)
      W1=ONE/T21
      W2=ONE/T23
         DO 25  J=1,3
         DO 25  I=1,3
         H11(I,J)=(-H11A(I,J)*W1+V1(I)*V1(J))*TANTH-(E21(I)*V1(J)
     $                  +V1(I)*E21(J))*W1
         H31(I,J)=(H22(J,I)/COSTH-V3(I)*E21(J))/T21+V3(I)*V1(J)*TANTH
         H33(I,J)=(-H33A(I,J)*W2+V3(I)*V3(J))*TANTH-(E23(I)*V3(J)
     $                  +V3(I)*E23(J))*W2
         H21(I,J)=-(H11(I,J)+H31(I,J))
         H32(I,J)=-(H31(I,J)+H33(I,J))
 25      CONTINUE
         DO 30  J=1,3
         DO 30  I=1,3
         H22(I,J)=-(H21(J,I)+H32(I,J))
 30      CONTINUE
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C TORS   (OPT2)   (NUMB)
      SUBROUTINE HIJS6(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H41,
     $               H22,H32,H42,H33,H43,H44)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),V4(3),E21(3),E23(3),E34(3)
      DIMENSION BP21(3),BP22(3),BP23(3),BP32(3),BP34(3)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H41(3,3),H22(3,3),H32(3,3)
      DIMENSION H42(3,3),H33(3,3),H43(3,3),H44(3,3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0)
         CALL VECT6(NAD,K1,K2,K3,K4,V1,V2,V3,V4,XA,W)
         CALL VECT1(NAD,K1,K2,E21,XA,T21)
         CALL VECT1(NAD,K3,K2,E23,XA,T23)
         CALL VECT1(NAD,K4,K3,E34,XA,T34)
         CALL VECT2(NAD,K1,K2,K3,BP21,BP22,BP23,XA,P2)
         CALL VECT2(NAD,K2,K3,K4,BP32,V2,BP34,XA,P3)
      CALL MAT1(H11,E23)
      CALL MAT1(H31,E21)
      CALL MAT1(H44,E23)
      CALL MAT1(H42,E34)
      XX=DSIN(P2)
      XY=DSIN(P3)
      XX=T21*XX*XX
      XY=T34*XY*XY
      W1=ONE/(T21*XX)
      W2=ONE/(T23*XX)
      W3=ONE/(T34*XY)
      W4=ONE/(T23*XY)
         DO 5  J=1,3
         DO 5  I=1,3
         H11(I,J)=-H11(I,J)*W1
         H31(I,J)=H31(I,J)*W2
         H44(I,J)=H44(I,J)*W3
  5      H42(I,J)=-H42(I,J)*W4
      XX=DCOS(P2)/DSIN(P2)
      XY=DCOS(P3)/DSIN(P3)
         DO 10  I=1,3
         W1=TWO*(E21(I)/T21+BP21(I)*XX)
         W2=(E23(I)/T23+TWO*BP23(I)*XX)
         W3=TWO*(E34(I)/T34+BP34(I)*XY)
         W4=(E23(I)/T23-TWO*BP32(I)*XY)
         DO 10  J=1,3
         H11(I,J)=H11(I,J)-W1*V1(J)
         H31(I,J)=H31(I,J)-W2*V1(J)
         H44(I,J)=H44(I,J)-W3*V4(J)
 10      H42(J,I)=H42(J,I)+W4*V4(J)
         DO 15  J=1,3
         DO 15  I=1,3
         H41(I,J)=ZERO
         H21(I,J)=-(H11(I,J)+H31(I,J))
 15      H43(I,J)=-(H44(I,J)+H42(I,J))
      X1=T21/T23
      Y1=T34/T23
      X2=DCOS(P2)
      Y2=DSIN(P2)
      X3=DCOS(P3)
      Y3=DSIN(P3)
      C1=X1*X2-ONE
      C2=-X3*Y1
      C3=-X2/T23
      C4=-X1*Y2
      C5=X1*X2/T23
      C6=Y1*Y3
      C7=-Y1*X3/T23
         DO 20  I=1,3
         W1=C3*E21(I)+C4*BP22(I)+C5*E23(I)
         W2=C6*BP32(I)+C7*E23(I)
         DO 20  J=1,3
 20      H22(I,J)=C1*H21(I,J)+C2*H42(J,I)+W1*V1(J)+W2*V4(J)
         DO 25  J=1,3
         DO 25  I=1,3
 25      H32(I,J)=-(H21(J,I)+H22(I,J)+H42(I,J))
         DO 30  J=1,3
         DO 30  I=1,3
 30      H33(I,J)=-(H31(I,J)+H32(I,J)+H43(J,I))
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C STRE  (OPT2)   (NUMB)
      SUBROUTINE HIJKS1(NAD,K1,K2,XA,H111)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),H11(3,3),H111(3,3,3)
      PARAMETER(ONE=1.0D0)
      CALL VECT1(NAD,K1,K2,V1,XA,T21)
      CALL HIJS1(NAD,K1,K2,XA,H11)
      W1=ONE/T21
      DO 5  K=1,3
      DO 5  J=K,3
      DO 5  I=J,3
  5   H111(I,J,K)=-(V1(I)*H11(K,J)+V1(J)*H11(K,I)+V1(K)*H11(J,I))*W1
      CALL FILL3B(3,3,H111)
      RETURN
      END
C     //////////////////////////////////////////////////////////////
C BEND   (OPT2)  (NUMB)
      SUBROUTINE HIJKS2(NAD,K1,K2,K3,XA,H111,H112,H113,H123,H221,
     $    H222,H223,H331,H332,H333)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),E21(3),E23(3)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H22(3,3),H32(3,3),H33(3,3)
      DIMENSION H111(3,3,3),H112(3,3,3),H113(3,3,3),H123(3,3,3)
      DIMENSION H221(3,3,3),H222(3,3,3),H223(3,3,3),H331(3,3,3)
      DIMENSION H332(3,3,3),H333(3,3,3)
      DIMENSION H111A(3,3,3),H333A(3,3,3),H11A(3,3),H33A(3,3)
      PARAMETER(ONE=1.0D0)
      CALL VECT2(NAD,K1,K2,K3,V1,V2,V3,XA,PHI)
      CALL VECT1(NAD,K1,K2,E21,XA,T21)
      CALL VECT1(NAD,K3,K2,E23,XA,T23)
      CALL HIJS1(NAD,K1,K2,XA,H11A)
      CALL HIJS1(NAD,K3,K2,XA,H33A)
      CALL HIJS2(NAD,K1,K2,K3,XA,H11,H21,H31,H22,H32,H33)
      CALL HIJKS1(NAD,K1,K2,XA,H111A)
      CALL HIJKS1(NAD,K3,K2,XA,H333A)
      SPHI=DSIN(PHI)
      CTPHI=DCOS(PHI)/SPHI
      W1=ONE/T21
      W2=ONE/T23
      W3=CTPHI*W1
      W4=CTPHI*W2
      DO 10  K=1,3
      W5=V1(K)*CTPHI+E21(K)*W1
      W6=E21(K)*W3
      W7=V1(K)*W1
      W8=V3(K)*CTPHI+E23(K)*W2
      W9=E23(K)*W4
      W10=V3(K)*W2
      DO 10  J=1,3
      DO 10  I=1,3
      H221(I,J,K)=W5*H11(I,J)+V1(I)*V1(J)*W6+H11A(I,J)*W7
 10   H223(I,J,K)=W8*H33(I,J)+V3(I)*V3(J)*W9+H33A(I,J)*W10
      DO 15  K=1,3
      DO 15  J=K,3
      DO 15  I=J,3
      H111(I,J,K)=-(H221(I,J,K)+H221(J,K,I)+H221(I,K,J))+
     $    V1(I)*V1(J)*V1(K)+H111A(I,J,K)*W3
      H333(I,J,K)=-(H223(I,J,K)+H223(J,K,I)+H223(I,K,J))+
     $    V3(I)*V3(J)*V3(K)+H333A(I,J,K)*W4
 15   CONTINUE
      CALL FILL3B(3,3,H111)
      CALL FILL3B(3,3,H333)
      DO 20  I=1,3
      W3=V1(I)*CTPHI+E21(I)*W1
      W4=V3(I)*CTPHI+E23(I)*W2
      DO 20  J=1,3
      DO 20  K=1,3
      H221(I,J,K)=W3*H31(K,J)
 20   H223(I,J,K)=W4*H31(J,K)
      W3=ONE/(SPHI*SPHI)
      DO 25  K=1,3
      DO 25  J=1,3
      DO 25  I=1,3
      H113(I,J,K)=V3(K)*(V1(I)*V1(J)-H11A(I,J)*W1)*W3
     $        -H221(I,J,K)-H221(J,I,K)
      H331(I,J,K)=V1(K)*(V3(I)*V3(J)-H33A(I,J)*W2)*W3
     $        -H223(I,J,K)-H223(J,I,K)
 25   CONTINUE
      DO 30  K=1,3
      DO 30  J=1,3
      DO 30  I=1,3
      H123(I,J,K)=-(H331(J,K,I)+H113(I,J,K))
      H112(I,J,K)=-(H111(I,J,K)+H113(I,J,K))
 30   H332(I,J,K)=-(H333(I,J,K)+H331(I,J,K))
      DO 35  K=1,3
      DO 35  J=1,3
      DO 35  I=1,3
      H221(J,K,I)=-(H123(I,J,K)+H112(I,K,J))
 35   H223(J,K,I)=-(H332(I,J,K)+H123(J,K,I))
      DO 40  K=1,3
      DO 40  J=1,3
      DO 40  I=1,3
 40   H222(I,J,K)=-(H223(J,K,I)+H221(J,K,I))
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
C LIN1  (OPT1)
      SUBROUTINE HIJKS3(NAD,K1,K2,K3,K4,XA,
     $    H111,H112,H113,H123,H221,H222,H223,H331,H332,H333)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),E21(3),E23(3),EA(3)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H22(3,3),H32(3,3),H33(3,3)
      DIMENSION H111(3,3,3),H112(3,3,3),H113(3,3,3),H123(3,3,3)
      DIMENSION H221(3,3,3),H222(3,3,3),H223(3,3,3),H331(3,3,3)
      DIMENSION H332(3,3,3),H333(3,3,3)
      DIMENSION H111A(3,3,3),H333A(3,3,3),H11A(3,3),H33A(3,3)
      PARAMETER(ONE=1.0D0)
         CALL VECT3(NAD,K1,K2,K3,K4,V1,V2,V3,XA,TH)
         CALL VECT1(NAD,K1,K2,E21,XA,T21)
         CALL VECT1(NAD,K3,K2,E23,XA,T23)
         CALL HIJS1(NAD,K1,K2,XA,H11A)
         CALL HIJS1(NAD,K3,K2,XA,H33A)
         DO 4  J=1,3
  4      EA(J)=XA(K4,J)
           CALL SCAPRO(EA,EA,D)
           D=ONE/DSQRT(D)
           DO 6  I=1,3
  6        EA(I)=D*EA(I)
         CALL HIJS3(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H22,H32,H33)
         CALL HIJKS1(NAD,K1,K2,XA,H111A)
         CALL HIJKS1(NAD,K3,K2,XA,H333A)
      TANTH=DTAN(TH)
      COSTH=DCOS(TH)
      W1=ONE/T21
      W2=ONE/T23
      W3=TANTH*W1
      W4=TANTH*W2
      DO 10  K=1,3
      DO 10  J=1,3
      DO 10  I=1,3
      H221(I,J,K)=H11(I,J)*(V1(K)*TANTH-E21(K)/T21)
      H221(I,J,K)=H221(I,J,K)+V1(K)*V1(J)*E21(I)*TANTH/T21
      H221(I,J,K)=H221(I,J,K)-(H11A(I,J)*V1(K))/T21
      H223(I,J,K)=H33(I,J)*(V3(K)*TANTH-E23(K)/T23)
      H223(I,J,K)=H223(I,J,K)+V3(K)*V3(J)*E23(I)*TANTH/T23
 10   H223(I,J,K)=H223(I,J,K)-(H33A(I,J)*V3(K))/T23
      DO 15  K=1,3
      DO 15  J=K,3
      DO 15  I=J,3
      H111(I,J,K)=(H221(I,J,K)+H221(J,K,I)+H221(K,I,J))+
     $    V1(I)*V1(J)*V1(K)-H111A(I,J,K)*W3
      H333(I,J,K)=(H223(I,J,K)+H223(J,K,I)+H223(K,I,J))+
     $    V3(I)*V3(J)*V3(K)-H333A(I,J,K)*W4
 15   CONTINUE
      CALL FILL3B(3,3,H111)
      CALL FILL3B(3,3,H333)
      DO 20  I=1,3
      W5=V1(I)*TANTH-E21(I)*W1
      W6=V3(I)*TANTH-E23(I)*W2
      DO 20  J=1,3
      DO 20  K=1,3
      H221(I,J,K)=W5*H31(K,J)
 20   H223(I,J,K)=W6*H31(J,K)
      W5=ONE/(COSTH*COSTH)
      DO 25  K=1,3
      DO 25  J=1,3
      DO 25  I=1,3
      H113(I,J,K)=V3(K)*(V1(I)*V1(J)-H11A(I,J)*W1)*W5
     $        +H221(I,J,K)+H221(J,I,K)
      H331(I,J,K)=V1(K)*(V3(I)*V3(J)-H33A(I,J)*W2)*W5
     $        +H223(I,J,K)+H223(J,I,K)
 25   CONTINUE
      DO 30  K=1,3
      DO 30  J=1,3
      DO 30  I=1,3
      H123(I,J,K)=-(H331(J,K,I)+H113(I,J,K))
      H112(I,J,K)=-(H111(I,J,K)+H113(I,J,K))
 30   H332(I,J,K)=-(H333(I,J,K)+H331(I,J,K))
      DO 35  K=1,3
      DO 35  J=1,3
      DO 35  I=1,3
      H221(J,K,I)=-(H123(I,J,K)+H112(I,K,J))
 35   H223(J,K,I)=-(H332(I,J,K)+H123(J,K,I))
      DO 40  K=1,3
      DO 40  J=1,3
      DO 40  I=1,3
 40   H222(I,J,K)=-(H223(J,K,I)+H221(J,K,I))
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
C  TORS     (OPT2)
      SUBROUTINE HIJKS6(NAD,K1,K2,K3,K4,XA,H111,H112,H221,H222,H113,
     $       H123,H223,H331,H332,H333,H411,H421,H422,H431,H432,H433,
     $       H441,H442,H443,H444)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),V1(3),V2(3),V3(3),V4(3),E21(3),E23(3),E34(3)
      DIMENSION BP21(3),BP22(3),BP23(3),BP32(3),BP33(3),BP34(3)
      DIMENSION H11(3,3),H21(3,3),H31(3,3),H41(3,3),H22(3,3),H32(3,3)
      DIMENSION H42(3,3),H33(3,3),H43(3,3),H44(3,3)
      DIMENSION H111(3,3,3),H112(3,3,3),H221(3,3,3),H222(3,3,3)
      DIMENSION H113(3,3,3),H123(3,3,3),H223(3,3,3),H331(3,3,3)
      DIMENSION H332(3,3,3),H333(3,3,3),H411(3,3,3),H421(3,3,3)
      DIMENSION H422(3,3,3),H431(3,3,3),H432(3,3,3),H433(3,3,3)
      DIMENSION H441(3,3,3),H442(3,3,3),H443(3,3,3),H444(3,3,3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0)
      CALL VECT6(NAD,K1,K2,K3,K4,V1,V2,V3,V4,XA,TAU)
      CALL VECT1(NAD,K1,K2,E21,XA,T21)
      CALL VECT1(NAD,K3,K2,E23,XA,T23)
      CALL VECT1(NAD,K4,K3,E34,XA,T34)
      CALL VECT2(NAD,K1,K2,K3,BP21,BP22,BP23,XA,P2)
      CALL VECT2(NAD,K2,K3,K4,BP32,BP33,BP34,XA,P3)
      CALL MAT1(H32,E23)
      CALL MAT1(H21,E21)
      CALL MAT1(H43,E34)
      C1=ONE/T21
      C2=ONE/T34
      C3=ONE/T23
      C4=DSIN(P2)
      C5=DCOS(P2)
      C6=C5/C4
      C7=DSIN(P3)
      C8=DCOS(P3)
      C9=C8/C7
      C10=ONE/C4**2
      C11=ONE/C7**2
      C12=C1*C1
      C13=C2*C2
      C14=C3*C3
      C15=T21*C3
      C16=T34*C3
      W1=TWO*C6
      W2=TWO*C9
      W3=TWO*C1
      W4=TWO*C2
      W5=C5*C3
      W6=C8*C3
      DO 10  K=1,3
      H411(1,1,K)=E21(K)*C1+BP21(K)*C6
      H411(1,2,K)=E34(K)*C2+BP34(K)*C9
      H411(1,3,K)=E23(K)*C3+BP23(K)*W1
      H411(2,1,K)=-E23(K)*C3+BP32(K)*W2
      H411(2,2,K)=E21(K)*W3+E23(K)*C3-BP22(K)*W1
      H411(2,3,K)=E34(K)*W4-E23(K)*C3-BP33(K)*W2
      H411(3,1,K)=E23(K)*W5+BP23(K)*C4
 10   H411(3,2,K)=-E23(K)*W6+BP32(K)*C7
      DO 15  K=1,3
        DO 16  M=1,3
 16     V2(M)=ZERO
      V2(K)=ONE
      CALL MAT1(H22,V2)
      DO 20  J=1,3
      DO 20  I=1,3
 20   H421(I,J,K)=H22(I,J)
 15   CONTINUE
      W1=TWO*C10*C12
      W2=TWO*C11*C13
      DO 100 K=1,3
      W3=W1*H411(1,1,K)
      W4=W2*H411(1,2,K)
        DO 100  J=1,K
        DO 100  I=1,J
        H111(I,J,K)=W3*H32(I,J)
 100    H444(I,J,K)=-W4*H32(I,J)
      W1=C10*C12
      W2=C11*C13
      W3=W1*C3
      W4=W2*C3
      DO 105 K=1,3
      W5=W1*H411(1,3,K)
      W6=W2*H411(2,1,K)
        DO 105  J=1,3
        DO 105  I=1,3
        H113(I,J,K)=W5*H32(I,J)-W3*H421(I,J,K)
 105    H442(I,J,K)=-W6*H32(I,J)-W4*H421(I,J,K)
      W1=C1*C3*C10
      W2=C2*C3*C11
      DO 110 K=1,3
        W5=W1*H411(2,2,K)
        W6=W2*H411(2,3,K)
        DO 110  J=1,3
        DO 110  I=1,3
        H123(I,K,J)=-W5*H21(I,J)+W3*H421(I,J,K)
 110    H432(I,K,J)=-W6*H43(I,J)+W4*H421(I,J,K)
      CALL HIJS2(NAD,K1,K2,K3,XA,H11,H21,H31,H22,H32,H33)
      CALL HIJS1(NAD,K1,K2,XA,H44)
      CALL HIJS1(NAD,K2,K3,XA,H42)
      W1=TWO*C1
      W2=TWO*C12
      DO 115  K=1,3
        DO 116  I=1,K
 116    H43(I,K)=TWO*(W1*H44(I,K)+C6*H11(I,K)-C10*BP21(I)*BP21(K))
 115  H43(K,K)=H43(K,K)-W2
      DO 120  K=1,3
      DO 120  J=1,K
      DO 120  I=1,J
 120  H111(I,J,K)=H111(I,J,K)-V1(J)*H43(I,K)
        W1=TWO*C6
        W2=TWO*C10
        W3=TWO*C3
        DO 125  K=1,3
        DO 125  I=1,3
 125    H43(I,K)=H31(K,I)*W1-BP21(I)*BP23(K)*W2
        DO 130  K=1,3
        DO 130  J=1,3
        DO 130  I=1,3
 130    H113(I,J,K)=H113(I,J,K)-V1(J)*H43(I,K)
        DO 135  K=1,3
        DO 136  J=1,3
 136    H43(J,K)=W3*H42(J,K)-W1*H32(K,J)+W2*BP22(J)*BP23(K)
 135    H43(K,K)=H43(K,K)-C14
        DO 140  K=1,3
        DO 140  J=1,3
        DO 140  I=1,3
 140    H123(I,J,K)=H123(I,J,K)+V1(I)*H43(J,K)
      W1=C4*C3
      W2=C4*C15
      W3=C5*C15
      W4=W3*C3
      W5=C3*C15
      DO 145  K=1,3
      DO 145  I=1,3
      W6=-E21(I)*BP23(K)*W1+H32(K,I)*W2+BP22(I)*BP23(K)*W3-H42(I,K)*W4
 145  H43(I,K)=W6
      DO 150  K=1,3
      DO 150  I=1,3
      W6=H43(I,K)+E23(I)*W5*H411(3,1,K)
      DO 150  J=1,3
 150  H223(I,J,K)=-V1(J)*W6
      W1=C3*C4*C15
      W2=C5*C14
      DO 155  K=1,3
      DO 155  I=1,3
      W3=-E23(K)*BP22(I)*W1+E23(K)*W2*(C15*E23(I)-E21(I))
 155  H43(I,K)=H43(I,K)+W3
      DO 160  K=1,3
      DO 160  J=1,3
      DO 160  I=1,3
 160  H332(I,J,K)=V1(J)*H43(K,I)
      CALL HIJS2(NAD,K2,K3,K4,XA,H22,H32,H42,H33,H43,H44)
      CALL HIJS1(NAD,K4,K3,XA,H11)
      CALL HIJS1(NAD,K3,K2,XA,H31)
      W1=TWO*C2
      W2=TWO*C13
      DO 165  K=1,3
      DO 166  I=1,K
 166  H21(I,K)=TWO*(W1*H11(I,K)+C9*H44(I,K)-C11*BP34(I)*BP34(K))
 165  H21(K,K)=H21(K,K)-W2
      DO 170  K=1,3
      DO 170  J=1,K
      DO 170  I=1,J
 170  H444(I,J,K)=H444(I,J,K)-V4(J)*H21(I,K)
      W1=TWO*C9
      W2=TWO*C11
      W3=TWO*C3
      DO 175  K=1,3
      DO 175  I=1,3
 175  H21(I,K)=W1*H42(I,K)-W2*BP34(I)*BP32(K)
      DO 180  K=1,3
      DO 180  J=1,3
      DO 180  I=1,3
 180  H442(I,J,K)=H442(I,J,K)-V4(J)*H21(I,K)
      DO 185  K=1,3
      DO 186  J=1,3
 186  H21(J,K)=W3*H31(J,K)-W1*H32(J,K)+W2*BP33(J)*BP32(K)
 185  H21(K,K)=H21(K,K)-C14
      DO 190  K=1,3
      DO 190  J=1,3
      DO 190  I=1,3
 190  H432(I,J,K)=H432(I,J,K)+V4(I)*H21(J,K)
      W1=C7*C3
      W2=C7*C16
      W3=C8*C16
      W4=W3*C3
      W5=T34*C14
      DO 195  K=1,3
      DO 195  I=1,3
      W6=-E34(I)*BP32(K)*W1+H32(I,K)*W2+BP33(I)*BP32(K)*W3-H31(I,K)*W4
 195  H21(I,K)=W6
      DO 200  K=1,3
      DO 200  I=1,3
      W6=H21(I,K)-E23(I)*W5*H411(3,2,K)
      DO 200  J=1,3
 200  H332(I,J,K)=H332(I,J,K)-V4(J)*W6
      W1=C3*C7*C16
      W2=C8*C14
      DO 205  K=1,3
      DO 205  I=1,3
      W3=E23(K)*BP33(I)*W1+E23(K)*W2*(E34(I)+C16*E23(I))
 205  H21(I,K)=H21(I,K)+W3
      DO 210  K=1,3
      DO 210  J=1,3
      DO 210  I=1,3
 210  H223(I,J,K)=H223(I,J,K)+V4(J)*H21(K,I)
      CALL HIJS6(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H41,H22,H32,H42,
     $            H33,H43,H44)
      DO 220  K=1,3
      DO 220  J=1,K
      DO 220  I=1,J
      H111(I,J,K)=H111(I,J,K)-TWO*H11(J,K)*H411(1,1,I)
 220  H444(I,J,K)=H444(I,J,K)-TWO*H44(J,K)*H411(1,2,I)
      CALL FILL3A(3,3,H111)
      CALL FILL3A(3,3,H444)
      DO 225  I=1,3
      W1=TWO*H411(1,1,I)
      W2=TWO*H411(1,2,I)
      DO 225  J=1,3
      DO 225  K=1,3
      H113(I,J,K)=H113(I,J,K)-W1*H31(K,J)
      H442(I,J,K)=H442(I,J,K)-W2*H42(J,K)
      H123(I,J,K)=H123(I,J,K)-H21(J,I)*H411(1,3,K)
 225  H432(I,J,K)=H432(I,J,K)-H43(I,J)*H411(2,1,K)
      W4=C5*C15
      W1=W4-ONE
      W2=C8*C16
      W3=W2-ONE
      DO 230  K=1,3
      DO 230  J=1,3
      DO 230  I=1,3
      H223(I,J,K)=H223(I,J,K)+W1*H123(J,I,K)-W2*H432(J,K,I)
 230  H332(I,J,K)=H332(I,J,K)+W3*H432(J,I,K)-W4*H123(J,K,I)
      DO 240  K=1,3
      DO 240  J=1,3
      DO 240  I=1,3
      H223(I,J,K)=H223(I,J,K)-C15*H21(I,J)*H411(3,1,K)
 240  H332(I,J,K)=H332(I,J,K)-C16*H43(J,I)*H411(3,2,K)
      DO 250  K=1,3
      DO 250  J=1,3
      W1=C16*(H43(J,K)-C3*V4(J)*E23(K))
      W2=C15*(H21(K,J)+C3*V1(J)*E23(K))
      DO 250  I=1,3
      H223(I,J,K)=H223(I,J,K)+W1*H411(3,2,I)
 250  H332(I,J,K)=H332(I,J,K)+W2*H411(3,1,I)
      W1=C5*C3
      W2=C4*C15
      W3=C5*T21*C14
      W4=C8*C3
      W5=C7*C16
      W6=C8*T34*C14
      DO 260  K=1,3
      H411(1,1,K)=W5*BP33(K)+W6*E23(K)+W4*E34(K)
      H411(1,2,K)=W2*BP22(K)-W3*E23(K)+W1*E21(K)
      H411(1,3,K)=-W1*E21(K)-W2*BP22(K)+W3*E23(K)
 260  H411(2,1,K)=-W4*E34(K)-W5*BP33(K)-W6*E23(K)
      DO 265  K=1,3
      DO 265  J=1,3
      DO 265  I=1,3
      H223(I,J,K)=H223(I,J,K)+H42(J,I)*H411(1,1,K)
 265  H332(I,J,K)=H332(I,J,K)+H31(I,J)*H411(1,2,K)
      DO 270  K=1,3
      DO 270  J=1,3
      W1=(H31(K,J)-C3*V1(J)*E23(K))
      W2=(H42(J,K)+C3*V4(J)*E23(K))
      DO 270  I=1,3
      H223(I,J,K)=H223(I,J,K)+W1*H411(1,3,I)
 270  H332(I,J,K)=H332(I,J,K)+W2*H411(2,1,I)
      DO 280  K=1,3
      DO 280  J=1,3
      DO 280  I=1,3
      H411(I,J,K)=ZERO
      H421(I,J,K)=ZERO
      H431(I,J,K)=ZERO
      H441(I,J,K)=ZERO
      H443(J,K,I)=-(H444(I,J,K)+H442(J,K,I))
 280  H112(I,J,K)=-(H111(I,J,K)+H113(I,J,K))
      DO 285  K=1,3
      DO 285  J=1,3
      DO 285  I=1,3
      H433(K,I,J)=-(H443(I,K,J)+H432(K,J,I))
 285  H221(I,J,K)=-(H112(I,K,J)+H123(K,J,I))
      DO 290  K=1,3
      DO 290  J=1,3
      DO 290  I=1,3
      H422(K,I,J)=-(H432(K,I,J)+H442(I,K,J))
 290  H331(I,J,K)=-(H123(K,I,J)+H113(I,K,J))
      DO 300  K=1,3
      DO 300  J=1,K
      DO 300  I=1,J
      H222(I,J,K)=-(H221(I,J,K)+H223(I,J,K)+H422(K,I,J))
 300  H333(I,J,K)=-(H331(I,J,K)+H332(I,J,K)+H433(K,I,J))
      CALL FILL3A(3,3,H222)
      CALL FILL3A(3,3,H333)
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE FILL3A(NX,NY,F3)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER M,N,P
      DIMENSION F3(NX,NX,NX)
      DO 5  P=1,NY
      DO 6  N=1,P-1
      DO 7  M=1,N-1
      F3(N,M,P)=F3(M,N,P)
      F3(N,P,M)=F3(M,N,P)
      F3(M,P,N)=F3(M,N,P)
      F3(P,M,N)=F3(M,N,P)
   7  F3(P,N,M)=F3(M,N,P)
      F3(N,P,N)=F3(N,N,P)
   6  F3(P,N,N)=F3(N,N,P)
      DO 8  M=1,P-1
      F3(P,M,P)=F3(M,P,P)
   8  F3(P,P,M)=F3(M,P,P)
   5  CONTINUE
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE FILL3B(NX,NY,F3)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER M,N,P
      DIMENSION F3(NX,NX,NX)
      DO 5   M=1,NY
      DO 10  N=1,M-1
      DO 15  P=1,N-1
      F3(N,M,P)=F3(M,N,P)
      F3(N,P,M)=F3(M,N,P)
      F3(M,P,N)=F3(M,N,P)
      F3(P,M,N)=F3(M,N,P)
  15  F3(P,N,M)=F3(M,N,P)
      F3(N,M,N)=F3(M,N,N)
  10  F3(N,N,M)=F3(M,N,N)
      DO 20  P=1,M-1
      F3(M,P,M)=F3(M,M,P)
  20  F3(P,M,M)=F3(M,M,P)
   5  CONTINUE
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE FILL4A(NX,NY,F4)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER M,N,P,Q
      DIMENSION F4(NX,NX,NX,NX)
      DO 5  Q=1,NY
      DO 5  P=1,Q
      DO 5  N=1,P
      DO 5  M=1,N
      F4(N,M,P,Q)=F4(M,N,P,Q)
      F4(N,P,M,Q)=F4(M,N,P,Q)
      F4(N,P,Q,M)=F4(M,N,P,Q)
      F4(M,P,N,Q)=F4(M,N,P,Q)
      F4(P,M,N,Q)=F4(M,N,P,Q)
      F4(P,N,M,Q)=F4(M,N,P,Q)
      F4(P,N,Q,M)=F4(M,N,P,Q)
      F4(M,P,Q,N)=F4(M,N,P,Q)
      F4(P,M,Q,N)=F4(M,N,P,Q)
      F4(P,Q,M,N)=F4(M,N,P,Q)
      F4(P,Q,N,M)=F4(M,N,P,Q)
      F4(M,N,Q,P)=F4(M,N,P,Q)
      F4(N,M,Q,P)=F4(M,N,P,Q)
      F4(N,Q,M,P)=F4(M,N,P,Q)
      F4(N,Q,P,M)=F4(M,N,P,Q)
      F4(M,Q,N,P)=F4(M,N,P,Q)
      F4(Q,M,N,P)=F4(M,N,P,Q)
      F4(Q,N,M,P)=F4(M,N,P,Q)
      F4(Q,N,P,M)=F4(M,N,P,Q)
      F4(M,Q,P,N)=F4(M,N,P,Q)
      F4(Q,M,P,N)=F4(M,N,P,Q)
      F4(Q,P,M,N)=F4(M,N,P,Q)
      F4(Q,P,N,M)=F4(M,N,P,Q)
   5  CONTINUE
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
cbfy  FUNCTION DOTX(A,NA,B,NB,N)
c     IMPLICIT REAL*8 (A-H,O-Z)
c     DIMENSION A(1),B(1)
c     PARAMETER(ZERO=0.0D0)
c     IAPT=1
c     IBPT=1
c     D=ZERO
c     DO 10 I=1,N
c     D=D+A(IAPT)*B(IBPT)
c     IAPT=IAPT+NA
c     IBPT=IBPT+NB
c10   CONTINUE
c     DOTX=D
c     RETURN
cbfy  END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE VECPRO(U,V,W)
      REAL*8 U(3),V(3),W(3)
      W(1)=U(2)*V(3)-V(2)*U(3)
      W(2)=U(3)*V(1)-U(1)*V(3)
      W(3)=U(1)*V(2)-U(2)*V(1)
      RETURN
      END
C     //////////////////////////////////////////////////////////////
      SUBROUTINE SCAPRO(U,V,D)
      REAL*8 D,U(3),V(3),ZERO
      PARAMETER(ZERO=0.0D0)
      D=ZERO
      DO 5  I=1,3
 5    D=D+U(I)*V(I)
      RETURN
      END
C     //////////////////////////////////////////////////////////////
      SUBROUTINE MAT1(EM,V)
C       EM(I,J)=(EI X EJ)*V
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EM(3,3),V(3)
      PARAMETER(ZERO=0.0D0)
      EM(2,1)=-V(3)
      EM(3,1)=V(2)
      EM(3,2)=-V(1)
      EM(1,2)=-EM(2,1)
      EM(1,3)=-EM(3,1)
      EM(2,3)=-EM(3,2)
      DO 5  I=1,3
 5    EM(I,I)=ZERO
      RETURN
      END
C     //////////////////////////////////////////////////////////////
      SUBROUTINE MAT2(AA,VK)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION AA(3,3),VK(3)
      PARAMETER(ZERO=0.0D0)
      DO 10  I=1,3
  10  AA(I,I)=ZERO
      AA(1,2)=VK(1)
      AA(2,1)=-VK(1)
      AA(1,3)=VK(2)
      AA(3,1)=-VK(2)
      AA(2,3)=VK(3)
      AA(3,2)=-VK(3)
      END
C     //////////////////////////////////////////////////////////////
      SUBROUTINE XOUT(NC,NS,X,R,ISCR)
      REAL*8 X(NC,NC)
      INTEGER R
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(1X,'SR MATRIX FOR COORDINATE ',I4,' WRITTEN ON FILE ',I4,
     $    ' AT LOCATION ',I8)
    2 FORMAT(1X,'X  MATRIX FOR COORDINATE ',I4,' WRITTEN ON FILE ',I4,
     $    ' AT LOCATION ',I8)
      NLEN=NC**2
      NNN=2*NLEN
      MMM=(ABS(R)-1)*NNN
      IF(R.GT.0) MMM=MMM+NLEN
      LLL=INTOWP(MMM)+1
      CALL WWRITW(ISCR,X,INTOWP(NLEN),LLL,KKK)
      IF(LPRT(4,NPRT).GE.1) RETURN
      IF(R.LT.0) THEN
      WRITE(ICHECK,1) ABS(R),ISCR,LLL
      ELSE
      WRITE(ICHECK,2) ABS(R),ISCR,LLL
      END IF
      RETURN
      END
C     ////////////////////////////////////////////////////////////////
      SUBROUTINE XIN(NC,NS,X,R,ISCR)
      REAL*8 X(NC,NC)
      INTEGER R
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(1X,'SR MATRIX FOR COORDINATE ',I4,' READ FROM  FILE ',I4,
     $    ' AT LOCATION ',I8)
    2 FORMAT(1X,'X  MATRIX FOR COORDINATE ',I4,' READ FROM  FILE ',I4,
     $    ' AT LOCATION ',I8)
      NLEN=NC**2
      NNN=2*NLEN
      MMM=(ABS(R)-1)*NNN
      IF(R.GT.0) MMM=MMM+NLEN
      LLL=INTOWP(MMM)+1
      CALL WREADW(ISCR,X,INTOWP(NLEN),LLL,KKK)
      IF(LPRT(4,NPRT).GE.1) RETURN
      IF(R.LT.0) THEN
      WRITE(ICHECK,1) ABS(R),ISCR,LLL
      ELSE
      WRITE(ICHECK,2) ABS(R),ISCR,LLL
      END IF
      RETURN
      END
C     ////////////////////////////////////////////////////////////////
      SUBROUTINE YOUT(NC,NS,Y,R,ISCR)
      REAL*8 Y(NC,NC,NC)
      INTEGER R
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(1X,'SR MATRIX FOR COORDINATE ',I4,' WRITTEN ON FILE ',I4,
     $    ' AT LOCATION ',I8)
    2 FORMAT(1X,'Y  MATRIX FOR COORDINATE ',I4,' WRITTEN ON FILE ',I4,
     $    ' AT LOCATION ',I8)
      NLEN=NC**3
      NNN=2*NLEN
      MMM=(ABS(R)-1)*NNN
      IF(R.GT.0) MMM=MMM+NLEN
      LLL=INTOWP(MMM)+1
      CALL WWRITW(ISCR,Y,INTOWP(NLEN),LLL,KKK)
      IF(LPRT(4,NPRT).GE.1) RETURN
      IF(R.LT.0) THEN
      WRITE(ICHECK,1) ABS(R),ISCR,LLL
      ELSE
      WRITE(ICHECK,2) ABS(R),ISCR,LLL
      END IF
      RETURN
      END
C     ////////////////////////////////////////////////////////////////
      SUBROUTINE YIN(NC,NS,Y,R,ISCR)
      REAL*8 Y(NC,NC,NC)
      INTEGER R
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(1X,'SR MATRIX FOR COORDINATE ',I4,' READ FROM  FILE ',I4,
     $    ' AT LOCATION ',I8)
    2 FORMAT(1X,'Y  MATRIX FOR COORDINATE ',I4,' READ FROM  FILE ',I4,
     $    ' AT LOCATION ',I8)
      NLEN=NC**3
      NNN=2*NLEN
      MMM=(ABS(R)-1)*NNN
      IF(R.GT.0) MMM=MMM+NLEN
      LLL=INTOWP(MMM)+1
      CALL WREADW(ISCR,Y,INTOWP(NLEN),LLL,KKK)
      IF(LPRT(4,NPRT).GE.1) RETURN
      IF(R.LT.0) THEN
      WRITE(ICHECK,1) ABS(R),ISCR,LLL
      ELSE
      WRITE(ICHECK,2) ABS(R),ISCR,LLL
      END IF
      RETURN
      END
C///////////////////////////////////////////////////////////////////////
      SUBROUTINE ZOUT(NC,NS,Z,R,ISCR)
      REAL*8 Z(NC,NC,NC,NC)
      INTEGER R
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(1X,'SR MATRIX FOR COORDINATE ',I4,' WRITTEN ON FILE ',I4,
     $    ' AT LOCATION ',I8)
    2 FORMAT(1X,'Z  MATRIX FOR COORDINATE ',I4,' WRITTEN ON FILE ',I4,
     $    ' AT LOCATION ',I8)
      NLEN=NC**4
      NNN=2*NLEN
      MMM=(ABS(R)-1)*NNN
      IF(R.GT.0) MMM=MMM+NLEN
      LLL=INTOWP(MMM)+1
      CALL WWRITW(ISCR,Z,INTOWP(NLEN),LLL,KKK)
      IF(LPRT(4,NPRT).GE.1) RETURN
      IF(R.LT.0) THEN
      WRITE(ICHECK,1) ABS(R),ISCR,LLL
      ELSE
      WRITE(ICHECK,2) ABS(R),ISCR,LLL
      END IF
      RETURN
      END
C///////////////////////////////////////////////////////////////////////
      SUBROUTINE ZIN(NC,NS,Z,R,ISCR)
      REAL*8 Z(NC,NC,NC,NC)
      INTEGER R
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(1X,'SR MATRIX FOR COORDINATE ',I4,' READ FROM FILE ',I4,
     $    ' AT LOCATION ',I8)
    2 FORMAT(1X,'Z  MATRIX FOR COORDINATE ',I4,' READ FROM FILE ',I4,
     $    ' AT LOCATION ',I8)
      NLEN=NC**4
      NNN=2*NLEN
      MMM=(ABS(R)-1)*NNN
      IF(R.GT.0) MMM=MMM+NLEN
      LLL=INTOWP(MMM)+1
      CALL WREADW(ISCR,Z,INTOWP(NLEN),LLL,KKK)
      IF(LPRT(4,NPRT).GE.1) RETURN
      IF(R.LT.0) THEN
      WRITE(ICHECK,1) ABS(R),ISCR,LLL
      ELSE
      WRITE(ICHECK,2) ABS(R),ISCR,LLL
      END IF
      RETURN
      END
C////////////////////////////////////////////////////////////////////
      INTEGER FUNCTION LPRT(K,NPRT)
      DIMENSION N(4)
      NR=NPRT
      N(4)=NR/1000
      NR=NR-N(4)*1000
      N(3)=NR/100
      NR=NR-N(3)*100
      N(2)=NR/10
      NR=NR-N(2)*10
      N(1)=NR
      LPRT=N(K)
      END
C////////////////////////////////////////////////////////////////////
      SUBROUTINE INPFKM(NC,NDER,NEQ,NS,F1,F2,F3,F4)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER P,Q,R,S
      DIMENSION F1(NC),F2(NC,NC),F3(NC,NC,NC),F4(NC,NC,NC,NC)
      PARAMETER(ZERO=0.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
 1    FORMAT(5I5)
 2    FORMAT(3F20.10)
 3    FORMAT(20X,F20.10)
 5    FORMAT(20X,F20.10)
      NA=NC/3
      IF(NEQ.EQ.0) GO TO 110
           DO 108  I=1,NS
 108       F1(I)=ZERO
      IF(NDER.LE.1) GO TO 190
 110  DO 112  I=1,NS
      DO 112  J=1,NS
 112  F2(I,J)=ZERO
      IF(NDER.LE.2) GO TO 190
      DO 114  I=1,NS
      DO 114  J=1,I
      DO 114  K=1,J
 114  F3(I,J,K)=ZERO
      IF(NDER.LE.3) GO TO 190
      DO 116  I=1,NS
      DO 116  J=1,I
      DO 116  K=1,J
      DO 116  L=1,K
 116  F4(I,J,K,L)=ZERO
C
 190  IF(NEQ.EQ.0) GO TO 200
 192  READ(IIN1,1) M
      IF(M.EQ.0) GO TO 200
      BACKSPACE IIN1
      READ(IIN1,5) F1(M)
      GO TO 192
 200  READ(IIN1,1) M,N
      IF(M.EQ.0) GO TO 202
      BACKSPACE IIN1
      READ(IIN1,5) F2(M,N)
      GO TO 200
 202  IF(NDER.LE.2) GO TO 212
 204  READ(IIN1,1) M,N,P
      IF(M.EQ.0) GO TO 206
      BACKSPACE IIN1
      READ(IIN1,5) F3(M,N,P)
      GO TO 204
 206  IF(NDER.LE.3) GO TO 212
 208  READ(IIN1,1) M,N,P,Q
      IF(M.EQ.0) GO TO 212
      BACKSPACE IIN1
      READ(IIN1,5) F4(M,N,P,Q)
      GO TO 208
 212  CONTINUE
C
      IF(NEQ.NE.0) THEN
      WRITE(I12,1) NA
      WRITE(I12,3) (F1(I),I=1,NS)
      REWIND I12
      END IF
      DO 214  I=1,NS
      DO 214  J=1,I
 214  F2(J,I)=F2(I,J)
      WRITE (I16,1) NA,NA*6
      WRITE (I16,2) ((F2(I,J),J=1,NS),I=1,NS)
      REWIND I16
      IF(NDER.LE.2) RETURN
      WRITE (I21,1) NA,(NS*(NS+1)*(NS+2))/6
      WRITE (I21,2) (((F3(I,J,K),K=1,J),J=1,I),I=1,NS)
      REWIND I21
      IF(NDER.LE.3) RETURN
      WRITE (I25,1) NA,(NS*(NS+1)*(NS+2)*(NS+3))/24
      WRITE (I25,2) ((((F4(I,J,K,L),L=1,K),K=1,J),J=1,I),I=1,NS)
      REWIND I25
      RETURN
      END
C     ///////////////////////////////////////////////////////////
      SUBROUTINE FCOUT(NC,NS,NSY,NEQ,NDER,NINV,NVEC,NRUN,SS,ENERGY,
     $                 F1,F2,F3,F4)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER P,Q,QQ
cbfy
      PARAMETER (LTEXT = 1200)
      CHARACTER TEXT(LTEXT)*80, LABEL*80, WORD*4
cbfy
      DIMENSION SS(NS)
      DIMENSION F1(NC),F2(NC,NC),F3(NC,NC,NC),F4(NC,NC,NC,NC)
      DIMENSION DIP(3)
      PARAMETER(CF1=0.121376050883D0,CF2=0.064229421739D0)
      PARAMETER(CF3=0.033988736554D0,CF4=0.017986059681D0)
      PARAMETER(ONE=1.0D0)
      PARAMETER(F1CUT=1.0D-8,F2CUT=1.0D-6,F3CUT=1.0D-5,F4CUT=1.0D-5)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      COMMON /DIPOLE/DIP,QQ
 1    FORMAT(/' GRADIENTS')
 2    FORMAT(6F12.8)
 3    FORMAT(/' QUADRATIC FORCE CONSTANTS'/)
 4    FORMAT(6F12.6)
 5    FORMAT(/' CUBIC FORCE CONSTANTS'/)
 6    FORMAT('M=',I5)
 7    FORMAT(/' QUARTIC FORCE CONSTANTS'/)
 8    FORMAT('M=',I5,'  N=',I5)
 9    FORMAT(//' FINAL INTERNAL (SYMMETRY) COORDINATE FORCE CONSTANTS')
 10   FORMAT(7F10.6)
cbfy 11   FORMAT(8F10.7)
 11   FORMAT(8F10.6)
 12   FORMAT(//' FINAL CARTESIAN COORDINATE FORCE CONSTANTS')
 13   FORMAT(3F20.10)
 14   FORMAT(5I5)
 15   FORMAT(20X,3F20.10)
 16   FORMAT(3F20.10)
 17   FORMAT(I5,12X,F20.10)
 18   FORMAT(//' PRINTING OF CUBIC FORCE CONSTANTS',
     $         ' TO OUTPUT FILE SUPPRESSED.'/' LPRT(1,NPRT)=',I3)
 19   FORMAT(//' PRINTING OF QUARTIC FORCE CONSTANTS',
     $         ' TO OUTPUT FILE SUPPRESSED.'/' LPRT(1,NPRT)=',I3)
 20   FORMAT(I5,15X,F20.10)
 21   FORMAT(2I5,10X,F20.10)
 22   FORMAT(3I5,5X,F20.10)
 23   FORMAT(4I5,F20.10)
 24   FORMAT(2I5,3F20.10)
cbfy
 25   FORMAT(A80)
 26   FORMAT(A4)
cbfy
      NA=NC/3
      IF(NINV.LE.0) THEN
         WRITE(IOUT,9)
         IOUT1=I12
         IOUT2=I16
         IOUT3=I21
         IOUT4=I25
         IOUT5=I18
      ELSE
         WRITE(IOUT,12)
         IOUT1=I11
         IOUT2=I15
         IOUT3=I20
         IOUT4=I24
         IOUT5=I17
      END IF
      IF(NEQ.NE.0) THEN
         IF(NINV.LE.0) THEN
             XX=ONE
             IF(NVEC.EQ.1) XX=CF1
         ELSE
             XX=CF1
             IF(NVEC.EQ.1) XX=ONE
         END IF
         DO 200 M=1,NSY
 200     F1(M)=F1(M)*XX
      END IF
      IF(NINV.LE.0) GO TO 220
      IF(NDER.GE.2) THEN
      DO 205  N=1,NSY
      DO 205  M=1,NSY
 205  F2(M,N)=F2(M,N)*CF2
      END IF
      IF(NDER.GE.3) THEN
      DO 210  P=1,NSY
      DO 210  N=1,NSY
      DO 210  M=1,NSY
 210  F3(M,N,P)=F3(M,N,P)*CF3
      END IF
      IF(NDER.GE.4) THEN
      DO 215  Q=1,NSY
      DO 215  P=1,NSY
      DO 215  N=1,NSY
      DO 215  M=1,NSY
 215  F4(M,N,P,Q)=F4(M,N,P,Q)*CF4
      END IF
 220  CONTINUE
      IF(NEQ.NE.0) THEN
           WRITE(IOUT,1)
           WRITE(IOUT,2) (F1(M),M=1,NSY)
           IF(NVEC.EQ.1) THEN
                IF(NRUN.LE.1) WRITE(IOUT5,24) NA,QQ,(DIP(KK),KK=1,3)
                WRITE(IOUT5,16) (F1(M),M=1,NSY)
                GO TO 235
           END IF
           IF(NINV.GT.0) THEN
cbfy
c               First, skip over the gradients
                DO 221  M=1,NA
 221            READ(IOUT1,25) LABEL
c               Save the rest of the file in a text buffer
                N=1
 222            CONTINUE
                IF (N.GT.LTEXT) THEN
             WRITE(IOUT,*) 'FCOUT: ERROR: The text buffer is too small,'
             WRITE(IOUT,*) '       increase LTEXT to the file length.'
             WRITE(IOUT,*) 'FCOUT: Aborting.'
                   STOP
                   ENDIF
                READ(IOUT1,25,END=223) TEXT(N)
                N=N+1
                GO TO 222
 223            DO 224  M=1,N+NA
 224            BACKSPACE IOUT1
c               Write out new gradients
                WRITE(IOUT1,15) (F1(M),M=1,NSY)
c               Copy the text buffer back to File11
                DO 225  M=1,N-1
 225            WRITE(IOUT1,25) TEXT(M)
                DO 226  M=1,N-1
 226            BACKSPACE IOUT1
cbfy
           ELSE
                WRITE(IOUT1,17) NA,ENERGY
                DO 230  M=1,NSY
 230            WRITE(IOUT1,13) SS(M),F1(M)
           END IF
      END IF
 235  IF(NDER.GE.2) THEN
           WRITE(IOUT,3)
           DO 100  M=1,NSY
 100       WRITE(IOUT,4) (F2(M,N),N=1,NSY)
           WRITE (IOUT2,14) NA,NA*6
           WRITE (IOUT2,13) ((F2(M,N),N=1,NSY),M=1,NSY)
           IF(LPRT(4,NPRT).GE.4)
     $             WRITE(ICHECK,10)((F2(M,N),M=N,NSY),N=1,NSY)
           IF(LPRT(4,NPRT).GE.3) THEN
           DO 102  M=1,NSY
 102       WRITE(ICHECK,11)(F2(M,N),N=1,M)
cbfy
c  Write force constants to BMAT file
              IBMAT = 40
c          Read until STOP
 111          READ(IBMAT,26,END=112) WORD
              IF (WORD.EQ.'STOP') GO TO 113
              GO TO 111
 112          WRITE(IOUT,*) 'FCOUT: No STOP found in BMAT file.'
              WRITE(IOUT,*) 'FCOUT: Aborting.'
              STOP
 113          BACKSPACE IBMAT
c          Read rest of text into buffer
              K=1
 114          READ(IBMAT,25,END=115) TEXT(K)
              K=K+1
              GO TO 114
 115          CONTINUE
              rewind(ibmat)
              call bottom(ibmat)
c          Backspace to force constants
              DO 116 M=1,K - 1 + ((NSY/8 + 1)*(NSY - (NSY/8)*4))
 116          BACKSPACE IBMAT
c          Now write new force constants and rest of text to BMAT
              DO 117  M=1,NSY
 117          WRITE(IBMAT,11)(F2(M,N),N=1,M)
              DO 118 M=1,K-1
 118          WRITE(IBMAT,25) TEXT(M)
cbfy
           END IF
      END IF
      IF(NDER.GE.3) THEN
           IF(LPRT(1,NPRT).GE.1) THEN
             WRITE(IOUT,5)
             DO 105  M=1,NSY
             WRITE(IOUT,6) M
             DO 105  N=1,NSY
 105         WRITE(IOUT,4) (F3(M,N,P),P=1,NSY)
           ELSE
             WRITE(IOUT,18) LPRT(1,NPRT)
           END IF
           WRITE (IOUT3,14) NA,(NSY*(NSY+1)*(NSY+2))/6
           WRITE (IOUT3,13) (((F3(M,N,P),P=1,N),N=1,M),M=1,NSY)
      END IF
      IF(NDER.GE.4) THEN
           IF(LPRT(1,NPRT).GE.1) THEN
             WRITE(IOUT,7)
             DO 110  M=1,NSY
             DO 110  N=1,NSY
             WRITE(IOUT,8) M,N
             DO 110  P=1,NSY
 110         WRITE(IOUT,4) (F4(M,N,P,Q),Q=1,NSY)
           ELSE
             WRITE(IOUT,19) LPRT(1,NPRT)
           END IF
      WRITE (IOUT4,14) NA,(NSY*(NSY+1)*(NSY+2)*(NSY+3))/24
      WRITE (IOUT4,13) ((((F4(M,N,P,Q),Q=1,P),P=1,N),N=1,M),M=1,NSY)
      END IF
      IF(LPRT(4,NPRT).NE.2) RETURN
      NZ=0
      IF(NEQ.NE.0) THEN
         DO 300  M=1,NSY
       IF(DABS(F1(M)).GT.F1CUT) WRITE(ICHECK,20) M,F1(M)
 300     CONTINUE
         WRITE(ICHECK,20) NZ
      END IF
      IF(NDER.GE.2) THEN
         DO 310  M=1,NSY
         DO 310  N=1,M
       IF(DABS(F2(M,N)).GT.F2CUT) WRITE(ICHECK,21) M,N,F2(M,N)
 310     CONTINUE
         WRITE(ICHECK,20) NZ
      END IF
      IF(NDER.GE.3) THEN
         DO 320  M=1,NSY
         DO 320  N=1,M
         DO 320  P=1,N
       IF(DABS(F3(M,N,P)).GT.F3CUT) WRITE(ICHECK,22) M,N,P,F3(M,N,P)
 320     CONTINUE
         WRITE(ICHECK,20) NZ
      END IF
      IF(NDER.GE.4) THEN
         DO 330  M=1,NSY
         DO 330  N=1,M
         DO 330  P=1,N
         DO 330  Q=1,P
       IF(DABS(F4(M,N,P,Q)).GT.F4CUT)
     $     WRITE(ICHECK,23) M,N,P,Q,F4(M,N,P,Q)
 330     CONTINUE
         WRITE(ICHECK,20) NZ
      END IF
      RETURN
      END
C     /////////////////////////////////////////////////////////////
      SUBROUTINE NUMX(NAD,NC,NS,NSX,XA,TYPE,IA,RB,A,S,X,SR)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER TYPE*5
      INTEGER R
      DIMENSION XA(NAD,3),TYPE(NS),IA(NS,6)
      DIMENSION RB(NC),A(NC,NC),X(NC,NC),S(NS),SR(NC,NC)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,DELTA=1.0D-4)
      TDELTA=DELTA+DELTA
      DO 10  R=1,NS
              DO 700  I=1,NC
              DO 700  J=1,NC
              X(I,J)=ZERO
 700          SR(I,J)=ZERO
         IF(TYPE(R).EQ.'  SPF') THEN
              CALL VECT1(NAD,IA(R,1),IA(R,2),RB,XA,T21)
              S(R)=(ONE-S(R))*T21
         END IF
         IF(IA(R,6).EQ.0) GO TO 30
         DO 25  I=1,NC
         IP=(I-1)/3+1
         JP=I-3*(IP-1)
         XA(IP,JP)=XA(IP,JP)+DELTA
         CALL BROW(NAD,NC,NS,XA,TYPE,IA,RB,S,R)
         DO 27  J=1,NC
 27           SR(I,J)=RB(J)
         XA(IP,JP)=XA(IP,JP)-TDELTA
         CALL BROW(NAD,NC,NS,XA,TYPE,IA,RB,S,R)
         DO 28  J=1,NC
 28           SR(I,J)=(SR(I,J)-RB(J))/TDELTA
 25      XA(IP,JP)=XA(IP,JP)+DELTA
 30   CALL XOUT(NC,NC,SR,-R,ISCR6)
      IF(IABS(IA(R,6)).NE.1) GO TO 100
      DO 40  N=1,NSX
      DO 40  I=1,NC
      DO 40  J=1,NC
 40   X(I,N)=X(I,N)+SR(I,J)*A(J,N)
      DO 45  N=1,NSX
      DO 45  I=1,NC
      SR(I,N)=X(I,N)
 45   X(I,N)=ZERO
      DO 50  M=1,NSX
      DO 50  N=1,NSX
      DO 50  I=1,NC
 50   X(M,N)=X(M,N)+SR(I,N)*A(I,M)
100   CALL XOUT(NC,NSX,X,R,ISCR6)
         IF(TYPE(R).EQ.'  SPF') THEN
              S(R)=ONE-S(R)/T21
         END IF
 10   CONTINUE
      END
C     //////////////////////////////////////////////////////////////
      SUBROUTINE BROW(NAD,NC,NS,XA,TYPE,IA,RB,S,IR)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER IL(5)
      CHARACTER TYPE*5
      DIMENSION TYPE(NS),IA(NS,6),RB(NC),XA(NAD,3),S(NS)
      DIMENSION V(3,5)
      PARAMETER(ZERO=0.0D0)
         DO 5  J=1,NC
 5       RB(J)=ZERO
           NIA=0
           K1=IA(IR,1)
           K2=IA(IR,2)
           K3=IA(IR,3)
           K4=IA(IR,4)
           K5=IA(IR,5)
           IL(1)=3*(K1-1)
           IL(2)=3*(K2-1)
           IL(3)=3*(K3-1)
           IL(4)=3*(K4-1)
           IL(5)=3*(K5-1)
      IF(TYPE(IR).NE.' STRE') GO TO 10
         CALL VECT1(NAD,K1,K2,V(1,1),XA,W)
         DO 6  K=1,3
  6      V(K,2)=-V(K,1)
         NIA=2
         GO TO 80
 10   IF(TYPE(IR).NE.' BEND') GO TO 15
         CALL VECT2(NAD,K1,K2,K3,V(1,1),V(1,2),V(1,3),XA,W)
         NIA=3
         GO TO 80
 15   IF(TYPE(IR).NE.' LIN1') GO TO 25
           CALL VECT3(NAD,K1,K2,K3,K4,V(1,1),V(1,2),V(1,3),XA,W)
           NIA=3
           GO TO 80
 25   IF(TYPE(IR).NE.'  OUT') GO TO 30
           CALL VECT5(NAD,K1,K2,K3,K4,V(1,1),V(1,2),V(1,3),V(1,4),XA,W)
           NIA=4
           GO TO 80
 30   IF(TYPE(IR).NE.' TORS') GO TO 35
           CALL VECT6(NAD,K1,K2,K3,K4,V(1,1),V(1,2),V(1,3),V(1,4),XA,W)
           NIA=4
           GO TO 80
 35   IF(TYPE(IR).NE.'  SPF') GO TO 40
           CALL VECT1(NAD,K1,K2,V(1,1),XA,W)
           DO 36  K=1,3
 36        V(K,2)=-V(K,1)
           NIA=2
           FACT=S(IR)/(W*W)
           DO 38  L=1,2
           DO 38  K=1,3
 38        V(K,L)=V(K,L)*FACT
           GO TO 80
 40   CONTINUE
 80   DO 85  K=1,NIA
      DO 85  J=1,3
 85   RB(IL(K)+J)=V(J,K)
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE NUMY(NAD,NC,NS,NSX,XA,TYPE,IA,A,S,Y,SR,XT)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER TYPE*5
      INTEGER R,P,Q
      DIMENSION XA(NAD,3),TYPE(NS),IA(NS,6),XT(NC,NC)
      DIMENSION A(NC,NC),S(NS),SR(NC,NC,NC),Y(NC,NC,NC)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,DELTA=1.0D-4)
      TDELTA=DELTA+DELTA
      DO 10  R=1,NS
              DO 700  K=1,NC
              DO 700  J=1,NC
              DO 700  I=1,NC
              Y(I,J,K)=ZERO
 700          SR(I,J,K)=ZERO
         IF(TYPE(R).EQ.'  SPF') THEN
              CALL VECT1(NAD,IA(R,1),IA(R,2),XT(1,1),XA,T21)
              S(R)=(ONE-S(R))*T21
         END IF
         IF(IA(R,6).EQ.0) GO TO 30
         DO 25  I=1,NC
         IP=(I-1)/3+1
         JP=I-3*(IP-1)
         XA(IP,JP)=XA(IP,JP)+DELTA
         CALL XROW(NAD,NC,NS,XA,TYPE,IA,S,XT,R)
         DO 27  K=1,NC
         DO 27  J=1,NC
 27           SR(I,J,K)=XT(J,K)
         XA(IP,JP)=XA(IP,JP)-TDELTA
         CALL XROW(NAD,NC,NS,XA,TYPE,IA,S,XT,R)
         DO 28  K=1,NC
         DO 28  J=1,NC
 28           SR(I,J,K)=(SR(I,J,K)-XT(J,K))/TDELTA
 25      XA(IP,JP)=XA(IP,JP)+DELTA
 30   CALL YOUT(NC,NC,SR,-R,ISCR7)
      IF(IABS(IA(R,6)).NE.2) GO TO 100
      DO 35  P=1,NSX
      DO 35  J=1,NC
      DO 35  I=1,NC
      DO 35  K=1,NC
 35   Y(I,J,P)=Y(I,J,P)+SR(I,J,K)*A(K,P)
      DO 40  P=1,NSX
      DO 40  N=1,NSX
      DO 40  I=1,NC
      SR(I,N,P)=ZERO
      DO 40  J=1,NC
 40   SR(I,N,P)=SR(I,N,P)+Y(I,J,P)*A(J,N)
      DO 45  P=1,NSX
      DO 45  N=1,NSX
      DO 45  M=1,NSX
      Y(M,N,P)=ZERO
      DO 45  I=1,NC
 45   Y(M,N,P)=Y(M,N,P)+SR(I,N,P)*A(I,M)
 100  CALL YOUT(NC,NSX,Y,R,ISCR7)
         IF(TYPE(R).EQ.'  SPF') THEN
              S(R)=ONE-S(R)/T21
         END IF
 10   CONTINUE
      END
C     /////////////////////////////////////////////////////////////
      SUBROUTINE NUMZ(NAD,NC,NS,NSX,XA,TYPE,IA,A,S,YR,ZR,SR)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER TYPE*5
      INTEGER R,P,Q
      DIMENSION XA(NAD,3),TYPE(NS),S(NS),A(NC,NC),IA(NS,6),V1(3)
      DIMENSION YR(NC,NC,NC),SR(NC,NC,NC,NC),ZR(NC,NC,NC,NC)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,DELTA=1.0D-4)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      TDELTA=DELTA+DELTA
      DO 10  R=1,NS
              DO 200  L=1,NC
              DO 200  K=1,NC
              DO 200  J=1,NC
              DO 200  I=1,NC
              SR(I,J,K,L)=ZERO
 200          ZR(I,J,K,L)=ZERO
         IF(TYPE(R).EQ.'  SPF') THEN
              CALL VECT1(NAD,IA(R,1),IA(R,2),V1,XA,T21)
              S(R)=(ONE-S(R))*T21
         END IF
         DO 25  I=1,NC
         IP=(I-1)/3+1
         JP=I-3*(IP-1)
         XA(IP,JP)=XA(IP,JP)+DELTA
         CALL YROW(NAD,NC,NS,XA,TYPE,IA,S,YR,R)
            DO 27  L=1,NC
            DO 27  K=1,NC
            DO 27  J=1,NC
  27        SR(I,J,K,L)=YR(J,K,L)
         XA(IP,JP)=XA(IP,JP)-TDELTA
         CALL YROW(NAD,NC,NS,XA,TYPE,IA,S,YR,R)
            DO 28  L=1,NC
            DO 28  K=1,NC
            DO 28  J=1,NC
  28        SR(I,J,K,L)=(SR(I,J,K,L)-YR(J,K,L))/TDELTA
  25     XA(IP,JP)=XA(IP,JP)+DELTA
         CALL ZOUT(NC,NC,SR,-R,ISCR8)
         DO 40  Q=1,NSX
         DO 40  K=1,NC
         DO 40  J=1,NC
         DO 40  I=1,NC
         DO 40  L=1,NC
 40      ZR(I,J,K,Q)=ZR(I,J,K,Q)+SR(I,J,K,L)*A(L,Q)
         DO 45  Q=1,NSX
         DO 45  P=1,NSX
         DO 45  J=1,NC
         DO 45  I=1,NC
         SR(I,J,P,Q)=ZERO
         DO 45  K=1,NC
 45      SR(I,J,P,Q)=SR(I,J,P,Q)+ZR(I,J,K,Q)*A(K,P)
         DO 50  Q=1,NSX
         DO 50  P=1,NSX
         DO 50  N=1,NSX
         DO 50  I=1,NC
         ZR(I,N,P,Q)=ZERO
         DO 50  J=1,NC
 50      ZR(I,N,P,Q)=ZR(I,N,P,Q)+SR(I,J,P,Q)*A(J,N)
         DO 55  Q=1,NSX
         DO 55  P=1,NSX
         DO 55  N=1,NSX
         DO 55  M=1,NSX
         SR(M,N,P,Q)=ZERO
         DO 55  I=1,NC
 55      SR(M,N,P,Q)=SR(M,N,P,Q)+ZR(I,N,P,Q)*A(I,M)
         CALL ZOUT(NC,NS,SR,R,ISCR8)
            IF(TYPE(R).EQ.'  SPF') THEN
                S(R)=ONE-S(R)/T21
            END IF
 10   CONTINUE
      RETURN
      END
C     /////////////////////////////////////////////////////////////
      SUBROUTINE XROW(NAD,NC,NS,XA,TYPE,IA,S,SR,R)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER TYPE*5
      INTEGER R,RP
      DIMENSION TYPE(NS),IA(NS,6),S(NS),XA(NAD,3),SR(NC,NC)
      DIMENSION H11(3,3),H21(3,3),H22(3,3),H31(3,3),H32(3,3)
      DIMENSION H33(3,3),H41(3,3),H42(3,3),H43(3,3),H44(3,3)
      DIMENSION H11A(3,3),H33A(3,3),EA(3),E21(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
         DO 49  J=1,NC
         DO 49  I=1,NC
 49      SR(I,J)=ZERO
         IF(TYPE(R).NE.' STRE') GO TO 25
         K1=IA(R,1)
         K2=IA(R,2)
         L1=3*(K1-1)
         L2=3*(K2-1)
         CALL HIJS1(NAD,K1,K2,XA,H11)
C   OPTION
              DO 28  J=1,3
              DO 28  I=1,3
              SR(L1+I,L1+J)=H11(I,J)
              SR(L2+I,L2+J)=H11(I,J)
              SR(L1+I,L2+J)=-H11(I,J)
 28           SR(L2+I,L1+J)=-H11(I,J)
C  *************
         GO TO 300
 25      IF(TYPE(R).NE.' BEND') GO TO 75
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
         CALL HIJS2(NAD,K1,K2,K3,XA,H11,H21,H31,H22,H32,H33)
C  OPTION
      DO 48  J=1,3
      DO 48  I=1,3
      SR(L1+I,L1+J)=H11(I,J)
      SR(L2+I,L1+J)=H21(I,J)
      SR(L3+I,L1+J)=H31(I,J)
      SR(L1+I,L2+J)=H21(J,I)
      SR(L2+I,L2+J)=H22(I,J)
      SR(L3+I,L2+J)=H32(I,J)
      SR(L1+I,L3+J)=H31(J,I)
      SR(L2+I,L3+J)=H32(J,I)
 48   SR(L3+I,L3+J)=H33(I,J)
         GO TO 300
 75      IF(TYPE(R).NE.' LIN1') GO TO 100
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         K4=IA(R,4)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
         CALL HIJS3(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H22,H32,H33)
C  OPTION
      DO 86  J=1,3
      DO 86  I=1,3
      SR(L1+I,L1+J)=H11(I,J)
      SR(L2+I,L1+J)=H21(I,J)
      SR(L3+I,L1+J)=H31(I,J)
      SR(L1+I,L2+J)=H21(J,I)
      SR(L2+I,L2+J)=H22(I,J)
      SR(L3+I,L2+J)=H32(I,J)
      SR(L1+I,L3+J)=H31(J,I)
      SR(L2+I,L3+J)=H32(J,I)
 86   SR(L3+I,L3+J)=H33(I,J)
         GO TO 300
 100  IF(TYPE(R).NE.'  SPF') GO TO 125
         K1=IA(R,1)
         K2=IA(R,2)
         L1=3*(K1-1)
         L2=3*(K2-1)
         CALL VECT1(NAD,K1,K2,E21,XA,T21)
         CALL HIJS1(NAD,K1,K2,XA,H11)
         FACT1=S(R)/(T21*T21)
         FACT2=TWO*FACT1/T21
         DO 102  J=1,3
         DO 104  I=1,3
 104     H11(I,J)=THREE*H11(I,J)*FACT1
 102     H11(J,J)=H11(J,J)-FACT2
         DO 106  J=1,3
         DO 106  I=1,3
         SR(L1+I,L1+J)=H11(I,J)
         SR(L2+I,L2+J)=H11(I,J)
         SR(L1+I,L2+J)=-H11(I,J)
 106     SR(L2+I,L1+J)=-H11(I,J)
         GO TO 300
 125     IF(TYPE(R).NE.' TORS') GO TO 175
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         K4=IA(R,4)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
         L4=3*(K4-1)
         CALL HIJS6(NAD,K1,K2,K3,K4,XA,H11,H21,H31,H41,H22,H32,H42,
     $               H33,H43,H44)
C  OPTION
      DO 148  J=1,3
      DO 148  I=1,3
      SR(L1+I,L1+J)=H11(I,J)
      SR(L2+I,L1+J)=H21(I,J)
      SR(L3+I,L1+J)=H31(I,J)
      SR(L4+I,L1+J)=H41(I,J)
      SR(L1+I,L2+J)=H21(J,I)
      SR(L2+I,L2+J)=H22(I,J)
      SR(L3+I,L2+J)=H32(I,J)
      SR(L4+I,L2+J)=H42(I,J)
      SR(L1+I,L3+J)=H31(J,I)
      SR(L2+I,L3+J)=H32(J,I)
      SR(L3+I,L3+J)=H33(I,J)
      SR(L4+I,L3+J)=H43(I,J)
      SR(L1+I,L4+J)=H41(J,I)
      SR(L2+I,L4+J)=H42(J,I)
      SR(L3+I,L4+J)=H43(J,I)
 148  SR(L4+I,L4+J)=H44(I,J)
         GO TO 300
 175  CONTINUE
 300  CONTINUE
      END
C////////////////////////////////////////////////////////////////////
      SUBROUTINE YROW(NAD,NC,NS,XA,TYPE,IA,S,SR,R)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER R,P,Q
      CHARACTER TYPE*5
      DIMENSION TYPE(NS),S(NS),IA(NS,6)
      DIMENSION XA(NAD,3),SR(NC,NC,NC)
      DIMENSION H111(3,3,3),H112(3,3,3),H221(3,3,3),H222(3,3,3)
      DIMENSION H113(3,3,3),H123(3,3,3),H223(3,3,3),H331(3,3,3)
      DIMENSION H332(3,3,3),H333(3,3,3),H411(3,3,3),H421(3,3,3)
      DIMENSION H422(3,3,3),H431(3,3,3),H432(3,3,3),H433(3,3,3)
      DIMENSION H441(3,3,3),H442(3,3,3),H443(3,3,3),H444(3,3,3)
      DIMENSION E21(3)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
         DO 10  I=1,NC
         DO 10  J=1,NC
         DO 10  K=1,NC
 10      SR(I,J,K)=ZERO
      IF(TYPE(R).NE.' STRE') GO TO 25
      K1=IA(R,1)
      K2=IA(R,2)
      L1=3*(K1-1)
      L2=3*(K2-1)
      CALL HIJKS1(NAD,K1,K2,XA,H111)
C  OPTION
      DO 17  K=1,3
      DO 17  J=1,3
      DO 17  I=1,3
      Z=H111(I,J,K)
      SR(L1+I,L1+J,L1+K)=Z
      SR(L1+I,L1+J,L2+K)=-Z
      SR(L1+I,L2+J,L1+K)=-Z
      SR(L1+I,L2+J,L2+K)=Z
      SR(L2+I,L1+J,L1+K)=-Z
      SR(L2+I,L1+J,L2+K)=Z
      SR(L2+I,L2+J,L1+K)=Z
 17   SR(L2+I,L2+J,L2+K)=-Z
C  OPTION
      GO TO 300
 25   IF(TYPE(R).NE.' BEND') GO TO 75
      K1=IA(R,1)
      K2=IA(R,2)
      K3=IA(R,3)
      L1=3*(K1-1)
      L2=3*(K2-1)
      L3=3*(K3-1)
      CALL HIJKS2(NAD,K1,K2,K3,XA,H111,H112,H113,H123,H221,
     $    H222,H223,H331,H332,H333)
C  OPTION
      DO 37  K=1,3
      DO 37  J=1,3
      DO 37  I=1,3
      SR(L1+I,L1+J,L1+K)=H111(I,J,K)
      SR(L1+I,L1+J,L2+K)=H112(I,J,K)
      SR(L1+I,L1+J,L3+K)=H113(I,J,K)
      SR(L1+I,L2+J,L1+K)=H112(I,K,J)
      SR(L1+I,L2+J,L2+K)=H221(J,K,I)
      SR(L1+I,L2+J,L3+K)=H123(I,J,K)
      SR(L2+I,L2+J,L1+K)=H221(I,J,K)
      SR(L2+I,L2+J,L2+K)=H222(I,J,K)
      SR(L2+I,L2+J,L3+K)=H223(I,J,K)
      SR(L2+I,L1+J,L1+K)=H112(J,K,I)
      SR(L2+I,L1+J,L2+K)=H221(I,K,J)
      SR(L2+I,L1+J,L3+K)=H123(J,I,K)
      SR(L1+I,L3+J,L1+K)=H113(I,K,J)
      SR(L1+I,L3+J,L2+K)=H123(I,K,J)
      SR(L1+I,L3+J,L3+K)=H331(J,K,I)
      SR(L2+I,L3+J,L1+K)=H123(K,I,J)
      SR(L2+I,L3+J,L2+K)=H223(I,K,J)
      SR(L2+I,L3+J,L3+K)=H332(J,K,I)
      SR(L3+I,L1+J,L1+K)=H113(J,K,I)
      SR(L3+I,L1+J,L2+K)=H123(J,K,I)
      SR(L3+I,L1+J,L3+K)=H331(I,K,J)
      SR(L3+I,L2+J,L1+K)=H123(K,J,I)
      SR(L3+I,L2+J,L2+K)=H223(J,K,I)
      SR(L3+I,L2+J,L3+K)=H332(I,K,J)
      SR(L3+I,L3+J,L1+K)=H331(I,J,K)
      SR(L3+I,L3+J,L2+K)=H332(I,J,K)
 37   SR(L3+I,L3+J,L3+K)=H333(I,J,K)
C  OPTION
         GO TO 300
 75      IF(TYPE(R).NE.' LIN1') GO TO 100
         K1=IA(R,1)
         K2=IA(R,2)
         K3=IA(R,3)
         K4=IA(R,4)
         L1=3*(K1-1)
         L2=3*(K2-1)
         L3=3*(K3-1)
      CALL HIJKS3(NAD,K1,K2,K3,K4,XA,H111,H112,H113,H123,
     $            H221,H222,H223,H331,H332,H333)
C  OPTION
      DO 88  K=1,3
      DO 88  J=1,3
      DO 88  I=1,3
      SR(L1+I,L1+J,L1+K)=H111(I,J,K)
      SR(L1+I,L1+J,L2+K)=H112(I,J,K)
      SR(L1+I,L1+J,L3+K)=H113(I,J,K)
      SR(L1+I,L2+J,L1+K)=H112(I,K,J)
      SR(L1+I,L2+J,L2+K)=H221(J,K,I)
      SR(L1+I,L2+J,L3+K)=H123(I,J,K)
      SR(L2+I,L2+J,L1+K)=H221(I,J,K)
      SR(L2+I,L2+J,L2+K)=H222(I,J,K)
      SR(L2+I,L2+J,L3+K)=H223(I,J,K)
      SR(L2+I,L1+J,L1+K)=H112(J,K,I)
      SR(L2+I,L1+J,L2+K)=H221(I,K,J)
      SR(L2+I,L1+J,L3+K)=H123(J,I,K)
      SR(L1+I,L3+J,L1+K)=H113(I,K,J)
      SR(L1+I,L3+J,L2+K)=H123(I,K,J)
      SR(L1+I,L3+J,L3+K)=H331(J,K,I)
      SR(L2+I,L3+J,L1+K)=H123(K,I,J)
      SR(L2+I,L3+J,L2+K)=H223(I,K,J)
      SR(L2+I,L3+J,L3+K)=H332(J,K,I)
      SR(L3+I,L1+J,L1+K)=H113(J,K,I)
      SR(L3+I,L1+J,L2+K)=H123(J,K,I)
      SR(L3+I,L1+J,L3+K)=H331(I,K,J)
      SR(L3+I,L2+J,L1+K)=H123(K,J,I)
      SR(L3+I,L2+J,L2+K)=H223(J,K,I)
      SR(L3+I,L2+J,L3+K)=H332(I,K,J)
      SR(L3+I,L3+J,L1+K)=H331(I,J,K)
      SR(L3+I,L3+J,L2+K)=H332(I,J,K)
 88   SR(L3+I,L3+J,L3+K)=H333(I,J,K)
C  OPTION
      GO TO 300
 100  IF(TYPE(R).NE.'  SPF') GO TO 125
           K1=IA(R,1)
           K2=IA(R,2)
           L1=3*(K1-1)
           L2=3*(K2-1)
           CALL VECT1(NAD,K1,K2,E21,XA,T21)
           CALL HIJKS1(NAD,K1,K2,XA,H111)
           FACT1=(ONE-S(R))*THREE/T21
           FACT2=TWO/(T21*T21)
           DO 102  K=1,3
           DO 102  J=1,3
           DO 102  I=1,3
 102       H111(I,J,K)=FACT1*(H111(I,J,K)+FACT2*E21(I)*E21(J)*E21(K))
C  OPTION
      DO 107  K=1,3
      DO 107  J=1,3
      DO 107  I=1,3
      Z=H111(I,J,K)
      SR(L1+I,L1+J,L1+K)=Z
      SR(L1+I,L1+J,L2+K)=-Z
      SR(L1+I,L2+J,L1+K)=-Z
      SR(L1+I,L2+J,L2+K)=Z
      SR(L2+I,L1+J,L1+K)=-Z
      SR(L2+I,L1+J,L2+K)=Z
      SR(L2+I,L2+J,L1+K)=Z
 107  SR(L2+I,L2+J,L2+K)=-Z
      GO TO 300
 125  IF(TYPE(R).NE.' TORS') GO TO 175
      K1=IA(R,1)
      K2=IA(R,2)
      K3=IA(R,3)
      K4=IA(R,4)
      L1=3*(K1-1)
      L2=3*(K2-1)
      L3=3*(K3-1)
      L4=3*(K4-1)
      CALL HIJKS6(NAD,K1,K2,K3,K4,XA,H111,H112,H221,H222,H113,H123,
     $      H223,H331,H332,H333,H411,H421,H422,H431,H432,H433,H441,
     $      H442,H443,H444)
C  OPTION
      DO 137  K=1,3
      DO 137  J=1,3
      DO 137  I=1,3
      SR(L1+I,L1+J,L1+K)=H111(I,J,K)
      SR(L1+I,L1+J,L2+K)=H112(I,J,K)
      SR(L1+I,L1+J,L3+K)=H113(I,J,K)
      SR(L1+I,L1+J,L4+K)=H411(K,J,I)
      SR(L1+I,L2+J,L1+K)=H112(I,K,J)
      SR(L1+I,L2+J,L2+K)=H221(J,K,I)
      SR(L1+I,L2+J,L3+K)=H123(I,J,K)
      SR(L1+I,L2+J,L4+K)=H421(K,J,I)
      SR(L1+I,L3+J,L1+K)=H113(I,K,J)
      SR(L1+I,L3+J,L2+K)=H123(I,K,J)
      SR(L1+I,L3+J,L3+K)=H331(J,K,I)
      SR(L1+I,L3+J,L4+K)=H431(K,J,I)
      SR(L1+I,L4+J,L1+K)=H411(J,K,I)
      SR(L1+I,L4+J,L2+K)=H421(J,K,I)
      SR(L1+I,L4+J,L3+K)=H431(J,K,I)
      SR(L1+I,L4+J,L4+K)=H441(J,K,I)
      SR(L2+I,L1+J,L1+K)=H112(J,K,I)
      SR(L2+I,L1+J,L2+K)=H221(I,K,J)
      SR(L2+I,L1+J,L3+K)=H123(J,I,K)
      SR(L2+I,L1+J,L4+K)=H421(K,I,J)
      SR(L2+I,L2+J,L1+K)=H221(I,J,K)
      SR(L2+I,L2+J,L2+K)=H222(I,J,K)
      SR(L2+I,L2+J,L3+K)=H223(I,J,K)
      SR(L2+I,L2+J,L4+K)=H422(K,J,I)
      SR(L2+I,L3+J,L1+K)=H123(K,I,J)
      SR(L2+I,L3+J,L2+K)=H223(I,K,J)
      SR(L2+I,L3+J,L3+K)=H332(J,K,I)
      SR(L2+I,L3+J,L4+K)=H432(K,J,I)
      SR(L2+I,L4+J,L1+K)=H421(J,I,K)
      SR(L2+I,L4+J,L2+K)=H422(J,I,K)
      SR(L2+I,L4+J,L3+K)=H432(J,K,I)
      SR(L2+I,L4+J,L4+K)=H442(J,K,I)
      SR(L3+I,L1+J,L1+K)=H113(J,K,I)
      SR(L3+I,L1+J,L2+K)=H123(J,K,I)
      SR(L3+I,L1+J,L3+K)=H331(I,K,J)
      SR(L3+I,L1+J,L4+K)=H431(K,I,J)
      SR(L3+I,L2+J,L1+K)=H123(K,J,I)
      SR(L3+I,L2+J,L2+K)=H223(J,K,I)
      SR(L3+I,L2+J,L3+K)=H332(I,K,J)
      SR(L3+I,L2+J,L4+K)=H432(K,I,J)
      SR(L3+I,L3+J,L1+K)=H331(I,J,K)
      SR(L3+I,L3+J,L2+K)=H332(I,J,K)
      SR(L3+I,L3+J,L3+K)=H333(I,J,K)
      SR(L3+I,L3+J,L4+K)=H433(K,I,J)
      SR(L3+I,L4+J,L1+K)=H431(J,I,K)
      SR(L3+I,L4+J,L2+K)=H432(J,I,K)
      SR(L3+I,L4+J,L3+K)=H433(J,I,K)
      SR(L3+I,L4+J,L4+K)=H443(J,K,I)
      SR(L4+I,L1+J,L1+K)=H411(I,J,K)
      SR(L4+I,L1+J,L2+K)=H421(I,K,J)
      SR(L4+I,L1+J,L3+K)=H431(I,K,J)
      SR(L4+I,L1+J,L4+K)=H441(I,K,J)
      SR(L4+I,L2+J,L1+K)=H421(I,J,K)
      SR(L4+I,L2+J,L2+K)=H422(I,J,K)
      SR(L4+I,L2+J,L3+K)=H432(I,K,J)
      SR(L4+I,L2+J,L4+K)=H442(I,K,J)
      SR(L4+I,L3+J,L1+K)=H431(I,J,K)
      SR(L4+I,L3+J,L2+K)=H432(I,J,K)
      SR(L4+I,L3+J,L3+K)=H433(I,J,K)
      SR(L4+I,L3+J,L4+K)=H443(I,K,J)
      SR(L4+I,L4+J,L1+K)=H441(I,J,K)
      SR(L4+I,L4+J,L2+K)=H442(I,J,K)
      SR(L4+I,L4+J,L3+K)=H443(I,J,K)
 137  SR(L4+I,L4+J,L4+K)=H444(I,J,K)
 175  CONTINUE
      GO TO 300
 300  CONTINUE
      RETURN
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE SRTST1(NC,NS,NSX,NSYM,IA,SRA,SRN)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER R
      DIMENSION IA(NS,6),SRA(NC,NC),SRN(NC,NC)
      PARAMETER(ZERO=0.0D0,AVCUT=1.0D-6)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(//1X,'TESTING OF SR(I,J) AND X(M,N) MATRICES')
    2 FORMAT(/1X,'R=',I3,' SR:  AVRG=',F12.8,'  RMSDIF=',F12.8)
    3 FORMAT(//1X,'SR(I,J) MATRIX FOR COORDINATE ',I5/)
    4 FORMAT(6F12.6)
    5 FORMAT(//1X,'SR(I,J) ANALYTIC - SR(I,J) NUMERICAL'/)
    6 FORMAT(6F12.6)
    7 FORMAT(/1X,'R=',I3,' X:  AVRG=',F12.8,'  RMSDIF=',F12.8)
    8 FORMAT(//1X,'X(M,N) MATRIX FOR COORDINATE ',I5/)
    9 FORMAT(//1X,'X(M,N) ANALYTIC - X(M,N) NUMERICAL'/)
      IF(NSYM.EQ.0) THEN
         ISCR=ISCR1
      ELSE
         ISCR=ISCR2
      END IF
      WRITE(IOUT,1)
      DO 100  R=1,NS
         IF(IA(R,6).NE.1) GO TO 100
         CALL XIN(NC,NC,SRA,-R,ISCR)
         CALL XIN(NC,NC,SRN,-R,ISCR6)
         RMSDIF=ZERO
         AVRG=ZERO
         NNZ=0
         DO 20  I=1,NC
         DO 20  J=1,NC
         SRN(I,J)=SRA(I,J)-SRN(I,J)
         IF(DABS(SRA(I,J)).GT.AVCUT) THEN
            NNZ=NNZ+1
            AVRG=AVRG+DABS(SRA(I,J))
            RMSDIF=RMSDIF+SRN(I,J)**2
         END IF
   20    CONTINUE
         IF(NNZ.EQ.0) NNZ=1
         AVRG=AVRG/NNZ
         RMSDIF=DSQRT(RMSDIF)/NNZ
         WRITE(IOUT,2) R,AVRG,RMSDIF
         IF(LPRT(2,NPRT).GE.1) THEN
           WRITE(IOUT,3) R
           DO 30  I=1,NC
   30      WRITE(IOUT,4) (SRA(I,J),J=1,NC)
         END IF
         IF(LPRT(2,NPRT).GE.2) THEN
           WRITE(IOUT,5)
           DO 35  I=1,NC
   35      WRITE(IOUT,6) (SRN(I,J),J=1,NC)
         END IF
         CALL XIN(NC,NC,SRA,R,ISCR)
         CALL XIN(NC,NC,SRN,R,ISCR6)
         RMSDIF=ZERO
         AVRG=ZERO
         NNZ=0
         DO 40  I=1,NSX
         DO 40  J=1,NSX
         SRN(I,J)=SRA(I,J)-SRN(I,J)
         IF(DABS(SRA(I,J)).GT.AVCUT) THEN
            NNZ=NNZ+1
            AVRG=AVRG+DABS(SRA(I,J))
            RMSDIF=RMSDIF+SRN(I,J)**2
         END IF
   40    CONTINUE
         IF(NNZ.EQ.0) NNZ=1
         AVRG=AVRG/NNZ
         RMSDIF=DSQRT(RMSDIF)/NNZ
         WRITE(IOUT,7) R,AVRG,RMSDIF
         IF(LPRT(2,NPRT).GE.1) THEN
           WRITE(IOUT,8) R
           DO 50  I=1,NSX
   50      WRITE(IOUT,4) (SRA(I,J),J=1,NSX)
         END IF
         IF(LPRT(2,NPRT).GE.2) THEN
           WRITE(IOUT,9)
           DO 55  I=1,NSX
   55      WRITE(IOUT,6) (SRN(I,J),J=1,NSX)
         END IF
  100 CONTINUE
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE SRTST2(NC,NS,NSX,NSYM,IA,SRA,SRN)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER R
      DIMENSION IA(NS,6),SRA(NC,NC,NC),SRN(NC,NC,NC)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,AVCUT=1.0D-5,ERCUT=1.0D-5)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
    1 FORMAT(//1X,'TESTING OF SR(I,J,K) AND Y(M,N,P) MATRICES',/)
    2 FORMAT(/1X,'R=',I3,' SR:  AVRG=',F12.8,'  RMSDIF=',F12.8)
    3 FORMAT(//1X,'SR(I,J,K) MATRIX FOR COORDINATE ',I5/)
    4 FORMAT(6F12.6)
    5 FORMAT(//1X,'SR(I,J,K) ANALYTIC - SR(I,J,K) NUMERICAL'/)
    6 FORMAT(6F12.6)
    7 FORMAT(1X,' I= ',I5)
    8 FORMAT(1X,' ERROR IN H',3I1)
    9 FORMAT(/1X,'R=',I3,' Y:  AVRG=',F12.8,'  RMSDIF=',F12.8)
   10 FORMAT(//1X,'Y(M,N,P) MATRIX FOR COORDINATE ',I5/)
   11 FORMAT(//1X,'Y(M,N,P) ANALYTIC - Y(M,N,P) NUMERICAL'/)
      IF(NSYM.EQ.0) THEN
         ISCR=ISCR3
      ELSE
         ISCR=ISCR4
      END IF
      WRITE(IOUT,1)
      NA=NC/3
      DO 100  R=1,NS
         IF(IA(R,6).NE.2) GO TO 100
         CALL YIN(NC,NC,SRA,-R,ISCR)
         CALL YIN(NC,NC,SRN,-R,ISCR7)
         RMSDIF=ZERO
         AVRG=ZERO
         NNZ=0
         DO 20  I=1,NC
         DO 20  J=1,NC
         DO 20  K=1,NC
         SRN(I,J,K)=SRA(I,J,K)-SRN(I,J,K)
         IF(DABS(SRA(I,J,K)).GT.AVCUT) THEN
            NNZ=NNZ+1
            AVRG=AVRG+DABS(SRA(I,J,K))
            RMSDIF=RMSDIF+SRN(I,J,K)**2
         END IF
   20    CONTINUE
         IF(NNZ.EQ.0) NNZ=1
         AVRG=AVRG/NNZ
         RMSDIF=DSQRT(RMSDIF)/NNZ
         WRITE(IOUT,2) R,AVRG,RMSDIF
         IF(LPRT(2,NPRT).GE.1) THEN
           WRITE(IOUT,3) R
           DO 30  I=1,NC
           WRITE(IOUT,7) I
           DO 30  J=1,NC
   30      WRITE(IOUT,4) (SRA(I,J,K),K=1,NC)
         END IF
         IF(LPRT(2,NPRT).GE.2) THEN
           WRITE(IOUT,5)
           DO 35  I=1,NC
           WRITE(IOUT,7) I
           DO 35  J=1,NC
   35      WRITE(IOUT,6) (SRN(I,J,K),K=1,NC)
         END IF
         DO 40  I=1,NC
         DO 40  J=1,NC
         DO 40  K=1,NC
   40    SRA(I,J,K)=ZERO
         DO 50  I=1,NC
         DO 50  J=1,NC
         DO 50  K=1,NC
         IF(DABS(SRN(I,J,K)).LT.ERCUT) GO TO 50
         INA=(I-1)/3+1
         JNA=(J-1)/3+1
         KNA=(K-1)/3+1
           DO 45  MM=1,5
         IF(INA.EQ.IA(R,MM)) INA=-MM
         IF(JNA.EQ.IA(R,MM)) JNA=-MM
         IF(KNA.EQ.IA(R,MM)) KNA=-MM
   45      CONTINUE
         INA=-INA
         JNA=-JNA
         KNA=-KNA
         SRA(INA,JNA,KNA)=ONE
   50    CONTINUE
         DO 55  I=1,NA
         DO 55  J=1,I
         DO 55  K=1,J
         IF(SRA(I,J,K).GT.ZERO) THEN
         WRITE(IOUT,8) I,J,K
         END IF
   55    CONTINUE
         CALL YIN(NC,NSX,SRA,R,ISCR)
         CALL YIN(NC,NSX,SRN,R,ISCR7)
         RMSDIF=ZERO
         AVRG=ZERO
         NNZ=0
         DO 60  I=1,NSX
         DO 60  J=1,NSX
         DO 60  K=1,NSX
         SRN(I,J,K)=SRA(I,J,K)-SRN(I,J,K)
         IF(DABS(SRA(I,J,K)).GT.AVCUT) THEN
            NNZ=NNZ+1
            AVRG=AVRG+DABS(SRA(I,J,K))
            RMSDIF=RMSDIF+SRN(I,J,K)**2
         END IF
   60    CONTINUE
         IF(NNZ.EQ.0) NNZ=1
         AVRG=AVRG/NNZ
         RMSDIF=DSQRT(RMSDIF)/NNZ
         WRITE(IOUT,9) R,AVRG,RMSDIF
         IF(LPRT(2,NPRT).GE.1) THEN
           WRITE(IOUT,10) R
           DO 65  I=1,NSX
           WRITE(IOUT,7) I
           DO 65  J=1,NSX
   65      WRITE(IOUT,4) (SRA(I,J,K),K=1,NSX)
         END IF
         IF(LPRT(2,NPRT).GE.2) THEN
           WRITE(IOUT,11)
           DO 70  I=1,NSX
           WRITE(IOUT,7) I
           DO 70  J=1,NSX
   70      WRITE(IOUT,6) (SRN(I,J,K),K=1,NSX)
         END IF
  100 CONTINUE
      END
C     ///////////////////////////////////////////////////////////////
      SUBROUTINE MACHB2(NAD,NC,XA,B2)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),B2(6,NC)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0)
      NA=NC/3
      T=DSQRT(DBLE(NA))
      DO 10  J=1,NC
      DO 10  I=1,6
 10   B2(I,J)=ZERO
      DO 15  K=1,NA
      DO 15  I=1,3
      L=3*(K-1)+I
 15   B2(I,L)=ONE/T
      DO 20  K=1,NA
      L=3*K
      B2(4,L-1)=-XA(K,3)
      B2(4,L)=XA(K,2)
      B2(5,L)=-XA(K,1)
      B2(5,L-2)=XA(K,3)
      B2(6,L-1)=XA(K,1)
 20   B2(6,L-2)=-XA(K,2)
      DO 25  I=4,6
      T=ZERO
      DO 30  J=1,NC
 30   T=T+B2(I,J)*B2(I,J)
      T=DSQRT(T)
      DO 35  J=1,NC
 35   B2(I,J)=B2(I,J)/T
 25   CONTINUE
      RETURN
      END
C//////////////////////////////////////////////////////////////////////
      SUBROUTINE GFMAT(NA,NAD,NC,NSX,NFREQ,IRINT,IA,
     $                       XMASS,XA,W,BS,F,XR,XS,XT,XU,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL ITEST
      DIMENSION XA(NAD,3),BS(NC,NC),F(NC,NC),XS(NC,NC),XT(NC,NC)
      DIMENSION XMASS(NA),W(NSX),XR(NC,NC),XU(1),IA(5,NSX)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,WAVE=1302.781D0,CINT=42.25472D0)
C     WAVE=SQRT(10*N0)/(2*PI*C)      C IN (M/S), N0=AVOGADRO'S NUMBER
C     CINT=
      PARAMETER(PEDCUT=4.0D0,TWO=2.0D0)
   1  FORMAT(//,1X,'NUCLEAR CARTESIAN COORDINATES (ANG.) AND MASSES'/)
   2  FORMAT(2X,'ATOM',4X,'MASS',13X,'X',13X,'Y',13X,'Z'/)
   3  FORMAT(1X,I4,F12.6,3X,3F14.10)
   4  FORMAT(2I5)
   5  FORMAT(/,1X,'FILE16 HEADER INCONSISTENT WITH NA')
   6  FORMAT(3F20.10)
   7  FORMAT(//,1X,'QUADRATIC FORCE CONSTANTS IN MDYN/A, MDYN/RAD, ',
     $   'OR MDYN*A/RAD**2'/)
   8  FORMAT(//,1X,'G MATRIX')
   9  FORMAT(//,1X,'EIGENVALUES OF THE G MATRIX'/)
  10  FORMAT(7F12.6)
  11  FORMAT(7F10.6)
  12  FORMAT(///,1X,'LOWEST EIGENVALUES OF THE G MATRIX'/)
  13  FORMAT(///,1X,'VIBRATIONAL FREQUENCIES (CM-1) AND EIGENVECTORS'//)
  14  FORMAT(//,1X,'POTENTIAL ENERGY DISTRIBUTIONS (%) ',
     $             'AMONG DIAGONAL ELEMENTS'//)
  15  FORMAT(//,1X,'VIBRATIONAL ASSIGNMENTS')
  16  FORMAT(//,3X,'MODE',4X,'CM-1',17X,'DOMINANT COMPONENTS OF PED'/)
  17  FORMAT(1X,I5,F10.1,2X,5(2X,I3,1X,'(',F5.1,')'))
  18  FORMAT(3F20.10)
  19  FORMAT(//,24X,'IR INTENSITY'/
     $          3X,'MODE',4X,'CM-1',4X,'(KM/MOLE AND RELATIVE)',
     $          15X,'DOMINANT COMPONENTS OF PED'/)
  20  FORMAT(1X,I5,F10.1,1X,F12.5,F10.5,3X,5(2X,I3,1X,'(',F5.1,')'))
  21  FORMAT(//,1X,'DIPOLE MOMENT DERIVATIVES IN (SYMMETRY) ',
     $  'INTERNAL COORDINATES'//4X,'I',7X,'M(X)',6X,'M(Y)',6X,'M(Z)'/)
  22  FORMAT(1X,I4,3X,3F10.6)
  23  FORMAT(//,1X,'DIPOLE MOMENT DERIVATIVES IN NORMAL COORDINATES'
     $      //4X,'I',7X,'M(X)',6X,'M(Y)',6X,'M(Z)'/)
  24  FORMAT(1X,I4,3X,3F10.6)
  25  FORMAT(2I5)
  26  FORMAT(/,1X,'FILE18 HEADER INCONSISTENT WITH NA')
  27  FORMAT(3F20.10)
      WRITE(IOUT,1)
      WRITE(IOUT,2)
      DO 100  I=1,NA
 100  WRITE(IOUT,3) I,XMASS(I),(XA(I,J),J=1,3)
      IF(NFREQ.EQ.4) THEN
          READ(IIN1,11) ((F(M,N),N=M,NSX),M=1,NSX)
          DO 101  M=1,NSX
          DO 101  N=M,NSX
 101      F(N,M)=F(M,N)
          GO TO 102
      END IF
cbfy  REWIND I16
      READ(I16,4) M,N
      IF(M.NE.NA) THEN
          WRITE(IOUT,5)
          IFLAG=1
          RETURN
      END IF
      READ(I16,6) ((F(M,N),N=1,NSX),M=1,NSX)
 102  WRITE(IOUT,7)
      CALL TABLE1(NC,NSX,F)
      NV=NSX*(NSX+1)/2
      DO 105  N=1,NSX
      DO 105  M=1,NSX
 105  XR(M,N)=ZERO
      DO 110  I=1,NC
      II=(I-1)/3+1
      XX=ONE/XMASS(II)
         DO 115  N=1,NSX
         DO 115  M=1,NSX
 115     XR(M,N)=XR(M,N)+BS(M,I)*BS(N,I)*XX
 110  CONTINUE
      IF(LPRT(3,NPRT).EQ.1) THEN
         WRITE(IOUT,8)
         CALL TABLE1(NC,NSX,XR)
      END IF
C     NOTE THAT XU AND XS ARE IN THE SAME MEMORY LOCATION.
      II=0
      DO 120  M=1,NSX
      DO 120  N=1,M
      II=II+1
 120  XU(II)=XR(M,N)
      CALL RSP(NC,NSX,NV,XU,W,1,XT,BS(1,1),BS(1,2))
      IF(LPRT(3,NPRT).EQ.1) THEN
         WRITE(IOUT,9)
         WRITE(IOUT,10) (W(I),I=1,NSX)
         GO TO 126
      END IF
      WRITE(IOUT,12)
      IGE=MIN0(5,NSX)
      WRITE(IOUT,10) (W(I),I=1,IGE)
 126  DO 128  I=1,NSX
 128  W(I)=DSQRT(W(I))
      DO 130  N=1,NSX
      DO 130  M=1,NSX
         XR(M,N)=ZERO
         DO 140  K=1,NSX
 140     XR(M,N)=XR(M,N)+XT(M,K)*XT(N,K)*W(K)
 130  CONTINUE
      DO 150  N=1,NSX
      DO 150  M=1,NSX
           XX=ZERO
           DO 152  J=1,NSX
 152       XX=XX+(F(M,J)+F(J,M))*XR(J,N)/TWO
 150  XT(M,N)=XX
      II=0
      DO 154  M=1,NSX
      DO 154  N=1,M
      II=II+1
           XX=ZERO
           DO 156  J=1,NSX
 156       XX=XX+XR(M,J)*XT(J,N)
 154  XU(II)=XX
      CALL RSP(NC,NSX,NV,XU,W,1,XT,BS(1,1),BS(1,2))
      DO 160  I=1,NSX
           XX=ONE
           IF(W(I).LT.ZERO) XX=-XX
 160       W(I)=DSQRT(DABS(W(I)))*XX*WAVE
      DO 165  N=1,NSX
      DO 165  M=1,NSX
           XS(M,N)=ZERO
           DO 170  I=1,NSX
 170       XS(M,N)=XS(M,N)+XR(M,I)*XT(I,N)
 165  CONTINUE
      DO 175  N=1,NSX
           XX=ZERO
           DO 180  M=1,NSX
           XT(M,N)=XS(M,N)*F(M,M)*XS(M,N)
 180       XX=XX+DABS(XT(M,N))
           IF(XX.EQ.ZERO) GO TO 175
           DO 185  M=1,NSX
 185       XT(M,N)=1.0D2*XT(M,N)/XX
 175  CONTINUE
      WRITE(IOUT,13)
      CALL TABLE2(NC,NSX,NSX,W,XS)
      WRITE(IOUT,14)
      CALL TABLE3(NC,NSX,W,XT)
      DO 200  J=1,NSX
      IA(5,J)=4
      DO 200  I=1,4
      IA(I,J)=0
 200  XR(I,J)=ZERO
      DO 205  J=1,NSX
          DO 210  I=1,NSX
          IF(DABS(XT(I,J)).GT.DABS(XR(1,J))) THEN
             XR(1,J)=XT(I,J)
             IA(1,J)=I
          END IF
 210      CONTINUE
          DO 212  I=1,NSX
          ITEST=I.NE.IA(1,J)
          IF(DABS(XT(I,J)).GT.DABS(XR(2,J)).AND.ITEST) THEN
             XR(2,J)=XT(I,J)
             IA(2,J)=I
          END IF
 212      CONTINUE
          DO 214  I=1,NSX
          ITEST=I.NE.IA(1,J).AND.I.NE.IA(2,J)
          IF(DABS(XT(I,J)).GT.DABS(XR(3,J)).AND.ITEST) THEN
             XR(3,J)=XT(I,J)
             IA(3,J)=I
          END IF
 214      CONTINUE
          DO 216  I=1,NSX
          ITEST=I.NE.IA(1,J).AND.I.NE.IA(2,J).AND.I.NE.IA(3,J)
          IF(DABS(XT(I,J)).GT.DABS(XR(4,J)).AND.ITEST) THEN
             XR(4,J)=XT(I,J)
             IA(4,J)=I
          END IF
 216      CONTINUE
          DO 218  K=1,4
             IF(DABS(XR(K,J)).LT.PEDCUT) THEN
             IA(5,J)=K-1
             GO TO 205
             END IF
 218      CONTINUE
 205  CONTINUE
      DO 230  J=1,NSX
          DO 235  K=1,5
          XX=XS(IA(K,J),J)
          IF(XX.LT.ZERO) XR(K,J)=-XR(K,J)
 235      CONTINUE
          XX=XR(1,J)
          DO 240  K=1,5
          IF(XX.LT.ZERO) XR(K,J)=-XR(K,J)
 240      CONTINUE
 230      CONTINUE
      IF(IRINT.EQ.0) GO TO 290
      IF(IRINT.EQ.1) THEN
         READ(I18,25) I,J
         IF(I.NE.NA) THEN
         WRITE(IOUT,26)
         IFLAG=2
         RETURN
         END IF
         READ(I18,27) ((BS(I,J),I=1,NSX),J=1,3)
      ELSE
      DO 250  I=1,NSX
 250  READ(IIN1,18) (BS(I,J),J=1,3)
      END IF
      WRITE(IOUT,21)
      DO 255  I=1,NSX
 255  WRITE(IOUT,22) I,(BS(I,J),J=1,3)
      XZ=ZERO
      IZ=0
      DO 265  I=1,NSX
          XY=ZERO
          DO 270  J=1,3
          XX=ZERO
          DO 275  K=1,NSX
 275      XX=XX+XS(K,I)*BS(K,J)
          BS(I,J+3)=XX
 270      XY=XY+XX*XX
          IF(XY.GT.XZ) THEN
          IZ=I
          XZ=XY
          END IF
 265  XT(I,1)=XY*CINT
      XZ=XZ*CINT
      IF(XZ.EQ.ZERO) XZ=ONE
      DO 280  I=1,NSX
 280  XT(I,2)=XT(I,1)/XZ
      IF(LPRT(3,NPRT).EQ.2) THEN
          WRITE(IOUT,23)
          DO 282  I=1,NSX
 282      WRITE(IOUT,24) I,(BS(I,J),J=4,6)
      END IF
 290  WRITE(IOUT,15)
      IF(IRINT.EQ.0) THEN
          WRITE(IOUT,16)
          DO 300  J=1,NSX
 300      WRITE(IOUT,17) J,W(J),(IA(K,J),XR(K,J),K=1,IA(5,J))
      ELSE
          WRITE(IOUT,19)
          DO 310  J=1,NSX
          WRITE(IOUT,20) J,W(J),XT(J,1),XT(J,2),
     $                  (IA(K,J),XR(K,J),K=1,IA(5,J))
 310      CONTINUE
      END IF
      RETURN
      END
C//////////////////////////////////////////////////////////////////////
      SUBROUTINE NORMCO(NA,NAD,NC,NSX,NFREQ,IRINT,
     $                       XMASS,XA,BS,F,XR,XS,XT,XU,IFLAG)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XA(NAD,3),BS(NC,NC),F(NC,NC),XS(NC,NC),XT(NC,NC)
      DIMENSION XMASS(NA),W(6),XR(NC,NC),XU(1),IZ(6)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,WAVE=5140.4886D0,CINT=42.25472D0)
      PARAMETER(FRQCUT=5.0D0,TWO=2.0D0)
   1  FORMAT(//,1X,'NUCLEAR CARTESIAN COORDINATES (ANG.) AND MASSES'/)
   2  FORMAT(2X,'ATOM',4X,'MASS',13X,'X',13X,'Y',13X,'Z'/)
   3  FORMAT(1X,I4,F12.6,3X,3F14.10)
   4  FORMAT(2I5)
   5  FORMAT(/,1X,'FILE15 HEADER INCONSISTENT WITH NA')
   6  FORMAT(3F20.10)
   7  FORMAT(//,1X,'QUADRATIC FORCE CONSTANTS IN HARTREE/BOHR**2'/)
   8  FORMAT(///,1X,'ZERO FREQUENCIES (CM-1) AND EIGENVECTORS'//)
   9  FORMAT(///,1X,'ZERO FREQUENCIES (CM-1)'/)
  10  FORMAT(6F12.4)
  11  FORMAT(///,1X,'VIBRATIONAL FREQUENCIES (CM-1) AND EIGENVECTORS'//)
  12  FORMAT(2I5)
  13  FORMAT(/,1X,'FILE17 HEADER INCONSISTENT WITH NA')
  14  FORMAT(3F20.10)
  15  FORMAT(//,1X,'DIPOLE MOMENT DERIVATIVES IN NORMAL COORDINATES'
     $      //4X,'I',7X,'M(X)',6X,'M(Y)',6X,'M(Z)'/)
  16  FORMAT(1X,I4,3X,3F10.6)
  17  FORMAT(//,24X,'IR INTENSITY'/
     $          3X,'MODE',4X,'CM-1',4X,'(KM/MOLE AND RELATIVE)')
  18  FORMAT(1X,I5,F10.1,1X,F12.5,F10.5)
  19  FORMAT(//,3X,'MODE',4X,'CM-1'/)
  20  FORMAT(1X,I5,F10.1)
      WRITE(IOUT,1)
      WRITE(IOUT,2)
      DO 100  I=1,NA
 100  WRITE(IOUT,3) I,XMASS(I),(XA(I,J),J=1,3)
cbfy  REWIND I15
      READ(I15,4) I,J
      IF(I.NE.NA) THEN
          WRITE(IOUT,5)
          IFLAG=1
          RETURN
      END IF
      READ(I15,6) ((F(I,J),J=1,NC),I=1,NC)
      WRITE(IOUT,7)
      CALL TABLE1(NC,NC,F)
      NV=NC*(NC+1)/2
      DO 105  J=1,NC
      JK=(J-1)/3+1
      DO 105  I=1,NC
      IK=(I-1)/3+1
 105  XR(I,J)=(F(J,I)+F(I,J))/(TWO*DSQRT(XMASS(IK)*XMASS(JK)))
      II=0
      DO 110  I=1,NC
      DO 110  J=1,I
      II=II+1
 110  XU(II)=XR(I,J)
C     NOTE THAT XU AND XS ARE IN THE SAME MEMORY LOCATION.
      CALL RSP(NC,NC,NV,XU,BS(1,1),1,XT,BS(1,2),BS(1,3))
      DO 120  I=1,NC
      IK=(I-1)/3+1
      XX=ONE/DSQRT(XMASS(IK))
      DO 120  J=1,NC
 120  XR(I,J)=XT(I,J)*XX
      DO 130  I=1,NC
           XX=ONE
           IF(BS(I,1).LT.ZERO) XX=-XX
 130       XU(I)=DSQRT(DABS(BS(I,1)))*XX*WAVE
      II=0
      IJ=0
      DO 135  J=1,NC
           XX=DABS(XU(J))
           IF(XX.LT.FRQCUT) THEN
           IJ=IJ+1
           IZ(IJ)=J
           W(IJ)=XU(J)
           DO 138  I=1,NC
 138       BS(I,IJ)=XR(I,J)
           GO TO 135
           END IF
      II=II+1
      XU(II)=XU(J)
      DO 140  I=1,NC
 140  XR(I,II)=XR(I,J)
 135  CONTINUE
      NZ=IJ
      NF=II
      IF(LPRT(3,NPRT).EQ.3) THEN
           WRITE(IOUT,8)
           CALL TABLE2(NC,NC,NZ,W,BS)
      ELSE
           WRITE(IOUT,9)
           WRITE(IOUT,10) (W(I),I=1,NZ)
      END IF
      WRITE(IOUT,11)
      CALL TABLE2(NC,NC,NF,XU,XR)
      IF(IRINT.EQ.0) GO TO 184
      READ(I17,12) I,J
           IF(I.NE.NA) THEN
           WRITE(IOUT,13)
           IFLAG=2
           RETURN
           END IF
      READ(I17,14) ((BS(I,J),I=1,NC),J=1,3)
      XZ=ZERO
      IY=0
      DO 165  I=1,NF
          XY=ZERO
          DO 170  J=1,3
          XX=ZERO
          DO 175  K=1,NC
 175      XX=XX+XR(K,I)*BS(K,J)
          BS(I,J+3)=XX
 170      XY=XY+XX*XX
          IF(XY.GT.XZ) THEN
          IY=I
          XZ=XY
          END IF
 165  XT(I,1)=XY*CINT
      XZ=XZ*CINT
      IF(XZ.EQ.ZERO) XZ=ONE
      DO 180  I=1,NF
 180  XT(I,2)=XT(I,1)/XZ
      IF(LPRT(3,NPRT).EQ.2) THEN
          WRITE(IOUT,15)
          DO 182  I=1,NF
 182      WRITE(IOUT,16) I,(BS(I,J),J=4,6)
      END IF
 184  IF(IRINT.EQ.0) THEN
      WRITE(IOUT,19)
      DO 186  I=1,NF
 186  WRITE(IOUT,20) I,XU(I)
      ELSE
      WRITE(IOUT,17)
      DO 190  I=1,NF
 190  WRITE(IOUT,18) I,XU(I),XT(I,1),XT(I,2)
      END IF
      RETURN
      END
C//////////////////////////////////////////////////////////////////////
      SUBROUTINE TABLE1(NN,N,A)
      REAL*8 A(NN,NN)
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
 1    FORMAT(6(I5,I3,F10.6))
      DO 10 I=1,N
 10   WRITE(IOUT,1) (I,J,A(I,J),J=1,N)
      END
C//////////////////////////////////////////////////////////////////////
      SUBROUTINE TABLE2(NN,N,M,W,A)
      REAL*8 A(NN,NN),W(NN)
      CHARACTER LINE*10
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
 1    FORMAT(1X,11A10)
 2    FORMAT(11X,10(I6,4X))
 3    FORMAT(1X,'COORDINATE',10F10.3)
 4    FORMAT(I7,4X,10F10.6)
 5    FORMAT(//)
      LINE='----------'
      N2=0
 100  N1=N2+1
      N2=N2+10
      IF(N2.GT.M) N2=M
      WRITE(IOUT,1) (LINE,I=N1,N2+1)
      WRITE(IOUT,2) (I,I=N1,N2)
      WRITE(IOUT,3) (W(I),I=N1,N2)
      WRITE(IOUT,1) (LINE,I=N1,N2+1)
      DO 105 I=1,N
 105  WRITE(IOUT,4) I,(A(I,J),J=N1,N2)
      WRITE(IOUT,1) (LINE,I=N1,N2+1)
      WRITE(IOUT,5)
      IF(N2.LT.M) GO TO 100
      RETURN
      END
C//////////////////////////////////////////////////////////////////////
      SUBROUTINE TABLE3(NN,N,W,A)
      REAL*8 A(NN,NN),W(NN)
      CHARACTER LINE*10
      COMMON /IO/ IIN1,IOUT,ICHECK,NPRT,
     $   I11,I15,I17,I20,I24,
     $   I12,I16,I18,I21,I25,
     $   ISCR1,ISCR2,ISCR3,ISCR4,ISCR5,ISCR6,ISCR7,ISCR8,ISCR9,ISCR10
 1    FORMAT(1X,11A10)
 2    FORMAT(11X,10(I6,4X))
 3    FORMAT(1X,'COORDINATE',10F10.3)
 4    FORMAT(I7,4X,10F10.5)
 5    FORMAT(//)
      LINE='----------'
      N2=0
 100  N1=N2+1
      N2=N2+10
      IF(N2.GT.N) N2=N
      WRITE(IOUT,1) (LINE,I=N1,N2+1)
      WRITE(IOUT,2) (I,I=N1,N2)
      WRITE(IOUT,3) (W(I),I=N1,N2)
      WRITE(IOUT,1) (LINE,I=N1,N2+1)
      DO 105 I=1,N
 105  WRITE(IOUT,4) I,(A(I,J),J=N1,N2)
      WRITE(IOUT,1) (LINE,I=N1,N2+1)
      WRITE(IOUT,5)
      IF(N2.LT.N) GO TO 100
      RETURN
      END
C//////////////////////////////////////////////////////////////////////
      subroutine bottom(iunit)
c  Skip to end of file 'iunit'
      character*1 dummy
1000  format(a1)
      k=1
10    read(iunit,1000,end=20) dummy
      k=k+1
      go to 10
20    continue
      rewind(iunit)
      do 30 i=1,k-1
30    read(iunit,1000) dummy
      return
      end
