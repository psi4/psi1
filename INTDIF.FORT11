      subroutine fentry(ijnk1,ijnk2,ijnk3)
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
c Program now enters through FENTRY, 3/3/89 - clj.
C**********************************************************************
c Moved to PSI distribution disk on 020389 - clj.
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         search:  c4-10-88  *
C*  DATE:  April  10,  1988                                           *
C*  REASON: Migration to run in 7Mb on 9370                           *
C**********************************************************************
      IMPLICIT INTEGER (A-Z)
      integer ijnk1(1),ijnk2(2),ijnk3
      REAL*8 Z(300000)
      INTEGER IZ(5000)
      CHARACTER LABEL*10
      COMMON/IO/IIN,IOUT,I12,I16,I21,IDER,ISCR1,ISCR2
    1 FORMAT(A10)
    2 FORMAT(1X,'NO INTDIF LABEL FOUND.')
    3 FORMAT(16I5)
    4 FORMAT(1X,'NOT ENOUGH CORE'/I10,' WORDS NEEDED BUT ONLY',
     $    I10,' WORDS AVAILABLE.')
    5 FORMAT(16I5)
    6 FORMAT(/1X,'CALCULATION TYPE IS ',A10)
    7 FORMAT(/1X,'    NS    NDER    NPERM   NPAR    NPRT   NMORSE')
    8 FORMAT(1X,8(I6,2X))
    9 FORMAT(/1X,'NPOINT    NDER   NGUESS')
      IIN=5
      IOUT=6
      IDER=8
      ISCR1=91
      ISCR2=92
      I12=12
      I16=16
      I21=21
      NMAX=300000
      NIMAX=5000
      DO 50  I=1,NIMAX
  50  IZ(I)=0
      DO 52  I=1,NMAX
  52  Z(I)=0
 100  READ(IIN,1,END=105) LABEL
      IF(LABEL.EQ.'# INTDIF #') GO TO 110
      GO TO 100
 105  WRITE(IOUT,2)
      STOP
 110  READ(IIN,1) LABEL
      WRITE(IOUT,6) LABEL
 200  IF(LABEL.NE.' FCONSTDIF'.AND.LABEL.NE.'FCONSTDIF ') GO TO 220
      READ(IIN,3) NS,NDER,NPERM,NPAR,NPRT,NMORSE
      WRITE(IOUT,7)
      WRITE(IOUT,8) NS,NDER,NPERM,NPAR,NPRT,NMORSE
      NX=NS
      F1=1
      F1A=F1+NX
      F1B=F1A+NX
      F1C=F1B+NX
      F1D=F1C+NX
      F1E=F1D+NX
      F2=F1E+NX
      NX=NX*NS
      F2A=F2+NX
      F2B=F2A+NX
      F3=F2B+NX
      NX=NX*NS
      NTOP=F3+NX
      IF(NDER.GE.2) THEN
          F3A=F3+NX
          F3B=F3A+NX
          F4=F3B+NX
          NX=NX*NS
          F4A=F4+NX
          F4B=F4A+NX
          NTOP=F4B+NX
      ELSE
          F3A=1
          F3B=1
          F4=1
          F4A=1
          F4B=1
      END IF
      IF(NTOP.GT.NMAX) THEN
          WRITE(IOUT,4) NTOP,NMAX
          STOP
      END IF
      IPAR=1
      IPP=IPAR+NS*NS
      IPERM=IPP+NS*NS
      IMORSE=IPERM+NS*(NS+1)
      ITOP=IMORSE+NS
      CALL DIFA(NS,NDER,NPERM,NPAR,NPRT,NMORSE,Z(F1),Z(F1A),Z(F1B),
     $  Z(F1C),Z(F1D),Z(F1E),Z(F2),Z(F2A),Z(F2B),Z(F3),Z(F3A),Z(F3B),
     $  Z(F4),Z(F4A),Z(F4B),IZ(IPAR),IZ(IPP),IZ(IPERM),IZ(IMORSE))
      GO TO 1000
 220  IF(LABEL.NE.'    DIATOM') GO TO 240
      READ(IIN,5) NPOINT,NDER,NGUESS
      WRITE(IOUT,9)
      WRITE(IOUT,8) NPOINT,NDER,NGUESS
      S=1
      E=S+NPOINT
      CALL DIFB(NPOINT,NDER,NGUESS,Z(S),Z(E))
 240  CONTINUE
1000  CONTINUE
      END
C     //////////////////////////////////////////////////////////////////
      SUBROUTINE DIFA(NS,NDER,NPERM,NPAR,NPRT,NMORSE,F1,F1A,F1B,F1C,
     $ F1D,F1E,F2,F2A,F2B,F3,F3A,F3B,F4,F4A,F4B,IPAR,IPP,IPERM,IMORSE)
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER IPERM(NS,0:NS),IPAR(NS,NS),IPP(NS,NS),IMORSE(NS)
      INTEGER M,N,P,Q
      LOGICAL MINUS
      DIMENSION F1(NS),F1A(NS),F1B(NS),F1C(NS),F1D(NS),F1E(NS)
      DIMENSION F2(NS,NS),F2A(NS,NS),F2B(NS,NS)
      DIMENSION F3(NS,NS,NS),F3A(NS,NS,NS),F3B(NS,NS,NS)
      DIMENSION F4(NS,NS,NS,NS),F4A(NS,NS,NS,NS),F4B(NS,NS,NS,NS)
      COMMON/IO/IIN,IOUT,I12,I16,I21,IDER,ISCR1,ISCR2
      PARAMETER (ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER (HART=4.359814445D0)
      PARAMETER (CM1=0.1296296296296D0,CM2=0.1530612245D0)
      PARAMETER (CM3=0.16074074074074D0)
      PARAMETER(F1CUT=1.0D-8,F2CUT=1.0D-6,F3CUT=1.0D-5,F4CUT=1.0D-5)
    1 FORMAT(16I5)
    2 FORMAT(/1X,'IPERM ARRAY')
    3 FORMAT(1X,'(',I2,')',20I5)
    4 FORMAT(/1X,'IPAR ARRAY')
    5 FORMAT(1X,20I5)
    6 FORMAT(/1X,'DISPLACEMENTS READ FROM FILE 12')
    7 FORMAT(I5,F12.8,F20.10)
    8 FORMAT(20X,F20.10)
    9 FORMAT(1X,'DELTA VALUES NOT EQUAL IN MAGNITUDE',I5,2F10.5)
   10 FORMAT(/1X,'ANALYTIC FIRST DERIVATIVES')
   11 FORMAT(1X,F12.8)
   12 FORMAT(/1X,'NUMERICAL FIRST DERIVATIVES')
   13 FORMAT(/1X,'NUMERICAL QUADRATIC FORCE CONSTANTS',
     $ //5X,'[1] : FROM GRADIENTS',/5X,'[0] : FROM ENERGIES',
     $ //5X,'M',4X,'N',6X,'F2(M,N) [1]',3X,'F2(M,N) [0]',6X,
     $      'ASYM [1]')
   14 FORMAT(1X,2I5,3X,F14.8,14X,F14.8)
   15 FORMAT(1X,2I5,3X,3F14.8)
   16 FORMAT(/1X,'NUMERICAL SEMIDIAGONAL CUBIC FORCE CONSTANTS')
   17 FORMAT(1X,'F3(',I2,',',I2,', N)')
   18 FORMAT(I5,F12.6)
   19 FORMAT(1X,3I5,F14.8)
   20 FORMAT(/1X,'DISPLACEMENTS READ FROM FILE 16')
   21 FORMAT(I5,5X,F12.8)
   22 FORMAT(3F20.10)
   23 FORMAT(/1X,'QUADRATIC FORCE CONSTANTS',//5X,'[2] : ANALYTIC',
     $  /5X,'[1] : FROM GRADIENTS',/5X,'[0] : FROM ENERGIES',
     $  //5X,'M',4X,'N',6X,'F2(M,N) [2]',3X,'F2(M,N) [1]',3X,
     $     'F2(M,N) [0]',2X,'ERROR [2]-[1]',5X,'ASYM [1]')
   24 FORMAT(1X,2I5,3X,2F14.8,14X,2F14.8)
   25 FORMAT(1X,2I5,3X,5F14.8)
   26 FORMAT(/1X,'NUMERICAL CUBIC FORCE CONSTANTS',
     $ //5X,'[2] : FROM SECOND DERIVATIVES',
     $  /5X,'[1] : FROM GRADIENTS'/
     $  /4X,'M',4X,'N',4X,'P',8X,'F3(M,N,P) [2]',2X,'F3(M,N,P) [1]',
     $   3X,'ASYM [2]')
   27 FORMAT(3I5,5X,3F14.8)
   28 FORMAT(3I5,5X,F14.8,14X,F14.8)
   29 FORMAT(/1X,'NUMERICAL SEMIDIAGONAL QUARTIC FORCE CONSTANTS')
   30 FORMAT(1X,'F4(',I2,',',I2,', N, P)')
   31 FORMAT(6F12.6)
   32 FORMAT(1X,4I5,3X,F14.8)
   33 FORMAT(/1X,'DISPLACEMENTS READ FROM FILE 21')
   34 FORMAT(/1X,'CUBIC FORCE CONSTANTS',
     $  //5X,'[3] : ANALYTIC',/5X,'[2] : FROM SECOND DERIVATIVES',
     $  /5X,'[1] : FROM GRADIENTS',
     $  //5X,'M',4X,'N',4X,'P',6X,'F3(M,N,P) [3]',3X,'F3(M,N,P) [2]',
     $  3X,'F3(M,N,P) [1]',4X,'ERROR [3]-[2]',5X,'ASYM [2]')
   35 FORMAT(1X,3I5,3X,5F16.8)
   36 FORMAT(1X,3I5,3X,2F16.8,16X,2F16.8)
   37 FORMAT(/1X,'NUMERICAL QUARTIC FORCE CONSTANTS',
     $ //5X,'[3] : FROM THIRD DERIVATIVES',
     $  /5X,'[2] : FROM SECOND DERIVATIVES',
     $ //5X,'M',4X,'N',4X,'P',4X,'Q',4X,'F4(M,N,P,Q) [3]',
     $   2X,'F4(M,N,P,Q) [2]',3X,'  DIF [3]-[2]',5X,'ASYM [3]')
   38 FORMAT(1X,4I5,3X,4F16.8)
   39 FORMAT(1X,4I5,3X,F16.8,32X,F16.8)
   40 FORMAT(/1X,'NUMERICAL SEMIDIAGONAL QUINTIC FORCE CONSTANTS')
   41 FORMAT(1X,'F5(',I2,',',I2,',',I2,', P, Q)')
   42 FORMAT(6F12.6)
   43 FORMAT(/'  NUMERICAL DIAGONAL QUINTIC FORCE CONSTANTS '/)
   44 FORMAT(5I5,F14.6)
   45 FORMAT(I5,15X,F20.10)
   46 FORMAT(2I5,10X,F20.10)
   47 FORMAT(3I5,5X,F20.10)
   48 FORMAT(4I5,F20.10)
   49 FORMAT(/1X,'IMORSE ARRAY')
C***********************************************************************
C   1 FORMAT(16I5)
C     DO   I=1,NPERM
C     READ(IIN,1) (IPERM(I,J),J=0,NS)
C
C     IPERM(I,0) = THE COORDINATE GENERATED BY THE I-TH SYMMETRY
C     OPERATION.  IPERM(I,J) = THE COORDINATE INTO WHICH THE J-TH
C     COORDINATE IS SENT BY THE I-TH SYMMETRY OPERATION.
C***********************************************************************
C     DO   I=1,NPAR
C     READ(IIN,1) NI
C     READ(IIN,1) (IPAR(I,J),J=1,NS)
C
C     FOR EACH COORDINATE (NI) FOR WHICH ONLY A POSITIVE DISPLACEMENT
C     IS GIVEN, IPAR(NI,J) CONTAINS THE PARITY (+1 OR -1) OF COORDINATE
C     J UNDER THE SYMMETRY OPERATION WHICH GENERATES THE -NI
C     DISPLACEMENT FROM THE +NI DISPLACEMENT.
C***********************************************************************
      NF10=0
      NF20=0
      NF30=0
      DO 80  I=1,NPERM
  80  READ(IIN,1) (IPERM(I,J),J=0,NS)
      DO 82  I=1,NPAR
      READ(IIN,1) NI
  82  READ(IIN,1) (IPAR(NI,J),J=1,NS)
      DO 83  I=1,NS
  83  IMORSE(I)=0
      IF(NMORSE.NE.0) THEN
      READ(IIN,1) (IMORSE(I),I=1,NS)
      END IF
C
      IF(NPERM.NE.0) WRITE(IOUT,2)
      DO 86  I=1,NPERM
  86  WRITE(IOUT,3) IPERM(I,0),(IPERM(I,J),J=1,NS)
      IF(NPAR.GT.0) THEN
          WRITE(IOUT,4)
          DO 87  I=1,NS
          IF(IPAR(I,1).NE.0) THEN
          WRITE(IOUT,5) I
          WRITE(IOUT,5) (IPAR(I,J),J=1,NS)
          END IF
  87      CONTINUE
      END IF
      IF(NMORSE.NE.0) THEN
          WRITE(IOUT,49)
          WRITE(IOUT,5) (IMORSE(I),I=1,NS)
      END IF
      DO 89  I=1,NPERM
      DO 89  J=1,NS
      IPP(I,J)=ISIGN(1,IPERM(I,J))
  89  IPERM(I,J)=IABS(IPERM(I,J))
      DO 90  M=1,NS
      F1(M)=ZERO
      DO 90  N=1,NS
      F2(M,N)=ZERO
      DO 90  P=1,NS
      F3(M,N,P)=ZERO
      DO 90  Q=1,NS
  90  F4(M,N,P,Q)=ZERO
C
      WRITE(IOUT,6)
 100  READ(I12,7,END=140) NI,DELTA1,ENER1
      DO 105  M=1,NS
 105  READ(I12,8) F1A(M)
      WRITE(IOUT,7) NI,DELTA1,ENER1
      MINUS=.FALSE.
      READ(I12,7,END=1000) NJ,DELTA2,ENER2
      IF(NJ.NE.NI) THEN
          BACKSPACE I12
      ELSE
          MINUS=.TRUE.
          IF(DELTA2.NE.-DELTA1) THEN
          WRITE(IOUT,9) NI,DELTA1,DELTA2
          STOP
          END IF
      END IF
      IF(MINUS) THEN
          DO 110  M=1,NS
 110      READ(I12,8) F1B(M)
          WRITE(IOUT,7) NJ,DELTA2,ENER2
      END IF
 115  IF(NI.EQ.0) THEN
          ENER0=ENER1
          NF10=1
          DO 120  M=1,NS
 120      F1(M)=F1A(M)
          GO TO 100
      END IF
      DELTA=DELTA1
      IF(MINUS) THEN
          F1C(NI)=HART*(ENER1-ENER2)/(TWO*DELTA)
          F1D(NI)=HART*(ENER1+ENER2-TWO*ENER0)/DELTA**2
          DO 125  N=1,NS
          F2(NI,N)=(F1A(N)-F1B(N))/(TWO*DELTA)
 125      F3(NI,NI,N)=(F1A(N)+F1B(N)-TWO*F1(N))/DELTA**2
      ELSE
          F1C(NI)=ZERO
          F1D(NI)=HART*TWO*(ENER1-ENER0)/DELTA**2
          DO 130  N=1,NS
          F2(NI,N)=F1A(N)*(1-IPAR(NI,N))/(TWO*DELTA)
 130      F3(NI,NI,N)=(F1A(N)*(1+IPAR(NI,N))-TWO*F1(N))/DELTA**2
      END IF
      IF(IMORSE(NI).EQ.1) THEN
          XX=F2(NI,NI)
          YY=F3(NI,NI,NI)
          ZZ=(YY*DELTA)**2
          ZZ=-ZZ*CM1/XX
          F2(NI,NI)=F2(NI,NI)+ZZ
      ELSE IF(IMORSE(NI).EQ.2) THEN
          XX=F1D(NI)
          YY=F2(NI,NI)
          ZZ=TWO*(XX-YY)
          F2(NI,NI)=F2(NI,NI)+ZZ
      END IF
      GO TO 100
 140  DO 145  I=1,NPERM
      NI=IPERM(I,0)
      MM=IPERM(I,NI)
      F1C(NI)=F1C(MM)*IPP(I,NI)
      F1D(NI)=F1D(MM)*IPP(I,NI)
      DO 150  N=1,NS
      F2(NI,N)=F2(MM,IPERM(I,N))*IPP(I,NI)*IPP(I,N)
 150  F3(NI,NI,N)=F3(MM,MM,IPERM(I,N))*IPP(I,N)
 145  CONTINUE
      DO 155  M=1,NS
      DO 155  N=1,M
      F2A(M,N)=(F2(M,N)-F2(N,M))/TWO
 155  F2A(N,M)=-F2A(M,N)
      DO 160  M=1,NS
      DO 160  N=1,M
      F2(M,N)=(F2(M,N)+F2(N,M))/TWO
 160  F2(N,M)=F2(M,N)
      DO 162  M=1,NS
      F1E(M)=F3(M,M,M)
      DO 162  N=1,NS
      F3(M,N,M)=F3(M,M,N)
 162  F3(N,M,M)=F3(M,M,N)
      IF(NF10.EQ.1) THEN
          WRITE(IOUT,10)
          DO 164  M=1,NS
 164      WRITE(IOUT,11) F1(M)
      END IF
      IF(NPRT.GE.2) THEN
      WRITE(IOUT,12)
      DO 166  M=1,NS
 166  WRITE(IOUT,11) F1C(M)
      END IF
C
      IF(NDER.LE.1) THEN
        WRITE(IOUT,13)
        DO 170  M=1,NS
        DO 172  N=1,M-1
 172    WRITE(IOUT,14) M,N,F2(M,N),F2A(M,N)
 170    WRITE(IOUT,15) M,M,F2(M,M),F1D(M),F2A(M,M)
        IF(NF10.EQ.1) THEN
        WRITE(IOUT,16)
        DO 174  M=1,NS
        WRITE(IOUT,17) M,M
        DO 176  N=1,NS
 176    WRITE(IOUT,18) N,F3(M,M,N)
 174    CONTINUE
        END IF
        GO TO 500
      END IF
        DO 180  M=1,NS
        DO 182  N=1,M-1
 182    WRITE(ISCR1,14) M,N,F2(M,N),F2A(M,N)
 180    WRITE(ISCR1,15) M,M,F2(M,M),F1D(M),F2A(M,M)
        IF(NF10.EQ.1) THEN
        DO 190  M=1,NS
        DO 190  N=1,M
        DO 190  P=1,N
 190    WRITE(ISCR2,19) M,N,P,F3(M,N,P)
        END IF
C
      WRITE(IOUT,20)
 200  READ(I16,21,END=240) NI,DELTA1
      READ(I16,22) ((F2A(M,N),N=1,NS),M=1,NS)
      WRITE(IOUT,7) NI,DELTA1
      MINUS=.FALSE.
      READ(I16,21,END=1010) NJ,DELTA2
      IF(NJ.NE.NI) THEN
          BACKSPACE I16
      ELSE
          MINUS=.TRUE.
          IF(DELTA2.NE.-DELTA1) THEN
          WRITE(IOUT,9) NI,DELTA1,DELTA2
          STOP
          END IF
      END IF
      IF(MINUS) THEN
      READ(I16,22) ((F2B(M,N),N=1,NS),M=1,NS)
      WRITE(IOUT,7) NJ,DELTA2
      END IF
 215  IF(NI.EQ.0) THEN
          NF20=1
          DO 220  M=1,NS
          DO 220  N=1,NS
 220      F2(M,N)=F2A(M,N)
          GO TO 200
      END IF
      DELTA=DELTA1
      IF(MINUS) THEN
          DO 225  N=1,NS
          DO 225  P=1,NS
          F3(NI,N,P)=(F2A(N,P)-F2B(N,P))/(TWO*DELTA)
 225      F4(NI,NI,N,P)=(F2A(N,P)+F2B(N,P)-TWO*F2(N,P))/DELTA**2
      ELSE
          DO 230  N=1,NS
          DO 230  P=1,NS
          IX=IPAR(NI,N)*IPAR(NI,P)
          F3(NI,N,P)=F2A(N,P)*(1-IX)/(TWO*DELTA)
 230      F4(NI,NI,N,P)=(F2A(N,P)*(1+IX)-TWO*F2(N,P))/DELTA**2
      END IF
      IF(IMORSE(NI).EQ.1) THEN
          XX=F3(NI,NI,NI)
          YY=F4(NI,NI,NI,NI)
          ZZ=(YY*DELTA)**2
          ZZ=-ZZ*CM2/XX
          F3(NI,NI,NI)=F3(NI,NI,NI)+ZZ
      ELSE IF(IMORSE(NI).EQ.2) THEN
          XX=F1E(NI)
          YY=F3(NI,NI,NI)
          ZZ=TWO*(XX-YY)
          F3(NI,NI,NI)=F3(NI,NI,NI)+ZZ
      END IF
      GO TO 200
 240  DO 245  I=1,NPERM
      NI=IPERM(I,0)
      MM=IPERM(I,NI)
      DO 250  N=1,NS
      DO 250  P=1,NS
      IPQ=IPP(I,N)*IPP(I,P)
      IPR=IPQ*IPP(I,NI)
      F3(NI,N,P)=F3(MM,IPERM(I,N),IPERM(I,P))*IPR
 250  F4(NI,NI,N,P)=F4(MM,MM,IPERM(I,N),IPERM(I,P))*IPQ
 245  CONTINUE
      DO 255  M=1,NS
      DO 255  N=1,M
      DO 255  P=1,N
 255  F3A(M,N,P)=(TWO*F3(M,N,P)-F3(N,M,P)-F3(P,N,M))/THREE
      DO 260  M=1,NS
      DO 260  N=1,M
      DO 260  P=1,N
 260  F3(M,N,P)=(F3(M,N,P)+F3(N,M,P)+F3(P,N,M))/THREE
      DO 265  M=1,NS
      F1E(M)=F4(M,M,M,M)
      DO 265  N=1,NS
      DO 265  P=1,NS
      F4(M,N,M,P)=F4(M,M,N,P)
      F4(M,N,P,M)=F4(M,M,N,P)
      F4(N,M,M,P)=F4(M,M,N,P)
      F4(N,M,P,M)=F4(M,M,N,P)
 265  F4(N,P,M,M)=F4(M,M,N,P)
        IF(NF20.EQ.1) THEN
            REWIND ISCR1
            WRITE(IOUT,23)
            DO 270  M=1,NS
            DO 272  N=1,M-1
            READ(ISCR1,15) MM,NN,X,Y,Z
            W=F2(M,N)-X
 272        WRITE(IOUT,24) M,N,F2(M,N),X,W,Z
            READ(ISCR1,15) MM,NN,X,Y,Z
            W=F2(M,M)-X
 270        WRITE(IOUT,25) M,N,F2(M,N),X,Y,W,Z
        END IF
      IF(NDER.LE.2) THEN
        REWIND ISCR2
        WRITE(IOUT,26)
        DO 276  M=1,NS
        DO 276  N=1,M
        DO 276  P=1,N
        READ(ISCR2,19) LL,MM,NN,X
         IF(M.EQ.N.OR.N.EQ.P.OR.M.EQ.P) THEN
           WRITE(IOUT,27) M,N,P,F3(M,N,P),X,F3A(M,N,P)
         ELSE
           WRITE(IOUT,28) M,N,P,F3(M,N,P),F3A(M,N,P)
         END IF
 276    CONTINUE
        IF(NF20.EQ.1) THEN
        WRITE(IOUT,29)
        DO 278  M=1,NS
        WRITE(IOUT,30) M,M
        DO 280  N=1,NS
 280    WRITE(IOUT,31) (F4(M,M,N,P),P=1,NS)
 278    CONTINUE
        END IF
        GO TO 500
      END IF
        REWIND ISCR1
        REWIND ISCR2
        DO 285  M=1,NS
        DO 285  N=1,M
        DO 285  P=1,N
        READ(ISCR2,19) LL,MM,NN,X
         IF(M.EQ.N.OR.N.EQ.P.OR.M.EQ.P) THEN
           WRITE(ISCR1,27) M,N,P,F3(M,N,P),X,F3A(M,N,P)
         ELSE
           WRITE(ISCR1,28) M,N,P,F3(M,N,P),F3A(M,N,P)
         END IF
 285    CONTINUE
        IF(NF20.EQ.1) THEN
        DO 290  M=1,NS
        DO 290  N=1,M
        DO 290  P=1,N
        DO 290  Q=1,P
 290    WRITE(ISCR1,32) M,N,P,Q,F4(M,N,P,Q)
        END IF
C
      WRITE(IOUT,33)
 300  READ(I21,21,END=350) NI,DELTA1
      READ(I21,22) (((F3A(M,N,P),P=1,N),N=1,M),M=1,NS)
      WRITE(IOUT,7) NI,DELTA1
      DO 305  M=1,NS
      DO 305  N=1,M
      DO 305  P=1,N
      XX=F3A(M,N,P)
      F3A(N,M,P)=XX
      F3A(N,P,M)=XX
      F3A(M,P,N)=XX
      F3A(P,M,N)=XX
 305  F3A(P,N,M)=XX
      MINUS=.FALSE.
      READ(I21,21,END=1020) NJ,DELTA2
      IF(NJ.NE.NI) THEN
          BACKSPACE I21
      ELSE
          MINUS=.TRUE.
          IF(DELTA2.NE.-DELTA1) THEN
          WRITE(IOUT,9) NI,DELTA1,DELTA2
          STOP
          END IF
      END IF
      IF(MINUS) THEN
      READ(I21,22) (((F3B(M,N,P),P=1,N),N=1,M),M=1,NS)
      WRITE(IOUT,7) NJ,DELTA2
      END IF
      DO 310  M=1,NS
      DO 310  N=1,M
      DO 310  P=1,N
      XX=F3B(M,N,P)
      F3B(N,M,P)=XX
      F3B(N,P,M)=XX
      F3B(M,P,N)=XX
      F3B(P,M,N)=XX
 310  F3B(P,N,M)=XX
 315  IF(NI.EQ.0) THEN
          NF30=1
          DO 330  M=1,NS
          DO 330  N=1,NS
          DO 330  P=1,NS
 330      F3(M,N,P)=F3A(M,N,P)
          GO TO 300
      END IF
      DELTA=DELTA1
      IF(MINUS) THEN
          DO 335  N=1,NS
          DO 335  P=1,NS
          DO 335  Q=1,NS
          F4(NI,N,P,Q)=(F3A(N,P,Q)-F3B(N,P,Q))/(TWO*DELTA)
 335      F4B(NI,N,P,Q)=(F3A(N,P,Q)+F3B(N,P,Q)-TWO*F3(N,P,Q))/DELTA**2
      ELSE
          DO 340  N=1,NS
          DO 340  P=1,NS
          DO 340  Q=1,NS
          IX=IPAR(NI,N)*IPAR(NI,P)*IPAR(NI,Q)
          F4(NI,N,P,Q)=F3A(N,P,Q)*(1-IX)/(TWO*DELTA)
 340      F4B(NI,N,P,Q)=(F3A(N,P,Q)*(1+IX)-TWO*F3(N,P,Q))/DELTA**2
      END IF
      IF(IMORSE(NI).EQ.1) THEN
          XX=F4(NI,NI,NI,NI)
          YY=F4B(NI,NI,NI,NI)
          ZZ=(YY*DELTA)**2
          ZZ=-ZZ*CM3/XX
          F4(NI,NI,NI,NI)=F4(NI,NI,NI,NI)+ZZ
      ELSE IF(IMORSE(NI).EQ.2) THEN
          XX=F1E(NI)
          YY=F4(NI,NI,NI,NI)
          ZZ=TWO*(XX-YY)
          F4(NI,NI,NI,NI)=F4(NI,NI,NI,NI)+ZZ
      END IF
      GO TO 300
 350  DO 360  I=1,NPERM
      NI=IPERM(I,0)
      MM=IPERM(I,NI)
      DO 365  N=1,NS
      DO 365  P=1,NS
      DO 365  Q=1,NS
      IPQ=IPP(I,N)*IPP(I,P)*IPP(I,Q)
      IPR=IPQ*IPP(I,NI)
      F4(NI,N,P,Q)=F4(MM,IPERM(I,N),IPERM(I,P),IPERM(I,Q))*IPR
 365  F4B(NI,N,P,Q)=F4B(MM,IPERM(I,N),IPERM(I,P),IPERM(I,Q))*IPQ
 360  CONTINUE
      DO 370  M=1,NS
      DO 370  N=1,M
      DO 370  P=1,N
      DO 370  Q=1,P
      XX=F4(M,N,P,Q)+F4(N,M,P,Q)-F4(P,N,M,Q)-F4(Q,N,P,M)
 370  F4A(M,N,P,Q)=XX/FOUR
      IF(NF30.EQ.1) THEN
          REWIND ISCR1
          WRITE(IOUT,34)
          DO 372  M=1,NS
          DO 372  N=1,M
          DO 372  P=1,N
          READ(ISCR1,27) LL,MM,NN,X,Y,Z
          W=F3(M,N,P)-X
          IF(M.EQ.N.OR.M.EQ.P.OR.N.EQ.P) THEN
          WRITE(IOUT,35) M,N,P,F3(M,N,P),X,Y,W,Z
          ELSE
          WRITE(IOUT,36) M,N,P,F3(M,N,P),X,W,Z
          END IF
 372      CONTINUE
      END IF
      DO 375  M=1,NS
      DO 375  N=1,M
      DO 375  P=1,N
      DO 375  Q=1,P
      XX=(F4(M,N,P,Q)+F4(N,M,P,Q)+F4(P,N,M,Q)+F4(Q,N,P,M))/FOUR
 375  F4(M,N,P,Q)=XX
      WRITE(IOUT,37)
      DO 380  M=1,NS
      DO 380  N=1,M
      DO 380  P=1,N
      DO 380  Q=1,P
      READ(ISCR1,32) KK,LL,MM,NN,X
      W=F4(M,N,P,Q)-X
      IF(M.EQ.N.OR.M.EQ.P.OR.M.EQ.Q.OR.N.EQ.P.OR.N.EQ.Q.OR.P.EQ.Q)THEN
        WRITE(IOUT,38) M,N,P,Q,F4(M,N,P,Q),X,W,F4A(M,N,P,Q)
      ELSE
        WRITE(IOUT,39) M,N,P,Q,F4(M,N,P,Q),F4A(M,N,P,Q)
      END IF
 380  CONTINUE
      IF(NF30.EQ.1) THEN
        IF(NPRT.GE.1) THEN
        WRITE(IOUT,40)
        DO 385  M=1,NS
        DO 385  N=1,NS
        WRITE(IOUT,41) M,M,N
        DO 385  P=1,NS
 385    WRITE(IOUT,42) (F4B(M,N,P,Q),Q=1,NS)
        ELSE
        WRITE(IOUT,43)
        DO 390  M=1,NS
 390    WRITE(IOUT,44) M,M,M,M,M,F4B(M,M,M,M)
        END IF
      END IF
C
 500  II=0
      DO 510  M=1,NS
      IF(DABS(F1(M)).GE.F1CUT) THEN
          WRITE(IDER,45) M,F1(M)
      END IF
 510  CONTINUE
      WRITE(IDER,45) II
      DO 520  M=1,NS
      DO 520  N=1,M
      IF(DABS(F2(M,N)).GE.F2CUT) THEN
          WRITE(IDER,46) M,N,F2(M,N)
      END IF
 520  CONTINUE
      WRITE(IDER,45) II
      DO 530  M=1,NS
      DO 530  N=1,M
      DO 530  P=1,N
      IF(DABS(F3(M,N,P)).GE.F3CUT) THEN
          WRITE(IDER,47) M,N,P,F3(M,N,P)
      END IF
 530  CONTINUE
      IF(NDER.LE.1) RETURN
      WRITE(IDER,45) II
      DO 540  M=1,NS
      DO 540  N=1,M
      DO 540  P=1,N
      DO 540  Q=1,P
      IF(DABS(F4(M,N,P,Q)).GE.F4CUT) THEN
          WRITE(IDER,48) M,N,P,Q,F4(M,N,P,Q)
      END IF
 540  CONTINUE
      WRITE(IDER,45) II
      RETURN
 1000 BACKSPACE I12
      GO TO 115
 1010 BACKSPACE I16
      GO TO 215
 1020 BACKSPACE I21
      GO TO 315
      END
C     //////////////////////////////////////////////////////////////////
      SUBROUTINE DIFB(NPOINT,NDER,NGUESS,S,E)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION E(NPOINT),S(NPOINT),H(5,6),G(5),X(5),DIFN(5),CUTN(5)
      COMMON/IO/IIN,IOUT,I12,I16,I21,IDER,ISCR1,ISCR2
      PARAMETER(HART=4.359814445D0,MAXIT=30)
      PARAMETER(ZERO=0.0D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0,FOUR=4.0D0)
      PARAMETER(FIVE=5.0D0,SIX=6.0D0)
    1 FORMAT(1X,'NPOINT MUST EXCEED 2.  EXECUTION TERMINATED.')
    2 FORMAT(/1X,'ENERGY POINTS'/)
    3 FORMAT(2F20.12)
    4 FORMAT(/1X,'INPUT GUESS FORCE CONSTANTS',//1X,'F3=',F20.8,5X,
     $    ' F4=',F20.8)
    5 FORMAT(//1X,'ITERATIONS FOR PARAMETERS',//2X,'ITER',10X,'E0',
     $     16X,'R0',16X,'F2')
    6 FORMAT(I5,F20.12,F16.8,F16.7)
    7 FORMAT(1X,'CONVERGENCE NOT REACHED IN',I5,' ITERATIONS.')
    8 FORMAT(//1X,'EQUILIBRIUM ENERGY=',F20.12,' HARTREES')
    9 FORMAT(1X,'EQUILIBRIUM DISTANCE=',F16.8,' A')
   10 FORMAT(1X,'QUADRATIC FORCE CONSTANT=',F16.7,' MDYNE/A')
   11 FORMAT(/1X,'INPUT GUESS FORCE CONSTANT',//1X,'F4=',F20.8)
   12 FORMAT(//1X,'ITERATIONS FOR PARAMETERS',//2X,'ITER',10X,'E0',
     $     16X,'R0',16X,'F2',14X,'F3')
   13 FORMAT(I5,F20.12,F16.8,F16.7,F16.6)
   14 FORMAT(1X,'CUBIC FORCE CONSTANT=',F16.6,' MDYNE/A**2')
   15 FORMAT(//1X,'ITERATIONS FOR PARAMETERS',//2X,'ITER',10X,'E0',
     $     16X,'R0',16X,'F2',14X,'F3',14X,'F4')
   16 FORMAT(I5,F20.12,F16.8,F16.7,F16.6,F16.5)
   17 FORMAT(1X,'QUARTIC FORCE CONSTANT=',F16.5,' MDYNE/A**3')
      CUTN(1)=1.0D-12
      CUTN(2)=1.0D-8
      CUTN(3)=1.0D-7
      CUTN(4)=1.0D-6
      CUTN(5)=1.0D-5
      IF(NDER.GE.1) GO TO 500
      IF(NPOINT.LT.3) THEN
         WRITE(IOUT,1)
         RETURN
      END IF
      WRITE(IOUT,2)
      DO 100  I=1,NPOINT
      READ(IIN,3) S(I),E(I)
      WRITE(IOUT,3) S(I),E(I)
  100 E(I)=E(I)*HART
      IF(NPOINT.NE.3) GO TO 120
      IF(NGUESS.NE.0) THEN
          READ(IIN,3) F3,F4
          WRITE(IOUT,4) F3,F4
      ELSE
          F3=ZERO
          F4=ZERO
      END IF
      R=(E(1)-E(2))/(E(1)-E(3))
      XX=(S(1)**2)*(ONE-R)-S(2)**2+R*S(3)**2
      XX=XX/(S(1)*(ONE-R)-S(2)+R*S(3))
      X(2)=XX/TWO
      XX=(S(1)-X(2))**2-(S(2)-X(2))**2
      X(3)=TWO*(E(1)-E(2))/XX
      X(1)=E(1)-X(3)*(S(1)-X(2))**2/TWO
      WRITE(IOUT,5)
      ITER=0
  106 ITER=ITER+1
      DO 102  I=1,3
      H(I,1)=ONE
      XX=S(I)-X(2)
      H(I,2)=-X(3)*XX-F3*(XX**2)/TWO-F4*(XX**3)/SIX
      H(I,3)=XX**2/TWO
      G(I)=X(1)+X(3)*(XX**2)/TWO+F3*(XX**3)/SIX+F4*(XX**4)/(SIX*FOUR)
  102 H(I,4)=E(I)-G(I)
      CALL FLIN (H,5,3,1,DET)
      ICONV=0
      DO 104  I=1,3
      X(I)=X(I)+H(I,4)
      DIFN(I)=DABS(H(I,4))
      IF(DIFN(I).GT.CUTN(I)) ICONV=1
  104 CONTINUE
      WRITE(IOUT,6) ITER,X(1)/HART,X(2),X(3)
      IF(ICONV.EQ.1.AND.ITER.LT.MAXIT) GO TO 106
      IF(ICONV.EQ.1) THEN
          WRITE(IOUT,7) MAXIT
      END IF
      X(1)=X(1)/HART
      WRITE(IOUT,8) X(1)
      WRITE(IOUT,9) X(2)
      WRITE(IOUT,10) X(3)
      GO TO 1000
  120 IF(NPOINT.NE.4) GO TO 140
      IF(NGUESS.NE.0) THEN
          READ(IIN,3) F4
          WRITE(IOUT,11) F4
      ELSE
          F4=ZERO
      END IF
      R=(E(1)-E(2))/(E(1)-E(3))
      XX=(S(1)**2)*(ONE-R)-S(2)**2+R*S(3)**2
      XX=XX/(S(1)*(ONE-R)-S(2)+R*S(3))
      X(2)=XX/TWO
      XX=(S(1)-X(2))**2-(S(2)-X(2))**2
      X(3)=TWO*(E(1)-E(2))/XX
      X(1)=E(1)-X(3)*(S(1)-X(2))**2/TWO
      X(4)=ZERO
      WRITE(IOUT,12)
      ITER=0
  122 ITER=ITER+1
      DO 124  I=1,4
      H(I,1)=ONE
      XX=S(I)-X(2)
      H(I,2)=-X(3)*XX-X(4)*(XX**2)/TWO-F4*(XX**3)/SIX
      H(I,3)=XX**2/TWO
      H(I,4)=XX**3/SIX
      G(I)=X(1)+X(3)*(XX**2)/TWO+X(4)*(XX**3)/SIX+F4*(XX**4)/(SIX*FOUR)
  124 H(I,5)=E(I)-G(I)
      CALL FLIN (H,5,4,1,DET)
      ICONV=0
      DO 126  I=1,4
      X(I)=X(I)+H(I,5)
      DIFN(I)=DABS(H(I,5))
      IF(DIFN(I).GT.CUTN(I)) ICONV=1
  126 CONTINUE
      WRITE(IOUT,13) ITER,X(1)/HART,X(2),X(3),X(4)
      IF(ICONV.EQ.1.AND.ITER.LT.MAXIT) GO TO 122
      IF(ICONV.EQ.1) THEN
          WRITE(IOUT,7) MAXIT
      END IF
      X(1)=X(1)/HART
      WRITE(IOUT,8) X(1)
      WRITE(IOUT,9) X(2)
      WRITE(IOUT,10) X(3)
      WRITE(IOUT,14) X(4)
      GO TO 1000
  140 IF(NPOINT.NE.5) GO TO 160
      R=(E(1)-E(2))/(E(1)-E(3))
      XX=(S(1)**2)*(ONE-R)-S(2)**2+R*S(3)**2
      XX=XX/(S(1)*(ONE-R)-S(2)+R*S(3))
      X(2)=XX/TWO
      XX=(S(1)-X(2))**2-(S(2)-X(2))**2
      X(3)=TWO*(E(1)-E(2))/XX
      X(1)=E(1)-X(3)*(S(1)-X(2))**2/TWO
      X(4)=ZERO
      X(5)=ZERO
      WRITE(IOUT,15)
      ITER=0
  142 ITER=ITER+1
      DO 144  I=1,5
      H(I,1)=ONE
      XX=S(I)-X(2)
      H(I,2)=-X(3)*XX-X(4)*(XX**2)/TWO-X(5)*(XX**3)/SIX
      H(I,3)=XX**2/TWO
      H(I,4)=XX**3/SIX
      H(I,5)=XX**4/(SIX*FOUR)
      G(I)=X(1)+X(3)*(XX**2)/TWO+X(4)*(XX**3)/SIX
     $       +X(5)*(XX**4)/(SIX*FOUR)
  144 H(I,6)=E(I)-G(I)
      CALL FLIN (H,5,5,1,DET)
      ICONV=0
      DO 146  I=1,5
      X(I)=X(I)+H(I,6)
      DIFN(I)=DABS(H(I,6))
      IF(DIFN(I).GT.CUTN(I)) ICONV=1
  146 CONTINUE
      WRITE(IOUT,16) ITER,X(1)/HART,X(2),X(3),X(4),X(5)
      IF(ICONV.EQ.1.AND.ITER.LT.MAXIT) GO TO 142
      IF(ICONV.EQ.1) THEN
          WRITE(IOUT,7) MAXIT
      END IF
      X(1)=X(1)/HART
      WRITE(IOUT,8) X(1)
      WRITE(IOUT,9) X(2)
      WRITE(IOUT,10) X(3)
      WRITE(IOUT,14) X(4)
      WRITE(IOUT,17) X(5)
  160 CONTINUE
  500 GO TO 1000
 1000 CONTINUE
      RETURN
      END
C     //////////////////////////////////////////////////////////////////
      SUBROUTINE FLIN(A,IDIM,IN,IM,DET)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     LINEAR SIMULTANEOUS EQUATION
C
C     A(IN*IN) * X(IN*IM) = B(IN*IM)
C
C     A & B SHOULD BE STORED ON A(IN*(IN+IM))
C     SOLUTION X WILL BE STORED ON B PART IN DIMENSION A.
C
      DIMENSION A(IDIM,1)
      PARAMETER (ZERO=0.0D0,ONE=1.0D0)
C
      N=IN
      NR=IM
      JMAX=N+NR
      SIGN=ONE
C M IS THE STAGE OF ELIMINATION
      DO 49 M=1,N
      TEMP=ZERO
      DO 41 I=M,N
      IF(M.GT.1)A(I,M)=A(I,M)-DOTX(A(I,1),IDIM,A(1,M),1,M-1)
      AVAL=A(I,M)
      IF(DABS(AVAL).LE.TEMP)GOTO 41
      TEMP=DABS(AVAL)
      IMAX=I
 41   CONTINUE
      IF(TEMP.LE.ZERO)GOTO 999
      IF(IMAX.EQ.M)GOTO 45
      SIGN=-SIGN
      DO 44 J=1,JMAX
      STOR=A(M,J)
      A(M,J)=A(IMAX,J)
      A(IMAX,J)=STOR
 44   CONTINUE
 45   CONTINUE
      JJ=M+1
      IF(JJ.GT.JMAX)GOTO 49
      IF(M.GT.1)GOTO 47
      DO 46 J=JJ,JMAX
      A(1,J)=A(1,J)/A(1,1)
 46   CONTINUE
      D=A(1,1)
      GOTO 49
 47   CONTINUE
      DO 48 J=JJ,JMAX
      A(M,J)=(A(M,J)-DOTX(A(M,1),IDIM,A(1,J),1,M-1))/A(M,M)
 48   CONTINUE
      D=D*A(M,M)
 49   CONTINUE
      IF(NR.EQ.0) RETURN
      DO 59 I=1,NR
      NPI=N+I
      DO 58 K=2,N
      J=N+1-K
      A(J,NPI)=A(J,NPI)-DOTX(A(J,J+1),IDIM,A(J+1,NPI),1,K-1)
 58   CONTINUE
 59   CONTINUE
      DET=D*SIGN
      RETURN
C ON ZERO PIVOT, SET DET=0.AND RETURN TO CALLING PROGRAM NOV 1972
 999  DET=ZERO
      RETURN
      END
C     //////////////////////////////////////////////////////////////////
      FUNCTION DOTX(A,NA,B,NB,N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(1),B(1)
      PARAMETER(ZERO=0.0D0)
      IAPT=1
      IBPT=1
      D=ZERO
      DO 10 I=1,N
      D=D+A(IAPT)*B(IBPT)
      IAPT=IAPT+NA
      IBPT=IBPT+NB
 10   CONTINUE
      DOTX=D
      RETURN
      END
