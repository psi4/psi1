      PROGRAM GUGACI
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
c Moved to PSI distribution disk on 020289 - clj.
C**********************************************************************
C   BY:  Curtis Janssen                            key: clj120788     *
C   DATE:  Dec. 7, 1988                                               *
C   REASON: Program searches for '# GUGAREF ' in file 5.  If found,   *
C           one free format integer is read which is the drt walk to  *
C           be used as the initial guess vector. If 0 is read, the    *
C           lowest energy configuration will be used as the reference.*
C**********************************************************************
C   BY:  RICHARD REMINGTON                         search:  c3-24-88  *
C   DATE:  MARCH  24,  1988                                           *
C   REASON: DECREASE CORE TO RUN IN 7MB ON 9370                       *
C**********************************************************************
C   NOTICE OF PROGRAM MODIFICATION                                    *
C      BY:  TJL                                                       *
C    DATE:  OCTOBER 20, 1986                                          *
C  REASON:  WFILE TO REPLACE ZFILE FOR FASTER ZEROING-WFILE IN PROGRAM*
C**********************************************************************
C   NOTICE OF PROGRAM MODIFICATION                                    *
C      BY:  RICHARD REMINGTON                                         *
C    DATE:  MAY   2,  1986                                            *
C  REASON:  ADD PRINT OPTION TO REDUCE OUTPUT DATA (THE 9TH OPTION)   *
C               A DEFAULT OF IPRINT = 0 GIVES MINIMUM OUTPUT          *
C**********************************************************************
C      BY:  RICHARD REMINGTON                                         *
C    DATE:  FEBRUARY 13, 1985                                         *
C  REASON:  CHANGE UNIT NUMBERS !! 2=>52, 03=99=>99, 06=96=>96/94     *
C  REASON:  CHANGE UNIT NUMBERS !! 8=>58, 04=94=>94                   *
C  REASON:  CHANGE UNIT NUMBERS !!12=>54, 05=95=>95                   *
C**********************************************************************
C CHANGES MADE IN 2 SEPARATE PLACES BY WESLEY ALLEN 2-27-85 TO        *
C REACTIVATE THE CALCULATION OF MULTIPLE ROOTS IN SUBROUTINE DAVIDS.  *
C**********************************************************************
C      BY:  RICHARD REMINGTON                                         *
C    DATE:  MARCH  7, 1985                                            *
C  REASON:  CALLS TO WFILE REPLACED BY CALLS TO ZFILE (ZFILE IN IOMR) *
C**********************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
C
c3-24-88 (For  7Mb)  REAL*8 Z(750000) ,CUTOF1,CUTOF2,CUTOF3
c3-24-88 (For 15Mb)  REAL*8 Z(1600000) ,CUTOF1,CUTOF2,CUTOF3
      REAL*8 Z(750000) ,CUTOF1,CUTOF2,CUTOF3
      INTEGER IZ(1)
      EQUIVALENCE (Z,IZ)
C
      COMMON /MATRIX/ CUTOF1,CUTOF2,NMULTP,NMULTD
C
      ITAPE3 = 3
      ITAPE6 = 6
      CALL TSTART(ITAPE3)
      CALL TSTART(ITAPE6)
      CALL NOUNFL
C
      CALL RFILE(54)
C
      CUTOF1=10.0D+00**(-10)
      CUTOF2=10.0D+00**(-11)
      NMULTP=0
      NMULTD=0
c3-24-88 (For  7Mb)  MAXI=INTOWP(750000)
c3-24-88 (For 15Mb)  MAXI=INTOWP(1600000)
      MAXI=INTOWP(750000)
C
      CALL CIMAIN(IZ,Z,MAXI)
C
      JCODE = 3
      CALL RCLOSE(ITAP52,JCODE)
      CALL RCLOSE(ITAP58,JCODE)
      CALL RCLOSE(ITAP54,JCODE)
      JCODE = 4
      CALL RCLOSE(ITAP99,JCODE)
C
      CALL TSTOP(ITAPE3)
      CALL TSTOP(ITAPE6)
C
      CALL EXIT
C
      END
      SUBROUTINE CIMAIN(IA,Z,MAXI)
C***********************************************************************
C       PROGRAM OPTIONS
C
C       1.  IGUESS=0,UNIT VECTOR BASED ON LOWEST DIAGONAL ELEMENT
C                 >0,READ IGUESS VECTORS FROM FILE 12 TO START.
C       2.  MXITER=MAXIMUM ITERATIONS PER ROOT SOUGHT(10 WITH 2 ROOTS
C                  GIVES 20 TOTAL).
C       3.  IROOTI=FIRST ROOT SOUGHT, DEFAULTS TO 1 WITHOUT STARTING
C                  VECTORS FOR LOWER ROOTS.
C       4.  NROOTS=NUMBER OF TOTAL ROOTS TO BE SOUGHT.
C
C       5.  NTOL  =CONVERGENCE CRITERION ON VECTOR=10**(-NTOL).
C
C       6.  RSTRT =RESTART OPTION,-1=FIRST ITERATION,SAVE RESTART DATA
C                                    ON FILE 105, 106 FOR SCRATCH.
C                                  0=NO RESTART TO BE ATTEMPTED.
C                                  1=ATTEMPTING RESTART FROM PRIOR RUN
C                                    REQUIRES FILE 105 FROM LAST RUN.
C
C       7.  I34X = 0 IF USE 3 & 4 EXTERNAL VECTORISED ROUTINES
C
C       8.  ILVFRM= VALUE TO SET LEVFRM TO IF NON-ZERO
C
C       9.  IPRINT= 0 FOR MINIMUM OUTPUT, = 1 AND HIGHER FOR MORE DATA
C
C
C***********************************************************************
C
C     FILE ASSIGNMENTS
C
C         5=INPUT FILE, SINGLE CARD I5 FORMAT
C         6=OUTPUT FILE
C        52=TRANSFORMED INTEGRALS
C        54=FINAL VECTOR(S),112 WORD LABEL + NUMBER OF WALKS LONG
C        58=DISTINCT ROW TABLE, A FEW 10,000 LONG AT MOST.
C        94=STORAGE FOR TRIAL VECTORS,(# WALKS)*(# ITERATIONS) LONG.
C        95=STORAGE FOR RESTART INFORMATION,ONLY IF IRSTRT.NE.0.
C        96=SCRATCH FOR INTERMEDIATE PRODUCTS, ONLY IF IRSTRT.NE.0.,
C           NUMBER OF WALKS LONG.
C        99=STORAGE FOR PRODUCTS,(# WALKS)*(# ITERATIONS) LONG.
C
C***********************************************************************
      IMPLICIT INTEGER (A-Z)
      INTEGER NUMINT,FCB2(16),FCB8(16),FCB12(16),FCB103(16),FCB104(16)
      INTEGER IVER(1)
      LOGICAL PAGEIN
      REAL*8 Z,X,REP,FZCORE,EGUESS,ECI,CNVERG,ACRCY,SQCDIF
      REAL*8 CZERO,DRTVER,CIVER
      REAL*8 TIME,TOTAL,SECS
      CHARACTER*2 ENTRY(20)
C
      INTEGER NR3,NR6,NW6
      COMMON /STATPG/ IR3(100),NR3(100),IR6(100),NR6(100),IW6(100)
     #,               NW6(100),IPGS(100),IPGD(100),IPGO(100),IPGIJ(100)
     #,               IPGOUT(100)
C     COMMON /LEVEL/  ILEV
C
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF,I34X
      COMMON /ALL/  X(3),ARR,IX(6),LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
      COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
     #,             NUMSYM(8)
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /LBLS/ LBLINT(26),LBLDRT(26),CIVER,DRTVER
      COMMON /RSTRT/IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /COUNT/  ICOUNT,IXX4,IXX5,IXX6,IXX8,IWW4,IWW5,IWW6,IWW8
     #,               IWX7,IXW9,IXY3,IXY16,IXY18,IXY22,IWY2,IWY15,IWY17
     #,               IWY21,IYX20,IYW19
      COMMON /COUNT2/ IENTRY(20),TIME(20)
C*
      COMMON /XX4X/   NIJVIR,NREFS
C
      DIMENSION IA(MAXI),Z(1)
      DIMENSION ILBM(26),ILBN(26),III(3)
C
      EQUIVALENCE (DRTVER,IVER)
C
      DATA ENTRY /'WW','XX','YY','XW','WX','WY','YX','YW','XY','ZY'
     #,           'WZ','XZ','YZ','4X','4X','4X','ZZ','4I','I1','20'/
C
      ITAPE3=3
      ITAPE5=5
      ITAPE6=6
      ITAP52=52
      ITAP54=54
      ITAP58=58
      ITAP94=94
      ITAP95=95
      ITAP96=94
      ITAP99=99
C
      DO 2 I=1,20
         IENTRY(I)=0
         TIME(I)=0.0D+00
    2 CONTINUE
CTJL  OPEN (UNIT=ITAPE6,OPENMODE='A')
      ICOUNT=0
      ICNTD=0
      MAXR=MAXI/INTOWP(1)
C
      CALL IZERO(IA,MAXI)
C
C     WRITE (ITAPE3,'(' PLEASE ENTER MAXR')')
C     READ (3,*) MAXR
      CIVER=2.260582
      WRITE(ITAPE6,1)
    1 FORMAT(1H )
    4 FORMAT(/,/,/,12X,' >>>>>  GUGA-CI CALCULATION COMPLETED  <<<<< ')
CCRBR WRITE(ITAPE6,5)
    5 FORMAT(/,1H ,8('**********')/)
      WRITE(ITAPE6,10)
   10 FORMAT(1H ,12X,'SHAPE DRIVEN GRAPHICAL UNITARY GROUP CI PROGRAM')
      WRITE(ITAPE6,11)
   11 FORMAT(1H ,12X,'************ MATRIX REFORMULATION *************')
      WRITE(ITAPE6,12)
   12 FORMAT(1H ,25X,'WRITTEN BY PAUL SAXE')
      WRITE(ITAPE6,13)
   13 FORMAT(1H ,14X,'BASED ON ORIGINAL SDGUGA PROGRAM WRITTEN BY')
      WRITE(ITAPE6,14)
   14 FORMAT(1H ,15X,'PAUL SAXE, DOUGLAS J. FOX AND N. C. HANDY',//,
     1 4X,' XX-4X, WW-4X, WW, XX, WX, XW, WY, YW, XY, YX ENTRIES',
     2 ' VECTORIZED')
CCRBR WRITE(ITAPE6,5)
      WRITE(ITAPE6,15) MAXR
   15 FORMAT(/,/,1H ,'DIMENSION OF REAL COMMON IS',I10,/)
C
C     -----READ IN OPTIONS FOR THIS RUN -----
C
      CALL LOCATE(ITAPE5,'# CI #####',IERROR)
C
      IF (IERROR.NE.0) THEN
         WRITE(ITAPE6,700)
  700    FORMAT (' # CI ##### WARNING: NO INPUT FOUND, USING DEFAULTS')
         IGUESS=0
         IPRINT=0
         MXITER=0
         IROOTI=0
         NROOTS=0
         NTOL=0
         IRSTRT=0
         I34X=0
         ILVFRM=0
      ELSE
         READ(ITAPE5,16) IGUESS,MXITER,IROOTI,NROOTS,NTOL,IRSTRT
     #   ,                  I34X,ILVFRM,IPRINT
      END IF
   16 FORMAT(10I5)
      IF(NTOL.LE.0) NTOL=10
      CNVERG=10.0D+00**(-NTOL)
      IF(NROOTS.EQ.0) NROOTS=1
      IF(MXITER.EQ.0) MXITER=16
      MXITER=MXITER*NROOTS
      NDVDMX=MXITER+IGUESS+1
      IF(IROOTI.EQ.0) IROOTI=1
      IF(IROOTF.EQ.0) IROOTF=IROOTI+NROOTS-1
      WRITE(ITAPE6,17) IGUESS,MXITER,IROOTI,NROOTS,NTOL,IRSTRT,
     #I34X,ILVFRM,IPRINT
   17 FORMAT(1H ,'OPTIONS: GUESS  MXITER  ROOTI  NROOT  NTOL'
     *,  '   RSTRT  I34X  ILVFRM  PRINT ',/,7X,9I7,/)
CTJL  CALL RFILE(ITAP54)
CTJL  CALL SREW(ITAP54)    RFILE REWINDS THE FILE
C
C     ----- READ IN HEADER INFORMATION FROM DRTTAPE -----
C
      WRITE(ITAPE3,20)
   20 FORMAT(1H ,'READ IN DISTINCT ROW TABLE')
      CALL RFILE(ITAP58)
CTJL  CALL SREW(ITAP58)
      CALL WREADW(ITAP58,IVER,INTOWP(1),1,END)
      CALL WREADW(ITAP58,LBLDRT,26,END,END)
      CALL WREADW(ITAP58,NBF,1,END,END)
      CALL WREADW(ITAP58,NSYM,1,END,END)
      CALL WREADW(ITAP58,NORBS,1,END,END)
      CALL WREADW(ITAP58,NROWS,1,END,END)
      CALL WREADW(ITAP58,NROWS4,1,END,END)
      CALL WREADW(ITAP58,NLEVS,1,END,END)
      CALL WREADW(ITAP58,NREFS,1,END,END)
      CALL WREADW(ITAP58,NROWOC,1,END,END)
      END=END+1
      CALL WREADW(ITAP58,NWKS,1,END,END)
      END=END+2
      CALL WREADW(ITAP58,ORBFRM,1,END,END)
      CALL WREADW(ITAP58,SYMORB,1,END,END)
      CALL WREADW(ITAP58,NUMIJ,1,END,END)
      CALL WREADW(ITAP58,NGROUP,1,END,END)
      END=END+1
      CALL WREADW(ITAP58,NMAX,1,END,END)
      CALL WREADW(ITAP58,BMAX,1,END,END)
      CALL WREADW(ITAP58,NIJVIR,1,END,END)
      END=END+1
C
C
      NMAX2=NMAX+NMAX
      NWKS2=NWKS+NWKS
      LVFRM1=ORBFRM
      LEVFRM=LVFRM1+1
C
C
      IF (ILVFRM.NE.0) LEVFRM=ILVFRM
C
C
      IF(IRSTRT.GT.0) GO TO 30
      NSECT=I2SEC(112)+I2SEC(INTOWP(NWKS)*(MXITER+1)*(IROOTF-
     #IROOTI+1))
      WRITE(ITAPE3,21)NSECT
   21 FORMAT(1X,I6,' SECTORS OF SCRATCH FILES WILL BE ZEROED.')
C  WFILE IS A SPECIAL OPEN FOR RANDOM FILES, THE ENTIRE LENGTH OF THE
C  FILE IS WRITTEN TO ZERO. NSECT IS THE LENGTH IN 112 WORD SECTORS.
C  WFILE WILL NOW BE REPLACED BY ZFILE---RBR 3-7-85
C******** WFILE NOW ONLY ZEROS OUT THE SPECIFIED SECTORS ----- TJL
      CALL RFILE(ITAP99)
      CALL RFILE(ITAP94)
      CALL WFILE(ITAP99,NSECT,IA,MAXI-10)
      CALL WFILE(ITAP94,NSECT,IA,MAXI-10)
C***************** TJL
CTJL  WRITE(ITAPE3,*) ' RFILED ITAP99 AND ITAP94 '
CTJL  WRITE(ITAPE3,*) ' ITAP99,ITAP94,NSECT = ',ITAP99,ITAP94,NSECT
CTJL  CALL SREW(ITAP99)
CTJL  CALL SREW(ITAP94)
CTJL  DO 765 I=1,SEC2I(500/INTOWP(1))
CTJL  WRITE(ITAPE3,*) ' IN FIRST DO LOOP I = ',I
CTJL5 Z(I)=0.0D+00
CTJL  DO 766 I=1,NSECT/500
CTJL  WRITE(ITAPE3,*) ' IN SECOND DO LOOP I = ',I
C 766 CALL SWRIT(ITAP99,Z,SEC2I(500))
      N=SEC2I(NSECT-((NSECT/500)*500))
CTJL  WRITE(ITAPE3,*) ' N,NSECT,SEC2I = ',N,NSECT,SEC2I(1)
CTJL  IF (N.GT.0) CALL SWRIT(ITAP99,Z,N)
CTJL  DO 767 I=1,NSECT/500
C 767 CALL SWRIT(ITAP94,Z,SEC2I(500))
CTJL  IF (N.GT.0) CALL SWRIT(ITAP94,Z,N)
C
C
   30 WRITE(ITAPE6,31)LBLDRT
   31 FORMAT(/,1H ,'LABEL FROM DRT :       ',26A3)
      WRITE(ITAPE6,32)NWKS
   32 FORMAT(1H ,'NUMBER OF CONFIGURATIONS     = ',I10)
      WRITE(ITAPE6,33)NBF
   33 FORMAT(1H ,'NUMBER OF BASIS FUNCTIONS    = ',I10)
      WRITE(ITAPE6,34) NORBS
   34 FORMAT(1H ,'NUMBER OF ALLOWED ORBITALS   = ',I10)
      WRITE(ITAPE6,35)LVFRM1
   35 FORMAT(1H ,'FERMI LEVEL IS ',I5 )
C
C     ----- OPEN MO INTEGRAL TAPE -----
C
      CALL RFILE(ITAP52)
CTJL  CALL SREW(ITAP52)
      CALL GETINT(ACRCY,ILBM,ILBN)
C
C     CALCULATE POINTERS INTO BLANK COMMON
C
      ARC=1
C*    WEIGHT=ARC+NROWS4
      IJXX=ARC+NROWS4
      KLXX=IJXX+NUMIJ
      NKLXX=KLXX+NIJVIR
      IJWW=NKLXX+NSYM*ORBFRM
      KLWW=IJWW+NUMIJ
      NKLWW=KLWW+NIJVIR
      IST4X=NKLWW+NSYM*ORBFRM
      LEN4X=IST4X+NORBS
      WEIGHT=LEN4X+NORBS
C*
      WTW=WEIGHT+NROWS4
      WTX=WTW+NSYM*LVFRM1
      WTY=WTX+NSYM*LVFRM1
      WAB=WTY+LVFRM1
      NLWKS=WAB+LVFRM1
      AVAL=NLWKS+NROWS
      BVAL=AVAL+NROWS
      ROWSYM=BVAL+NROWS
      IJADD=ROWSYM+NROWS
      IJGRP=IJADD+NUMIJ
      KADD=IJGRP+NUMIJ
      LADD=KADD+SYMORB
      JMXNXT=LADD+SYMORB
      JMNNXT=JMXNXT+NORBS
      ININT=JMNNXT+NORBS
      INEXT=ININT+NORBS
      NINGRP=INEXT+NORBS
      IMNGRP=NINGRP+NGROUP
      IMXGRP=IMNGRP+NGROUP
      JMNGRP=IMXGRP+NGROUP
      JMXGRP=JMNGRP+NGROUP
      ORBSYM=JMXGRP+NGROUP
      ISEGM=ORBSYM+NORBS
      JSEGM=ISEGM+NLEVS
      IMAIN=JSEGM+NLEVS
      ISUB=IMAIN+NLEVS
      IUWKMN=ISUB+NLEVS
      IUWKSB=IUWKMN+NLEVS
      ITRACK=IUWKSB+NLEVS
      LMIN=ITRACK+NLEVS
      HDWGT=LMIN+NLEVS
      HDSEG=HDWGT+NLEVS
      HDPNT=HDSEG+NLEVS
      ACOEF=IADTWP(HDPNT+NLEVS)
      BCOEF=ACOEF+NLEVS
      ROOT=BCOEF+NLEVS
      DVDVEC=ROOT+NROOTS
      DVDMAT=DVDVEC+(NROOTS+1)*NDVDMX
      LOWTRI=NDVDMX*(NDVDMX+1)/2
      LENI=WPADTI(DVDMAT+LOWTRI)
      WRITE(ITAPE6,41) LENI
   41 FORMAT(1H ,'LENGTH OF INTEGER COMMON     =',I10,/)
      IF(LENI.GT.MAXI) GO TO 930
      IF(IPRINT.GT.1) WRITE(ITAPE6,42)
   42 FORMAT(1H ,'READ DRT FILE')
      CALL GETDRT(IA(ISEGM),IA(AVAL),IA(BVAL)
     #,        IA(ROWSYM),IA(ARC),IA(NLWKS)
     #,        IA(WEIGHT),IA(WAB),IA(WTW),IA(WTX),IA(WTY)
     #,                   IA(KADD),IA(LADD),IA(IJADD),IA(IJGRP)
     #,        IA(ININT),IA(INEXT),IA(JMNNXT),IA(JMXNXT),IA(NINGRP)
     #,        IA(ORBSYM),IA(IMNGRP),IA(IMXGRP),IA(JMNGRP),IA(JMXGRP)
     #,        IA(IJXX),IA(KLXX),IA(NKLXX),IA(IJWW),IA(KLWW),IA(NKLWW)
     #,        END)
      NWKSMX=NWKS
      LN=0
      DO 43 I=1,NSYM
         IF (MINSYM(I).GE.1000) NUMSYM(I)=0
         IF (MINSYM(I).LT.1000) NUMSYM(I)=MAXSYM(I)-MINSYM(I)+1
         IF (NUMSYM(I).GT.LN) LN=NUMSYM(I)
   43 CONTINUE
      LNSQ=LN**2
      INTS=IADTWP(LENI)
      IINTS=WPADTI(INTS)
C
      CALL INBLK(Z(INTS),NMAX)
      CALL NXTBLK
C
      CI=INTS+NMAX
      SI=CI+LNSQ
      CJ=SI+LNSQ
      SJ=CJ+LNSQ
      H1=SJ+LNSQ
      H2=H1+LNSQ
      SIGMA=H2+LNSQ
      VECTOR=SIGMA+NWKS
      LENR=VECTOR+NWKS
C
      WRITE (ITAPE6,701) LENR,MAXR
  701 FORMAT (/,' NEED',I10,' REAL WORDS OF CORE TO AVOID'
     #,     ' PAGING',/,' HAVE',I10,' REAL WORDS',/)
C
      IF(LENR.LT.MAXR) GO TO 50
      WRITE(ITAPE6,45)
   45 FORMAT(1H ,'INSUFFICIENT CORE TO HOLD ALL VECTORS. PAGING WILL'
     *,' BE TRIED,')
      NWKSMX=(MAXR-SIGMA)/2
      IF(2*NLWKMX.GT.NWKSMX) GO TO 940
      WRITE(ITAPE6,46) NWKSMX
  46  FORMAT(1X,I8,' ELEMENTS OF THE VECTOR CAN BE HELD AT ONCE.')
      VECTOR=SIGMA+NWKSMX
      LENR=VECTOR+NWKSMX
      WRITE (ITAPE6,49) LENR
  49  FORMAT (1X,' AMOUNT OF REAL CORE USED:',I8)
  50  CONTINUE
      CALL INITPG(Z(VECTOR),Z(SIGMA))
      CALL INITDV(Z(VECTOR),Z(SIGMA), Z(ROOT), Z(DVDVEC), Z(DVDMAT)
     *,           NDVDMX)
      CALL INITLP
      CALL INITDG(Z(INTS),Z(SIGMA),IA(IJADD),IA(KADD),IA(LADD)
     *,           IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
      CALL INITEX(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
      CALL INITX2(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
      CALL INITST(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM)
     *,           Z(CI),Z(SI),Z(CJ),Z(SJ),Z(H1),Z(H2)
     #,           IA(IJXX),IA(NKLXX),IA(IJWW),IA(NKLWW)
C
     #,           IA(KLXX),IA(KLWW))
      CALL INIMAT(Z(INTS),IA(IJADD),IA(KADD),IA(LADD),Z(H1),Z(H2))
      CALL INIT4X(Z(INTS),Z(VECTOR),Z(SIGMA),IA(IJADD),IA(KADD)
     *,           IA(LADD),IA(WTW),IA(WTX),IA(WTY),IA(WAB),IA(ORBSYM))
      CALL START(Z(DVDMAT),Z(INTS),Z(SIGMA),Z(VECTOR))
      IF(IRSTRT.LE.0 .AND. IPRINT.GT.0) WRITE(ITAPE6,70)
   70 FORMAT(/,1H ,'CALCULATE DIAGONAL ELEMENTS')
      CALL LOOPYD(IA(BVAL),IA(NLWKS)                      ,IA(WEIGHT)
     *,           IA(AVAL),IA(IJADD),IA(IJGRP),IA(KADD),IA(LADD)
     *,           IA(INEXT),IA(ARC),IA(JMNNXT),IA(JMXNXT),IA(ROWSYM)
     *,           IA(ORBSYM)                    ,IA(ISEGM)
     *,           IA(JSEGM),IA(IMAIN),IA(ISUB),IA(IUWKMN),IA(IUWKSB)
     *,           IA(ITRACK),IA(LMIN), Z(ACOEF), Z(BCOEF)
     *,           IA(HDWGT),IA(HDSEG),IA(HDPNT),IA(IMXGRP),IA(IMNGRP)
     #,           IA(JMXGRP),IA(JMNGRP))
      WRITE(ITAPE6,5)
CCRBR WRITE(ITAPE6,1)
      CALL FDIAG(Z(INTS),Z(VECTOR),Z(SIGMA),Z(DVDMAT))
      IF(ITER.EQ.0)WRITE(ITAPE6,5)
      IF(ITER.EQ.0)WRITE(ITAPE6,80)
   80 FORMAT(1H ,'FIND THE ROOTS BY DAVIDSON',1H','S METHOD',/)
      CALL ROOTS(Z(INTS),Z(VECTOR),Z(SIGMA),Z(ROOT))
      WRITE(ITAPE6,4)
C     WRITE(ITAPE6,90)
C  90 FORMAT(1H0,5X,'TIMING INFORMATION')
CC FINAL TIMING VALUES ARE RETURNED HERE
C     WRITE (ITAPE6,891) ICOUNT,IXX4,IXX5,IXX6,IXX8,IWW4,IWW5,IWW6,IWW
C    #,                  IWX7,IXW9,IXY3,IXY16,IXY18,IXY22,IWY2,IWY15
C    #,                  IWY17,IWY21,IYX20,IYW19
C 891 FORMAT (//,' ICOUNT IS:',I8,/
C    #,                        T15,'XX ENTRIES, ISEG 4, 5, 6, 8:',4I8,/
C    #,                        T15,'WW ENTRIES, ISEG 4, 5, 6, 8:',4I8,/
C    #,                        T15,'WX ENTRIES, ISEG 7         :',I8,/
C    #,                        T15,'XW ENTRIES, ISEG 9         :',I8,/
C    #,                        T15,'XY ENTRIES, ISEG 3,16,18,22:',4I8,/
C    #,                        T15,'WY ENTRIES, ISEG 2,15,17,21:',4I8,/
C    #,                        T15,'YX ENTRIES, ISEG 20        :',I8,/
C    #,                        T15,'YW ENTRIES, ISEG 19        :',I8)
C     TOTAL=0.0D+00
C     DO 95 I=1,20
C     TOTAL=TOTAL+TIME(I)
C  95 CONTINUE
C     WRITE (ITAPE6,892) TOTAL,(ENTRY(I),IENTRY(I),TIME(I)
C    #,                   TIME(I)/TOTAL*100,I=1,20)
C 892 FORMAT(1H1,'  ENTRIES AND TIMES IN SECONDS',F10.3,//,(T5,A2,I8
C    #,       F10.3,F7.2))
CC
C     WRITE (ITAPE6,893) (I-1,IPGS(I),IPGD(I),IPGO(I),IPGIJ(I),IPGOUT(
C    #,                   I=NLEVS,2,-1)
C 893 FORMAT(1H1,'  PAGING SUMMARY: CALLS TO ROUTINES BY LEVELS',//
C    #,     '     LEVEL   PAGES   PAGED   PAGEO  PAGEIJ  PAGEOUT'
C    #,     //,(6I8))
C     WRITE (ITAPE6,894) (I-1,IR3(I),NR3(I)/2,NR3(I)/(IR3(I)*2)
C    #,                      IR6(I),NR6(I)/2,NR6(I)/(IR6(I)*2)
C    #,                      IW6(I),NW6(I)/2,NW6(I)/(IW6(I)*2)
C    #,                   I=NLEVS,2,-1)
C 894 FORMAT(1H1,'  PAGING SUMMARY: REAL NUMBERS TRANSFERRED PER LEVEL'
C    #,//,'                 VECTOR READS                    SIGMA READS'
C    #,         '------------------------WRITES'
C    #,   /,'  LEVEL  ',3('     NUMBER     #TRANSFERRED      AVERAGE  ')
C    #,       /,(I5,9I14))
C     DO 895 I=2,NLEVS
C     IR3(1)=IR3(1)+IR3(I)
C     NR3(1)=NR3(1)+NR3(I)/2
C     IR6(1)=IR6(1)+IR6(I)
C     NR6(1)=NR6(1)+NR6(I)/2
C     IW6(1)=IW6(1)+IW6(I)
C     NW6(1)=NW6(1)+NW6(I)/2
C 895 CONTINUE
C     WRITE (ITAPE6,896) IR3(1),NR3(1),IR6(1),NR6(1),IW6(1),NW6(1)
C 896 FORMAT (/,5X,3(2I14,14X))
C
CTJL  CALL CPUTIM(SECS)
CTJL  MINS=SECS/60
CTJL  HRS=MINS/60
CTJL  SECS=SECS-MINS*60
CTJL  MINS=MINS-HRS*60
CTJL  WRITE (ITAPE6,778) HRS,MINS,SECS
C 778 FORMAT (//,' CALCULATION TOOK ',I2,':',I2,':',F6.3,/)
CTJL  WRITE(ITAPE6,5)
      RETURN
C
C     ----- ERROR HANDLING -----
C
CC920 WRITE(ITAPE6,925)NORBS,NORB2
CC925 FORMAT(' NUMBER OF ORBITALS DOES NOT MATCH ',2I10)
CCRBR CALL MABORT   VARIABLE NORB2 ONLY APPEARS ONCE--ABOVE
  930 WRITE(ITAPE6,935)LENI
  935 FORMAT(' INSUFFICIENT SPACE IN INTEGER BLANK COMMON NEED',I10,
     *' WORDS.')
      CALL MABORT
  940 WRITE(ITAPE6,945)4*NLWKMX+SIGMA
  945 FORMAT(' INSUFFICIENT SPACE IN BLANK COMMON NEED',I10,' WORDS.')
      CALL MABORT
      END
      SUBROUTINE GETINT(ACRCY,ILBL,ILBM)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER REFWLK,SYMORB,BMAX,ORBFRM
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
C
      DIMENSION ILBL(20),ILBM(26)
C
      CALL DCDLBL(ITAP52,ILBL,ILBM,NGRPS,NMAX,NSYM,ACRCY,FZCORE,REP)
      WRITE(ITAPE6,14)ILBL
  14  FORMAT(/,1H ,'LABEL FROM INTEGRALS : ',20A4)
      WRITE(ITAPE6,15)NSYM
  15  FORMAT(1X,'THE NUMBER OF SYMMETRY TYPES =',I10)
      WRITE(ITAPE6,16)NMAX
  16  FORMAT(1X,'THE INTEGRAL GROUP SIZE      =',I10)
      WRITE(ITAPE6,17)NGRPS
  17  FORMAT(1X,'THE NUMBER OF THESE GROUPS   =',I10)
      IF(NGROUP.NE.NGRPS) GO TO 900
      WRITE(ITAPE6,18)
  18  FORMAT(/)
      WRITE(ITAPE6,19)FZCORE
      WRITE(ITAPE6,20)REP
      WRITE(ITAPE6,21)ACRCY
  19  FORMAT(1H ,'FROZEN CORE ENERGY           = ',F14.8)
  20  FORMAT(1H ,'NUCLEAR REPULSION            = ',F14.8)
  21  FORMAT(1H ,'LOOP CUTOFF VALUE            = ',E14.4,/)
      CALL RGETSA(ITAP52,INTSRT)
      RETURN
C
C     ----- ERROR HANDLING -----
C
 900  WRITE(ITAPE6,910) NGRPS,NGROUP
 910  FORMAT(' IN GETINT GROUPS DO NOT MATCH NGRPS=',I6,' NGROUP=',I6)
      CALL MABORT
      END
      SUBROUTINE INBLK(AINT,NMAX)
      REAL*8 AINT
CDB   REAL*8 S
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      DIMENSION AINT(NMAX)
      RETURN
C
C-----------------------------------------------------------NXTBLK
C
      ENTRY NXTBLK
C
      CALL SREAD(ITAP52,AINT,INTOWP(NMAX))
CDB   S=0.0D+00
CDB   DO 1 I=1,NMAX
CDB      S=S+ABS(AINT(I))
CDB 1 CONTINUE
CDB   WRITE (ITAPE6,'(' --IN NXTBLK, SUM IS',G20.10)') S
C     WRITE (ITAPE6,2) (AINT(I),I=1,NMAX)
C   2 FORMAT (1X,5(1PE15.5))
      RETURN
      END
      SUBROUTINE INITDV(C,S,ROOT,E,A,NDVDMX)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 Z,C(NWKSMX),S(NWKSMX)
      REAL*8 ROOT(NROOTS),E(NDVDMX,NROOTS),A(LOWTRI)
      INTEGER FWORDC,FWORDS
      LOGICAL CONVGD
      CHARACTER*50 MSG
C
      REAL*8 CSV(361)
C
C
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /LBLS/ IDENT(26),LBLDRT(26),CIVER,DRTVER
      COMMON /RSTRT/IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /MATRIX/ CUTOF1,CUTOF2,NMULTP,NMULTD
C
      INTEGER REFWLK,FWORD,OFFSET,FWORD1,FWORD2,BMAX,ORBFRM
      LOGICAL PAGEIN
C
      SMALL=0.0D0
C     WRITE(ITAPE3,701)
C 701 FORMAT (' WHAT DO YOU WANT FOR SMALL?')
C     READ (9,*) SMALL
C
      CALL ZERO(A,LOWTRI)
C
      NPASS=(NWKS-1)/NWKSMX+1
      NWKMX2=NWKSMX*2
      NWORDL=NWKS2-(NPASS-1)*NWKMX2
      E(1,NROOTS+1)=1.0D+00
      SQCDIF=1.0D+00
      RETURN
C
C------------------------------------------------------DAVIDSON
C
      ENTRY DAVIDS
C
C  CREATE NEXT ROW OW SMALL MATRIX
C  GET DIAGONAL ELEMENT CONTRIBUTION TO SMALL MATRIX
      EOLD=ECI
      OFFSET=1
      NWORD=NWKMX2
CC
C
C
C     ----- NOW CORRECT FOR NON-ORTHOGONALITY OF TRIAL VECTOR -----
C
      OFFSET=NWKS2*(NDVDIT-1)+1
      FWORD1=1
C
      MAXVEC=NDVDIT-1
      DO 95 IVECNO=1,MAXVEC
         NWORD=NWKMX2
         FWORD=FWORD1
         FWORD2=OFFSET
         Z=0.0D+00
         DO 80 K=1,NPASS
            IF (K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/INTOWP(1)
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,FWORD2)
            Z=Z-DOT(S,C,NLOOP)
   80    CONTINUE
C        WRITE (ITAPE6,81) Z
   81    FORMAT (' Z=',F15.10)
C
C        ----- CORRECT TRIAL VECTOR FOR NON-ORTHOGONALITY -----
C
         NWORD=NWKMX2
         FWORD=FWORD1
         FWORD2=OFFSET
         ZNORM=0.0D+00
         DO 83 K=1,NPASS
            IF (K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/INTOWP(1)
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,JUNK)
            CALL VEWPSX(C,C,S,Z,NLOOP)
            IF (IVECNO.EQ.MAXVEC) ZNORM=ZNORM+DOT(C,C,NLOOP)
            CALL WWRITW(ITAP99,C,NWORD,FWORD2,FWORD2)
   83    CONTINUE
C
C        ----- CORRECT PRODUCT VECTOR SIMILARLY -----
C
         NWORD=NWKMX2
         FWORD=FWORD1+NWKS2
         FWORD2=OFFSET+NWKS2
         DO 85 K=1,NPASS
            IF (K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/INTOWP(1)
            CALL WREADW(ITAP94,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP94,C,NWORD,FWORD2,JUNK)
            CALL VEWPSX(C,C,S,Z,NLOOP)
            CALL WWRITW(ITAP94,C,NWORD,FWORD2,FWORD2)
   85    CONTINUE
C
         FWORD1=FWORD1+NWKS2
   95 CONTINUE
C
C     ------ NOW CORRECT VECTORS FOR NORMALIZATION -----
C
      IF (NDVDIT.LE.1) GO TO 99
      OFFSET=NWKS2*(NDVDIT-1)+1
      FWORDC=OFFSET
      FWORDS=OFFSET+NWKS2
C     WRITE (ITAPE6,98) ZNORM
   98 FORMAT(' NORM OF ORTHOGONALIZED TRIAL VECTOR IS:',F18.12)
      IF (ZNORM.EQ.0.0D+00) THEN
           WRITE(ITAPE6,*) ' INITDV: ZERO NORM'
           CALL MABORT
      END IF
      ZNORM=1.0D+00/DSQRT(ZNORM)
      NWORD=NWKMX2
      DO 97 IPASS=1,NPASS
         IF (IPASS.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/INTOWP(1)
         CALL WREADW(ITAP99,C,NWORD,FWORDC,JUNK)
         CALL WREADW(ITAP94,S,NWORD,FWORDS,JUNK)
         DO 96 I=1,NLOOP
            C(I)=C(I)*ZNORM
            S(I)=S(I)*ZNORM
   96    CONTINUE
         CALL WWRITW(ITAP99,C,NWORD,FWORDC,FWORDC)
         CALL WWRITW(ITAP94,S,NWORD,FWORDS,FWORDS)
   97 CONTINUE
   99 CONTINUE
C
C
C
      OFFSET=1
      NWORD=NWKMX2
      DO 140 K=1,NPASS
         IF(K.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/2
         FWORD=OFFSET
         CALL WREADW(ITAP94,S,NWORD,FWORD,LWORD)
         FWORD=NWKS2*(NDVDIT-1)+OFFSET
         CALL WREADW(ITAP99,C,NWORD,FWORD,LWORD)
         DO 100 J=1,NLOOP
  100    S(J)=S(J)*C(J)
C   ADD TO MOST CURRENT SIGMA TO FORM FULL PRODUCT
         FWORD=NWKS2*NDVDIT+OFFSET
         CALL WREADW(ITAP94,C,NWORD,FWORD,LWORD)
         DO 110  J=1,NLOOP
  110    S(J)=S(J)+C(J)
C
C   FORM SUPPLEMENTS TO C(I).H.C(J)
C
         FWORD=OFFSET
         KSIZE=(NDVDIT-1)*NDVDIT/2
         DO 130 I=1,NDVDIT
            CALL WREADW(ITAP99,C,NWORD,FWORD,LWORD)
            FWORD=FWORD+NWKS2
            Z=0.0D+00
            KSIZE=KSIZE+1
            Z=Z+DOT(C,S,NLOOP)
  130    A(KSIZE)=Z+A(KSIZE)
         OFFSET=OFFSET+NWORD
  140 CONTINUE
CX
C     PRINT *,' AFTER 140 CONTINUE'
CX
C
C   FIND ENERGY AT THIS ITERATION FROM SMALL MATRIX
C
      IF (NDVDIT.LE.1) GO TO 180
C
      KSIZE=0
      DO 150 I=1,NDVDIT
         DO 150 J=1,I
            KSIZE=KSIZE+1
  150 C(KSIZE)=A(KSIZE)
      NX=NDVDIT
C
C     PRINT *,' CALLING GIVENS'
      CALL GIVENS(NX,NROOTS,NDVDMX,C,C(KSIZE+1),ROOT,E)
C     PRINT *,' AFTER GIVENS'
C
      Z=0.0D+00
      DO 160 I=1,NDVDIT
         Z=Z+E(I,NROOT)*E(I,NROOTS+1)
  160 E(I,NROOTS+1)=E(I,NROOT)
      SQCDIF=ABS(1.0D+00-ABS(Z))
      ECI=ROOT(NROOT)+FZCORE+REP
      DELTA=ECI-EOLD
C     WRITE(9     ,170)NROOT,ITER,ECI,DELTA,SQCDIF
      WRITE(ITAPE6,170)NROOT,ITER,ECI,DELTA,SQCDIF
  170 FORMAT(1X,'ROOT',I3,' ITER',I3,' ENERGY',G17.8 ,'DELTA ',E9.3
     *,' SQCDIF ',E9.3)
C****
      GO TO 190
  180 E(1,1)=1.0D+00
      ROOT(1)=A(1)
C
C   CREATE NEW CORRECTION VECTOR
C
  190 CONTINUE
C     PRINT *,'  PASSED 190'
      CONVGD=SQCDIF.LT.CNVERG
      CALL VECOUT(C,S,E,NDVDMX,CONVGD)
C
C
CWA INTERCHANGE THE COMMENTING OF THESE 2 LINES TO DEACTIVATE
CWA THE CALCULATION OF MULTIPLE ROOTS.
      IF(SQCDIF.GT.CNVERG) GO TO 200
CWA   GO TO 200
 7878 CONTINUE
      ICNVG=0
      IF(NROOT.EQ.IROOTF) RETURN
      NROOT=NROOT+1
      DO 195 I=1,NDVDIT
  195 E(I,NROOTS+1)=E(I,NROOT)
      ICNVG=-1
  200 NWORD=NWKMX2
C
      RENORM=0.0D+00
      ROOTN=ROOT(NROOT)
      OFFSET=1
      DO 260 K=1,NPASS
         IF(K.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/2
         DO 210 J=1,NWKSMX
  210    C(J)=0.0D+00
C
C   BEGIN WITH WEIGHTED SUM OF SUCCESIVE CORRECTION VECTORS
C
         FWORD=OFFSET
         DO 221 J=1,NDVDIT
            FWORD=FWORD+NWKS2
            EJ=E(J,NROOT)
            CALL WREADW(ITAP94,S,NWORD,FWORD,LWORD)
            DO 220 I=1,NLOOP
               C(I)=C(I)+EJ*S(I)
  220       CONTINUE
  221    CONTINUE
C
C   GET DIAGONAL ELEMENTS FOR PERTURBATION DENOMINATORS
C
         FWORD=OFFSET
         CALL WREADW(ITAP94,S,NWORD,FWORD,LWORD)
         DO 230 I=1,NLOOP
            DEL=ROOTN-S(I)
C     DEL=EDAV-S(I)
            IF(DEL.NE.0.0D+00)C(I)=C(I)/DEL
  230    IF(DEL.EQ.0.0D+00)C(I)=0.0D+00
C
C   SUBTRACT SUCCESIVE PRODUCTS WEIGHTED BY SMALL EIGENVALUES
C
         FWORD=OFFSET
         DO 240 J=1,NDVDIT
            CALL WREADW(ITAP99,S,NWORD,FWORD,LWORD)
            FWORD=FWORD+NWKS2
            EJ=E(J,NROOT)
            DO 239 I=1,NLOOP
               C(I)=C(I)-EJ*S(I)
  239       CONTINUE
  240    CONTINUE
C
         DO 250 I=1,NLOOP
  250    RENORM=RENORM+C(I)*C(I)
         CALL WWRITW(ITAP99,C,NWORD,FWORD,LWORD)
         OFFSET=OFFSET+NWORD
  260 CONTINUE
C     PRINT *,'  PASSED 260'
C
CWA  UNCOMMENT THE FOLLOWING LINE TO DEACTIVATE CALCULATION OF
CWA  MULTIPLE ROOTS.
CWA   IF (SQCDIF.LT.CNVERG) GO TO 7878
C
C   ORTHONORMALIZE CORRECTION VECTOR TO PAST ITERATIONS
C
      OFFSET=NWKS2*NDVDIT+1
      FWORD1=1
      DO 330 J=1,NDVDIT
         NWORD=NWKMX2
         FWORD=FWORD1
         FWORD2=OFFSET
         Z=0.0D+00
         DO 300 K=1,NPASS
            IF(K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/2
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,FWORD2)
            Z=Z+DOT(C,S,NLOOP)
  300    CONTINUE
         RENORM=1.0D+00/DSQRT(RENORM-Z*Z)
C     PRINT *,'  AFTER 300,  RENORM=',RENORM
         FWORD=FWORD1
         FWORD2=OFFSET
         NWORD=NWKMX2
         DO 320 K=1,NPASS
            IF(K.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/2
            CALL WREADW(ITAP99,S,NWORD,FWORD,FWORD)
            CALL WREADW(ITAP99,C,NWORD,FWORD2,LWORD)
            DO 310 I=1,NLOOP
  310       C(I)=(C(I)-Z*S(I))*RENORM
            CALL WWRITW(ITAP99,C,NWORD,FWORD2,FWORD2)
  320    CONTINUE
         RENORM=1.0D+00
         FWORD1=FWORD1+NWKS2
  330 CONTINUE
C--------------------
 9550 CONTINUE
C     PRINT *,'  PASSED 330 AND 9550'
C--------------------
C
 1235 CONTINUE
C
C     ----- NOW GO THROUGH NEW TRIAL VECTOR AND ZERO ELEMENTS -----
C
      Z=1.0D+00/DSQRT(RENORM)
      FWORD=NWKS2*NDVDIT+1
      NWORD=NWKMX2
      ICOUNT=0
C     SMALL=0.00D+00
C--------------------
      OFFSET=1
C--------------------
      DO 510 IPASS=1,NPASS
         IF (IPASS.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/INTOWP(1)
         CALL WREADW(ITAP99,C,NWORD,FWORD,JUNK)
         DO 500 I=1,NLOOP
            IF (ABS(C(I)).LT.SMALL) THEN
               C(I)=0.0D+00
            ELSE
               ICOUNT=ICOUNT+1
            END IF
  500    CONTINUE
         CALL WWRITW(ITAP99,C,NWORD,FWORD,FWORD)
  510 CONTINUE
C
      PERCNT=(ICOUNT*100.0D+00)/NWKS
C     WRITE(ITAPE3,520) ICOUNT,PERCNT
C     WRITE (ITAPE6,520) ICOUNT,PERCNT
  520 FORMAT (' USING ',I8,' ELEMENTS OF TRIAL VECTOR:',F7.2,'%')
C
C
C
      IWORD3=NWKS2*NDVDIT+1
      IWORD4=IWORD3+NWKS2
      IWORD6=IWORD4
      NDVDIT=NDVDIT+1
C     CALL ORTHOG(S,C,E,NDVDIT,RENORM)
C
C   ZERO DISC STORAGE FOR NEXT SIGMA AND VECTOR
C+++
      CALL ZERO(S,NWKSMX)
C     PRINT *,'  CALLED ZEROX'
C
      IF(IRSTRT.EQ.0) RETURN
      CALL SREW(ITAP95)
      IWORD6=1
      IBLOCK=1
      INXT=1
      WRITE(ITAP95)NDVDIT,ITER+1,NROOT
      WRITE(ITAP95) A
      WRITE(ITAP95) IBLOCK,INXT
      NWORD=NWKMX2
      FWORD=1
      DO 350 I=1,NPASS
         IF(I.EQ.NPASS) NWORD=NWORDL
         CALL WWRITW(ITAP96,S,NWORD,FWORD,FWORD)
  350 CONTINUE
      RETURN
      END
      SUBROUTINE VEWPSX(A,B,C,Z,N)
      REAL*8 A(N),B(N),C(N),Z
      DO 1 I=1,N
         A(I)=B(I)+Z*C(I)
    1 CONTINUE
      RETURN
      END
      SUBROUTINE INITX2(INT,C,S,IJADD,KADD,LADD,WTW,WTX,WTY,WAB,SS)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER ARR,TR1,TR2,ASM,AOS,OS,WTW,WTX,WTY,WAB,SS,SYMORB
      INTEGER BMAX,ORBFRM
      REAL*8 INT(NMAX),C(NWKS),S(NWKS)
      DIMENSION KADD(SYMORB),LADD(SYMORB),IJADD(NUMIJ),WTW(ORBFRM,NSYM)
      DIMENSION WTX(ORBFRM,NSYM),WTY(ORBFRM),WAB(ORBFRM),SS(NORBS)
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF,I34X
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
C  UNIVERSAL IDENTITY OF THE OBJECTS IN THESE COMMON
C     COMMON /ALL/ ARR,VAL1,VAL2,VAL3,ITR1,ITR2,IA,JA,ITYPE,ISEGT
C    *,LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
C     COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
C    #,             NUMSYM(8)
      COMMON /SYMM/ ASM,JS,IS,MX(8),MN(8),OS(8),NUMSYM(8)
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /ALL/VAL1,VAL2,VAL3,ARR,TR1,TR2,IA,JA,M,ISEG,N,N1,N2
     *,           IMAX,IMIN
      COMMON /COUNT/  ICOUNT,IXX4,IXX5,IXX6,IXX8,IWW4,IWW5,IWW6,IWW8
     #,               IWX7,IXW9,IXY3,IXY16,IXY18,IXY22,IWY2,IWY15,IWY17
     #,               IWY21,IYX20,IYW19
      COMMON /COUNT2/ IENTRY(20),TIME(20)
      REAL*8 VAL1,VAL2,VAL3
      SQRT2=DSQRT(2.0D+00)
      SQRT3=DSQRT(3.0D+00)
      SQT1P5=DSQRT(1.5D+00)
      ICOUNT=0
      IXX4=0
      IXX5=0
      IXX6=0
      IXX8=0
      IWW4=0
      IWW5=0
      IWW6=0
      IWW8=0
      IWX7=0
      IXW9=0
      RETURN
C
C--------------------------------------------------------EXTERNAL
C--------------------------------------------------------FOURX---
C
      ENTRY EXTERN
      ENTRY FOURX
C
C
      IF (I34X.NE.0) THEN
         DO 11 IQ=1,NSYM
            MINS=MN(IQ)
            IF (MINS.GT.N) THEN
               NUMSYM(IQ)=0
            ELSE
               MAXS=MX(IQ)
               IF (MAXS.LE.N) THEN
                  NUMSYM(IQ)=MAXS-MINS+1
               ELSE
                  NUMSYM(IQ)=N-MINS+1
               END IF
            END IF
   11    CONTINUE
      END IF
C
C
      IENTRY(M)=IENTRY(M)+1
      ICOUNT=ICOUNT+1
C
      AOS=OS(ASM+1)
      GO TO (313,305,304,312,311,310,307,308,303,306,309,302,301,314
C     GO TO (301,302,303,304,305,306,307,308,309,310,311,312,313,314
C     GO TO ( YZ, XZ, XY, YY, XX, ZY, YX, YW, WZ, WY, WX, XW, WW,---YY
C
     1,315,316,317,318,319),M
C       XX, WW, ZZ,---4 INTERNALS),M
C
      WRITE(ITAPE6,*) ' FUNNY M'
      CALL MABORT
  301 CONTINUE
C     ----- YZ -----
      GO TO 1
  302 CONTINUE
C     ----- XZ -----
      GO TO 1
  303 CONTINUE
C     ----- XY -----
      IF (IAND(I34X,1).NE.0.AND.ISEG.EQ.3) GO TO 1
      IF (IAND(I34X,1).EQ.0.AND.N.LT.ORBFRM.AND.ISEG.EQ.18) GO TO 9
      CALL XY
      GO TO 9
  304 CONTINUE
C     ----- YY -----
      GO TO 1
  305 CONTINUE
C     ----- XX -----
      CALL XX
      GO TO 9
  306 CONTINUE
C     ----- ZY -----
      GO TO 1
  307 CONTINUE
C     ----- YX -----
      CALL YX
      GO TO 9
  308 CONTINUE
C     ----- YW -----
      CALL YW
      GO TO 9
  309 CONTINUE
C     ----- WZ -----
      GO TO 1
  310 CONTINUE
C     ----- WY -----
      IF (IAND(I34X,2).NE.0.AND.ISEG.EQ.2) GO TO 1
      IF (IAND(I34X,2).EQ.0.AND.N.LT.ORBFRM.AND.ISEG.EQ.17) GO TO 9
      CALL WY
      GO TO 9
  311 CONTINUE
C     ----- WX -----
      CALL WX
      GO TO 9
  312 CONTINUE
C     ----- XW -----
      CALL XW
      GO TO 9
  313 CONTINUE
C     ----- WW -----
      CALL WW
      GO TO 9
  314 CONTINUE
C     ----- YY 4X -----
      CALL SHAPE4
      GO TO 9
  315 CONTINUE
C     ----- XX 4X -----
C     IF (I34X.EQ.0) THEN
      CALL XX4XS
C     ELSE
C        CALL SHAPE4
C     END IF
      GO TO 9
  316 CONTINUE
C     ----- WW 4X -----
C     IF (I34X.EQ.0) THEN
      CALL WW4X
C     ELSE
C        CALL SHAPE4
C     END IF
      GO TO 9
  317 CONTINUE
C     ----- ZZ ENTRIES ----
      GO TO 1
  318 CONTINUE
C     ----- 4 INTERNAL -----
      GO TO 1
  319 CONTINUE
C     ----- 4 INTERNAL, (3,2,1) CASE -----
      GO TO 1
C
C
C
    1 CONTINUE
      CALL SHAPES
    9 CONTINUE
      RETURN
      END
      SUBROUTINE INITST(INT,C,S,IJADD,KADD,LADD,WTW,WTX,WTY,WAB,SS
     #,                 CI,SI,CJ,SJ,H1,H2,IJXX,NKLXX,IJWW,NKLWW
     #,                 KLXX,KLWW)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
CTJL 1               CI,SI,CJ,SJ,H1,H2,IJXX,NKLXX,IJWW,NKLWW,
CTJL 2               KLXX,KLWW
C
      INTEGER ARR,TR1,TR2,ASM,OS,WTW,WTX,WTY,WAB,SS,SYMORB
      INTEGER BMAX,ORBFRM
      REAL*8 INT(NMAX),C(NWKS),S(NWKS)
C
      DIMENSION CI(1),CJ(1),SI(1),SJ(1),H1(1),H2(1)
      DIMENSION KADD(SYMORB),LADD(SYMORB),IJADD(NUMIJ),WTW(ORBFRM,NSYM)
      DIMENSION WTX(ORBFRM,NSYM),WTY(ORBFRM),WAB(ORBFRM),SS(NORBS)
      DIMENSION IJXX(NUMIJ ),NKLXX(NSYM,ORBFRM),IJWW(NUMIJ )
      DIMENSION NKLWW(NSYM,ORBFRM),KLXX(1),KLWW(1)
C
      COMMON /COEFS/  A,B,INTAL,INTAU,INTB,INTAD,INTBD
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
C  UNIVERSAL IDENTITY OF THE OBJECTS IN THESE COMMON
C     COMMON /ALL/ ARR,VAL1,VAL2,VAL3,ITR1,ITR2,IA,JA,ITYPE,ISEGT
C    *,LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
C     COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
C    #,             NUMSYM(8)
      COMMON /SYMM/ ASM,JS,IS,MX(8),MN(8),OS(8),NUMSYM(8)
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /ALL/VAL1,VAL2,VAL3,ARR,TR1,TR2,IA,JA,M,ISEG,N,N1,N2
     *,           IMAX,IMIN
      COMMON /COUNT/  ICOUNT,IXX4,IXX5,IXX6,IXX8,IWW4,IWW5,IWW6,IWW8
     #,               IWX7,IXW9,IXY3,IXY16,IXY18,IXY22,IWY2,IWY15,IWY17
     #,               IWY21,IYX20,IYW19
      COMMON /XX4X/   NIJVIR,NREFS
      COMMON /MINMAX/ IMING,IMAXG,JMING,JMAXG
      REAL*8 VAL1,VAL2,VAL3
C
C
      SQRT2=DSQRT(2.0D+00)
      SQRT3=DSQRT(3.0D+00)
      SQT1P5=DSQRT(1.5D+00)
      ASQRT2=1.0D+00/SQRT2
      HSQRT3=0.5D+00*DSQRT(3.0D+00)
      RETURN
C
C***************************** XX 4X ***********************************
C
      ENTRY XX4XS
C
      JMINH=JMING
      IF (JMING.EQ.1) JMINH=0
C
      DO 402 I=IMIN,IMAX
         IP=I*(I-1)/2
         JSY=IEOR(IS,SS(I))
         JMIN=MN(JSY+1)
         IF (JMIN.GE.I) GO TO 401
         NKL=NKLXX(IS+1,N)
         JMAX=MX(JSY+1)
         IF (JMAX.GE.I) JMAX=I-1
         IIA=IA+WTX(I,IS+1)
         DO 400 J=JMIN,JMAX
            IF (J.LT.JMING.OR.J.GT.JMAXG) GO TO 400
            S(IIA)=S(IIA)+DOT(INT(IJXX(IP+J)+1),C(IA),NKL)
  400    IIA=IIA+1
  401    CONTINUE
  402 CONTINUE
      RETURN
C
C***************************** WW 4X ***********************************
C
      ENTRY WW4X
C
      JMINH=JMING
      IF (JMING.EQ.1) JMINH=0
C     WRITE (80,'(' WW: IA',I5,' I',I3)') IA,IMIN
C
      DO 414 I=IMIN,IMAX
         IP=I*(I-1)/2
         JSY=IEOR(IS,SS(I))
         JMIN=MN(JSY+1)
         IF (JMIN.GT.I) GO TO 413
         NKL=NKLWW(IS+1,N)
         JMAX=MX(JSY+1)
         IF (JMAX.GT.I) JMAX=I
         IF (I.NE.JMIN) GO TO 410
         IIA=IA+WAB(I)
         GO TO 411
  410    CONTINUE
         IIA=IA+WTW(I,IS+1)
  411    CONTINUE
         DO 412 J=JMIN,JMAX
            IF (J.LT.JMING.OR.J.GT.JMAXG) GO TO 412
            S(IIA)=S(IIA)+DOT(INT(IJWW(IP+J)+1),C(IA),NKL)
C     WRITE (80,'(' J',I2,I4,(T10,10F10.5))')J,IIA,(INT(IQQ),IQQ=
C    #       IJWW(IP+J)+1,IJWW(IP+J)+NKL)
  412    IIA=IIA+1
  413    CONTINUE
  414 CONTINUE
      RETURN
C
C******************************** YX ***********************************
C
      ENTRY YX
C
      IYX20=IYX20+1
      A=VAL1
      B=VAL1*VAL2
      INTAL=TR1
      INTB=TR2
      IF (IS.NE.0) GO TO 710
      IF (JS.NE.0) GO TO 702
C
C     ----- IS.EQ.0, JS.EQ.0 -----
C
      NUMI=NUMSYM(1)
      IF (NUMI.LE.1) RETURN
      CALL HI    (H1,0,NUMI)
      CALL SQUARE(C(JA),CI,NUMI)
      CALL APBC  (S(IA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(IA),NUMI,1,NUMI)
      CALL FOLD  (S(JA),SI,NUMI)
      RETURN
C
C     ----- IS.EQ.0, JS.NE.0 -----
C
  702 CONTINUE
      NUMI=NUMSYM(JS+1)
      IF (NUMI.LT.1) RETURN
      NUMJ=NUMSYM(1)
      IF (NUMJ.LT.1) RETURN
      JAS=JA+WTX(MN(JS+1),JS+1)
      CALL HI    (H1,JS,NUMI)
      CALL APBCT(S(IA),H1,C(JAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(JAS),C(IA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(JAS),H1,C(IA),NUMI,1,NUMJ)
      RETURN
C
C     ----- IS.NE.0 -----
C
  710 CONTINUE
      IF (JS.NE.0) GO TO 711
C
C     ----- IS.NE.0, JS.EQ.0 -----
C
      NUMI=NUMSYM(IS+1)
      IF (NUMI.LE.1) RETURN
      JAS=JA+WTX(MN(IS+1)+1,JS+1)
      CALL HI    (H1,IS,NUMI)
      CALL SQUARE(C(JAS),CI,NUMI)
      CALL APBC  (S(IA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(IA),NUMI,1,NUMI)
      CALL FOLD  (S(JAS),SI,NUMI)
      RETURN
C
C     ----- IS.NE.0, JS.NE.0 -----
C
  711 CONTINUE
      ISYM=IEOR(IS,JS)
      NUMJ=NUMSYM(IS+1)
      IF (NUMJ.LT.1) RETURN
      NUMI=NUMSYM(ISYM+1)
      IF (NUMI.LT.1) RETURN
      IF (ISYM.LT.IS) GO TO 712
      JAS=JA+WTX(MN(ISYM+1),JS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL APBCT (S(IA),H1,C(JAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(JAS),C(IA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(JAS),H1,C(IA),NUMI,1,NUMJ)
      RETURN
  712 CONTINUE
      JAS=JA+WTX(MN(IS+1),JS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL AMBC  (S(IA),H1,C(JAS),1,NUMI,NUMJ)
      CALL AMBC  (S(JAS),H1,C(IA),NUMI,1,NUMJ)
      RETURN
C
C****************************** XY *************************************
C
      ENTRY XY
      IF (ISEG.EQ.16) GO TO 500
      IF (ISEG.EQ.18) GO TO 530
      IF (ISEG.EQ.22) GO TO 570
C
C     ----- XY ISEG=3 -----
C
      IXY3=IXY3+1
      JJA=JA
      NKL=NKLXX(IS+1,N)
C     DO 420 I=MN(JS+1),MX(JS+1)
      DO 420 I=MN(JS+1),MN(JS+1)+NUMSYM(JS+1)-1
         IF (I.LT.JMING.OR.I.GT.JMAXG) GO TO 420
         IJ=IJXX(ARR+I)
C     CALL DOT(T,INT(IJ+1),C(IA),NKL)
         S(JJA)=S(JJA)+VAL1*DOT(INT(IJ+1),C(IA),NKL)
  420 JJA=JJA+1
C
      NKLOFF=NKLXX(IS+1,ORBFRM)
      IIA=IA
      JINF=MN(JS+1)
      IF (JMING.GT.JINF) JINF=JMING
      JDIFF=JINF-MN(JS+1)
C     JSUP=MX(JS+1)
      JSUP=MN(JS+1)+NUMSYM(JS+1)-1
      IF (JMAXG.LT.JSUP) JSUP=JMAXG
      IST=IJXX(ARR+JINF)
      DO 422 I=1,NKL
         JJA=JA+JDIFF
         IPT=IST+I
         T=0.0
         DO 421 J=JINF,JSUP
            T=T+INT(IPT)*C(JJA)
            IPT=IPT-NKLOFF
  421    JJA=JJA+1
         S(IIA)=S(IIA)+T*VAL1
         IIA=IIA+1
  422 CONTINUE
      RETURN
C
C     ----- XY ISEG=16 -----
C
  500 CONTINUE
      IXY16=IXY16+1
      A=VAL1
      B=VAL1
      INTAL=1
      INTB=3
      GO TO 520
C
C     ----- XY ISEG=18 -----
C
  530 CONTINUE
      IXY18=IXY18+1
      A=VAL1
      B=0.0
      INTAL=3
      INTB=3
      GO TO 520
C
C     ----- XY ISEG=22 -----
C
  570 CONTINUE
      IXY22=IXY22+1
      A=VAL1
      B=VAL1*VAL2
      INTAL=TR1
      INTB=TR2
  520 CONTINUE
      IF (JS.NE.0) GO TO 510
      IF (IS.NE.0) GO TO 502
C
C     ----- IS.EQ.0, JS.EQ.0 -----
C
      NUMI=NUMSYM(1)
      IF (NUMI.LE.1) RETURN
      CALL HI    (H1,0,NUMI)
      CALL SQUARE(C(IA),CI,NUMI)
      CALL APBC  (S(JA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(JA),NUMI,1,NUMI)
      CALL FOLD  (S(IA),SI,NUMI)
      RETURN
C
C     ----- IS.NE.0, JS.EQ.0 -----
C
  502 CONTINUE
      NUMI=NUMSYM(IS+1)
      IF (NUMI.LT.1) RETURN
      NUMJ=NUMSYM(1)
      IF (NUMJ.LT.1) RETURN
      IAS=IA+WTX(MN(IS+1),IS+1)
      CALL HI    (H1,IS,NUMI)
      CALL APBCT (S(JA),H1,C(IAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(IAS),C(JA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(IAS),H1,C(JA),NUMI,1,NUMJ)
      RETURN
C
C     ----- JS.NE.0 -----
C
  510 CONTINUE
      IF (IS.NE.0) GO TO 511
C
C     ----- IS.EQ.0, JS.NE.0 -----
C
      NUMI=NUMSYM(JS+1)
      IF (NUMI.LE.1) RETURN
      IAS=IA+WTX(MN(JS+1)+1,IS+1)
      CALL HI    (H1,JS,NUMI)
      CALL SQUARE(C(IAS),CI,NUMI)
      CALL APBC  (S(JA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(JA),NUMI,1,NUMI)
      CALL FOLD  (S(IAS),SI,NUMI)
      RETURN
C
C     ----- IS.NE.0, JS.NE.0 -----
C
  511 CONTINUE
      ISYM=IEOR(IS,JS)
      NUMJ=NUMSYM(JS+1)
      IF (NUMJ.LT.1) RETURN
      NUMI=NUMSYM(ISYM+1)
      IF (NUMI.LT.1) RETURN
      IF (ISYM.LT.JS) GO TO 512
      IAS=IA+WTX(MN(ISYM+1),IS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL APBCT (S(JA),H1,C(IAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(IAS),C(JA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(IAS),H1,C(JA),NUMI,1,NUMJ)
      RETURN
  512 CONTINUE
      IAS=IA+WTX(MN(JS+1),IS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL AMBC  (S(JA),H1,C(IAS),1,NUMI,NUMJ)
      CALL AMBC  (S(IAS),H1,C(JA),NUMI,1,NUMJ)
      RETURN
C
C******************************** YW ***********************************
C
      ENTRY YW
C
      IYW19=IYW19+1
      A=VAL1
      B=VAL1*VAL2
      INTAL=TR1
      INTB=TR2
      IF (IS.NE.0) GO TO 810
      IF (JS.NE.0) GO TO 802
C
C     ----- IS.EQ.0, JS.EQ.0 -----
C
      NUMI=NUMSYM(1)
      IF (NUMI.LT.1) RETURN
      CALL HI    (H1,0,NUMI)
      CALL SQUARW(C(JA),CI,NUMI)
      CALL APBC  (S(IA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(IA),NUMI,1,NUMI)
      CALL FOLDW (S(JA),SI,NUMI)
      RETURN
C
C     ----- IS.EQ.0, JS.NE.0 -----
C
  802 CONTINUE
      NUMI=NUMSYM(JS+1)
      IF (NUMI.LT.1) RETURN
      NUMJ=NUMSYM(1)
      IF (NUMJ.LT.1) RETURN
      JAS=JA+WTW(MN(JS+1),JS+1)
      CALL HI    (H1,JS,NUMI)
      CALL APBCT (S(IA),H1,C(JAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(JAS),C(IA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(JAS),H1,C(IA),NUMI,1,NUMJ)
      RETURN
C
C     ----- IS.NE.0 -----
C
  810 CONTINUE
      IF (JS.NE.0) GO TO 811
C
C     ----- IS.NE.0, JS.EQ.0 -----
C
      NUMI=NUMSYM(IS+1)
      IF (NUMI.LT.1) RETURN
      JAS=JA+WAB(MN(IS+1))
      CALL HI    (H1,IS,NUMI)
      CALL SQUARW(C(JAS),CI,NUMI)
      CALL APBC  (S(IA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(IA),NUMI,1,NUMI)
      CALL FOLDW (S(JAS),SI,NUMI)
      RETURN
C
C     ----- IS.NE.0, JS.NE.0 -----
C
  811 CONTINUE
      ISYM=IEOR(IS,JS)
      NUMJ=NUMSYM(IS+1)
      IF (NUMJ.LT.1) RETURN
      NUMI=NUMSYM(ISYM+1)
      IF (NUMI.LT.1) RETURN
      IF (ISYM.LT.IS) GO TO 812
      JAS=JA+WTW(MN(ISYM+1),JS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL APBCT (S(IA),H1,C(JAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(JAS),C(IA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(JAS),H1,C(IA),NUMI,1,NUMJ)
      RETURN
  812 CONTINUE
      JAS=JA+WTW(MN(IS+1),JS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL APBC  (S(IA),H1,C(JAS),1,NUMI,NUMJ)
      CALL APBC  (S(JAS),H1,C(IA),NUMI,1,NUMJ)
      RETURN
C
C****************************** WY *************************************
C
      ENTRY WY
C
      IF (ISEG.EQ.15) GO TO 600
      IF (ISEG.EQ.17) GO TO 630
      IF (ISEG.EQ.21) GO TO 670
C
C     ----- WY ISEG=2 -----
C
      IWY2=IWY2+1
      JJA=JA
      NKL=NKLWW(IS+1,N)
C     DO 430 I=MN(JS+1),MX(JS+1)
      DO 430 I=MN(JS+1),MN(JS+1)+NUMSYM(JS+1)-1
         IF (I.LT.JMING.OR.I.GT.JMAXG) GO TO 430
         IJ=IJWW(ARR+I)
C     CALL DOT(T,INT(IJ+1),C(IA),NKL)
         S(JJA)=S(JJA)+VAL1*DOT(INT(IJ+1),C(IA),NKL)
  430 JJA=JJA+1
C
      NKLOFF=NKLWW(IS+1,ORBFRM)
      NJJ=NUMSYM(JS+1)
      IIA=IA
C
      JINF=MN(JS+1)
      IF (JMING.GT.JINF) JINF=JMING
      JDIFF=JINF-MN(JS+1)
C     JSUP=MX(JS+1)
      JSUP=MN(JS+1)+NUMSYM(JS+1)-1
      IF (JMAXG.LT.JSUP) JSUP=JMAXG
      IST=IJWW(ARR+JINF)
      DO 432 I=1,NKL
         IPT=IST+I
         JJA=JA+JDIFF
         T=0.0
         DO 431 J=JINF,JSUP
            T=T+INT(IPT)*C(JJA)
            IPT=IPT-NKLOFF
  431    JJA=JJA+1
         S(IIA)=S(IIA)+T*VAL1
         IIA=IIA+1
  432 CONTINUE
      RETURN
C
C     ----- WY ISEG=15 -----
C
  600 CONTINUE
      IWY15=IWY15+1
      A=VAL1
      B=VAL1
      INTAL=1
      INTB=3
      GO TO 632
C
C     ----- WY ISEG=17 -----
C
  630 CONTINUE
      IWY17=IWY17+1
      A=VAL1
      B=0.0
      INTAL=3
      INTB=3
  632 CONTINUE
C
C     ----- SPECIAL LOOP FOR D.O.--S.O. INTERACTIONS -----
C
      IF (IS.NE.0) GO TO 620
      NUMI=NUMSYM(JS+1)
      IF (NUMI.LT.1) RETURN
      CALL HS(H1,JS,NUMI)
      ISKIP=1
      IAS=IA+WAB(MN(JS+1))
      JAS=JA
      DO 631 I=1,NUMI
         S(IAS)=S(IAS)+H1(I)*C(JAS)
         S(JAS)=S(JAS)+H1(I)*C(IAS)
         JAS=JAS+1
         ISKIP=ISKIP+1
         IAS=IAS+ISKIP
  631 CONTINUE
      GO TO 620
C
C     ----- WY ISEG=21 -----
C
  670 CONTINUE
      IWY21=IWY21+1
      A=VAL1
      B=VAL1*VAL2
      INTAL=TR1
      INTB=TR2
  620 CONTINUE
      IF (JS.NE.0) GO TO 610
      IF (IS.NE.0) GO TO 602
C
C     ----- IS.EQ.0, JS.EQ.0 -----
C
      NUMI=NUMSYM(1)
      IF (NUMI.LT.1) RETURN
      CALL HI    (H1,0,NUMI)
      CALL SQUARW(C(IA),CI,NUMI)
      CALL APBC  (S(JA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(JA),NUMI,1,NUMI)
      CALL FOLDW (S(IA),SI,NUMI)
      RETURN
C
C     ----- IS.NE.0, JS.EQ.0 -----
C
  602 CONTINUE
      NUMI=NUMSYM(IS+1)
      IF (NUMI.LT.1) RETURN
      NUMJ=NUMSYM(1)
      IF (NUMJ.LT.1) RETURN
      IAS=IA+WTW(MN(IS+1),IS+1)
      CALL HI    (H1,IS,NUMI)
      CALL APBCT (S(JA),H1,C(IAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(IAS),C(JA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(IAS),H1,C(JA),NUMI,1,NUMJ)
      RETURN
C
C     ----- JS.NE.0 -----
C
  610 CONTINUE
      IF (IS.NE.0) GO TO 611
C
C     ----- IS.EQ.0, JS.NE.0 -----
C
      NUMI=NUMSYM(JS+1)
      IF (NUMI.LT.1) RETURN
      IAS=IA+WAB(MN(JS+1))
      CALL HI    (H1,JS,NUMI)
      CALL SQUARW(C(IAS),CI,NUMI)
      CALL APBC  (S(JA),H1,CI,1,NUMI,NUMI)
      CALL EBC   (SI,H1,C(JA),NUMI,1,NUMI)
      CALL FOLDW (S(IAS),SI,NUMI)
      RETURN
C
C     ----- IS.NE.0, JS.NE.0 -----
C
  611 CONTINUE
      ISYM=IEOR(IS,JS)
      NUMJ=NUMSYM(JS+1)
      IF (NUMJ.LT.1) RETURN
      NUMI=NUMSYM(ISYM+1)
      IF (NUMI.LT.1) RETURN
      IF (ISYM.LT.JS) GO TO 612
      IAS=IA+WTW(MN(ISYM+1),IS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL APBCT (S(JA),H1,C(IAS),1,NUMI,NUMJ)
C     CALL APBTCT(S(IAS),C(JA),H1,NUMJ,1,NUMI)
      CALL ATPBC(S(IAS),H1,C(JA),NUMI,1,NUMJ)
      RETURN
  612 CONTINUE
      IAS=IA+WTW(MN(JS+1),IS+1)
      CALL HI    (H1,ISYM,NUMI)
      CALL APBC  (S(JA),H1,C(IAS),1,NUMI,NUMJ)
      CALL APBC  (S(IAS),H1,C(JA),NUMI,1,NUMJ)
      RETURN
C
C********************************** XX *********************************
C
      ENTRY XX
C
      IF (ISEG.GT.8) GO TO 98
      GO TO (98,98,98,4,5,6,98,8),ISEG
C
    4 CONTINUE
      IXX4=IXX4+1
      A=-VAL1*ASQRT2
      B=-(A+A)
      GO TO 10
    5 CONTINUE
      IXX5=IXX5+1
      A=-VAL1*ASQRT2+VAL3
      B=VAL1*SQRT2
   10 CONTINUE
      INTAL=1
      INTB =2
      IF (IS.NE.0) GO TO 20
      IAS=IA
      DO 11 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.1) GO TO 11
         CALL HIIS  (H1,ISYM,NUMI)
         CALL SQUARE(C(IAS),CI,NUMI)
         CALL EBC   (SJ,H1,CI,NUMI,NUMI,NUMI)
         CALL FOLD  (S(IAS),SJ,NUMI)
         IAS=IAS+NUMI*(NUMI-1)/2
   11 CONTINUE
      RETURN
C
   20 CONTINUE
      IAS=IA
      DO 21 ISYM=1,NSYM-1
         JSYM=IEOR(ISYM,IS)
         IF (JSYM.GE.ISYM) GO TO 21
         NUMI=NUMSYM(ISYM+1)
         NUMJ=NUMSYM(JSYM+1)
         NUMIJ=NUMI*NUMJ
         IF (NUMIJ.LE.0) GO TO 21
         CALL HIIS  (H1,ISYM,NUMI)
         CALL HIIS2 (H2,JSYM,NUMJ)
C     CALL APBCT (S(IAS),C(IAS),H1,NUMJ,NUMI,NUMI)
         CALL ATPBCT(S(IAS),H1,C(IAS),NUMI,NUMI,NUMJ)
         CALL APBC  (S(IAS),H2,C(IAS),NUMJ,NUMJ,NUMI)
         IAS=IAS+NUMIJ
   21 CONTINUE
      RETURN
C
C     ----- ISEG 6 AND 8 CASES -----
C
    6 CONTINUE
      IXX6=IXX6+1
      A=-VAL1*ASQRT2+VAL3
      B=VAL1*SQRT2
      INTAL=3
      INTAU=1
      INTB =2
      INTAD=1
      INTBD=2
      GO TO 30
    8 CONTINUE
      IXX8=IXX8+1
      A=VAL1
      B=0.0
      INTAL=TR1
      INTAU=1
      INTB=2
      INTAD=1
      INTBD=2
   30 CONTINUE
C
      IF (IS.NE.JS) GO TO 40
      IF (IS.NE.0) GO TO 35
      IAS=IA
      JAS=JA
      DO 31 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.1) GO TO 31
         CALL SQUARE(C(IAS),CI,NUMI)
         CALL SQUARE(C(JAS),CJ,NUMI)
         CALL HII   (H1,ISYM,NUMI)
         CALL EBC   (SJ,H1,CI,NUMI,NUMI,NUMI)
         CALL EBTC  (SI,H1,CJ,NUMI,NUMI,NUMI)
         CALL FOLD  (S(IAS),SI,NUMI)
         CALL FOLD  (S(JAS),SJ,NUMI)
         IOFF=NUMI*(NUMI-1)/2
         IAS=IAS+IOFF
         JAS=JAS+IOFF
   31 CONTINUE
      RETURN
   35 CONTINUE
      IAS=IA
      JAS=JA
      DO 36 I=2,NSYM
         ISYM=I-1
         JSYM=IEOR(IS,ISYM)
         IF (JSYM.GE.ISYM) GO TO 36
         NUMI=NUMSYM(ISYM+1)
         NUMJ=NUMSYM(JSYM+1)
         IOFF=NUMI*NUMJ
         IF (IOFF.LT.1) GO TO 36
         CALL HII   (H1,ISYM,NUMI)
         CALL HII2  (H2,JSYM,NUMJ)
C     CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMI)
         CALL ATPBCT(S(JAS),H1,C(IAS),NUMI,NUMI,NUMJ)
         CALL APBC  (S(JAS),H2,C(IAS),NUMJ,NUMJ,NUMI)
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMI,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMI,NUMJ)
         CALL APBTC (S(IAS),H2,C(JAS),NUMJ,NUMJ,NUMI)
         IAS=IAS+IOFF
         JAS=JAS+IOFF
   36 CONTINUE
      RETURN
C
   40 CONTINUE
      IF (IS.NE.0) GO TO 50
      IAS=IA
      DO 42 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(JS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LE.1.OR.NUMK.LE.0) GO TO 42
         IF (KSYM.GT.ISYM) GO TO 41
         IAS=IA+WTX(MN(ISYM+1)+1,IS+1)
         JAS=JA+WTX(MN(ISYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARE(C(IAS),CI,NUMI)
         CALL APBTCT(S(JAS),H1,CI,NUMK,NUMI,NUMI)
C     CALL EBTCT (SI,C(JAS),H1,NUMI,NUMK,NUMI)
         CALL ATEBC (SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(IAS),SI,NUMI)
         GO TO 42
   41    CONTINUE
         IAS=IA+WTX(MN(ISYM+1)+1,IS+1)
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARE(C(IAS),CI,NUMI)
C     CALL APBTCT(S(JAS),CI,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(JAS),H1,CI,NUMK,NUMI,NUMI)
         CALL EBTCT (SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(IAS),SI,NUMI)
   42 CONTINUE
      RETURN
C
   50 IF (JS.NE.0) GO TO 60
      DO 52 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(IS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LE.1.OR.NUMK.LE.0) GO TO 52
         IF (KSYM.GT.ISYM) GO TO 51
         IAS=IA+WTX(MN(ISYM+1)  ,IS+1)
         JAS=JA+WTX(MN(ISYM+1)+1,JS+1)
         INTAL=3
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARE(C(JAS),CJ,NUMI)
         CALL APBTCT(S(IAS),H1,CJ,NUMK,NUMI,NUMI)
C     CALL EBTCT (SJ,C(IAS),H1,NUMI,NUMK,NUMI)
         CALL ATEBC (SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(JAS),SJ,NUMI)
         GO TO 52
   51    CONTINUE
         IAS=IA+WTX(MN(KSYM+1)  ,IS+1)
         JAS=JA+WTX(MN(ISYM+1)+1,JS+1)
         INTAL=1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARE(C(JAS),CJ,NUMI)
C     CALL APBTCT(S(IAS),CJ,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(IAS),H1,CJ,NUMK,NUMI,NUMI)
         CALL EBTCT (SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(JAS),SJ,NUMI)
   52 CONTINUE
      RETURN
C
   60 CONTINUE
      DO 66 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.0) GO TO 66
         JSYM=IEOR(ISYM,IS)
         IF (JSYM.GE.ISYM) GO TO 66
         NUMJ=NUMSYM(JSYM+1)
         IF (NUMJ.LE.0) GO TO 66
         IAS=IA+WTX(MN(ISYM+1),IS+1)
         KSYM=IEOR(JSYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 63
         IF (KSYM.GE.JSYM) GO TO 61
         JAS=JA+WTX(MN(JSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL AMBTCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL AMBTCT(S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATMBC (S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 63
   61    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 62
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
C     CALL APBC  (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL APBCTT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBCT (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATPBCT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 63
   62    CONTINUE
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
C     CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL ATPBCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
C
C     C(I,J) AND C(I,K) PART
C
   63    CONTINUE
         KSYM=IEOR(ISYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 66
         IF (KSYM.GE.JSYM) GO TO 64
         JAS=JA+WTX(MN(ISYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,JSYM,KSYM,NUMJ,NUMK)
         CALL APBTC (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL APBC  (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 66
   64    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 65
         JAS=JA+WTX(MN(ISYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
         CALL APBC  (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL APBTC (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 66
   65    CONTINUE
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
C     CALL AMBTCT(S(JAS),C(IAS),H1,NUMI,NUMJ,NUMK)
         CALL ATMBC (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL AMBTCT(S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
   66 CONTINUE
      RETURN
C
C
C
   98 CONTINUE
      WRITE(ITAPE6,99) ISEG
   99 FORMAT (//,' ***** ERROR IN XX ENTRY, ISEG=',I5,//)
      CALL MABORT
C
C********************************** WW *********************************
C
      ENTRY WW
C
      IF (ISEG.GT.8) GO TO 198
      GO TO (198,198,198,104,105,106,198,108),ISEG
C
  104 CONTINUE
      IWW4=IWW4+1
      A=-VAL1*ASQRT2
      B=-(A+A)
      GO TO 110
  105 CONTINUE
      IWW5=IWW5+1
      A=-VAL1*ASQRT2
      B=-(A+A)
  110 CONTINUE
      INTAL=1
      INTB =2
      IF (IS.NE.0) GO TO 120
      IAS=IA
      DO 111 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LT.1) GO TO 111
         CALL HIIS  (H1,ISYM,NUMI)
         CALL SQUARW(C(IAS),CI,NUMI)
         CALL EBC   (SJ,H1,CI,NUMI,NUMI,NUMI)
         CALL FOLDW (S(IAS),SJ,NUMI)
         IAS=IAS+NUMI*(NUMI+1)/2
  111 CONTINUE
      RETURN
C
  120 CONTINUE
      IAS=IA
      DO 121 ISYM=1,NSYM-1
         JSYM=IEOR(ISYM,IS)
         IF (JSYM.GE.ISYM) GO TO 121
         NUMI=NUMSYM(ISYM+1)
         NUMJ=NUMSYM(JSYM+1)
         NUMIJ=NUMI*NUMJ
         IF (NUMIJ.LE.0) GO TO 121
         CALL HIIS  (H1,ISYM,NUMI)
         CALL HIIS2 (H2,JSYM,NUMJ)
C     CALL APBCT (S(IAS),C(IAS),H1,NUMJ,NUMI,NUMI)
         CALL ATPBCT(S(IAS),H1,C(IAS),NUMI,NUMI,NUMJ)
         CALL APBC  (S(IAS),H2,C(IAS),NUMJ,NUMJ,NUMI)
         IAS=IAS+NUMIJ
  121 CONTINUE
      RETURN
C
C     ----- ISEG 6 AND 8 CASES -----
C
  106 CONTINUE
      IWW6=IWW6+1
      A=-VAL1*ASQRT2
      B=-(A+A)
      INTAL=3
      INTAU=1
      INTB =2
      INTAD=1
      INTBD=2
      GO TO 130
  108 CONTINUE
      IWW8=IWW8+1
C
C     ----- WW ENTRIES ISEG=8 ANALYTICALLY ZERO -----
C
      RETURN
  130 CONTINUE
C
      IF (IS.NE.JS) GO TO 140
      IF (IS.NE.0) GO TO 135
      IAS=IA
      JAS=JA
      DO 131 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LT.1) GO TO 131
         CALL SQUARW(C(IAS),CI,NUMI)
         CALL SQUARW(C(JAS),CJ,NUMI)
         CALL HII   (H1,ISYM,NUMI)
         CALL EBC   (SJ,H1,CI,NUMI,NUMI,NUMI)
         CALL EBTC  (SI,H1,CJ,NUMI,NUMI,NUMI)
         CALL FOLDW (S(IAS),SI,NUMI)
         CALL FOLDW (S(JAS),SJ,NUMI)
         IOFF=NUMI*(NUMI+1)/2
         IAS=IAS+IOFF
         JAS=JAS+IOFF
  131 CONTINUE
      RETURN
  135 CONTINUE
      IAS=IA
      JAS=JA
      DO 136 I=2,NSYM
         ISYM=I-1
         JSYM=IEOR(IS,ISYM)
         IF (JSYM.GE.ISYM) GO TO 136
         NUMI=NUMSYM(ISYM+1)
         NUMJ=NUMSYM(JSYM+1)
         IOFF=NUMI*NUMJ
         IF (IOFF.LT.1) GO TO 136
         CALL HII   (H1,ISYM,NUMI)
         CALL HII2  (H2,JSYM,NUMJ)
         CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMI)
         CALL APBC  (S(JAS),H2,C(IAS),NUMJ,NUMJ,NUMI)
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMI,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMI,NUMJ)
         CALL APBTC (S(IAS),H2,C(JAS),NUMJ,NUMJ,NUMI)
         IAS=IAS+IOFF
         JAS=JAS+IOFF
  136 CONTINUE
      RETURN
C
  140 CONTINUE
      IF (IS.NE.0) GO TO 150
      IAS=IA
      DO 142 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(JS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LT.1.OR.NUMK.LE.0) GO TO 142
         IF (KSYM.GT.ISYM) GO TO 141
         IAS=IA+WAB(MN(ISYM+1))
         JAS=JA+WTW(MN(ISYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARW(C(IAS),CI,NUMI)
         CALL APBTCT(S(JAS),H1,CI,NUMK,NUMI,NUMI)
C     CALL EBTCT (SI,C(JAS),H1,NUMI,NUMK,NUMI)
         CALL ATEBC (SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(IAS),SI,NUMI)
         GO TO 142
  141    CONTINUE
         IAS=IA+WAB(MN(ISYM+1))
         JAS=JA+WTW(MN(KSYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARW(C(IAS),CI,NUMI)
C     CALL APBTCT(S(JAS),CI,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(JAS),H1,CI,NUMK,NUMI,NUMI)
         CALL EBTCT (SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(IAS),SI,NUMI)
  142 CONTINUE
      RETURN
C
  150 IF (JS.NE.0) GO TO 160
      DO 152 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(IS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LT.1.OR.NUMK.LE.0) GO TO 152
         IF (KSYM.GT.ISYM) GO TO 151
         IAS=IA+WTW(MN(ISYM+1)  ,IS+1)
         JAS=JA+WAB(MN(ISYM+1))
         INTAL=3
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARW(C(JAS),CJ,NUMI)
         CALL APBTCT(S(IAS),H1,CJ,NUMK,NUMI,NUMI)
C     CALL EBTCT (SJ,C(IAS),H1,NUMI,NUMK,NUMI)
         CALL ATEBC (SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(JAS),SJ,NUMI)
         GO TO 152
  151    CONTINUE
         IAS=IA+WTW(MN(KSYM+1)  ,IS+1)
         JAS=JA+WAB(MN(ISYM+1))
         INTAL=1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARW(C(JAS),CJ,NUMI)
C     CALL APBTCT(S(IAS),CJ,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(IAS),H1,CJ,NUMK,NUMI,NUMI)
         CALL EBTCT (SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(JAS),SJ,NUMI)
  152 CONTINUE
      RETURN
C
  160 CONTINUE
      DO 166 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.0) GO TO 166
         JSYM=IEOR(ISYM,IS)
         IF (JSYM.GE.ISYM) GO TO 166
         NUMJ=NUMSYM(JSYM+1)
         IF (NUMJ.LE.0) GO TO 166
         IAS=IA+WTW(MN(ISYM+1),IS+1)
         KSYM=IEOR(JSYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 163
         IF (KSYM.GE.JSYM) GO TO 161
         JAS=JA+WTW(MN(JSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL APBTCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBTCT(S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATPBC (S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 163
  161    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 162
         JAS=JA+WTW(MN(KSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
C     CALL APBC  (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL APBCTT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBCT (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATPBCT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 163
  162    CONTINUE
         JAS=JA+WTW(MN(KSYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
C     CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL ATPBCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
C
C     ----- C(I,J) AND C(I,K) PART -----
C
  163    CONTINUE
         KSYM=IEOR(ISYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 166
         IF (KSYM.GE.JSYM) GO TO 164
         JAS=JA+WTW(MN(ISYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,JSYM,KSYM,NUMJ,NUMK)
         CALL APBTC (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL APBC  (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 166
  164    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 165
         JAS=JA+WTW(MN(ISYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
         CALL APBC  (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL APBTC (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 166
  165    CONTINUE
         JAS=JA+WTW(MN(KSYM+1),JS+1)
         INTAL=3
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
C     CALL APBTCT(S(JAS),C(IAS),H1,NUMI,NUMJ,NUMK)
         CALL ATPBC (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL APBTCT(S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
  166 CONTINUE
      RETURN
C
C
C
  198 CONTINUE
      WRITE(ITAPE6,199) ISEG
  199 FORMAT (//,' ***** ERROR IN WW ENTRY, ISEG=',I5,//)
      CALL MABORT
C
C******************************* WX ************************************
C
      ENTRY WX
C
      IF (ISEG.NE.7) GO TO 298
C
C     ----- ISEG 7 CASE -----
C
      IWX7=IWX7+1
      A=VAL1*HSQRT3
      B=0.0
      INTAL=TR1
      INTAU=1
      INTB =2
      INTAD=1
      INTBD=2
C
      IF (IS.NE.JS) GO TO 240
      IF (IS.NE.0) GO TO 235
C
C     ----- ISYM=JSYM=SYMMETRIC -----
C
      DO 231 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.1) GO TO 231
         IAS=IA+WAB(MN(ISYM+1))
         JAS=JA+WTX(MN(ISYM+1)+1,JS+1)
         CALL SQUARW(C(IAS),CI,NUMI)
         CALL SQUARE(C(JAS),CJ,NUMI)
         CALL HII   (H1,ISYM,NUMI)
         CALL EBC   (SJ,H1,CI,NUMI,NUMI,NUMI)
         CALL EBTC  (SI,H1,CJ,NUMI,NUMI,NUMI)
         CALL FOLDW (S(IAS),SI,NUMI)
         CALL FOLD  (S(JAS),SJ,NUMI)
  231 CONTINUE
      RETURN
C
C     ----- ISYM=JSYM#SYMMETRIC -----
C
  235 CONTINUE
      DO 236 I=2,NSYM
         ISYM=I-1
         JSYM=IEOR(IS,ISYM)
         IF (JSYM.GE.ISYM) GO TO 236
         NUMI=NUMSYM(ISYM+1)
         NUMJ=NUMSYM(JSYM+1)
         IF (NUMI.LT.1.OR.NUMJ.LT.1) GO TO 236
         IAS=IA+WTW(MN(ISYM+1),IS+1)
         JAS=JA+WTX(MN(ISYM+1),JS+1)
         CALL HII   (H1,ISYM,NUMI)
         CALL HII2  (H2,JSYM,NUMJ)
C     CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMI)
         CALL ATPBCT(S(JAS),H1,C(IAS),NUMI,NUMI,NUMJ)
         CALL AMBC  (S(JAS),H2,C(IAS),NUMJ,NUMJ,NUMI)
C
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMI,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMI,NUMJ)
         CALL AMBTC (S(IAS),H2,C(JAS),NUMJ,NUMJ,NUMI)
  236 CONTINUE
      RETURN
C
  240 CONTINUE
      IF (IS.NE.0) GO TO 250
C
C     ----- ISYM=SYMMETRIC, JSYM#SYMMETRIC -----
C
      IAS=IA
      DO 242 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(JS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LT.1.OR.NUMK.LE.0) GO TO 242
         IF (KSYM.GT.ISYM) GO TO 241
         IAS=IA+WAB(MN(ISYM+1))
         JAS=JA+WTX(MN(ISYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARW(C(IAS),CI,NUMI)
         CALL AMBTCT(S(JAS),H1,CI,NUMK,NUMI,NUMI)
C     CALL EMBTCT(SI,C(JAS),H1,NUMI,NUMK,NUMI)
         CALL ATEMBC (SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(IAS),SI,NUMI)
         GO TO 242
  241    CONTINUE
         IAS=IA+WAB(MN(ISYM+1))
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARW(C(IAS),CI,NUMI)
C     CALL APBTCT(S(JAS),CI,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(JAS),H1,CI,NUMK,NUMI,NUMI)
         CALL EBTCT (SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(IAS),SI,NUMI)
  242 CONTINUE
      RETURN
C
C     ----- JSYM=SYMMETRIC, ISYM#SYMMETRIC -----
C
  250 IF (JS.NE.0) GO TO 260
      DO 252 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(IS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LE.1.OR.NUMK.LE.0) GO TO 252
         IF (KSYM.GT.ISYM) GO TO 251
         IAS=IA+WTW(MN(ISYM+1)  ,IS+1)
         JAS=JA+WTX(MN(ISYM+1)+1,JS+1)
         INTAL=TR1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARE(C(JAS),CJ,NUMI)
         CALL AMBTCT(S(IAS),H1,CJ,NUMK,NUMI,NUMI)
C     CALL EMBTCT(SJ,C(IAS),H1,NUMI,NUMK,NUMI)
         CALL ATEMBC (SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(JAS),SJ,NUMI)
         GO TO 252
  251    CONTINUE
         IAS=IA+WTW(MN(KSYM+1)  ,IS+1)
         JAS=JA+WTX(MN(ISYM+1)+1,JS+1)
         INTAL=1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARE(C(JAS),CJ,NUMI)
C     CALL APBTCT(S(IAS),CJ,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(IAS),H1,CJ,NUMK,NUMI,NUMI)
         CALL EBTCT (SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(JAS),SJ,NUMI)
  252 CONTINUE
      RETURN
C
C     ----- ISYM#JSYM, NEITHER IS SYMMETRIC -----
C
  260 CONTINUE
      DO 266 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.0) GO TO 266
         JSYM=IEOR(ISYM,IS)
         IF (JSYM.GE.ISYM) GO TO 266
         NUMJ=NUMSYM(JSYM+1)
         IF (NUMJ.LE.0) GO TO 266
         IAS=IA+WTW(MN(ISYM+1),IS+1)
         KSYM=IEOR(JSYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 263
C
C     ----- C(I,J) AND C(J,K) PART -----
C
         IF (KSYM.GE.JSYM) GO TO 261
         JAS=JA+WTX(MN(JSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL AMBTCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL AMBTCT(S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATMBC (S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 263
  261    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 262
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
C     CALL APBC  (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL APBCTT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBCT (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATPBCT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 263
  262    CONTINUE
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
C     CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL ATPBCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
C
C     ----- C(I,J) AND C(I,K) PART -----
C
  263    CONTINUE
         KSYM=IEOR(ISYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 266
         IF (KSYM.GE.JSYM) GO TO 264
         JAS=JA+WTX(MN(ISYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,JSYM,KSYM,NUMJ,NUMK)
         CALL AMBTC (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL AMBC  (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 266
  264    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 265
         JAS=JA+WTX(MN(ISYM+1),JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
         CALL AMBC  (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL AMBTC (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 266
  265    CONTINUE
         JAS=JA+WTX(MN(KSYM+1),JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
C     CALL APBTCT(S(JAS),C(IAS),H1,NUMI,NUMJ,NUMK)
         CALL ATPBC (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL APBTCT(S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
  266 CONTINUE
      RETURN
C
C
C
  298 CONTINUE
      WRITE(ITAPE6,299) ISEG
  299 FORMAT (//,' ***** ERROR IN WX ENTRY, ISEG=',I5,//)
      CALL MABORT
C
C******************************* XW ************************************
C
      ENTRY XW
C
      IF (ISEG.NE.9) GO TO 398
C
C     ----- ISEG 9 CASE -----
C
      IXW9=IXW9+1
      A=VAL1*HSQRT3
      B=0.0
      INTAL=TR1
      INTAU=1
      INTB =2
      INTAD=1
      INTBD=2
C
      IF (IS.NE.JS) GO TO 340
      IF (IS.NE.0) GO TO 335
C
C     ----- ISYM=JSYM=SYMMETRIC -----
C
      DO 331 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.1) GO TO 331
         IAS=IA+WTX(MN(ISYM+1)+1,IS+1)
         JAS=JA+WAB(MN(ISYM+1))
         CALL SQUARE(C(IAS),CI,NUMI)
         CALL SQUARW(C(JAS),CJ,NUMI)
         CALL HII   (H1,ISYM,NUMI)
         CALL EBC   (SJ,H1,CI,NUMI,NUMI,NUMI)
         CALL EBTC  (SI,H1,CJ,NUMI,NUMI,NUMI)
         CALL FOLD  (S(IAS),SI,NUMI)
         CALL FOLDW (S(JAS),SJ,NUMI)
  331 CONTINUE
      RETURN
C
C     ----- ISYM=JSYM#SYMMETRIC -----
C
  335 CONTINUE
      DO 336 I=2,NSYM
         ISYM=I-1
         JSYM=IEOR(IS,ISYM)
         IF (JSYM.GE.ISYM) GO TO 336
         NUMI=NUMSYM(ISYM+1)
         NUMJ=NUMSYM(JSYM+1)
         IF (NUMI.LT.1.OR.NUMJ.LT.1) GO TO 336
         IAS=IA+WTX(MN(ISYM+1),IS+1)
         JAS=JA+WTW(MN(ISYM+1),JS+1)
         CALL HII   (H1,ISYM,NUMI)
         CALL HII2  (H2,JSYM,NUMJ)
C     CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMI)
         CALL ATPBCT(S(JAS),H1,C(IAS),NUMI,NUMI,NUMJ)
         CALL AMBC  (S(JAS),H2,C(IAS),NUMJ,NUMJ,NUMI)
C
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMI,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMI,NUMJ)
         CALL AMBTC (S(IAS),H2,C(JAS),NUMJ,NUMJ,NUMI)
  336 CONTINUE
      RETURN
C
  340 CONTINUE
      IF (IS.NE.0) GO TO 350
C
C     ----- ISYM=SYMMETRIC, JSYM#SYMMETRIC -----
C
      IAS=IA
      DO 342 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(JS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LE.1.OR.NUMK.LE.0) GO TO 342
         IF (KSYM.GT.ISYM) GO TO 341
         IAS=IA+WTX(MN(ISYM+1)+1,IS+1)
         JAS=JA+WTW(MN(ISYM+1)  ,JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARE(C(IAS),CI,NUMI)
         CALL AMBTCT(S(JAS),H1,CI,NUMK,NUMI,NUMI)
C     CALL EMBTCT(SI,C(JAS),H1,NUMI,NUMK,NUMI)
         CALL ATEMBC(SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(IAS),SI,NUMI)
         GO TO 342
  341    CONTINUE
         IAS=IA+WTX(MN(ISYM+1)+1,IS+1)
         JAS=JA+WTW(MN(KSYM+1)  ,JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARE(C(IAS),CI,NUMI)
C     CALL APBTCT(S(JAS),CI,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(JAS),H1,CI,NUMK,NUMI,NUMI)
         CALL EBTCT (SI,H1,C(JAS),NUMI,NUMK,NUMI)
         CALL FOLD  (S(IAS),SI,NUMI)
  342 CONTINUE
      RETURN
C
C     ----- JSYM=SYMMETRIC, ISYM#SYMMETRIC -----
C
  350 IF (JS.NE.0) GO TO 360
      DO 352 I=1,NSYM
         ISYM=I-1
         KSYM=IEOR(IS,ISYM)
         NUMI=NUMSYM(ISYM+1)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMI.LT.1.OR.NUMK.LE.0) GO TO 352
         IF (KSYM.GT.ISYM) GO TO 351
         IAS=IA+WTX(MN(ISYM+1)  ,IS+1)
         JAS=JA+WAB(MN(ISYM+1))
         INTAL=TR1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL SQUARW(C(JAS),CJ,NUMI)
         CALL AMBTCT(S(IAS),H1,CJ,NUMK,NUMI,NUMI)
C     CALL EMBTCT(SJ,C(IAS),H1,NUMI,NUMK,NUMI)
         CALL ATEMBC(SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(JAS),SJ,NUMI)
         GO TO 352
  351    CONTINUE
         IAS=IA+WTX(MN(KSYM+1)  ,IS+1)
         JAS=JA+WAB(MN(ISYM+1))
         INTAL=1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
         CALL SQUARW(C(JAS),CJ,NUMI)
C     CALL APBTCT(S(IAS),CJ,H1,NUMI,NUMI,NUMK)
         CALL ATPBC (S(IAS),H1,CJ,NUMK,NUMI,NUMI)
         CALL EBTCT (SJ,H1,C(IAS),NUMI,NUMK,NUMI)
         CALL FOLDW (S(JAS),SJ,NUMI)
  352 CONTINUE
      RETURN
C
C     ----- ISYM#JSYM, NEITHER IS SYMMETRIC -----
C
  360 CONTINUE
      DO 366 I=1,NSYM
         ISYM=I-1
         NUMI=NUMSYM(ISYM+1)
         IF (NUMI.LE.0) GO TO 366
         JSYM=IEOR(ISYM,IS)
         IF (JSYM.GE.ISYM) GO TO 366
         NUMJ=NUMSYM(JSYM+1)
         IF (NUMJ.LE.0) GO TO 366
         IAS=IA+WTX(MN(ISYM+1),IS+1)
         KSYM=IEOR(JSYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 363
C
C     ----- C(I,J) AND C(J,K) PART -----
C
         IF (KSYM.GE.JSYM) GO TO 361
         JAS=JA+WTW(MN(JSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
         CALL APBTCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBTCT(S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATPBC (S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 363
  361    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 362
         JAS=JA+WTW(MN(KSYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,ISYM,KSYM,NUMI,NUMK)
C     CALL APBC  (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL APBCTT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBCT (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL ATPBCT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
         GO TO 363
  362    CONTINUE
         JAS=JA+WTW(MN(KSYM+1),JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,ISYM,NUMK,NUMI)
C     CALL APBCT (S(JAS),C(IAS),H1,NUMJ,NUMI,NUMK)
         CALL ATPBCT(S(JAS),H1,C(IAS),NUMK,NUMI,NUMJ)
C     CALL APBC  (S(IAS),C(JAS),H1,NUMJ,NUMK,NUMI)
         CALL APBCTT(S(IAS),H1,C(JAS),NUMI,NUMK,NUMJ)
C
C     ----- C(I,J) AND C(I,K) PART -----
C
  363    CONTINUE
         KSYM=IEOR(ISYM,JS)
         NUMK=NUMSYM(KSYM+1)
         IF (NUMK.LE.0) GO TO 366
         IF (KSYM.GE.JSYM) GO TO 364
         JAS=JA+WTW(MN(ISYM+1),JS+1)
         INTAL=1
         CALL HIJ   (H1,JSYM,KSYM,NUMJ,NUMK)
         CALL AMBTC (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL AMBC  (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 366
  364    CONTINUE
         IF (KSYM.GE.ISYM) GO TO 365
         JAS=JA+WTW(MN(ISYM+1),JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
         CALL AMBC  (S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL AMBTC (S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
         GO TO 366
  365    CONTINUE
         JAS=JA+WTW(MN(KSYM+1),JS+1)
         INTAL=TR1
         CALL HIJ   (H1,KSYM,JSYM,NUMK,NUMJ)
C     CALL AMBTCT(S(JAS),C(IAS),H1,NUMI,NUMJ,NUMK)
         CALL ATMBC(S(JAS),H1,C(IAS),NUMK,NUMJ,NUMI)
         CALL AMBTCT(S(IAS),H1,C(JAS),NUMJ,NUMK,NUMI)
  366 CONTINUE
      RETURN
C
C
C
  398 CONTINUE
      WRITE(ITAPE6,399) ISEG
  399 FORMAT (//,' ***** ERROR IN XW ENTRY, ISEG=',I5,//)
      CALL MABORT
C
      END
      SUBROUTINE GETDRT(LEVPT,      AVAL,BVAL,ROWSYM,ARC
     #,                 NLWKS,              WEIGHT,WAB,WTW,WTX
     #,                 WTY,KADD,LADD,IJADD,IJGRP,ININT,INEXT,JMNNXT
     #,                 JMXNXT,NINGRP,ORBSYM,IMNGRP,IMXGRP,JMNGRP,JMXGRP
     #,                 IJXX,KLXX,NKLXX,IJWW,KLWW,NKLWW,END)
C
C
C
      IMPLICIT INTEGER (A-Z)
CTJL 1               WTX,WTY,KADD,LADD,IJADD,IJGRP,ININT,INEXT,JMNNXT,
CTJL 2               JMXNXT,NINGRP,ORBSYM,IMNGRP,IMXGRP,JMNGRP,JMXGRP,
CTJL 3               IJXX,KLXX,NKLXX,IJWW,KLWW,NKLWW
      REAL*8 CIVER,DRTVER,Q
C
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF,I34X
      COMMON /LBLS/ LBLINT(26),LBLDRT(26),CIVER,DRTVER
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /ALL/  Q(3),IQ,IX(6),LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
     #,             NUMSYM(8)
      COMMON /XX4X/   NIJVIR,NREFS
C
      DIMENSION LEVPT(NLEVS),AVAL(NROWS),BVAL(NROWS)
      DIMENSION ARC(NROWS4),NLWKS(NROWS),ROWSYM(NROWS)
      DIMENSION                WEIGHT(NROWS4),WAB(LVFRM1)
      DIMENSION WTW(LVFRM1,NSYM),WTX(LVFRM1,NSYM),WTY(LVFRM1)
      DIMENSION IJADD(NUMIJ),KADD(SYMORB),LADD(SYMORB)
      DIMENSION IJGRP(NUMIJ),ININT(NORBS),INEXT(NORBS)
      DIMENSION JMNNXT(NORBS),JMXNXT(NORBS),ORBSYM(NORBS)
      DIMENSION NINGRP(NGROUP),IMNGRP(NGROUP),IMXGRP(NGROUP)
      DIMENSION JMNGRP(NGROUP),JMXGRP(NGROUP)
      DIMENSION IJXX(NUMIJ ),KLXX(NIJVIR),NKLXX(NSYM,ORBFRM)
      DIMENSION IJWW(NUMIJ ),KLWW(NIJVIR),NKLWW(NSYM,ORBFRM)
C
      CALL WREADW(ITAP58,KADD,SYMORB,END,END)
      CALL WREADW(ITAP58,LADD,SYMORB,END,END)
      CALL WREADW(ITAP58,IJADD,NUMIJ,END,END)
      CALL WREADW(ITAP58,IJGRP,NUMIJ,END,END)
      CALL WREADW(ITAP58,ININT,NORBS,END,END)
      CALL WREADW(ITAP58,INEXT,NORBS,END,END)
      CALL WREADW(ITAP58,JMNNXT,NORBS,END,END)
      CALL WREADW(ITAP58,JMXNXT,NORBS,END,END)
      CALL WREADW(ITAP58,NINGRP,NGROUP,END,END)
      END=END+NBF
      CALL WREADW(ITAP58,ORBSYM,NORBS,END,END)
      END=END+NBF+NREFS*NBF+NORBS
      CALL WREADW(ITAP58,LEVPT,NLEVS,END,END)
      END=END+NLEVS
      CALL WREADW(ITAP58,AVAL,NROWS,END,END)
      CALL WREADW(ITAP58,BVAL,NROWS,END,END)
      CALL WREADW(ITAP58,ROWSYM,NROWS,END,END)
      CALL WREADW(ITAP58,ARC,NROWS4,END,END)
      CALL WREADW(ITAP58,NLWKS,NROWS,END,END)
      CALL WREADW(ITAP58,WEIGHT,NROWS4,END,END)
      CALL WREADW(ITAP58,WAB,LVFRM1,END,END)
      CALL WREADW(ITAP58,WTW,LVFRM1*NSYM,END,END)
      CALL WREADW(ITAP58,WTX,LVFRM1*NSYM,END,END)
      CALL WREADW(ITAP58,WTY,LVFRM1,END,END)
      CALL WREADW(ITAP58,IJXX,NUMIJ,END,END)
      CALL WREADW(ITAP58,KLXX,NIJVIR,END,END)
      CALL WREADW(ITAP58,NKLXX,NSYM*ORBFRM,END,END)
      CALL WREADW(ITAP58,IJWW,NUMIJ,END,END)
      CALL WREADW(ITAP58,KLWW,NIJVIR,END,END)
      CALL WREADW(ITAP58,NKLWW,NSYM*ORBFRM,END,END)
C
C
C
C     WRITE (ITAPE6,*) ' KADD '
C     WRITE (ITAPE6,710) KADD
C     WRITE (ITAPE6,*) ' LADD '
C     WRITE (ITAPE6,710) LADD
C     WRITE (ITAPE6,*) ' IJADD'
C     WRITE (ITAPE6,710) IJADD
C     WRITE (ITAPE6,*) ' IJGRP'
C     WRITE (ITAPE6,710) IJGRP
C     WRITE (ITAPE6,*) ' ININT'
C     WRITE (ITAPE6,710) ININT
C     WRITE (ITAPE6,*) ' INEXT'
C     WRITE (ITAPE6,710) INEXT
C     WRITE (ITAPE6,*) ' JMNNXT'
C     WRITE (ITAPE6,710) JMNNXT
C     WRITE (ITAPE6,*) ' JMXNXT'
C     WRITE (ITAPE6,710) JMXNXT
C     WRITE (ITAPE6,*) ' NINGRP'
C     WRITE (ITAPE6,710) NINGRP
C     WRITE (ITAPE6,*) ' ORBSYM'
C     WRITE (ITAPE6,710) ORBSYM
C     WRITE (ITAPE6,*) ' LEVPT'
C     WRITE (ITAPE6,710) LEVPT
C     WRITE (ITAPE6,*) ' AVAL '
C     WRITE (ITAPE6,710) AVAL
C     WRITE (ITAPE6,*) ' BVAL '
C     WRITE (ITAPE6,710) BVAL
C     WRITE (ITAPE6,*) ' ROWSYM'
C     WRITE (ITAPE6,710) ROWSYM
C     WRITE (ITAPE6,*) ' ARC  '
C     WRITE (ITAPE6,710) ARC
C     WRITE (ITAPE6,*) ' NLWKS'
C     WRITE (ITAPE6,710) NLWKS
C     WRITE (ITAPE6,*) ' WIEGHT'
C     WRITE (ITAPE6,710) WEIGHT
C     WRITE (ITAPE6,*) ' WAB  '
C     WRITE (ITAPE6,710) WAB
C     WRITE (ITAPE6,*) ' WTW  '
C     WRITE (ITAPE6,710) WTW
C     WRITE (ITAPE6,*) ' WTX  '
C     WRITE (ITAPE6,710) WTX
C     WRITE (ITAPE6,*) ' WTY  '
C     WRITE (ITAPE6,710) WTY
C     WRITE (ITAPE6,*) ' IJXX '
C     WRITE (ITAPE6,710) IJXX
C     WRITE (ITAPE6,*) ' KLXX '
C     WRITE (ITAPE6,710) KLXX
C     WRITE (ITAPE6,*) ' NKLXX'
C     WRITE (ITAPE6,710) NKLXX
C     WRITE (ITAPE6,*) ' IJWW '
C     WRITE (ITAPE6,710) IJWW
C     WRITE (ITAPE6,*) ' KLWW '
C     WRITE (ITAPE6,710) KLWW
C     WRITE (ITAPE6,*) ' NKLWW'
C     WRITE (ITAPE6,710) NKLWW
C
C
C
  710 FORMAT (20I5)
    9 CONTINUE
      NFRMIN=LEVPT(LEVFRM)+1
      NLWKMX=0
      DO 10 I=NFRMIN,NROWOC
         IF(NLWKS(I).GT.NLWKMX) NLWKMX=NLWKS(I)
   10 CONTINUE
      IBLK=1
      IMXGRP(IBLK)=NORBS
      JMXGRP(IBLK)=NORBS
      DO 25 I=NORBS,1,-1
         DO 20 J=I,1,-1
            IJ=I*(I-1)/2+J
C     PRINT '(' I,J',2I3,' IBLK AND IJGRP(IJ)',2I3)',I,J,IBLK,IJGRP(IJ)
            IF(IJGRP(IJ).EQ.IBLK) GO TO 20
            IF (I.EQ.J.AND.I.NE.IMXGRP(IBLK)) GO TO 22
            IMNGRP(IBLK)=I
            JMNGRP(IBLK)=J+1
            GO TO 24
  22        CONTINUE
            IMNGRP(IBLK)=I+1
            JMNGRP(IBLK)=1
  24        CONTINUE
            IBLK=IBLK+1
            IMXGRP(IBLK)=I
            JMXGRP(IBLK)=J
  20     CONTINUE
  25  CONTINUE
      IMNGRP(NGROUP)=1
      JMNGRP(NGROUP)=1
C     PRINT '(' IMX ',(20I3))',IMXGRP
C     PRINT '(' IMN ',(20I3))',IMNGRP
C     PRINT '(' JMX ',(20I3))',JMXGRP
C     PRINT '(' JMN ',(20I3))',JMNGRP
      IF(IBLK.EQ.NGROUP) GO TO 35
      WRITE(ITAPE6,30)IBLK,NGROUP
  30  FORMAT(1H ,'ERROR IN NUMBER OF BLOCKS,IBLK=',I3,' NGROUP=',I3)
      CALL MABORT
  35  CONTINUE
      DO 40 I=1,NSYM
         MINSYM(I)=1000
   40 MAXSYM(I)=0
      MINSYM(1)=1
      ISM=ORBSYM(1)
      DO 45 I=2,LVFRM1
         IF(ORBSYM(I).EQ.ISM) GO TO 45
         MAXSYM(ISM)=I-1
         ISM=ORBSYM(I)
         MINSYM(ISM)=I
   45 CONTINUE
      MAXSYM(ISM)=LVFRM1
      IF(IPRINT.GT.1) WRITE(ITAPE6,50) (MINSYM(J),J=1,NSYM)
   50 FORMAT(1H ,'MINSYM = ',8I9)
      IF(IPRINT.GT.1) WRITE(ITAPE6,55) (MAXSYM(J),J=1,NSYM)
   55 FORMAT(1H ,'MAXSYM = ',8I9)
      RETURN
      END
      SUBROUTINE INITLP
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON /LOOPS/NUWK,PUWKT,IUWK,JUWK,ITRACK,IPT1,IPT2
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /ALL/  VAL1,VAL2,VAL3,ARR,ITR1,ITR2,IA,JA,ITYPE,ISEG
     *,             LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /RSTRT/  IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      INTEGER PUWK,ARR,REFWLK,PUWKT,SYMORB,BMAX,ORBFRM
      LOGICAL PAGEIN
      DIMENSION ITRAK(2,10),ITYPE1(4,4)
      DATA ITRAK/1,0,2,0,3,0,1,3,3,2,3,2,3,1,0,0,1,2,2,1/
      DATA ITYPE1/1,4,8,-1,5,2,7,-1,6,9,3,10,11,12,13,17/
      NWKDV2=NWKSMX/2
      RETURN
C
C-----------------------------------------------------------LOOPIN
C
      ENTRY LOOPIN
C
C     WRITE(ITAPE3,*) ' ENTRY LOOPIN'
      PUWK=PUWKT
      ITR1=ITRAK(1,ITRACK)
      ITR2=ITRAK(2,ITRACK)
      IF(ITR2.EQ.0) VAL2=0.0D+00
      IF(ITRACK.EQ.6) VAL2=1.0D+00
      IF(ITRACK.EQ.7) VAL2=1.0D+00
      IF(NDVDIT.GT.0) GO TO 25
      ITYPE=7
      IF(IUWK.NE.JUWK) RETURN
      JA=PUWKT+IUWK
      IF(PAGEIN) GO TO 21
      NLWKT=NLWKI
      JA=1
   20 IF(NLWKT.LE.0)RETURN
      NLWKI=MIN(NLWKT,NWKSMX)
      CALL PAGED
      CALL DIAGNL
      CALL PAGEOT
      NLWKT=NLWKT-NLWKI
      IUWK=IUWK+NLWKI
      GO TO 20
   21 JA=JA-NOFFJ
      CALL DIAGNL
      RETURN
   25 IF(IUWK.EQ.JUWK) RETURN
      ITYPE=18
      IF(ITRACK.EQ.8)ITYPE=19
      IA=PUWKT+IUWK
      JA=PUWKT+JUWK
      IF(PAGEIN) GO TO 27
      IA=1
      NLWKT=NLWKI
   26 IF(NLWKT.LE.0)RETURN
      NLWKI=MIN(NLWKT,NWKDV2)
      NLWKJ=NLWKI
      JA=NLWKI+1
      CALL PAGEO
      CALL EXTERN
      CALL PAGEOT
      IUWK=IUWK+NLWKI
      JUWK=JUWK+NLWKI
      NLWKT=NLWKT-NLWKI
      GO TO 26
   27 JA=JA-NOFFJ
      IA=IA-NOFFI
      CALL EXTERN
      RETURN
C
C-------------------------------------------------------LOOPEX
C
      ENTRY LOOPEX
C
C     WRITE(ITAPE3,*)' ENTRY LOOPEX'
      ITR1=ITRAK(1,ITRACK)
      ITR2=ITRAK(2,ITRACK)
      ITYPE=ITYPE1(IPT2,IPT1)
      IF(ITRACK.EQ.6) VAL2=1.0D+00
      IF(ITRACK.EQ.7) VAL2=1.0D+00
      IF(ITR2.EQ.0) VAL2=0.0D+00
      IF(NDVDIT.GT.0) GO TO 40
      IF(IUWK.NE.JUWK) RETURN
      JA=PUWKT+JUWK-NOFFJ
      CALL DIAGNL
      RETURN
C   CALCULATE NON-DIAGONAL PARTIAL EXTERNALS
   40 CONTINUE
      IF(NDVDIT.GT.1) GO TO 45
      IF(IGUESS.EQ.0.AND.ITYPE.LT.10) RETURN
   45 CONTINUE
      IA=PUWKT+IUWK-NOFFI
      JA=PUWKT+JUWK-NOFFJ
      CALL EXTERN
      RETURN
C
C--------------------------------------------------------ALLEXT
C
C   CALCULATE ALL-EXTERNAL CONTRIBUTIONS
      ENTRY ALLEXT
C
C     WRITE(ITAPE3,*) ' ENTRY ALLEXT'
      IF(NDVDIT.GT.0) GO TO 80
      ITYPE=ITYPE+3
      JA=PUWKT-NOFFI
      IA=JA
      CALL DIAGNL
      RETURN
   80 ITYPE=13+ITYPE
      IA=PUWKT-NOFFI
      JA=PUWKT-NOFFJ
      CALL FOURX
      RETURN
      END
      SUBROUTINE FDIAG(INTS,V,D,DVDMAT)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 INT(100)
      REAL*8 D(NWKSMX),V(NWKSMX),INTS(NMAX),DVDMAT(LOWTRI)
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /ALL/  VAL1,VAL2,VAL3,ARR,ITR1,ITR2,IA,JA,ITYPE,ISEGT
     *,             LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /RSTRT/  IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      DIMENSION IJUNK(100)
      LOGICAL PAGEIN
      INTEGER ARR,REFWLK,SYMORB,BMAX,FWORD,FWORD2,ORBFRM
clj120788 begin.
      integer gugref,ierr
clj120788 end.
      SQCDIF=1.0D+00
      EGUESS=0.0D+00
      ICNVG=-1
clj120788 begin.
      call locate(5,'# GUGAREF ',ierr)
      if (ierr .eq. 0) then
        read(5,*) gugref
        write(6,*) ' ''# GUGAREF #'' found-using alternate reference'
      else
        gugref = 0
        endif
      refwlk = -1
clj120788 end.
C   PREPARE FOR UNIT GUESS ON LOWEST DIAGONAL MATRIX ELEMENT
      JJ=0
      NWKMX2=NWKSMX+NWKSMX
      NWORD=NWKMX2
      FWORD=1
      DO 60 I=1,NPASS
         IF(I.EQ.NPASS) NWORD=NWORDL
         CALL WREADW(ITAP94,D,NWORD,FWORD,JUNK)
         DO 50 J=1,NWORD/2
clj120788 begin.
            if (jj+j.eq.gugref) then
              refwlk = gugref
              eguess = d(j)
              goto 40
            else if (gugref .gt. 0) then
              goto 40
              endif
clj120788 end.
            IF(D(J).GT.EGUESS) GO TO 40
            REFWLK=JJ+J
            EGUESS=D(J)
  40        D(J)=0.0D+00
  50     CONTINUE
         JJ=JJ+NWORD/2
         IF(IRSTRT.NE.0) CALL WWRITW(ITAP96,D,NWORD,FWORD,JUNK)
         FWORD=FWORD+NWORD
  60  CONTINUE
clj120788 begin.
      if (refwlk .le. 0) then
        write(6,*) 'fdiag: no reference walk was found'
        stop
        endif
clj120788 end.
      IWORD4=NWKS2+1
      IF(IRSTRT.EQ.0) IWORD6=IWORD4
      EGUESS=EGUESS+REP+FZCORE
      WRITE(ITAPE6,70)REFWLK
  70  FORMAT(1H ,'REFERENCE CONFIGURATION   =',I10)
      WRITE(ITAPE6,80)EGUESS
  80  FORMAT(1H ,'REFERENCE ENERGY          = ',G16.10)
      IF(IRSTRT.GT.0) GO TO 300
      ITER=0
      IF(IGUESS.NE.0) GO TO 200
C   USE A UNIT VECTOR AS A STARTING GUESS
      ECI=EGUESS
      NROOT=1
      NDVDIT=1
      WRITE(ITAPE6,100)
 100  FORMAT(/,1H ,'UNIT VECTOR USED AS A STARTING GUESS')
C   WRITE OUT VECTOR FOR DAVIDSON ALGORITHM
      FWORD=REFWLK+REFWLK-1
      ONE=1.0D+00
      CALL WWRITW(ITAP99,ONE,INTOWP(1),FWORD,JUNK)
      IF(NWKS.LE.NWKSMX) V(REFWLK)=1.0D+00
C   PREPARE FINAL VECTOR FILE
CSEL  NSECT=NROOTS*I2SEC(NWKS2)+I2SEC(112)
CSEL  CALL WFILE(ITAP54,NSECT)
CSEL  CALL ZFILE(ITAP54,NSECT)
      CALL SREW(ITAP54)
C   DO PARTIAL ITERATION FOR REFERENCE INTERACTIONS
      IF(NGROUP.EQ.1) GO TO 110
      CALL SREW(ITAP52)
      CALL RSETSA(ITAP52,INTSRT)
      CALL SREAD(ITAP52,INTS,NMAX2)
  110 CALL LOOPY
      CALL DAVIDS
      RETURN
C   READ IN OLD VECTOR FROM ITAP54 AS A STARTING GUESS
  200 CONTINUE
      IF(IGUESS.GT.0) GO TO 205
      NVEC=-IGUESS
      WRITE(ITAPE6,201) NVEC
  201 FORMAT(1X,'READING ',I2,' APPROXIMATE VECTOR(S) FROM INPUT.')
      GO TO 210
  205 CONTINUE
      NVEC=IGUESS
      WRITE(ITAPE6,206) IGUESS
  206 FORMAT(1X,'READING ',I2,' OLD VECTOR(S) FROM TAPE 12.')
      CALL SREW(ITAP54)
      CALL DCDLBL(ITAP54,IJUNK,IJUNK,REFWLK,IJUNK,NREFS,EGOLD
     *,           ECIOLD,CZERO)
      WRITE(ITAPE6,207) REFWLK,ECIOLD
  207 FORMAT(1X,'OLD REFERENCE=',I8,/,' OLD CI RESULT=',G17.11)
  210 CONTINUE
      NROOT=IROOTI
      IF(NROOT.GT.NVEC) NROOT=NVEC
      NDVDIT=NVEC
      FWORD=IROUND(112)+1
      FWORD2=1
      DO 230 I=1,NVEC
         IF(IGUESS.GT.0) GO TO 215
         WRITE(ITAPE6,211) I
  211    FORMAT(1X,'VECTOR ',I2)
         CALL NORMAL(IJUNK,D,V,FWORD2)
         RENORM=1.0D+00
         FWORD2=FWORD2+NWKS2
         GO TO 225
  215    CONTINUE
         NWORD=NWKMX2
         RENORM=0.0D+00
         DO 220 J=1,NPASS
            IF(J.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/2
            DO 216 K=1,NLOOP
  216       RENORM=RENORM+V(K)*V(K)
            CALL WREADW(ITAP54,V,NWORD,FWORD,FWORD)
  220    CALL WWRITW(ITAP99,V,NWORD,FWORD2,FWORD2)
  225    IF(I.EQ.1) GO TO 230
         CALL ORTHOG(D,V,INTS,I,RENORM)
  230 CONTINUE
      IF(NVEC.EQ.1) RETURN
      DO 235 J=1,NWKSMX
  235 D(J)=0.0D+00
      FWORD2=1
      IF(NPASS.EQ.1) CALL WREADW(ITAP99,V,NWKS2,FWORD2,JUNK)
      DO 280 I=1,NVEC-1
         CALL SREW(ITAP52)
         CALL RSETSA(ITAP52,INTSRT)
         CALL SREAD(ITAP52,INTS,NMAX2)
         CALL LOOPY
         OFFSET=1
         NWORD=NWKMX2
         DO 270 J=1,NPASS
            IF(J.EQ.NPASS) NWORD=NWORDL
            NLOOP=NWORD/2
            FWORD=OFFSET
            KSIZE=(I-1)*I/2
            CALL WREADW(ITAP94,D,NWORD,FWORD,JUNK)
            CALL WREADW(ITAP99,V,NWORD,FWORD2,JUNK)
            DO 240 K=1,NLOOP
               V(K)=V(K)*D(K)
  240       CONTINUE
            FWORD2=FWORD2+NWKS2
            CALL WREADW(ITAP94,D,NWORD,FWORD2,JUNK)
            DO 245 K=1,NLOOP
               V(K)=V(K)+D(K)
  245       CONTINUE
            DO 260 L=1,I
               Z=0.0D+00
               KSIZE=KSIZE+1
               CALL WREADW(ITAP99,D,NWORD,FWORD,JUNK)
               DO 250 K=1,NLOOP
                  Z=Z+V(K)*D(K)
  250          CONTINUE
               DVDMAT(KSIZE)=DVDMAT(KSIZE)+Z
               FWORD=FWORD+NWKS2
  260       CONTINUE
            OFFSET=OFFSET+NWORD
  270    FWORD2=FWORD2+NWORD-NWKS2
         IWORD4=IWORD4+NWKS2
         IWORD3=IWORD3+NWKS2
         IF(NWKS.EQ.NWKSMX) CALL WREADW(ITAP99,V,NWKS2,IWORD3,JUNK)
         IF(IRSTRT.EQ.0) IWORD6=IWORD4
         DO 280 K=1,NWKSMX
            D(K)=0.0D+00
  280 CONTINUE
      RETURN
C
C   READ IN RESTART INFORMATION AND STARTED MID INTERATION
 300  CONTINUE
      IRSTRT=-1
      WRITE(ITAPE6,310) ITER
 310  FORMAT(1H ,80('*')/'0CALCULATION RESTARTED FROM ITERATION',I4)
      CALL DAVIDS
      DELTA=ECI-EGUESS
      WRITE(ITAPE6,320)NROOT,ITER,ECI,DELTA,SQCDIF
 320  FORMAT(1H ,'ROOT',I3,' ITER',I3,' ENERGY ',G17.9 ,' DELTA ',E9.3
     *,      ' SQCDIF ',E9.3)
      RETURN
      END
      SUBROUTINE ROOTS(INTS,V,S,ROOT)
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 INTS(NMAX),V(NWKSMX),S(NWKSMX),ROOT(NROOTS)
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      INTEGER REFWLK,SYMORB,BMAX,FWORD,ORBFRM
C   RESET INTEGRALS FOR NEXT ITERATION
   10 IF(NGROUP.EQ.1) GO TO 15
      CALL SREW(ITAP52)
      CALL RSETSA(ITAP52,INTSRT)
      CALL SREAD(ITAP52,INTS,NMAX2)
   15 ITER=ITER+1
      CALL LOOPY
CTJL MODIFIED TO GET REFERENCE COEFFICIENT BEFORE CALLING DAVIDS
CTJL           8/3/85
      FWORD=INTOWP(REFWLK-1)+IROUND(112)+1
      CALL WREADW(ITAP54,CZERO,INTOWP(1),FWORD,JUNK)
      CALL DAVIDS
      IF(ICNVG.EQ.0) GO TO 110
      IF(ITER.LT.MXITER) GO TO 10
      WRITE(ITAPE6,30)
   30 FORMAT(1H ,'ITERATIONS EXHAUSTED, CALCULATION DID NOT CONVERGE')
C   CALCULATE DAVIDSON CORRECTION TO ENERGY
  110 FWORD=INTOWP(REFWLK-1)+IROUND(112)+1
      CALL WREADW(ITAP54,CZERO,INTOWP(1),FWORD,JUNK)
      DO 120 I=1,NROOTS
  120 ROOT(I)=ROOT(I)+REP+FZCORE
      EDVDSN=ROOT(1)+(ROOT(1)-EGUESS)*(1.0D+00-CZERO*CZERO)
C   WRITE FINAL CALCULATION DATA
      WRITE(ITAPE6,130)
  130 FORMAT(/,1H*,8('**********')/)
      WRITE(ITAPE6,140)EGUESS
  140 FORMAT(6X,'CALCULATION RESULTS',/,1H ,'EGUESS        = ',F20.12)
      WRITE(ITAPE6,150)(I,ROOT(I),I=1,NROOTS)
  150 FORMAT(1H ,'ROOT',I3,' ECI   = ',F20.12)
      WRITE(ITAPE6,160)
  160 FORMAT(/,1H ,'DAVIDSON CORRECTION FOR LOWEST ROOT')
      WRITE(ITAPE6,170)CZERO
  170 FORMAT(1H ,3X,'REFERENCE COEFFICIENT = ',F20.12)
      WRITE(ITAPE6,180)EDVDSN
  180 FORMAT(1H ,3X,'CORRECTED ENERGY      = ',F20.12,/)
      RETURN
      END
      SUBROUTINE START(DVDMAT,INTS,SIGMA,VECTOR)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 DVDMAT(LOWTRI),SIGMA(NWKSMX),VECTOR(NWKSMX)
      REAL*8 INTS(NMAX)
      INTEGER FWORD,FWORD2,BMAX,REFWLK,ORBFRM,SYMORB,FCB106(16)
      LOGICAL PAGEIN
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /RSTRT/  IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
C
      DATA IFLAG1,IFLAG2/-99999999,0/
CTJL  DATA IFLAG1,IFLAG2/X'ABCDEF01',0/
      INXT=1
      ITER=0
      NDVDIT=0
      IBLCK1=1
      NWKMX2=NWKSMX*2
      IF(IRSTRT.NE.0) ITAP96=96
CTJL  CALL RFILE(ITAP96)
CTJL  CALL SREW(ITAP96)
      IF(IRSTRT.LE.0) RETURN
      READ(ITAP95)NDVDIT,ITER,NROOT
      READ(ITAP95) DVDMAT
      READ(ITAP95) IBLCK1,INXT
      READ(ITAP95) IFLAG
      KSIZE=ITER*(ITER-1)/2
      KSIZE=NDVDIT*(NDVDIT-1)/2
      WRITE(ITAPE6,1)
    1 FORMAT(1X,'RESTART DATA'/' NDVDIT ITER NROOT IBLCK1 INXT')
      WRITE(ITAPE6,2)NDVDIT,ITER,NROOT,IBLCK1,INXT
    2 FORMAT(1X,I4,I6,I5,I7,I6)
      WRITE(ITAPE6,3)
    3 FORMAT(1X,'DAVIDSON MATRIX')
      K=0
      DO 5 I=1,NDVDIT-1
         WRITE(ITAPE6,4)(DVDMAT(J+K),J=1,I)
    4    FORMAT(5(1X,G15.9))
         K=K+I
    5 CONTINUE
      DO 10 I=KSIZE+1,LOWTRI
   10 DVDMAT(I)=0.0D+00
      IWORD4=1+NDVDIT*NWKS2
      IWORD3=IWORD4-NWKS2
      IF(INXT.LE.NORBS) GO TO 40
      WRITE(ITAPE6,20)
   20 FORMAT(1X,'ITERATION HAD BEEN COMPLETED. SIMPLY DO DAVIDSON.')
      ECI=EGUESS
      CALL DAVIDS
      INXT=1
      RETURN
   40 CONTINUE
C*************** TJL
      WRITE(ITAPE3,*) ' IFLAG,IFLAG1 = ',IFLAG,IFLAG1
      IF(IFLAG.NE.IFLAG1) GO TO 70
C   PROGRAM DIED WHILE WRITING 106=>104, ITERATION SPOILED
      WRITE(ITAPE6,41)
   41 FORMAT(1X,'PROGRAM DIED WHILE WRITTING, ITERATION RESTARTED.')
      INXT=1
      IBLCK1=1
      DO 50 I=1,NWKSMX
   50 SIGMA(I)=0.0D+00
      FWORD=IWORD4
      NWORD=NWKMX2
      DO 60 I=1,NPASS
         IF(I.EQ.NPASS) NWORD=NWORDL
         CALL WWRITW(ITAP94,SIGMA,NWORD,FWORD,FWORD)
   60 CONTINUE
      RETURN
   70 NWORD=NWKMX2
      FWORD=IWORD4
      FWORD2=1
      DO 80 I=1,NPASS
         IF(I.EQ.NPASS) NWORD=NWORDL
         CALL WREADW(ITAP94,SIGMA,NWORD,FWORD,FWORD)
         CALL WWRITW(ITAP96,SIGMA,NWORD,FWORD2,FWORD2)
   80 CONTINUE
      IF(NWKS.LE.NWKSMX) CALL WREADW(ITAP99,VECTOR,NWKS2,IWORD3
     #,                             JUNK)
      RETURN
      ENTRY SAVE
      BACKSPACE ITAP95
      WRITE(ITAP95) IBLOCK,INXT
      WRITE(ITAP95) IFLAG1
      BACKSPACE ITAP95
      FWORD=1
      FWORD2=IWORD4
      NWORD=NWKMX2
      DO 110 I=1,NPASS
         IF(I.EQ.NPASS) NWORD=NWORDL
         CALL WREADW(ITAP96,SIGMA,NWORD,FWORD,FWORD)
         CALL WWRITW(ITAP94,SIGMA,NWORD,FWORD2,FWORD2)
  110 CONTINUE
      WRITE(ITAP95) IFLAG2
      BACKSPACE ITAP95
      RETURN
      END
      SUBROUTINE VECOUT(C,S,E,NDVDMX,CONVGD)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 E(NDVDMX,NROOTS),C(NWKSMX),S(NWKSMX)
      INTEGER REFWLK,OFFSET,BMAX,ORBFRM,FWORD,FWORD2
      LOGICAL PAGEIN
      LOGICAL CONVGD
C
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /LBLS/ IDENT(26),LBLDRT(26),CIVER,DRTVER
      COMMON /RSTRT/IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
C
      DATA SMALL /0.022D+00/
C
      NWKMX2=NWKSMX+NWKSMX
C
C   CREATE COMPLETE NORMALIZED VECTOR
      NWORD=NWKMX2
      OFFSET=IROUND(112)+1+(NROOT-1)*NWKS2
      FWORD2=1
      ICOUNT=0
      DO 50 K=1,NPASS
         IF(K.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/2
         DO 20 I=1,NLOOP
   20    C(I)=0.0D+00
         FWORD=FWORD2
         DO 40 I=1,NDVDIT
            CALL WREADW(ITAP99,S,NWORD,FWORD,LWORD)
            FWORD=FWORD+NWKS2
            EI=E(I,NROOT)
            DO 30 J=1,NLOOP
   30       C(J)=C(J)+EI*S(J)
   40    CONTINUE
C
C     ----- FIND ALL COEFFICIENTS GREATER THAN 'SMALL' -----
C
         IF (.NOT.CONVGD) GO TO 46
         DO 44 J=1,NLOOP
            ICOUNT=ICOUNT+1
            IF (ABS(C(J)).GT.SMALL) WRITE(ITAPE6,43)ICOUNT,C(J)
   44    CONTINUE
   43    FORMAT('   WALK #',I8,' COEFFICIENT ',F20.10)
C
   46    CONTINUE
      CALL SREW(ITAP54)
CTJL  WRITE(*,*) ' IX,EGUESS,ECI,CZERO '
CTJL  WRITE(*,*)  IX,EGUESS,ECI,CZERO
      CALL NCDLBL(ITAP54,IDENT,LBLDRT,REFWLK,IX,IX,EGUESS,ECI,CZERO)
C
C
C
         CALL WWRITW(ITAP54,C,NWORD,OFFSET,JUNK)
         OFFSET=OFFSET+NWORD
         FWORD2=FWORD2+NWORD
   50 CONTINUE
CTJL
         CALL RCLOSE(ITAP54,3)
         CALL RFILE(ITAP54)
CTJL
      IF(NROOT.GT.1) RETURN
C     CALL SREW(ITAP54)
C     WRITE(*,*) ' IX,EGUESS,ECI,CZERO '
C     WRITE(*,*)  IX,EGUESS,ECI,CZERO
C     CALL NCDLBL(ITAP54,IDENT,LBLDRT,IX,IX,IX,EGUESS,ECI,CZERO)
      RETURN
      END
      SUBROUTINE NORMAL(IWALK,WGT,VEC2,FWORD)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION IWALK(100),WGT(100),VEC2(NWKSMX)
      INTEGER FWORD,BMAX,ORBFRM
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      READ(ITAPE5,5) NWALK
    5 FORMAT(I5)
      IF(NWALK.GT.100) THEN
          WRITE(ITAPE6,*) ' NWALK.GT.100'
          CALL MABORT
      END IF
      WRITE(ITAPE6,6)NWALK
    6 FORMAT(1X,I3,' ELEMENTS IN GUESS.')
      RENORM=0.0D+00
      DO 15 I=1,NWALK
         READ(ITAPE5,10) IWALK(I),WGT(I)
   10    FORMAT(I5,F10.6)
C        WRITE(ITAPE6,11) IWALK(I),WGT(I)
   11    FORMAT(1X,I5,F10.6)
   15 RENORM=RENORM+WGT(I)*WGT(I)
      RENORM=DSQRT(RENORM)
      DO 20 I=1,NWKSMX
   20 VEC2(I)=0.0D+00
      DO 25 I=1,NWALK
         WGT(I)=WGT(I)/RENORM
         IF(IWALK(I).LT.NWKSMX) VEC2(IWALK(I))=WGT(I)
         IWORD=FWORD+(IWALK(I)-1)*2
   25 CALL WWRITW(ITAP99,WGT(I),2,IWORD,JUNK)
      RETURN
      END
      SUBROUTINE ORTHOG(VEC1,VEC2,PROD,NVEC,ANORM)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION VEC1(NWKSMX),VEC2(NWKSMX),PROD(NVEC)
      INTEGER BMAX,ORBFRM
      LOGICAL PAGEIN
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      NWKMX2=NWKSMX+NWKSMX
      NWORD=NWKMX2
      DO 10 I=1,NVEC
   10 PROD(I)=0.0D+00
      IWORD=1+(NVEC-1)*NWKS2
      IWORD1=1
      DO 40 K=1,NPASS
         IF(K.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/2
         IF(NPASS.GT.1) CALL WREADW(ITAP99,VEC2,NWORD,IWORD,IWORD)
         IWORD2=IWORD1
         DO 30 I=1,NVEC-1
            CALL WREADW(ITAP99,VEC1,NWORD,IWORD2,JUNK)
            Z=0.0D+00
            DO 20 L=1,NLOOP
   20       Z=Z+VEC1(L)*VEC2(L)
            PROD(I)=PROD(I)+Z
   30    IWORD2=IWORD2+NWKS2
   40 IWORD1=IWORD1+NWKMX2
      IWORD=1+(NVEC-1)*NWKS2
      IWORD1=1
      NWORD=NWKMX2
CC    PRINT *,'PRODUCT=',PROD
      DO 70 K=1,NPASS
         IF(K.EQ.NPASS) NWORD=NWORDL
         NLOOP=NWORD/2
         IF(NPASS.GT.1) CALL WREADW(ITAP99,VEC2,NWORD,IWORD,JUNK)
         IWORD2=IWORD1
         RENORM=ANORM
         DO 60 I=1,NVEC-1
            CALL WREADW(ITAP99,VEC1,NWORD,IWORD2,JUNK)
            Z=PROD(I)
            RENORM=1.0D+00/DSQRT(RENORM-Z*Z)
            DO 50 L=1,NLOOP
   50       VEC2(L)=(VEC2(L)-Z*VEC1(L))*RENORM
            RENORM=1.0D+00
   60    IWORD2=IWORD2+NWKS2
         CALL WWRITW(ITAP99,VEC2,NWORD,IWORD,IWORD)
CC    PRINT *,'FINAL VECTOR'
CC    PRINT *,VEC2
   70 IWORD1=IWORD1+NWKMX2
      RETURN
      END
      SUBROUTINE INIMAT(INT,IJADD,KADD,LADD,H1,H2)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
      INTEGER SYMORB,ARR,ORBFRM,ASM,OS,BMAX
      REAL*8 INT
C
      COMMON /COEFS/  A,B,INTAL,INTAU,INTB,INTAD,INTBD
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /DIMS/   NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     #,               NROWOC,LEVFRM
     #,               NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /ALL/    VAL1,VAL2,VAL3,ARR,ITR1,ITR2,IA,JA,ITYPE,ISEGT
     #,               LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
      COMMON /SYMM/   ASM,JS,IS,MX(8),MN(8),OS(8),NUMSYM(8)
C
      DIMENSION INT(NMAX),IJADD(NUMIJ),KADD(SYMORB),LADD(SYMORB)
C     DIMENSION HIIM (1),HIISM(1),HIJM (1),HIM(1),HSM(1)
      DIMENSION H1(1),H2(1)
C
      DATA ACRCY /1.0D-09/
C
      RETURN
C
C*********************************** HII *******************************
C
      ENTRY HII(H1,ISYM,NUMI)
C
      LAD=ARR+KADD(OS(ASM+1)+MN(ISYM+1))
C
      IF (ABS(A).LT.ACRCY) GO TO 110
      IF (ABS(B).LT.ACRCY) GO TO 120
C
      JISV=1
      DO 102 I=1,NUMI
         JI=JISV
         IJ=I
         DO 101 J=1,I-1
            T=B*INT(LAD+INTB)
            H1(IJ)=T+A*INT(LAD+INTAL)
            H1(JI)=T+A*INT(LAD+INTAU)
            LAD=LAD+3
            IJ=IJ+NUMI
            JI=JI+1
  101    CONTINUE
         H1(IJ)=B*INT(LAD+INTBD)+A*INT(LAD+INTAD)
         LAD=LAD+3
         JISV=JISV+NUMI
  102 CONTINUE
      RETURN
C
  110 CONTINUE
      JISV=1
      DO 112 I=1,NUMI
         JI=JISV
         IJ=I
         DO 111 J=1,I-1
            T=B*INT(LAD+INTB)
            H1(IJ)=T
            H1(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
  111    CONTINUE
         H1(IJ)=B*INT(LAD+INTBD)
         JISV=JISV+NUMI
         LAD=LAD+3
  112 CONTINUE
      RETURN
C
  120 CONTINUE
      JISV=1
      DO 122 I=1,NUMI
         JI=JISV
         IJ=I
         DO 121 J=1,I-1
            H1(IJ)=A*INT(LAD+INTAL)
            H1(JI)=A*INT(LAD+INTAU)
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
  121    CONTINUE
         H1(IJ)=A*INT(LAD+INTAD)
         JISV=JISV+NUMI
         LAD=LAD+3
  122 CONTINUE
C
      RETURN
C
C************************************ HIIS *****************************
C
      ENTRY HIIS(H1,ISYM,NUMI)
C
      LAD=ARR+KADD(OS(ASM+1)+MN(ISYM+1))
C
      IF (ABS(A).LT.ACRCY) GO TO 210
      IF (ABS(B).LT.ACRCY) GO TO 220
C
      JISV=1
      DO 202 I=1,NUMI
         JI=JISV
         IJ=I
         DO 201 J=1,I-1
            T=B*INT(LAD+INTB )+A*INT(LAD+INTAL)
            H1(IJ)=T
            H1(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
  201    CONTINUE
         H1(IJ)=0.0
         JISV=JISV+NUMI
         LAD=LAD+3
  202 CONTINUE
C
      RETURN
C
  210 CONTINUE
      JISV=1
      DO 212 I=1,NUMI
         JI=JISV
         IJ=I
         DO 211 J=1,I-1
            T=B*INT(LAD+INTB)
            H1(IJ)=T
            H1(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
  211    CONTINUE
         H1(IJ)=0.0
         JISV=JISV+NUMI
         LAD=LAD+3
  212 CONTINUE
C
      RETURN
C
  220 CONTINUE
      JISV=1
      DO 222 I=1,NUMI
         JI=JISV
         IJ=I
         DO 221 J=1,I-1
            T=A*INT(LAD+INTAL)
            H1(IJ)=T
            H1(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
  221    CONTINUE
         H1(IJ)=0.0
         JISV=JISV+NUMI
         LAD=LAD+3
  222 CONTINUE
C
      RETURN
C
C
C*********************************** HII2 ******************************
C
      ENTRY HII2(H2,ISYM,NUMI)
C
      LAD=ARR+KADD(OS(ASM+1)+MN(ISYM+1))
C
      IF (ABS(A).LT.ACRCY) GO TO 1110
      IF (ABS(B).LT.ACRCY) GO TO 1120
C
      JISV=1
      DO 1102 I=1,NUMI
         JI=JISV
         IJ=I
         DO 1101 J=1,I-1
            T=B*INT(LAD+INTB)
            H2(IJ)=T+A*INT(LAD+INTAL)
            H2(JI)=T+A*INT(LAD+INTAU)
            LAD=LAD+3
            IJ=IJ+NUMI
            JI=JI+1
 1101    CONTINUE
         H2(IJ)=B*INT(LAD+INTBD)+A*INT(LAD+INTAD)
         LAD=LAD+3
         JISV=JISV+NUMI
 1102 CONTINUE
      RETURN
C
 1110 CONTINUE
      JISV=1
      DO 1112 I=1,NUMI
         JI=JISV
         IJ=I
         DO 1111 J=1,I-1
            T=B*INT(LAD+INTB)
            H2(IJ)=T
            H2(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
 1111    CONTINUE
         H2(IJ)=B*INT(LAD+INTBD)
         JISV=JISV+NUMI
         LAD=LAD+3
 1112 CONTINUE
      RETURN
C
 1120 CONTINUE
      JISV=1
      DO 1122 I=1,NUMI
         JI=JISV
         IJ=I
         DO 1121 J=1,I-1
            H2(IJ)=A*INT(LAD+INTAL)
            H2(JI)=A*INT(LAD+INTAU)
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
 1121    CONTINUE
         H2(IJ)=A*INT(LAD+INTAD)
         JISV=JISV+NUMI
         LAD=LAD+3
 1122 CONTINUE
C
      RETURN
C
C************************************ HIIS2 ****************************
C
      ENTRY HIIS2(H2,ISYM,NUMI)
C
      LAD=ARR+KADD(OS(ASM+1)+MN(ISYM+1))
C
      IF (ABS(A).LT.ACRCY) GO TO 1210
      IF (ABS(B).LT.ACRCY) GO TO 1220
C
      JISV=1
      DO 1202 I=1,NUMI
         JI=JISV
         IJ=I
         DO 1201 J=1,I-1
            T=B*INT(LAD+INTB )+A*INT(LAD+INTAL)
            H2(IJ)=T
            H2(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
 1201    CONTINUE
         H2(IJ)=0.0
         JISV=JISV+NUMI
         LAD=LAD+3
 1202 CONTINUE
C
      RETURN
C
 1210 CONTINUE
      JISV=1
      DO 1212 I=1,NUMI
         JI=JISV
         IJ=I
         DO 1211 J=1,I-1
            T=B*INT(LAD+INTB)
            H2(IJ)=T
            H2(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
 1211    CONTINUE
         H2(IJ)=0.0
         JISV=JISV+NUMI
         LAD=LAD+3
 1212 CONTINUE
C
      RETURN
C
 1220 CONTINUE
      JISV=1
      DO 1222 I=1,NUMI
         JI=JISV
         IJ=I
         DO 1221 J=1,I-1
            T=A*INT(LAD+INTAL)
            H2(IJ)=T
            H2(JI)=T
            JI=JI+1
            IJ=IJ+NUMI
            LAD=LAD+3
 1221    CONTINUE
         H2(IJ)=0.0
         JISV=JISV+NUMI
         LAD=LAD+3
 1222 CONTINUE
C
      RETURN
C
C********************************** HIJ ********************************
C
      ENTRY HIJ(H1,ISYM,JSYM,NUMI,NUMJ)
C
      LAD=ARR+KADD(OS(ASM+1)+MN(ISYM+1))
C
      IF (ABS(A).LT.ACRCY) GO TO 310
      IF (ABS(B).LT.ACRCY) GO TO 320
C
      DO 302 I=1,NUMI
         IJ=I
         DO 301 J=1,NUMJ
            H1(IJ)=A*INT(LAD+INTAL)+B*INT(LAD+INTB)
            IJ=IJ+NUMI
            LAD=LAD+3
  301    CONTINUE
  302 CONTINUE
C
      RETURN
C
  310 CONTINUE
      LAD=LAD+INTB
      DO 312 I=1,NUMI
         IJ=I
         DO 311 J=1,NUMJ
            H1(IJ)=B*INT(LAD)
            IJ=IJ+NUMI
            LAD=LAD+3
  311    CONTINUE
  312 CONTINUE
C
      RETURN
C
  320 CONTINUE
      LAD=LAD+INTAL
      DO 322 I=1,NUMI
         IJ=I
         DO 321 J=1,NUMJ
            H1(IJ)=A*INT(LAD)
            IJ=IJ+NUMI
            LAD=LAD+3
  321    CONTINUE
  322 CONTINUE
      RETURN
C
C******************************* HI ************************************
C
      ENTRY HI(H1,ISYM,NUMI)
C
      LAD=ARR+LADD(OS(ASM+1)+MN(ISYM+1))
      DO 400 I=1,NUMI
         H1(I)=A*INT(LAD+INTAL)+B*INT(LAD+INTB)
         LAD=LAD+3
  400 CONTINUE
      RETURN
C
C******************************* HS ************************************
C
      ENTRY HS(H1,ISYM,NUMI)
C
      A2=A*DSQRT(2.0D+00)
      LAD=ARR+LADD(OS(ASM+1)+MN(ISYM+1))+2
      DO 410 I=1,NUMI
         H1(I)=A2*INT(LAD)
         LAD=LAD+3
  410 CONTINUE
      RETURN
C
C
      END
      SUBROUTINE INITPG(VECTOR,SIGMA)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION VECTOR(NWKSMX),SIGMA(NWKSMX)
      INTEGER PUWKT,REFWLK,BMAX,FWORD,PUWK,ORBFRM
      LOGICAL PAGEIN,IEQJ
C
      INTEGER NR3,NR6,NW6
      COMMON /STATPG/ IR3(100),NR3(100),IR6(100),NR6(100),IW6(100)
     #,               NW6(100),IPGS(100),IPGD(100),IPGO(100),IPGIJ(100)
     #,               IPGOUT(100)
      COMMON /LEVEL/  ILEV
C
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON /LOOPS/NUWK,PUWKT,IUWK,JUWK,ITRAK,IPT1,IPT2
      COMMON /ALL/  ACF,D,CCF,LADT,ITR1,ITR2,IA,JA,ITYPE,ISEGT,LVFRM1
     *,             NLWKI,NLWKJ,IMAX,IMIN
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /RSTRT/IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /PAGDAT/IEQJ,IUWKSV,JUWKSV,NLWKI2,NLWKJ2,JWALK,IWALK,II,JJ
      IWORD3=1
      IWORD4=1
      IWORD6=1
      IEQJ=.TRUE.
      IWALK=0
      II=1
      JJ=1
      NLWKI2=2*NWKS2
      NWKMX2=NWKSMX
      RETURN
C
C-----------------------------------------------------------------PAGES
C
      ENTRY PAGES
C
C     WRITE(ITAPE3,*) ' ENTRY PAGES '
      IPGS(ILEV)=IPGS(ILEV)+1
      IF(IUWK.NE.JUWK) GO TO 210
C
C-----------------------------------------------------------------PAGED
C
      ENTRY PAGED
C
C     WRITE(ITAPE3,*) ' ENTRY PAGED '
      IPGD(ILEV)=IPGD(ILEV)+1
  200 IF(NLWKI.GT.NWKSMX) RETURN
      IUWKSV=IUWK
      JUWKSV=JUWK
      IEQJ=.TRUE.
      PAGEIN=.TRUE.
      NLWKI2=NLWKI+NLWKI
      NLWKJ2=NLWKI2
      NOFFI=PUWKT+IUWK-1
      NOFFJ=NOFFI
      IWALK=NOFFI+NOFFI
      II=1
      JJ=1
      FWORD=IWALK+IWORD6
      CALL WREADW(ITAP96,SIGMA,NLWKI2,FWORD,JUNK)
      IR6(ILEV)=IR6(ILEV)+1
      NR6(ILEV)=NR6(ILEV)+NLWKI2
      IF(NDVDIT.EQ.0) RETURN
      FWORD=IWALK+IWORD3
      CALL WREADW(ITAP99,VECTOR,NLWKI2,FWORD,JUNK)
      IR3(ILEV)=IR3(ILEV)+1
      NR3(ILEV)=NR3(ILEV)+NLWKI2
      RETURN
  210 CONTINUE
      IF((NLWKI+NLWKJ).GT.NWKSMX) RETURN
C
C-----------------------------------------------------------------PAGEO
C
      ENTRY PAGEO
C
C     WRITE(ITAPE3,*) ' ENTRY PAGEO '
      IPGD(ILEV)=IPGD(ILEV)+1
      IUWKSV=IUWK
      JUWKSV=JUWK
      PAGEIN=.TRUE.
      IEQJ=.FALSE.
      NLWKI2=NLWKI+NLWKI
      NLWKJ2=NLWKJ+NLWKJ
      NOFFI=PUWKT+IUWK-1
      NOFFJ=PUWKT+JUWK-1
      IWALK=NOFFI+NOFFI
      JWALK=NOFFJ+NOFFJ
      NOFFJ=NOFFJ-NLWKI
      FWORD=IWALK+IWORD6
      II=1
      CALL WREADW(ITAP96,SIGMA,NLWKI2,FWORD,JUNK)
      IR6(ILEV)=IR6(ILEV)+1
      NR6(ILEV)=NR6(ILEV)+NLWKI2
      FWORD=JWALK+IWORD6
      JJ=NLWKI+1
      CALL WREADW(ITAP96,SIGMA(JJ),NLWKJ2,FWORD,JUNK)
      IR6(ILEV)=IR6(ILEV)+1
      NR6(ILEV)=NR6(ILEV)+NLWKJ2
      FWORD=IWALK+IWORD3
      CALL WREADW(ITAP99,VECTOR,NLWKI2,FWORD,JUNK)
      IR3(ILEV)=IR3(ILEV)+1
      NR3(ILEV)=NR3(ILEV)+NLWKI2
      FWORD=JWALK+IWORD3
      CALL WREADW(ITAP99,VECTOR(JJ),NLWKJ2,FWORD,JUNK)
      IR3(ILEV)=IR3(ILEV)+1
      NR3(ILEV)=NR3(ILEV)+NLWKJ2
      RETURN
C
C----------------------------------------------------------------PAGEIJ
C
      ENTRY PAGEIJ
C
C   CHECK THAT SOMETHING HAS CHANGED
C
C     WRITE(ITAPE3,*) ' ENTRY PAGEIJ '
      IPGIJ(ILEV)=IPGIJ(ILEV)+1
      IF(IUWKSV.EQ.IUWK.AND.JUWKSV.EQ.JUWK) RETURN
      IF(IEQJ) GO TO 400
      IF(IUWKSV.EQ.IUWK) GO TO 310
      IF(JUWKSV.EQ.JUWK) GO TO 330
      PAGEIN=.FALSE.
      FWORD=IWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(II),NLWKI2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKI2
      FWORD=JWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(JJ),NLWKJ2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKJ2
      IF(IUWK.EQ.JUWK) GO TO 200
      GO TO 210
  310 CONTINUE
      FWORD=JWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(JJ),NLWKJ2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKJ2
      IF((NLWKI+NLWKJ).LE.NWKSMX) GO TO 320
      FWORD=IWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(II),NLWKI2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKI2
      PAGEIN=.FALSE.
      RETURN
  320 CONTINUE
      JJ=NLWKI+1
      JUWKSV=JUWK
      NLWKJ2=NLWKJ+NLWKJ
      NOFFJ=PUWKT+JUWK-1
      JWALK=NOFFJ+NOFFJ
      NOFFJ=NOFFJ-NLWKI
      FWORD=JWALK+IWORD6
      CALL WREADW(ITAP96,SIGMA(JJ),NLWKJ2,FWORD,JUNK)
      IR6(ILEV)=IR6(ILEV)+1
      NR6(ILEV)=NR6(ILEV)+NLWKJ2
      FWORD=JWALK+IWORD3
      CALL WREADW(ITAP99,VECTOR(JJ),NLWKJ2,FWORD,JUNK)
      IR3(ILEV)=IR3(ILEV)+1
      NR3(ILEV)=NR3(ILEV)+NLWKJ2
      RETURN
  330 CONTINUE
      FWORD=IWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(II),NLWKI2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKI2
      IF(IUWK.NE.JUWK) GO TO 340
      IEQJ=.TRUE.
      II=JJ
      IWALK=JWALK
      IUWKSV=IUWK
      NLWKI2=NLWKJ2
      RETURN
  340 CONTINUE
      IF(NLWKI.LT.JJ) GO TO 350
      FWORD=JWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(JJ),NLWKJ2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKJ2
      PAGEIN=.FALSE.
      GO TO 210
  350 IUWKSV=IUWK
      NOFFI=PUWKT+IUWK-1
      IWALK=NOFFI+NOFFI
      NLWKI2=NLWKI+NLWKI
      FWORD=IWALK+IWORD6
      II=1
      CALL WREADW(ITAP96,SIGMA(II),NLWKI2,FWORD,JUNK)
      IR6(ILEV)=IR6(ILEV)+1
      NR6(ILEV)=NR6(ILEV)+NLWKI2
      FWORD=IWALK+IWORD3
      CALL WREADW(ITAP99,VECTOR(II),NLWKI2,FWORD,JUNK)
      IR3(ILEV)=IR3(ILEV)+1
      NR3(ILEV)=NR3(ILEV)+NLWKI2
      RETURN
  400 CONTINUE
      IF(IUWK.NE.IUWKSV) GO TO 420
      IEQJ=.FALSE.
      IF(II.EQ.1) GO TO 405
      IF(NLWKJ.GE.II) GO TO 420
      JJ=1
      GOTO 410
  405 CONTINUE
      IF((NLWKI+NLWKJ).GT.NWKSMX) GO TO 420
      JJ=II+NLWKI
  410 JUWKSV=JUWK
      NOFFJ=PUWKT+JUWK-1
      JWALK=NOFFJ+NOFFJ
      NOFFJ=NOFFJ-NLWKI
      NLWKJ2=NLWKJ+NLWKJ
      FWORD=JWALK+IWORD6
      CALL WREADW(ITAP96,SIGMA(JJ),NLWKJ2,FWORD,JUNK)
      IR6(ILEV)=IR6(ILEV)+1
      NR6(ILEV)=NR6(ILEV)+NLWKJ2
      FWORD=JWALK+IWORD3
      CALL WREADW(ITAP99,VECTOR(JJ),NLWKJ2,FWORD,JUNK)
      IR3(ILEV)=IR3(ILEV)+1
      NR3(ILEV)=NR3(ILEV)+NLWKJ2
      RETURN
  420 CONTINUE
      PAGEIN=.FALSE.
      FWORD=IWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(II),NLWKI2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKI2
      IF(IUWK.EQ.JUWK) GO TO 200
      GO TO 210
C
C----------------------------------------------------------------PAGEOUT
C
      ENTRY PAGEOT
C
C     WRITE(ITAPE3,*) ' ENTRY PAGEOUT '
      IPGOUT(ILEV)=IPGOUT(ILEV)+1
      PAGEIN=.FALSE.
      FWORD=IWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(II),NLWKI2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKI2
      IF(IEQJ) RETURN
      FWORD=JWALK+IWORD6
      CALL WWRITW(ITAP96,SIGMA(JJ),NLWKJ2,FWORD,JUNK)
      IW6(ILEV)=IW6(ILEV)+1
      NW6(ILEV)=NW6(ILEV)+NLWKJ2
      RETURN
      END
      SUBROUTINE LOOPYD(NABC,NLWKS,           IWGHT,NABCA,IJADD
     *,                 IJGRP,KADD,LADD,INEXT,IARC,JMNNXT,JMXNXT
     *,                 NABCS,ISYM,            ISEGM,JSEGM,IMAIN
     *,                 ISUB,IUWKMN,IUWKSB,ITRACK,LMIN,ACOEF,BCOEF
     *,                 HDWGT,HDSEG,HDPNT,IMXGRP,IMNGRP,JMXGRP,JMNGRP)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
CTJL 1               INEXT,IARC,JMNNXT,JMXNXT,NABCS,ISYM,ISEGM,JSEGM,
CTJL 2               IMAIN,ISUB,IUWKMN,IUWKSB,ITRACK,LMIN,ACOEF,BCOEF,
CTJL 3               HDWGT,HDSEG,HDPNT,IMXGRP,IMNGRP,JMXGRP,JMNGRP
      DIMENSION NLCSMN(22),LCOND(8),COEFFS(20,21),CFS(420)
      INTEGER PUWKT,REFWLK,SYMORB,BMAX,ORBFRM
      INTEGER HPT,HSEG,HSEGMX,HDWGT,HDSEG,HDPNT,SEGWGT,HARPT
      LOGICAL PAGEIN
C   LEVEL CHARACTERISTICS
      DIMENSION ISEGM(NLEVS),JSEGM(NLEVS),IMAIN(NLEVS),ISUB(NLEVS)
      DIMENSION IUWKMN(NLEVS),IUWKSB(NLEVS),ITRACK(NLEVS),ISYM(NORBS)
      DIMENSION ACOEF(NLEVS),BCOEF(NLEVS),LMIN(NLEVS)
      DIMENSION HDSEG(NLEVS),HDPNT(NLEVS),HDWGT(NLEVS)
C     DIMENSION LEVPT(NLEVS),LEVNR(NLEVS)
C   GRAPH DESCRIPTION ARRAYS
      DIMENSION NABC(NROWS ),NLWKS(NROWS)              ,NABCS(NROWS )
      DIMENSION              IWGHT(NROWS4),IARC(NROWS4),NABCA(NROWS )
C   INTEGRAL ADDRESSING ARRAYS
      DIMENSION INEXT(NORBS),JMNNXT(NORBS),JMXNXT(NORBS)
      DIMENSION IJADD(NUMIJ),IJGRP(NUMIJ),KADD(SYMORB),LADD(SYMORB)
      DIMENSION IMNGRP(NGROUP),IMXGRP(NGROUP),JMNGRP(NGROUP)
      DIMENSION JMXGRP(NGROUP)
C
      COMMON /LEVEL/ LEVI
C
      COMMON /SYMM/ JSMT,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
     #,             NUMSYM(8)
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
      COMMON /DIAG/ REP,FZCORE,EGUESS,ECI,REFWLK,MXITER,CNVERG,ICNVG
     *,             ITER,SQCDIF,CZERO,NROOT
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /OPS/  IGUESS,IPRINT,IRSTRT,IROOTI,IROOTF
      COMMON/LOOPS/ NUWK,PUWKT,IUWK,JUWK,ITRAK,IPT1,IPT2
      COMMON/ALL/   ACF,D,CCF,LADT,ITR1,ITR2,IA,JA,ITYPE,ISEGT,LVFRM1
     *,             NLWKI,NLWKJ,IMAX,IMIN
      COMMON /PAGE/ IWORD3,IWORD4,PAGEIN,NOFFI,NOFFJ,NPASS,NWORDL,IWORD6
      COMMON /RSTRT/IBLCK1,INXT,LOWTRI,NDVDIT,IBLOCK
      COMMON /TABLES/ JSEGNR(22),JSEGPT(22),IARCMN(228),IARCSB(228)
     *,ITRK(228),JCOND(228),KCOND(228),NXTSEG(228),JSEGPX(3)
      COMMON /MINMAX/ IMING,IMAXG,JMIN,JMAX
C
      EQUIVALENCE (COEFFS,CFS)
      DATA NLCSMN/6*1,0,1,14*0/
C
      CRITE = 0.00001D+00
      ROOT2 = DSQRT(2.0D+00)
      ROOTN2 = -ROOT2
      TOOR2 = 1.0D+00 / ROOT2
      TOORN2 = -TOOR2
      JSEGPT(1)=0
      HSEGMX=4
      DO 125 I=1,NORBS
  125 ISYM(I)=ISYM(I)-1
      DO 130 J=1,21
         JSEGPT(J+1)=JSEGNR(J)
         DO 130 I=1,2
 130  COEFFS(I,J)=0.0
      DO 140 I=3,20
         A = DBLE(I-2)
         COEFFS(I,1) = DSQRT(A/(A+1.0D+00))
         COEFFS(I,2) = -COEFFS(I,1)
         COEFFS(I,3) = COEFFS(I,1)/DSQRT(2.0D+00)
         COEFFS(I,4) = -COEFFS(I,3)
         COEFFS(I,5) = DSQRT((A+1.0D+00)/A)
         COEFFS(I,6) = -COEFFS(I,5)
         COEFFS(I,7) = COEFFS(I,5)/DSQRT(2.0D+00)
         COEFFS(I,8) = -COEFFS(I,7)
         COEFFS(I,9) = DSQRT((A+2.0D+00)/(A*2.0D+00))
         COEFFS(I,10) = -COEFFS(I,9)
         COEFFS(I,11) = DSQRT(A/(2.0D+00*(A+2.0D+00)))
         COEFFS(I,12) = -COEFFS(I,11)
         COEFFS(I,13) = DSQRT(2.0D+00/(A*(A+1.0D+00)))
         COEFFS(I,14) = DSQRT(A*(A+2.0D+00))/(A+1.0D+00)
         COEFFS(I,15) = -DSQRT(A*(A+2.0D+00))/(A+1.0D+00)
         COEFFS(I,16) = DSQRT((A-1.0D+00)*(A+2.0D+00)/(A*(A+1.0D+00)))
         COEFFS(I,17) = -COEFFS(I,16)
         COEFFS(I,18)=-DSQRT(2.0D+00/(A*(A+2.0D+00)))
         COEFFS(I,19) = 1.0D+00/A
         COEFFS(I,20) = -1.0D+00/A
         COEFFS(I,21) = -DSQRT(2.0D+00)/A
 140  CONTINUE
      DO 160 I=1,NSYM
         ISMOFF(I)=(I-1)*NORBS
 160  LCOND(I)=0
      I=ISYM(1)+1
      LCOND(I)=1
      LCOND(1)=1
      NSM=0
      DO 170 IORB=2,NORBS
         DO 165 I=1,NSYM
            IF(LCOND(I).EQ.0) GO TO 165
            ISM=I-1
            J=IEOR(ISM,ISYM(IORB))+1
            IF(LCOND(J).GT.0) GO TO 165
            LCOND(J)=IORB
            NSM=NSM+1
            IF(NSM.EQ.NSYM) GO TO 175
 165     CONTINUE
 170  CONTINUE
 175  CONTINUE
      DO 180 I=1,NSYM
         IF(LCOND(I).EQ.0) LCOND(I)=NORBS+1
 180  CONTINUE
      ENTRY LOOPY
      DO 500 IBLOCK=1,NGROUP
C:
         IF (IBLOCK.GT.1) CALL NXTBLK
C:
         IF(NDVDIT.GT.0) GOTO 188
         IF(IPRINT.GT.0) WRITE(ITAPE6,187)IBLOCK,IMXGRP(IBLOCK),
     #   IMNGRP(IBLOCK),JMXGRP(IBLOCK),JMNGRP(IBLOCK)
 187     FORMAT(' PROCESS INTEGRALS FROM GROUP',I4,' FIRST LEVEL',I4
     #   ,      ' LAST',I4,' JMAX',I4,' JMIN',I4)
C:
 188     CONTINUE
         IMAXG=IMXGRP(IBLOCK)
         IMING=IMNGRP(IBLOCK)
         I=IMAXG
C     PRINT *,' BEFORE 190,IMAX,MIN,AND,I',IMAXG,IMING,I
C:
 190     CONTINUE
C     PRINT *,' PAST 190,I=',I,IMAXG,IMING
C:    I=INEXT(INXT)
         LEVI=I+1
         NPT=1
         PUWKT=1
C:    JMAX=JMXNXT(INXT)
C:    JMIN=JMNNXT(INXT)
         JMAX=I
         JMIN=1
         IF (I.EQ.IMAXG) JMAX=JMXGRP(IBLOCK)
         IF (I.EQ.IMING) JMIN=JMNGRP(IBLOCK)
C     PRINT *,' JMIN,MAX',JMIN,JMAX
C:
         JSM=ISYM(I)
         IAD=(I*(I-1))/2
         IJ=IAD+JMAX
         NOFFI=0
         NOFFJ=0
         LEVV=NLEVS
         HSEG=4
         LEVH=NLEVS
         PAGEIN=.FALSE.
         IF(NWKS.LE.NWKSMX) PAGEIN=.TRUE.
C:    IF(IBLOCK.NE.IJGRP(IJ)) GO TO 490
C*
C     CALL NXT4X(I)
C     IF (I.LE.ORBFRM) CALL NXT4X(I)
C*
         IF(LEVI.EQ.NLEVS) GO TO 1070
C   GENERATE HEAD SEGMENTS TO LOOPS
         LEVH=NLEVS+1
         NPT=1
         HDWGT(NLEVS)=0
         HDPNT(NLEVS)=1
 1000    LEVH=LEVH-1
         SEGWGT=0
         HSEG=0
         HPT=NPT
 1010    HSEG=HSEG+1
C     PRINT *,'AFTER 1010, HSEG',HSEG
         IF(HSEG.LE.HSEGMX) GO TO 1030
         LEVH=LEVH+1
C     PRINT *,'AFTER 1020, LEVH',LEVH,'NLEVS',NLEVS
         IF(LEVH.GT.NLEVS) GO TO 480
         PUWKT=PUWKT-HDWGT(LEVH)
         HSEG=HDSEG(LEVH)
         HPT=HDPNT(LEVH)
         GO TO 1010
 1030    CONTINUE
         HARPT=(HPT-1)*4+HSEG
         NPT=IARC(HARPT)
         IF(NPT.EQ.0) GO TO 1010
         PUWKT=PUWKT-SEGWGT
         SEGWGT=IWGHT(HARPT)
         PUWKT=PUWKT+SEGWGT
         HDWGT(LEVH)=SEGWGT
         HDSEG(LEVH)=HSEG
         LEV=LEVH-1
         HDPNT(LEV)=NPT
         IUWK=0
         JUWK=0
         NLWKI=NLWKS(NPT)
         IF(PAGEIN) GO TO 1035
         CALL PAGED
         IF(PAGEIN) LEVV=LEV
         GO TO 1040
 1035    CONTINUE
         IF(LEVV.GT.LEV) GO TO 1040
         CALL PAGEOT
         CALL PAGED
         LEVV=NLEVS
         IF(PAGEIN) LEVV=LEV
 1040    CONTINUE
         IF(LEV.GT.LEVFRM) GO TO 1050
         IF((NABCA(NPT)*2+NABC(NPT)).LE.2) GO TO 1060
 1050    IF(LEV.GT.LEVI) GO TO 1000
         GO TO 1070
 1060    CONTINUE
C   LOOPS WITH FOUR EXTERNAL INDICES
         IF(NDVDIT.EQ.1.AND.IGUESS.EQ.0) GO TO 480
         ITYPE=3*NABCA(NPT)+NABC(NPT)
         IF(ITYPE.EQ.0) GO TO 1010
         IFSYM=NABCS(NPT)
         JFSYM=IFSYM
         LVFRM1=LEV-1
         IMAX=LEVI-1
         IMIN=LEVI-1
         IF(.NOT.PAGEIN) THEN
                WRITE(ITAPE6,*) ' PAGING MAFUNCTION'
                CALL MABORT
         END IF
         CALL ALLEXT
         GO TO 1010
 1070    LEV=LEVI
         LEVM=LEV-1
C     PRINT *,'AFTER 1070, LEV,LEVM:',LEV,LEVM
         ISEGM(LEV)=1
         ISEG=1
         IMN=NPT
         ISB=NPT
         KSEG=0
C     PRINT *,'KSEG=0 BEFORE 200'
         KSEGMX=JSEGNR(ISEG)
         LMIN(LEV)=LCOND(JSM+1)
         IUWKMN(LEV)=0
         IUWKSB(LEV)=0
         IMAIN(LEV)=NPT
         ISUB(LEV)=NPT
         ACOEF(LEV)=1.0D+00
C  TEST NEXT SEGMENT OF GROUP
200      KSEG=KSEG+1
C     PRINT *,' KSEG',KSEG,'LEV',LEV,'KSEGMX',KSEGMX
C     WRITE (ITAPE3,'(' KSEG:',I4,' LEV',I3)') KSEG,LEV
         IF(KSEG.GT.KSEGMX) GO TO 440
         KSB=IARCSB(KSEG)
         JARPT=4*(ISB-1)+KSB
         KSB=IARC(JARPT)
         IF(KSB.EQ.0) GO TO 200
         KMN=IARCMN(KSEG)
         IARPT=4*(IMN-1)+KMN
         KMN=IARC(IARPT)
         IF(KMN.EQ.0) GO TO 200
         IF(NDVDIT.GT.0) GO TO 210
         IF(KMN.NE.KSB) GO TO 200
 210     CONTINUE
         JSEGM(LEV)=KSEG
         IUWKMN(LEVM)=IUWKMN(LEV)+IWGHT(IARPT)
         IUWKSB(LEVM)=IUWKSB(LEV)+IWGHT(JARPT)
         LMIN(LEVM)=LMIN(LEV)
         IF(JCOND(KSEG))220,240,230
 220     CONTINUE
C
C      ----- IS THIS A BUG? PWS -----
C
C     IF(LEVM.LE.JMIN)GOTO 440
         IF (LEVM.LE.JMIN) GO TO 200
C
         GOTO 240
 230     CONTINUE
         IF (LEVM.GT.JMAX) GO TO 200
C     IF(LEVM.GT.JMAX)GOTO 420
         IJ=IAD+LEVM
         JAD=IJADD(IJ)
         KSM=IEOR(JSM,ISYM(LEVM))
         LMIN(LEVM)=LCOND(KSM+1)
         KSMPTX=ISMOFF(KSM+1)
 240     CONTINUE
         IF(KCOND(KSEG).EQ.0)GOTO 260
         KSMPT=LEVM+KSMPTX
         KAD=JAD+KADD(KSMPT)
         LSM=IEOR(KSM,ISYM(LEVM))
         LMIN(LEVM)=LCOND(LSM+1)
         LSMPTX=ISMOFF(LSM+1)
 260     CONTINUE
         IF(ITRK(KSEG))280,280,270
270      ITRACK(LEVM)=ITRK(KSEG)
         GOTO 290
280      ITRACK(LEVM)=ITRACK(LEV)
290      CONTINUE
         GO TO( 1, 1, 1, 1, 1, 1,44, 1, 3, 3, 1,45, 4, 4,50,51, 1,40, 1,
     *    1,     6, 6, 7,46, 9,54, 2,52,41, 5,47, 8, 2,53, 1, 1,42,48, 2
     *   ,52,    36,55,43, 1,11,11,12,10,13,49, 2,53, 1,77,77,77, 1,79,
     *   77, 1,    80,78, 1,71,67,68,87,75,83,69,68,76,70,82,71,71,67,68
     *   ,67,87,    75,83,69,68,83,68,76,70,69,70,82,71, 1, 6,16, 6, 6,
     *   17,16,74,     8, 1, 1,18,19,18,18,22,24,20,19,24,19,23,21,20,21
     *   , 1, 1,11,    11,27,11,28,81,27,13, 1, 1, 3, 2, 4, 2, 1, 2, 2,
     *   1,71,63,72,    84,65,85,73,29,66,64,71, 1,30,56,86, 1,57, 1, 1,
     *   56, 1,32,31,    58, 1, 1,59,33,34,61,35,88,62,60, 1, 1, 6, 1, 9
     *   , 2, 5, 2, 1,     1, 2,36,11,10, 2, 1, 6, 1, 9, 2, 5, 2, 1, 1,
     *   2,36,11,10, 2,     1, 1,37,38, 4, 2, 2, 1, 1, 2,39,37, 3, 2, 1,
     *    6, 1, 9, 2, 5,     2, 1, 1, 2,36,11,10, 2) KSEG
  1      ACOEF(LEVM)=ACOEF(LEV)
         GOTO 120
  2      ACOEF(LEVM)=-ACOEF(LEV)
         GOTO 120
   3     IA = NABC(IMN) + 2
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
   4     IA = NABC(IMN) + 83
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
   5     IA = NABC(IMN) + 82
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
   6     IA = NABC(IMN) + 261
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
   7     IA = NABC(IMN) + 1
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
   8     IA = NABC(IMN) + 102
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
   9     IA = NABC(IMN) + 362
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  10     IA = NABC(IMN) + 3
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  11     IA = NABC(IMN) + 263
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  12     IA = NABC(IMN) + 84
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  13     IA = NABC(IMN) + 23
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  16     IA = NABC(IMN) + 281
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  17     IA = NABC(IMN) + 402
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  18     IA = NABC(IMN) + 162
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  19     IA = NABC(IMN) + 222
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  20     IA = NABC(IMN) + 143
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  21     IA = NABC(IMN) + 42
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  22     IA = NABC(IMN) + 302
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  23     IA = NABC(IMN) + 303
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  24     IA = NABC(IMN) + 342
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  27     IA = NABC(IMN) + 283
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  28     IA=NABC(IMN)+404
         ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
         GO TO 120
  29     ACOEF(LEVM) = ACOEF(LEV) * ROOT2
         GO TO 120
  30     IA = NABC(IMN) + 301
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  31     IA = NABC(IMN) + 304
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  32     IA = NABC(IMN) + 244
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  33     IA = NABC(IMN) + 322
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  34     IA = NABC(IMN) + 243
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  35     IA = NABC(IMN) + 242
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  36     IA = NABC(IMN) + 384
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  37     IA = NABC(IMN) + 262
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  38     IA = NABC(IMN) + 363
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  39     IA = NABC(IMN) + 383
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  86     IA = NABC(IMN) + 241
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  40     IA = NABC(IMN) + 122
         IB=IA-61
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  41     IB = NABC(IMN) + 162
         ACOEF(LEVM) = ACOEF(LEV) * TOORN2
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  42     IA = NABC(IMN) + 43
         IB = IA + 81
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  43     IB = NABC(IMN) + 222
         ACOEF(LEVM) = ACOEF(LEV) * TOORN2
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  44     IB=NABC(IMN)+221
         ACOEF(LEVM) = ACOEF(LEV) * TOOR2
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  45     IB = NABC(IMN) + 163
         ACOEF(LEVM) = ACOEF(LEV) * TOOR2
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  46     IB = NABC(IMN) + 162
         ACOEF(LEVM) = ACOEF(LEV) * TOOR2
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  47     IA = NABC(IMN) + 122
         IB = IA - 81
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  48     IB = NABC(IMN) + 222
         ACOEF(LEVM) = ACOEF(LEV) * TOOR2
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  49     IA = NABC(IMN) + 43
         IB = IA + 101
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         BCOEF(LEVM) = ACOEF(LEV) * CFS(IB)
         GO TO 120
  50     ACOEF(LEVM) = ACOEF(LEV) + ACOEF(LEV)
         D=0.5D+00
         GO TO 120
  51     ACOEF(LEVM)=ACOEF(LEV)*ROOT2
         GO TO 120
  52     ACOEF(LEVM) = -ACOEF(LEV)
         D= -1.0D+00
         GO TO 120
  53     ACOEF(LEVM) = -ACOEF(LEV) - ACOEF(LEV)
         D = -0.5D+00
         GO TO 120
  54     IA=NABC(IMN)+362
         D=1.0D+00/CFS(IA)
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  55     IA = NABC(IMN) + 384
         D=1.0D+00/CFS(IA)
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
  56     ACOEF(LEVM) = ACOEF(LEV)
         D = -1.0D+00
         GO TO 120
  57     IA = NABC(IMN) + 82
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         D=-1.0D+00
         GO TO 120
  58     IA = NABC(IMN) + 3
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         D=-1.0D+00
         GO TO 120
  59     IA = NABC(IMN) + 123
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         D=-1.0D+00
         GO TO 120
  60     IA = NABC(IMN) + 222
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         D=-1.0D+00
         GO TO 120
  61     IA = NABC(IMN) + 62
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         D=-1.0D+00
         GO TO 120
  62     IA = NABC(IMN) + 162
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         D=-1.0D+00
         GO TO 120
  63     IA = NABC(IMN) + 42
         IB = IA + 81
         ACOF = ACOEF(LEV) * CFS(IA)
         BCOF = BCOEF(LEV) * CFS(IB)
         D = ACOF + BCOF
         IF(ABS(D).LT.CRITE) GO TO 110
         ACOEF(LEVM) = D
         D = (ACOF - BCOF) / D
         GO TO 120
  64     IB = NABC(IMN) + 222
         ACOF = ACOEF(LEV) * TOORN2
         BCOF = BCOEF(LEV) * CFS(IB)
         D = ACOF + BCOF
         IF(ABS(D).LT.CRITE) GO TO 110
         ACOEF(LEVM) = D
         D = (ACOF - BCOF) / D
         GO TO 120
  65     IA = NABC(IMN) + 123
         IB = IA - 61
         ACOF = ACOEF(LEV) * CFS(IA)
         BCOF = BCOEF(LEV) * CFS(IB)
         D = ACOF + BCOF
         IF(ABS(D).LT.CRITE) GO TO 110
         ACOEF(LEVM) = D
         D = (ACOF - BCOF) / D
         GO TO 120
  66     IB = NABC(IMN) + 162
         ACOF = ACOEF(LEV) * TOORN2
         BCOF = BCOEF(LEV) * CFS(IB)
         D = ACOF + BCOF
         IF(ABS(D).LT.CRITE) GO TO 110
         ACOEF(LEVM) = D
         D = (ACOF - BCOF) / D
         GO TO 120
  67     IB = NABC(IMN) + 162
         DX=ACOEF(LEV)*TOORN2
         D=DX+BCOEF(LEV)*CFS(IB)
         IF(ABS(D).LT.CRITE) GO TO 111
         ACOEF(LEVM) = D
         D=-(DX+DX)/D
         GO TO 120
  68     IB = NABC(IMN) + 222
         DX=ACOEF(LEV)*TOORN2
         D=DX+BCOEF(LEV)*CFS(IB)
         IF(ABS(D).LT.CRITE) GO TO 111
         ACOEF(LEVM) = D
         D=-(DX+DX)/D
         GO TO 120
  69     IA = NABC(IMN) + 62
         IB = IA + 81
         DX=ACOEF(LEV)*CFS(IA)
         D=DX+BCOEF(LEV)*CFS(IB)
         IF(ABS(D).LT.CRITE) GO TO 111
         ACOEF(LEVM) = D
         D=-(DX+DX)/D
         GO TO 120
  70     IA = NABC(IMN) + 143
         IB = IA - 101
         DX=ACOEF(LEV)*CFS(IA)
         D=DX+BCOEF(LEV)*CFS(IB)
         IF(ABS(D).LT.CRITE) GO TO 111
         ACOEF(LEVM) = D
         D=-(DX+DX)/D
         GO TO 120
  87     IB = NABC(IMN) + 162
         DX=ACOEF(LEV)*TOORN2
         D=DX+BCOEF(LEV)*CFS(IB)
         IF(ABS(D).LT.CRITE) GO TO 111
         ACOEF(LEVM)=D
         D=-(DX+DX)/D
         GO TO 120
  71     ACOEF(LEVM) = ACOEF(LEV)
         BCOEF(LEVM) = BCOEF(LEV)
         GO TO 120
  72     IB = NABC(IMN) + 322
         ACOEF(LEVM) = -ACOEF(LEV)
         BCOEF(LEVM) = BCOEF(LEV) * CFS(IB)
         GO TO 120
  73     IB = NABC(IMN) + 323
         ACOEF(LEVM) = -ACOEF(LEV)
         BCOEF(LEVM) = BCOEF(LEV) * CFS(IB)
         GO TO 120
  74     IA=NABC(IMN)+21
         ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
         GO TO 120
  75     IB = NABC(IMN) + 302
         ACOEF(LEVM) = ACOEF(LEV)
         BCOEF(LEVM) = BCOEF(LEV) * CFS(IB)
         GO TO 120
  76     IB = NABC(IMN) + 303
         ACOEF(LEVM) = ACOEF(LEV)
         BCOEF(LEVM) = BCOEF(LEV) * CFS(IB)
         GO TO 120
  77     ACOEF(LEVM)=ACOEF(LEV)*TOORN2
         D=-2.0D+00
         GO TO 120
  78     ACOEF(LEVM)=ACOEF(LEV)*ROOTN2
         D=-2.0D+00
         GO TO 120
  79     IA=NABC(IMN)+62
         ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
         D=-2.0D+00
         GO TO 120
  80     IA=NABC(IMN)+143
         ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
         D=-2.0D+00
         GO TO 120
  81     IA=NABC(IMN)+104
         ACOEF(LEVM)=ACOEF(LEV)*CFS(IA)
         GO TO 120
  82     ACOEF(LEVM) = ACOEF(LEV) * ROOTN2
         D=-2.0D+00
         GO TO 120
  83     IA = NABC(IMN) + 342
         ACOEF(LEVM) = BCOEF(LEV) * CFS(IA)
         GO TO 120
  84     IA = NABC(IMN) + 243
         ACOEF(LEVM) = BCOEF(LEV) * CFS(IA)
         GO TO 120
  85     IA = NABC(IMN) + 242
         ACOEF(LEVM) = BCOEF(LEV) * CFS(IA)
         GO TO 120
  88     IA = NABC(IMN) + 323
         ACOEF(LEVM) = ACOEF(LEV) * CFS(IA)
         GO TO 120
 110     ITRACK(LEVM)=3
         ACOEF(LEVM)=ACOF-BCOF
         GO TO 120
111      ITRACK(LEVM) = 2
         ACOEF(LEVM)=-(DX+DX)
  120    CONTINUE
C   CHECK TO SEE IF PAGE OF VECTOR IS CORRECT
 1100    IF(PAGEIN) GO TO 1110
         IUWK=IUWKSB(LEVM)
         JUWK=IUWKMN(LEVM)
         NLWKI=NLWKS(KSB)
         NLWKJ=NLWKS(KMN)
         CALL PAGES
         IF(PAGEIN) LEVV=LEVM
         GO TO 1130
 1110    CONTINUE
         IF(LEVM.LT.LEVV) GO TO 1130
         IUWK=IUWKSB(LEVM)
         JUWK=IUWKMN(LEVM)
         NLWKI=NLWKS(KSB)
         NLWKJ=NLWKS(KMN)
         IF(LEVM.GT.LEVV) GO TO 1120
         CALL PAGEIJ
         LEVV=NLEVS
         IF(PAGEIN) LEVV=LEVM
         GO TO 1130
 1120    CONTINUE
         CALL PAGEOT
         GO TO 1100
 1130    CONTINUE
         IF(NXTSEG(KSEG).GT.0) GO TO 400
         IF(ISYM(LEVM).NE.LSM) GO TO 200
         LSMPT=LEVM+LSMPTX
         LAD=KAD+LADD(LSMPT)
         IF(KMN-KSB.EQ.0) GO TO 380
         LEVL=LEVM
         KSEGMX=4
310      LEV=LEVM
         LEVM=LEV-1
         IF(LEVM.GT.0) GO TO 315
         WRITE(ITAPE6,313)
 313     FORMAT(' PROBLEMS WITH PARTIAL SPACE')
         CALL MABORT
 315     CONTINUE
         KSEG=0
C     PRINT *,'KSEG=0 BEFORE 320'
         IMAIN(LEV)=KMN
         IMN=KMN
         ISUB(LEV)=KSB
         ISB=KSB
320      KSEG=KSEG+1
C     PRINT *,'AFTER 320, KSEG,KSEGMX,LEV',KSEG,KSEGMX,LEV
         IF(KSEG.GT.KSEGMX)GOTO 360
         JARPT=4*(ISB-1)+KSEG
         KSB=IARC(JARPT)
         IF(KSB.LE.0)GOTO 320
         IARPT=4*(IMN-1)+KSEG
         KMN=IARC(IARPT)
         IF(KMN.LE.0)GOTO 320
         JSEGM(LEV)=KSEG
         IUWKMN(LEVM)=IUWKMN(LEV)+IWGHT(IARPT)
         IUWKSB(LEVM)=IUWKSB(LEV)+IWGHT(JARPT)
         IF(LEVM.GT.LEVFRM) GOTO 310
         IF(KMN-KSB.NE.0) THEN
           WRITE(ITAPE6,*) ' KMN-KSB.NE.0'
           CALL MABORT
         END IF
         NLWKI = NLWKS(KMN)
         IUWK = IUWKSB(LEVM)
         JUWK = IUWKMN(LEVM)
         ITRAK = ITRACK(LEVL)
         ACF = ACOEF(LEVL)
         LADT=LAD
         CALL LOOPIN
         GO TO 320
  360    CONTINUE
C     PRINT *,'LEV,LEVL AT 360',LEV,LEVL
         IF(LEV.EQ.LEVL) GO TO 440
         LEVM=LEV
         LEV=LEVM+1
         IMN=IMAIN(LEV)
         ISB=ISUB(LEV)
         KSEG=JSEGM(LEV)
C     PRINT *,'KSEG SET TO BEFORE 380',KSEG
         GO TO 320
 380     NLWKI = NLWKS(KMN)
         IUWK = IUWKSB(LEVM)
         JUWK = IUWKMN(LEVM)
         ITRAK = ITRACK(LEVM)
         ACF = ACOEF(LEVM)
         LADT = LAD
         CALL LOOPIN
         GO TO 200
  400    CONTINUE
         IF(LEVM.LE.LMIN(LEVM))GOTO 200
         ISEG=NXTSEG(KSEG)
         IF(NLCSMN(ISEG).GT.0.AND.(NABCA(KMN)+NABC(KMN)).EQ.0)GOTO 200
         IF(LEVM.LE.LEVFRM)GOTO 460
  410    LEV=LEVM
         LEVM=LEV-1
C     PRINT *,'AFTER 410, GOING DOWN    ,LEV=',LEV
         ISEGM(LEV)=ISEG
         KSEG=JSEGPT(ISEG)
C     PRINT *,'BEFORE 420, KSEG SET TO',KSEG
         IMN=KMN
         IMAIN(LEV)=KMN
         ISB=KSB
         ISUB(LEV)=KSB
         KSEGMX=JSEGNR(ISEG)
         GO TO 200
440      CONTINUE
C   PATHS EXHAUSTED AT THIS LEVEL, BACK UP AND TRY THE NEXT SEGMENT
C     PRINT *,' AFTER 440, LEV AND LEVI',LEV,LEVI
         IF(LEV.EQ.LEVI) GOTO 1010
C     PRINT *,' PAST TEST, BACK UP LEVEL, LEV=',LEV+1
         LEVM=LEV
         LEV=LEVM+1
         ISEG=ISEGM(LEV)
         IMN=IMAIN(LEV)
         ISB=ISUB(LEV)
         KSEG=JSEGM(LEV)
C     PRINT *,'BEFORE 460, KSEG SET TO',KSEG
         KSEGMX=JSEGNR(ISEG)
         GOTO 200
460      CONTINUE
C  FINISH LOOPS WITH 3 OR FEWER EXTERNAL INDICES
         IAMN=NABCA(KMN)
         IASB=NABCA(KSB)
         IBMN=NABC(KMN)
         IBSB=NABC(KSB)
         IPT1=IAMN+IAMN+IBMN
         IPT2=IASB+IASB+IBSB
         IF(IPT1.GT.2.OR.IPT2.GT.2) GO TO 410
         IPT1=4-IPT1-IAMN
         IPT2=4-IPT2-IASB
         LVFRM1=LEVM-1
         IUWK=IUWKSB(LEVM)
         JUWK=IUWKMN(LEVM)
         ITRAK=ITRACK(LEVM)
         JFSYM=NABCS(KMN)
         IFSYM=NABCS(KSB)
         ACF=ACOEF(LEVM)
         CCF=BCOEF(LEVM)
         ISEGT=ISEG
         IF(ISEG.GT.14) GO TO 470
         IF(ISEG.GT.3)  GO TO 465
         JSMT=JSM
         LADT=IAD
         GOTO 475
 465     CONTINUE
         JSMT=KSM
         LADT=JAD
         GO TO 475
 470     CONTINUE
         LADT=KAD
         JSMT=LSM
 475     CALL LOOPEX
         GOTO 200
 480     CONTINUE
         IF(PAGEIN.AND.NWKS.GT.NWKSMX) CALL PAGEOT
C:    INXT=INXT+1
         IF(IRSTRT.NE.0) CALL SAVE
C:    IF(INXT.LE.NORBS) GO TO 190
         I=I-1
C     PRINT *,'I AND IMING',I,IMING
         IF (I.GE.IMING) GO TO 190
C:
 500  CONTINUE
C::::
      IF (PAGEIN) CALL PAGEOT
C::::
      IBLCK1=1
      INXT=1
      RETURN
      END
      SUBROUTINE INITDG(INT,D,IJADD,KADD,LADD,WTW,WTX,WTY,WAB,SS)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER ARR,TR1,TR2,OS,ASM,WTW,WTX,WTY,WAB,SS,SYMORB,AOS
      INTEGER BMAX,ORBFRM,SSI,SSJ
      REAL*8 INT(NMAX),D(NWKS)
      DIMENSION IJADD(NUMIJ),KADD(SYMORB),LADD(SYMORB),WTW(ORBFRM,NSYM)
      DIMENSION WTX(ORBFRM,NSYM),WTY(ORBFRM),WAB(ORBFRM),SS(NORBS)
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
C  UNIVERSAL DESIGNATION FOR THESE COMMONS LOCAL VARIANT FOLLOWS
C     COMMON /ALL/ ARR,VAL1,VAL2,VAL3,ITR1,ITR2,IA,JA,ITYPE,ISEGT
C    *,LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
C     COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
C    #,             NUMSYM(8)
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /ALL/VAL1,VAL2,VAL3,ARR,TR1,TR2,IA,JA,M,ISEG,N,N1,N2
     *,           IMAX,IMIN
      COMMON /SYMM/ ASM,JS,IS,MX(8),MN(8),OS(8),NUMSYM(8)
C:
      COMMON /MINMAX/ IMING,IMAXG,JMING,JMAXG
C:
C
      SQRT2=DSQRT(2.0D+00)
      SQRT3=DSQRT(3.0D+00)
      SQT1P5=DSQRT(1.5D+00)
      DO 5 I=1,NSYM
         MN(I)=1000
    5 MX(I)=0
      MN(1)=1
      ISM=SS(1)
      DO 20 I=2,N
         IF(SS(I).EQ.ISM) GO TO 20
         MX(ISM)=I-1
         ISM=SS(I)
         MN(ISM)=I
   20 CONTINUE
      MX(ISM)=N
      WRITE(ITAPE3,29)
   29 FORMAT(/,1X,'IN SUBROUTINE INITDG ')
      WRITE(ITAPE3,30) (MN(J),J=1,NSYM)
   30 FORMAT(1H ,'MINSYM =',8I9)
      WRITE(ITAPE3,35) (MX(J),J=1,NSYM)
   35 FORMAT(1H ,'MAXSYM =',8I9)
      RETURN
C
      ENTRY DIAGNL
C
      AOS=OS(ASM+1)
      IA=JA
      GO TO (314,305,304,315,316,317,318,321),M
      WRITE(ITAPE6,10) M
   10 FORMAT(1X,'UNKNOWN TYPE VALUE--',I5)
      CALL MABORT
C    YY   NO   10   ISEG=4
  304 IF (ISEG.EQ.5) GO TO 3043
      IF (ISEG.EQ.6) GO TO 3043
      IF (ISEG.EQ.8) GO TO 3042
      IF (ISEG.NE.4) GO TO 999
      VAL4=-VAL1/SQRT2
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.EQ.1000) RETURN
      IF (M1.GT.N) M1=N
      IF (M1.LT.M2) RETURN
      II=IA+WTY(M2)
      JJ=II
      DO 460 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=VAL4*(INT(LAD+1)-2.*INT(LAD+2))
         D(JJ)=D(JJ)+Z
  460 JJ=JJ+1
      RETURN
C  YY   NO 10 ISEG=8
 3042 VAL4=VAL1*SQT1P5
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.EQ.1000) RETURN
      IF (M1.GT.N) M1=N
      IF (M1.LT.M2) RETURN
      JJ=JA+WTY(M2)
      DO 430 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=VAL4*INT(LAD+1)
         D(JJ)=D(JJ)+Z
  430 JJ=JJ+1
      RETURN
C  YY  NO 10  ISEG=5,6
 3043 CONTINUE
      XX=-VAL1/SQRT2+VAL3*SQT1P5
      IF (ABS(XX).LT.1.0D-06) GO TO 490
      VAL5=SQRT2*VAL1
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.EQ.1000) RETURN
      IF (M1.GT.N) M1=N
      IF (M1.LT.M2) RETURN
      JJ=JA+WTY(M2)
      DO 493 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=XX*INT(LAD+1)+VAL5*INT(LAD+2)
         D(JJ)=D(JJ)+Z
  493 JJ=JJ+1
      RETURN
  490 VAL5=SQRT2*VAL1
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.EQ.1000) RETURN
      IF (M1.GT.N) M1=N
      IF (M1.GT.M2) RETURN
      JJ=JA+WTY(M2)
      DO 494 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=VAL5*INT(LAD+2)
         D(JJ)=D(JJ)+Z
  494 JJ=JJ+1
      RETURN
C   WW    NO 68  ISEG=4,5,6
  314 IF (ISEG.EQ.8) RETURN
      IF (ISEG.EQ.6) GO TO 299
      IF (ISEG.EQ.4.OR.ISEG.EQ.5) GO TO 299
      GO TO 999
  299 IF (JS.NE.0) GO TO 6600
      VAL4=-VAL1*SQRT2
      DO 1401 I=1,N
         JJ=JA+WAB(I)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=KADD(I+AOS)+LADD(I+LOS)+ARR
         Z=VAL4*(INT(LAD+1)-2.*INT(LAD+2))
         D(JJ)=D(JJ)+Z
 1401 CONTINUE
C   NO 81
 6600 VAL4=-VAL1/SQRT2
      DO 1406 I=2,N
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 1406
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 1406
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 1406
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD1=ARR+KADD(I+AOS)+LADD(I+LOS)
         Z1=VAL4*(INT(LAD1+1)-2.0D+00*INT(LAD1+2))
         JJ=JA+WTW(I,1+JS)+WTY(M2)
         DO 1407 J=M2,M1
            LSM=IEOR(ASM,SS(J))
            LOS=OS(LSM+1)
            LAD=ARR+KADD(J+AOS)+LADD(J+LOS)
            Z=VAL4*(INT(LAD+1)-2.*INT(LAD+2))+Z1
            D(JJ)=D(JJ)+Z
 1407    JJ=JJ+1
 1406 CONTINUE
      RETURN
C    XX   NO   11   ISEG=4
 3051 CONTINUE
      VAL4=-VAL1/SQRT2
      DO 501 I=2,N
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 501
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 501
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 501
         JJ=JA+WTX(I,1+JS)+WTY(M2)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD1=ARR+KADD(I+AOS)+LADD(I+LOS)
         Z1=VAL4*(INT(LAD1+1)-2.0D+00*INT(LAD1+2))
         DO 502 J=M2,M1
            LSM=IEOR(ASM,SS(J))
            LOS=OS(LSM+1)
            LAD=ARR+KADD(J+AOS)+LADD(J+LOS)
            Z=VAL4*(INT(LAD+1)-2.*INT(LAD+2))+Z1
            D(JJ)=D(JJ)+Z
  502    JJ=JJ+1
  501 CONTINUE
      RETURN
  305 IF (ISEG.EQ.4) GO TO 3051
      IF (ISEG.EQ.5) GO TO 3052
      IF (ISEG.EQ.8) GO TO 3054
      IF (ISEG.NE.6) GO TO 999
C XX   NO  11   ISEG=6,5
 3052 XX=-VAL1/SQRT2+VAL3
      VAL5=SQRT2*VAL1
      IF (ABS(XX).LT.1.0D-06) GO TO 550
      DO 560 I=2,N
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 560
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 560
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 560
         JJ=JA+WTX(I,1+JS)+WTY(M2)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD1=ARR+KADD(I+AOS)+LADD(I+LOS)
         Z1=XX*INT(LAD1+1)+VAL5*INT(LAD1+2)
         DO 561 J=M2,M1
            LSM=IEOR(ASM,SS(J))
            LOS=OS(LSM+1)
            LAD=ARR+KADD(J+AOS)+LADD(J+LOS)
            Z=XX*INT(LAD+1)+VAL5*INT(LAD+2)+Z1
            D(JJ)=D(JJ)+Z
  561    JJ=JJ+1
  560 CONTINUE
      RETURN
  550 DO 562 I=2,N
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 562
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 562
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 562
         JJ=JA+WTX(I,1+JS)+WTY(M2)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD1=ARR+KADD(I+AOS)+LADD(I+LOS)
         Z1=VAL5*INT(LAD1+2)
         DO 563 J=M2,M1
            LSM=IEOR(ASM,SS(J))
            LOS=OS(LSM+1)
            LAD=ARR+KADD(J+AOS)+LADD(J+LOS)
            Z=VAL5*INT(LAD+2)+Z1
            D(JJ)=D(JJ)+Z
  563    JJ=JJ+1
  562 CONTINUE
      RETURN
C   XX   NO 11  FOUR EXTERNALS
  316 JJA=JA
      M5=IMAX
      M6=IMIN
      IF (M6.LT.2) M6=2
      DO 2002 I=M6,M5
         IF (I.GT.IMAXG.OR.I.LT.IMING.OR.I.GT.JMAXG.OR.I.LT.JMING)GOTO
     *   2002
         LAD=IJADD(I*(I+1)/2)
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2002
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 2002
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 2002
         JJ=JA+WTX(I,1+JS)+WTY(M2)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD2=LAD+KADD(I+KOS)+LADD(I+LOS)
         Z1=INT(LAD2+2)
         DO 2003 J=M2,M1
            LOS=OS(SS(J)+1)
C:    LAD1=LAD+KADD(J+KOS)+LADD(J+LOS)
            D(JJ)=D(JJ)+                           Z1
 2003    JJ=JJ+1
 2002 CONTINUE
      JJA=JA
      M5=IMAX
      M6=IMIN
      IF (M6.LT.2) M6=2
      DO 8002 I=M6,M5
         IF (I.GT.IMAXG.OR.I.LT.IMING.OR.I.GT.JMAXG.OR.I.LT.JMING)GOTO
     *   8002
         LAD=IJADD(I*(I+1)/2)
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 8002
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 8002
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 8002
         JJ=JA+WTX(I,1+JS)+WTY(M2)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
C:    LAD2=LAD+KADD(I+KOS)+LADD(I+LOS)
C:    Z1=INT(LAD2+2)
         DO 8003 J=M2,M1
            LOS=OS(SS(J)+1)
            LAD1=LAD+KADD(J+KOS)+LADD(J+LOS)
            D(JJ)=D(JJ)+(-INT(LAD1+1)+INT(LAD1+2))
 8003    JJ=JJ+1
 8002 CONTINUE
      DO 2082 I=2,N
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I))GO TO 2082
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 2082
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 2082
         M5=IMAX
         M6=IMIN
         IF (M5.GT.M1) M5=M1
         IF (M6.LT.M2) M6=M2
         JJ=JA+WTX(I,1+JS)+WTY(M6)
         KOS=OS(1)
         DO 2083 J=M6,M5
            IF (J.GT.IMAXG.OR.J.LT.IMING.OR.J.GT.JMAXG.OR.J.LT.JMING)
     *      GOTO 2083
            LOS=OS(SS(J)+1)
            LAD=IJADD(J*(J+1)/2)+KADD(J+KOS)+LADD(J+LOS)
            Z=INT(LAD+2)
            D(JJ)=D(JJ)+Z
 2083    JJ=JJ+1
 2082 CONTINUE
      RETURN
C   WW   NO   68  FOUR EXTERNALS
  317 CONTINUE
      M5=IMAX
      M6=IMIN
      IF(IS.NE.0) GO TO 6601
      DO 2030 I=M6,M5
         IF (I.GT.IMAXG.OR.I.LT.IMING.OR.I.GT.JMAXG.OR.I.LT.JMING)GOTO
     *   2030
         JJ=JA+WAB(I)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD=IJADD(I*(I+1)/2)+KADD(I+KOS)+LADD(I+LOS)
         Z=INT(LAD+2)+INT(LAD+2)+INT(LAD+1)
         D(JJ)=D(JJ)+Z
 2030 CONTINUE
C   NO  81
 6601 M6=IMIN
      IF (M6.LT.2) M6=2
      DO 2046 I=M6,M5
         IF (I.GT.IMAXG.OR.I.LT.IMING.OR.I.GT.JMAXG.OR.I.LT.JMING)GOTO
     *   2046
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2046
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 2046
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 2046
         JJ=JA+WTW(I,1+JS)+WTY(M2)
         LAD=IJADD(I*(I+1)/2)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD2=LAD+KADD(I+KOS)+LADD(I+LOS)
         Z1=INT(LAD2+2)
         DO 2047 J=M2,M1
C:    LOS=OS(SS(J)+1)
C:    LAD1=LAD+KADD(J+KOS)+LADD(J+LOS)
C:    Z=INT(LAD1+1)+INT(LAD1+2)+Z1
            D(JJ)=D(JJ)+Z1
 2047    JJ=JJ+1
 2046 CONTINUE
      M6=IMIN
      IF (M6.LT.2) M6=2
      DO 8046 I=M6,M5
         IF (I.GT.IMAXG.OR.I.LT.IMING.OR.I.GT.JMAXG.OR.I.LT.JMING)GOTO
     *   8046
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 8046
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 8046
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 8046
         JJ=JA+WTW(I,1+JS)+WTY(M2)
         LAD=IJADD(I*(I+1)/2)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
C:    LAD2=LAD+KADD(I+KOS)+LADD(I+LOS)
C:    Z1=INT(LAD2+2)
         DO 8047 J=M2,M1
            LOS=OS(SS(J)+1)
            LAD1=LAD+KADD(J+KOS)+LADD(J+LOS)
            Z=INT(LAD1+1)+INT(LAD1+2)
            D(JJ)=D(JJ)+Z
 8047    JJ=JJ+1
 8046 CONTINUE
      DO 2084 I=2,N
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2084
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 2084
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 2084
         M5=IMAX
         M6=IMIN
         IF (M5.GT.M1) M5=M1
         IF (M6.LT.M2) M6=M2
         JJ=JA+WTW(I,1+JS)+WTY(M6)
         KOS=OS(1)
         DO 2085 J=M6,M5
            IF (J.GT.IMAXG.OR.J.LT.IMING.OR.J.GT.JMAXG.OR.J.LT.JMING)
     *      GOTO 2085
            LOS=OS(SS(J)+1)
            LAD=IJADD(J*(J+1)/2)+KADD(J+KOS)+LADD(J+LOS)
            Z=INT(LAD+2)
            D(JJ)=D(JJ)+Z
 2085    JJ=JJ+1
 2084 CONTINUE
      RETURN
C   YY   NO 10 FOUR EXTERNALS
  315 CONTINUE
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.EQ.1000) RETURN
      IF (M1.GT.N) M1=N
      IF (M1.LT.M2) RETURN
      M5=IMAX
      M6=IMIN
      IF (M5.GT.M1) M5=M1
      IF (M6.LT.M2) M6=M2
      JJ=JA+WTY(M6)
      DO 2080 I=M6,M5
         IF (I.GT.IMAXG.OR.I.LT.IMING.OR.I.GT.JMAXG.OR.I.LT.JMING)GOTO
     *   2080
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD=IJADD(I*(I+1)/2)+KADD(I+KOS)+LADD(I+LOS)+2
         D(JJ)=D(JJ)+INT(LAD)
 2080 JJ=JJ+1
      RETURN
C   XX    NO  11  ISEG=8
 3054 CONTINUE
      DO 510 I=2,N
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 510
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.EQ.1000) GO TO 510
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 510
         JJ=JA+WTX(I,1+JS)+WTY(M2)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD1=ARR+KADD(I+AOS)+LADD(I+LOS)+1
         Z1=VAL1*INT(LAD1)
         DO 511 J=M2,M1
            LSM=IEOR(ASM,SS(J))
            LOS=OS(LSM+1)
            LAD=ARR+KADD(J+AOS)+LADD(J+LOS)
            Z=VAL1*INT(LAD+1)+Z1
            D(JJ)=D(JJ)+Z
  511    JJ=JJ+1
  510 CONTINUE
      RETURN
C   CLOSED INTERNAL LOOP
  318 Z=VAL1*(INT(ARR+TR1)+VAL2*INT(ARR+TR2))
      JJ=JA
      DO 4000 I=1,N1
         D(JJ)=D(JJ)+Z
 4000 JJ=JJ+1
      RETURN
C ZZ   ARRIVAL IS AN ERROR
  321 CONTINUE
  999 WRITE(ITAPE6,998) M,ISEG
  998 FORMAT (2I4)
      RETURN
      END
      SUBROUTINE INITEX(INT,C,S,IJADD,KADD,LADD,WTW,WTX,WTY,WAB,SS)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER ARR,TR1,TR2,ASM,AOS,OS,WTW,WTX,WTY,WAB,SS,SSI,SSJ,SYMORB
      INTEGER BMAX,ORBFRM
      REAL*8 INT(NMAX),C(NWKS),S(NWKS)
      DIMENSION KADD(SYMORB),LADD(SYMORB),IJADD(NUMIJ),WTW(ORBFRM,NSYM)
      DIMENSION WTX(ORBFRM,NSYM),WTY(ORBFRM),WAB(ORBFRM),SS(NORBS)
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
C  UNIVERSAL IDENTITY OF THE OBJECTS IN THESE COMMON
C     COMMON /ALL/ ARR,VAL1,VAL2,VAL3,ITR1,ITR2,IA,JA,ITYPE,ISEGT
C    *,LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
C     COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
C    #,             NUMSYM(8)
      COMMON /SYMM/ ASM,JS,IS,MX(8),MN(8),OS(8),NUMSYM(8)
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /ALL/VAL1,VAL2,VAL3,ARR,TR1,TR2,IA,JA,M,ISEG,N,N1,N2
     *,           IMAX,IMIN
      COMMON /MINMAX/ IMING,IMAXG,JMING,JMAXG
C
      REAL*8 Z,VAL1,VAL2,VAL3
      SQRT2=DSQRT(2.0D+00)
      SQRT3=DSQRT(3.0D+00)
      SQT1P5=DSQRT(1.5D+00)
      RETURN
C
C
      ENTRY SHAPES
C
C
      AOS=OS(ASM+1)
      GO TO (999,999,304,999,999,310,307,308,303,306,309,302,301,314
C     GO TO (301,302,303,304,305,306,307,308,309,310,311,312,313,314
C     GO TO ( YZ, XZ, XY, YY, XX, ZY, YX, YW, WZ, WY, WX, XW, WW,---YY
C
     1,314,314,317,318,319),M
C       XX, WW, ZZ,---4 INTERNALS),M
C
      WRITE(ITAPE6,*) ' FUNNY M'
      CALL MABORT
C
C     ----- YZ NO 1 ISEG=22 -----
C***********************************************************************
  301 IF (ISEG.EQ.16) GO TO 3011
      IF (ISEG.EQ.18) GO TO 3012
      IF (ISEG.NE.22) GO TO 999
      IF (JS.NE.0) RETURN
      JJ=JA
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      CJJ=C(JJ)
      SJJ=0.0
      DO 152 I=M2,M1
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         S(II)=S(II)+Z*CJJ
         SJJ=SJJ+Z*C(II)
  152 II=II+1
      S(JJ)=S(JJ)+SJJ
      RETURN
C
C    YZ   N0 1  ISEG=16
C
 3011 JJ=JA
      IF (JS.NE.0) RETURN
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      CJJ=C(JJ)
      SJJ=0.0
      DO 151 I=M2,M1
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+3)+INT(LAD+1))
         S(II)=S(II)+Z*CJJ
         SJJ=SJJ+Z*C(II)
  151 II=II+1
      S(JJ)=S(JJ)+SJJ
      RETURN
C
C  YZ  NO 1  ISEG=18
C
 3012 IF (JS.NE.0) RETURN
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      JJ=JA
      CJJ=C(JJ)
      SJJ=0.0
      DO 150 I=M2,M1
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*INT(LAD+3)
         S(II)=S(II)+Z*CJJ
         SJJ=SJJ+Z*C(II)
  150 II=II+1
      S(JJ)=S(JJ)+SJJ
      RETURN
C
C   XZ  NO 2 ISEG=13
C***********************************************************************
  302 IF (ISEG.NE.13) GO TO 999
      IF (JS.NE.0) RETURN
      JJ=JA
      CJJ=C(JJ)
      SJJ=0.0
      IF (N.LT.2) RETURN
      DO 250 I=2,N
         SSI=IEOR(SS(I),IS)
         IF (SSI.GT.SS(I)) GO TO 250
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 250
         IF (SSI.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 250
         II=IA+WTX(I,IS+1)+WTY(M2)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         DO 251 J=M2,M1
            LAD1=LAD+LADD(J+LOS)
            Z=VAL1*(INT(LAD1+1)-INT(LAD1+3))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  251    II=II+1
  250 CONTINUE
      S(JJ)=S(JJ)+SJJ
      RETURN
C
C   XY   NO 3 ISEG=18
C***********************************************************************
  303 CONTINUE
      IF (N.LT.2) RETURN
      IF (ISEG.EQ.16) GO TO 3031
      IF (ISEG.EQ.3) GO TO 3033
      IF (ISEG.EQ.22) GO TO 3034
      IF (ISEG.NE.18) GO TO 999
      SSI=IEOR(JS,IS)
      IF (SSI.GT.JS) GO TO 6601
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6601
      IF (M1.GT.N) M1=N
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6601
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6601
      JJ=JA+WTY(M2)
      DO 365 I=M2,M1
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 365
         II=IA+WTX(I,IS+1)+WTY(M4)
         CJJ=C(JJ)
         SJJ=0.0
         DO 366 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=-VAL1*INT(LAD+3)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  366    II=II+1
         S(JJ)=S(JJ)+SJJ
  365 JJ=JJ+1
C
C  NO 150
C
 6601 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) RETURN
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) RETURN
      DO 5352 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 5352
         II=IA+WTX(I,IS+1)+WTY(M4)
         JJ=JA+WTY(M4)
         Z=VAL1*INT(ARR+LADD(I+AOS)+3)
         DO 5353 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 5353    JJ=JJ+1
 5352 CONTINUE
      RETURN
C
C  XY  NO 3 ISEG=16
C
 3031 SSI=IEOR(JS,IS)
      IF (SSI.GT.JS) GO TO 6602
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6602
      IF (M1.GT.N) M1=N
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6602
      IF (M2.LT.2) M2=2
      JJ=JA+WTY(M2)
      DO 363 I=M2,M1
         CJJ=C(JJ)
         SJJ=0.0
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 363
         II=IA+WTX(I,IS+1)+WTY(M4)
         DO 364 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=-VAL1*(INT(LAD+3)+INT(LAD+1))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  364    II=II+1
         S(JJ)=S(JJ)+SJJ
  363 JJ=JJ+1
C
C  NO 150
C
 6602 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) RETURN
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) RETURN
      DO 6352 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 6352
         II=IA+WTX(I,IS+1)+WTY(M4)
         JJ=JA+WTY(M4)
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+3)+INT(LAD+1))
         DO 6353 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 6353    JJ=JJ+1
 6352 CONTINUE
      RETURN
C
C  XY  NO 3 ISEG=22
C
 3034 SSI=IEOR(JS,IS)
      IF (SSI.GT.JS) GO TO 6603
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6603
      IF (M1.GT.N) M1=N
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6603
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6603
      JJ=JA+WTY(M2)
      DO 380 I=M2,M1
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 380
         II=IA+WTX(I,IS+1)+WTY(M4)
         CJJ=C(JJ)
         SJJ=0.0
         DO 381 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=-VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  381    II=II+1
         S(JJ)=S(JJ)+SJJ
  380 JJ=JJ+1
C
C NO 150
C
 6603 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) RETURN
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) RETURN
      DO 7352 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 7352
         II=IA+WTX(I,IS+1)+WTY(M4)
         JJ=JA+WTY(M4)
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         DO 7353 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 7353    JJ=JJ+1
 7352 CONTINUE
      RETURN
C
C  XY  NO 3  ISEG=3
C
 3033 SSI=IEOR(JS,IS)
      IF (SSI.GT.JS) GO TO 6604
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6604
      IF (M1.GT.N) M1=N
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6604
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6604
      JJ=JA+WTY(M2)
      DO 350 I=M2,M1
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 350
         II=IA+WTX(I,IS+1)+WTY(M4)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)+KADD(I+KOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 351 J=M4,M3
            LAD1=LAD+LADD(J+AOS)
            Z=-VAL1*(INT(LAD1+2)-INT(LAD1+1))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  351    II=II+1
         S(JJ)=S(JJ)+SJJ
  350 JJ=JJ+1
C
C  NO 4
C
 6604 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) GO TO 6605
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) GO TO 6605
      IF (M1.GT.N) M1=N
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) GO TO 6605
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6605
      DO 352 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 352
         JJ=JA+WTY(M4)
         II=IA+WTX(I,IS+1)+WTY(M4)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         DO 353 J=M4,M3
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)+LADD(J+LOS)
            Z=-VAL1*(INT(LAD1+1)-INT(LAD1+2))
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
  353    JJ=JJ+1
  352 CONTINUE
C
C    NO   5
C
 6605 DO 354 I=3,N
         SSI=IEOR(SS(I),IS)
         IF (JS.GT.SSI) GO TO 354
         IF (SSI.GT.SS(I)) GO TO 354
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 354
         IF (SSI.EQ.SS(I).OR.M1.GT.N) M1=I-1
         IF (M2.LT.2) M2=2
         M3=MX(JS+1)
         M4=MN(JS+1)
         IF (M4.GT.N) GO TO 354
         II=IA+WTX(I,IS+1)+WTY(M2)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         DO 355 J=M2,M1
            IF (JS.EQ.SSI) M3=J-1
            IF (M3.LT.M4) GO TO 355
            JJ=JA+WTY(M4)
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)
            CII=C(II)
            SII=0.0
            DO 356 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=-VAL1*(INT(LAD2+1)-INT(LAD2+2))
               S(JJ)=S(JJ)+Z*CII
               SII=SII+Z*C(JJ)
  356       JJ=JJ+1
            S(II)=S(II)+SII
  355    II=II+1
  354 CONTINUE
C
C    NO   6
C
      DO 357 I=3,N
         SSI=IEOR(SS(I),IS)
         IF (JS.GT.SS(I)) GO TO 357
         IF (SSI.GT.JS) GO TO 357
         M1=MX(JS+1)
         M2=MN(JS+1)
         IF (M2.GT.N) GO TO 357
         IF (JS.EQ.SS(I).OR.M1.GT.N) M1=I-1
         IF (M2.LT.2) M2=2
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 357
         JJ=JA+WTY(M2)
         IIA=IA+WTX(I,IS+1)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         DO 358 J=M2,M1
            IF (SSI.EQ.JS) M3=J-1
            IF (M3.LT.M4) GO TO 358
            II=IIA+WTY(M4)
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)
            CJJ=C(JJ)
            SJJ=0.0
            DO 359 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=-VAL1*(INT(LAD2+3)-INT(LAD2+2))
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
  359       II=II+1
            S(JJ)=S(JJ)+SJJ
  358    JJ=JJ+1
  357 CONTINUE
C
C   NO 7
C
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.3) M2=3
      IF (M1.LT.M2) RETURN
      JJ=JA+WTY(M2)
      DO 360 I=M2,M1
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         CJJ=C(JJ)
         SJJ=0.0
         DO 361 J=2,I-1
            SSI=IEOR(IS,SS(J))
            IF (SSI.GT.SS(J))GO TO 361
            M3=MX(SSI+1)
            M4=MN(SSI+1)
            IF (M4.GT.N) GO TO 361
            IF (SSI.EQ.SS(J)) M3=J-1
            IF (M3.LT.M4) GO TO 361
            II=IA+WTX(J,IS+1)+WTY(M4)
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)
            DO 362 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=VAL1*(INT(LAD2+1)-INT(LAD2+3))
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
  362       II=II+1
  361    CONTINUE
         S(JJ)=S(JJ)+SJJ
         JJ=JJ+1
  360 CONTINUE
      RETURN
C
C   YY   NO 9  ISEG=4
C***********************************************************************
  304 IF (ISEG.EQ.5) GO TO 3043
      IF (ISEG.EQ.6) GO TO 3041
      IF (ISEG.EQ.8) GO TO 3042
      IF (ISEG.NE.4) GO TO 999
      VAL4=-VAL1/SQRT2
      IF (IS.GT.JS) GO TO 6606
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6606
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) GO TO 6606
      JJ=JA+WTY(M2)
      DO 450 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 450
         II=IA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 451 J=M4,M3
            LAD1=LAD+LADD(J+LOS)+1
            Z=VAL4*(INT(LAD1)-2.*INT(LAD1+1))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  451    II=II+1
         S(JJ)=S(JJ)+SJJ
  450 JJ=JJ+1
C
C   NO 10
C
 6606 IF(IA.EQ.JA)RETURN
      IF (IS.NE.JS) RETURN
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      JJ=JA+WTY(M2)
      DO 460 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=VAL4*(INT(LAD+1)-2.*INT(LAD+2))
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
  460 JJ=JJ+1
      RETURN
C
C YY  NO 9 ISEG=8
C
 3042 VAL4=VAL1*SQT1P5
      IF (IS.GT.JS) GO TO 6607
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6607
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6607
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) GO TO 6607
      JJ=JA+WTY(M2)
      DO 420 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 420
         II=IA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 421 J=M4,M3
            LAD1=LAD+LADD(J+LOS)+TR1
            Z=VAL4*INT(LAD1)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  421    II=II+1
         S(JJ)=S(JJ)+SJJ
  420 JJ=JJ+1
C
C  NO 10
C
 6607 IF(IA.EQ.JA) RETURN
      IF (IS.NE.JS) GO TO 6598
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6598
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      JJ=JA+WTY(M2)
      DO 430 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=VAL4*INT(LAD+1)
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
  430 JJ=JJ+1
C
C  NO 8
C
 6598 IF (JS.GT.IS) RETURN
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) RETURN
      II=IA+WTY(M2)
      DO 440 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 440
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         JJ=JA+WTY(M4)
         DO 441 J=M4,M3
            LAD1=LAD+LADD(J+LOS)
            Z=VAL4*INT(LAD1+1)
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
  441    JJ=JJ+1
  440 II=II+1
      RETURN
C
C  YY  NO 10  ISEG=5
C
 3043 CONTINUE
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      JJ=JA+WTY(M2)
      XX=-VAL1/SQRT2+VAL3*SQT1P5
      IF (ABS(XX).LT.1.0D-06) GO TO 490
      VAL5=SQRT2*VAL1
      IF(IA.EQ.JA) GO TO 491
      IF (IS.NE.JS) GO TO 491
      DO 493 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=XX*INT(LAD+1)+VAL5*INT(LAD+2)
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
  493 JJ=JJ+1
      GO TO 491
  490 VAL5=SQRT2*VAL1
      IF(IA.EQ.JA) GO TO 492
      IF (IS.NE.JS) GO TO 492
      DO 494 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=VAL5*INT(LAD+2)
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
  494 JJ=JJ+1
      GO TO 492
C
C   NO   9
C
  491 IF (IS.GT.JS) RETURN
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) RETURN
      JJ=JA+WTY(M2)
      DO 495 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 495
         II=IA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 496 J=M4,M3
            LAD1=LAD+LADD(J+LOS)
            Z=XX*INT(LAD1+1)+VAL5*INT(LAD1+2)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  496    II=II+1
         S(JJ)=S(JJ)+SJJ
  495 JJ=JJ+1
      RETURN
C
  492 IF (IS.GT.JS) RETURN
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) RETURN
      JJ=JA+WTY(M2)
      DO 497 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 497
         II=IA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 498 J=M4,M3
            LAD1=LAD+LADD(J+LOS)+2
            Z=VAL5*INT(LAD1)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  498    II=II+1
         S(JJ)=S(JJ)+SJJ
  497 JJ=JJ+1
      RETURN
C
C   YY   NO 8  ISEG=6
C
 3041 XX=-VAL1/SQRT2+VAL3*SQT1P5
      IF (ABS(XX).LT.1.0D-06) GO TO 480
      VAL5=VAL1*SQRT2
      IF (JS.GT.IS) GO TO 481
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) GO TO 481
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 481
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) GO TO 481
      II=IA+WTY(M2)
      DO 472 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 472
         JJ=JA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CII=C(II)
         SII=0.0
         DO 473 J=M4,M3
            LAD1=LAD+LADD(J+LOS)
            Z=XX*INT(LAD1+1)+VAL5*INT(LAD1+2)
            SII=SII+Z*C(JJ)
            S(JJ)=S(JJ)+Z*CII
  473    JJ=JJ+1
         S(II)=S(II)+SII
  472 II=II+1
      GO TO 481
C
  480 VAL5=SQRT2*VAL1
      IF (JS.GT.IS) GO TO 483
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) GO TO 483
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 483
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) GO TO 483
      II=IA+WTY(M2)
      DO 474 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 474
         JJ=JA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CII=C(II)
         SII=0.0
         DO 475 J=M4,M3
            LAD1=LAD+LADD(J+LOS)
            Z=VAL5*INT(LAD1+2)
            SII=SII+Z*C(JJ)
            S(JJ)=S(JJ)+Z*CII
  475    JJ=JJ+1
         S(II)=S(II)+SII
  474 II=II+1
      GO TO 483
C
C    NO  10
C
  481 IF (IS.NE.JS) GO TO 482
      IF(IA.EQ.JA) GO TO 482
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 482
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      JJ=JA+WTY(M2)
      DO 470 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=XX*INT(LAD+1)+VAL5*INT(LAD+2)
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
  470 JJ=JJ+1
      GO TO 482
C
  483 IF (IS.NE.JS) GO TO 484
      IF (IA.EQ.JA) GO TO 484
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 484
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      JJ=JA+WTY(M2)
      DO 471 I=M2,M1
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+LADD(I+LOS)+KADD(I+AOS)
         Z=VAL5*INT(LAD+2)
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
  471 JJ=JJ+1
      GO TO 484
C
C  NO  9
C
  482 IF (IS.GT.JS) RETURN
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) RETURN
      JJ=JA+WTY(M2)
      DO 476 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 476
         II=IA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 477 J=M4,M3
            LAD1=LAD+LADD(J+LOS)
            Z=XX*INT(LAD1+3)+VAL5*INT(LAD1+2)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  477    II=II+1
         S(JJ)=S(JJ)+SJJ
  476 JJ=JJ+1
      RETURN
C
  484 IF (IS.GT.JS) RETURN
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) RETURN
      JJ=JA+WTY(M2)
      DO 478 I=M2,M1
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 478
         II=IA+WTY(M4)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 479 J=M4,M3
            LAD1=LAD+LADD(J+LOS)
            Z=VAL5*INT(LAD1+2)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  479    II=II+1
         S(JJ)=S(JJ)+SJJ
  478 JJ=JJ+1
      RETURN
C
C   WY  NO 27  ISEG=2
C***********************************************************************
  310 IF (ISEG.EQ.15) GO TO 3101
      IF (ISEG.EQ.17) GO TO 3102
      IF (ISEG.EQ.21) GO TO 3103
      IF (ISEG.NE.2) GO TO 999
C
C   NO 32
C
C
C
      VAL4=VAL1*SQRT2
      IF (IS.NE.0) GO TO 6587
      DO 1001 I=2,N
         IF (JS.GT.SS(I)) GO TO 1001
         II=IA+WAB(I)
         M1=MX(JS+1)
         M2=MN(JS+1)
         IF (M2.GT.N) GO TO 1001
         IF (JS.EQ.SS(I).OR.M1.GT.N) M1=I-1
         JJ=JA+WTY(M2)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)+KADD(I+KOS)
         CII=C(II)
         SII=0.0
         DO 1002 J=M2,M1
            LAD1=LAD+LADD(J+AOS)
            Z=INT(LAD1+1)*VAL4
            SII=SII+Z*C(JJ)
            S(JJ)=S(JJ)+Z*CII
 1002    JJ=JJ+1
         S(II)=S(II)+SII
 1001 CONTINUE
C
C   NO  28
C
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6599
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6599
      JJ=JA+WTY(M2)
      DO 1003 I=M2,M1
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         CJJ=C(JJ)
         SJJ=0.0
         DO 1004 J=1,I-1
            II=IA+WAB(J)
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)+LADD(J+LOS)
            Z=VAL4*INT(LAD1+1)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 1004    CONTINUE
         S(JJ)=S(JJ)+SJJ
 1003 JJ=JJ+1
C
C   NO 30
C
 6587 M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6599
      IF (M1.GT.N) M1=N
      IF (M2.LT.3) M2=3
      IF (M1.LT.M2) GO TO 6599
      JJ=JA+WTY(M2)
      DO 1005 I=M2,M1
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         CJJ=C(JJ)
         SJJ=0.0
         DO 1006 J=2,I-1
            SSI=IEOR(IS,SS(J))
            IF (SSI.GT.SS(J))GO TO 1006
            M3=MX(SSI+1)
            M4=MN(SSI+1)
            IF (M4.GT.N) GO TO 1006
            IF (SSI.EQ.SS(J)) M3=J-1
            IF (M3.LT.M4) GO TO 1006
            II=IA+WTW(J,IS+1)+WTY(M4)
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)
            DO 1007 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=VAL1*(INT(LAD2+1)+INT(LAD2+3))
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 1007       II=II+1
 1006    CONTINUE
         S(JJ)=S(JJ)+SJJ
         JJ=JJ+1
 1005 CONTINUE
C
C   NO 32
C
 6599 IF(N.LT.3) GO TO 1018
      DO 1008 I=3,N
         SSI=IEOR(SS(I),IS)
         IF (JS.GT.SSI) GO TO 1008
         IF (SSI.GT.SS(I)) GO TO 1008
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 1008
         IF (SSI.EQ.SS(I).OR.M1.GT.N) M1=I-1
         IF (M2.LT.2) M2=2
         IF (M1.LT.M2) GO TO 1008
         M3=MX(JS+1)
         M4=MN(JS+1)
         IF (M4.GT.N) GO TO 1008
         II=IA+WTW(I,IS+1)+WTY(M2)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         DO 1009 J=M2,M1
            IF (JS.EQ.SSI) M3=J-1
            IF (M3.LT.M4) GO TO 1009
            JJ=JA+WTY(M4)
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)
            CII=C(II)
            SII=0.0
            DO 1010 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=VAL1*(INT(LAD2+1)+INT(LAD2+2))
               SII=SII+Z*C(JJ)
               S(JJ)=S(JJ)+Z*CII
 1010       JJ=JJ+1
            S(II)=S(II)+SII
 1009    II=II+1
 1008 CONTINUE
 1018 CONTINUE
C
C   NO 33
C
      SSI=IEOR(JS,IS)
      IF (SSI.GT.JS)GO TO  6608
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6608
      IF (M1.GT.N) M1=N
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6608
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6608
      JJ=JA+WTY(M2)
      DO 1011 I=M2,M1
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 1011
         II=IA+WTW(I,IS+1)+WTY(M4)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)+KADD(I+KOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 1012 J=M4,M3
            LAD1=LAD+LADD(J+AOS)
            Z=VAL1*(INT(LAD1+2)+INT(LAD1+1))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 1012    II=II+1
         S(JJ)=S(JJ)+SJJ
 1011 JJ=JJ+1
C
C   NO 36
C
 6608 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) GO TO 6609
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) GO TO 6609
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) GO TO 6609
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6609
      DO 1013 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 1013
         JJ=JA+WTY(M4)
         II=IA+WTW(I,IS+1)+WTY(M4)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         DO 1014 J=M4,M3
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)+LADD(J+LOS)
            Z=VAL1*(INT(LAD1+1)+INT(LAD1+2))
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 1014    JJ=JJ+1
 1013 CONTINUE
C
C    NO 38
C
 6609 DO 1015 I=3,N
         SSI=IEOR(SS(I),IS)
         IF (JS.GT.SS(I)) GO TO 1015
         IF (SSI.GT.JS) GO TO 1015
         M1=MX(JS+1)
         M2=MN(JS+1)
         IF (M2.GT.N) GO TO 1015
         IF (JS.EQ.SS(I).OR.M1.GT.N) M1=I-1
         IF (M2.LT.2) M2=2
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 1015
         JJ=JA+WTY(M2)
         IIA=IA+WTW(I,IS+1)
         KSM=IEOR(ASM,SS(I))
         KOS=OS(KSM+1)
         LAD=IJADD(ARR+I)
         DO 1016 J=M2,M1
            IF (SSI.EQ.JS) M3=J-1
            IF (M3.LT.M4) GO TO 1016
            II=IIA+WTY(M4)
            LSM=IEOR(KSM,SS(J))
            LOS=OS(LSM+1)
            LAD1=LAD+KADD(J+KOS)
            CJJ=C(JJ)
            SJJ=0.0
            DO 1017 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=VAL1*(INT(LAD2+3)+INT(LAD2+2))
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 1017       II=II+1
            S(JJ)=S(JJ)+SJJ
 1016    JJ=JJ+1
 1015 CONTINUE
      RETURN
C
C   WY   NO 26   ISEG=21
C
 3103 VAL4=VAL1*SQRT2
      IF (IS.NE.0) GO TO 6610
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6610
      IF (M1.GT.N) M1=N
      JJ=JA+WTY(M2)
      DO 1020 I=M2,M1
         II=IA+WAB(I)
         LAD=ARR+LADD(I+AOS)
         Z=VAL4*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
 1020 JJ=JJ+1
C
C   NO 33
C
 6610 SSI=IEOR(JS,IS)
      IF (SSI.GT.JS) GO TO 6611
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6611
      IF (M1.GT.N) M1=N
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6611
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6611
      JJ=JA+WTY(M2)
      DO 1021 I=M2,M1
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 1021
         II=IA+WTW(I,IS+1)+WTY(M4)
         CJJ=C(JJ)
         SJJ=0.0
         DO 1022 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 1022    II=II+1
         S(JJ)=S(JJ)+SJJ
 1021 JJ=JJ+1
C
C NO 149
C
 6611 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) RETURN
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) RETURN
      DO 6013 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 6013
         II=IA+WTW(I,IS+1)+WTY(M4)
         JJ=JA+WTY(M4)
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         DO 6014 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 6014    JJ=JJ+1
 6013 CONTINUE
      RETURN
C
C    WY  NO 26   ISEG=15
C
 3101 VAL4=VAL1*SQRT2
      IF (IS.NE.0) GO TO 6612
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6612
      IF (M1.GT.N) M1=N
      JJ=JA+WTY(M2)
      DO 1030 I=M2,M1
         II=IA+WAB(I)
         LAD=ARR+LADD(I+AOS)
         Z=VAL4*(INT(LAD+1)+INT(LAD+2)+INT(LAD+3))
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
 1030 JJ=JJ+1
C
C    NO 33
C
 6612 SSI=IEOR(JS,IS)
      IF (SSI.GT.JS) GO TO 6613
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6613
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6613
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6613
      JJ=JA+WTY(M2)
      DO 1031 I=M2,M1
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 1031
         II=IA+WTW(I,IS+1)+WTY(M4)
         CJJ=C(JJ)
         SJJ=0.0
         DO 1032 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=VAL1*(INT(LAD+3)+INT(LAD+1))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 1032    II=II+1
         S(JJ)=S(JJ)+SJJ
 1031 JJ=JJ+1
C
C NO 149
C
 6613 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) RETURN
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) RETURN
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      DO 7013 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 7013
         II=IA+WTW(I,IS+1)+WTY(M4)
         JJ=JA+WTY(M4)
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+3)+INT(LAD+1))
         DO 7014 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 7014    JJ=JJ+1
 7013 CONTINUE
      RETURN
C
C   WY  NO 26 ISEG=17
C
 3102 VAL4=VAL1*SQRT2
      IF (IS.NE.0) GO TO 6614
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6614
      IF (M1.GT.N) M1=N
      JJ=JA+WTY(M2)
      DO 1023 I=M2,M1
         II=IA+WAB(I)
         LAD=ARR+LADD(I+AOS)
         Z=VAL4*(INT(LAD+3)+INT(LAD+2))
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
 1023 JJ=JJ+1
C
C   NO  33
C
 6614 SSI=IEOR(JS,IS)
      IF (SSI.GT.JS) GO TO 6615
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) GO TO 6615
      M3=MX(SSI+1)
      M4=MN(SSI+1)
      IF (M4.GT.N) GO TO 6615
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6615
      JJ=JA+WTY(M2)
      DO 1024 I=M2,M1
         IF (SSI.EQ.JS) M3=I-1
         IF (M3.LT.M4) GOTO 1024
         II=IA+WTW(I,IS+1)+WTY(M4)
         CJJ=C(JJ)
         SJJ=0.0
         DO 1025 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=VAL1*INT(LAD+3)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 1025    II=II+1
         S(JJ)=S(JJ)+SJJ
 1024 JJ=JJ+1
C
C NO 149
C
 6615 SSI=IEOR(JS,IS)
      IF (JS.GT.SSI) RETURN
      M1=MX(SSI+1)
      M2=MN(SSI+1)
      IF (M2.GT.N) RETURN
      M3=MX(JS+1)
      M4=MN(JS+1)
      IF (M4.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      DO 5013 I=M2,M1
         IF (JS.EQ.SSI) M3=I-1
         IF (M3.LT.M4) GO TO 5013
         II=IA+WTW(I,IS+1)+WTY(M4)
         JJ=JA+WTY(M4)
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*INT(LAD+3)
         DO 5014 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 5014    JJ=JJ+1
 5013 CONTINUE
      RETURN
C
C   ZY   NO 17   ISEG=20
C***********************************************************************
  306 IF (ISEG.NE.20) GO TO 999
      IF (IS.NE.0) RETURN
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      JJ=JA+WTY(M2)
      II=IA
      CII=C(II)
      SII=0.0
      DO 601 I=M2,M1
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         SII=SII+Z*C(JJ)
         S(JJ)=S(JJ)+Z*CII
  601 JJ=JJ+1
      S(II)=S(II)+SII
      RETURN
C
C     YX   NO  18   ISEG=20
C***********************************************************************
  307 IF (ISEG.NE.20) GO TO 999
      SSJ=IEOR(IS,JS)
      IF (SSJ.GT.IS) GO TO 6630
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) GO TO 6630
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6630
      II=IA+WTY(M2)
      M3=MX(SSJ+1)
      M4=MN(SSJ+1)
      IF (M4.GT.N) GO TO 6630
      DO 701 I=M2,M1
         IF (SSJ.EQ.IS) M3=I-1
         IF (M3.LT.M4) GO TO 701
         JJ=JA+WTX(I,JS+1)+WTY(M4)
         CII=C(II)
         SII=0.0
         DO 702 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=-VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
            SII=SII+Z*C(JJ)
            S(JJ)=S(JJ)+Z*CII
  702    JJ=JJ+1
         S(II)=S(II)+SII
  701 II=II+1
C
C NO 136
C
 6630 SSJ=IEOR(IS,JS)
      IF (IS.GT.SSJ) RETURN
      M1=MX(SSJ+1)
      M2=MN(SSJ+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) RETURN
      DO 9080 I=M2,M1
         IF (IS.EQ.SSJ) M3=I-1
         IF (M3.LT.M4) GO TO 9080
         II=IA+WTY(M4)
         JJ=JA+WTX(I,JS+1)+WTY(M4)
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         DO 9081 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 9081    JJ=JJ+1
 9080 CONTINUE
      RETURN
C
C    WZ   NO 23  ISEG=11
C***********************************************************************
  309 IF (ISEG.EQ.10) GO TO 3091
      IF (ISEG.EQ.14) RETURN
      IF (ISEG.NE.11) GO TO 999
      VAL4=VAL1*SQRT2
      IF (IS.NE.0.OR.JS.NE.0) GO TO 6631
      JJ=JA
      CJJ=C(JJ)
      SJJ=0.0
      DO 901 I=1,N
         II=IA+WAB(I)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)+LADD(I+LOS)
         Z=VAL4*INT(LAD+1)
         S(II)=S(II)+Z*CJJ
         SJJ=SJJ+Z*C(II)
  901 CONTINUE
      S(JJ)=S(JJ)+SJJ
C
C     NO 25
C
 6631 IF (JS.NE.0) RETURN
      JJ=JA
      CJJ=C(JJ)
      SJJ=0.0
      DO 902 I=2,N
         SSI=IEOR(SS(I),IS)
         IF (SSI.GT.SS(I)) GO TO 902
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 902
         IF (SSI.EQ.SS(I)) M1=I-1
         II=IA+WTW(I,IS+1)+WTY(M2)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         DO 903 J=M2,M1
            LAD1=LAD+LADD(J+LOS)
            Z=VAL1*(INT(LAD1+1)+INT(LAD1+3))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  903    II=II+1
  902 CONTINUE
      S(JJ)=S(JJ)+SJJ
      RETURN
C
C   YW   NO 19   ISEG=19
C***********************************************************************
  308 IF (ISEG.NE.19) GO TO 999
      VAL4=VAL1*SQRT2
      IF (JS.NE.0) GO TO 6632
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) GO TO 6632
      IF (M1.GT.N) M1=N
      II=IA+WTY(M2)
      DO 801 I=M2,M1
         JJ=JA+WAB(I)
         LAD=ARR+LADD(I+AOS)
         Z=VAL4*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
  801 CONTINUE
C
C      NO 19A
C
 6632 SSJ=IEOR(IS,JS)
      IF (SSJ.GT.IS) GO TO 6633
      M1=MX(IS+1)
      M2=MN(IS+1)
      IF (M2.GT.N) GO TO 6633
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) GO TO 6633
      II=IA+WTY(M2)
      M3=MX(SSJ+1)
      M4=MN(SSJ+1)
      IF (M4.GT.N) GO TO 6633
      DO 802 I=M2,M1
         IF (SSJ.EQ.IS) M3=I-1
         IF (M3.LT.M4) GO TO 802
         JJ=JA+WTW(I,JS+1)+WTY(M4)
         CII=C(II)
         SII=0.0
         DO 803 J=M4,M3
            LAD=ARR+LADD(J+AOS)
            Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
            SII=SII+Z*C(JJ)
            S(JJ)=S(JJ)+Z*CII
  803    JJ=JJ+1
         S(II)=S(II)+SII
  802 II=II+1
C
C NO 137
C
 6633 SSJ=IEOR(IS,JS)
      IF (IS.GT.SSJ) RETURN
      M1=MX(SSJ+1)
      M2=MN(SSJ+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      IF (M1.LT.M2) RETURN
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) RETURN
      DO 9082 I=M2,M1
         IF (IS.EQ.SSJ) M3=I-1
         IF (M3.LT.M4) GO TO 9082
         II=IA+WTY(M4)
         JJ=JA+WTW(I,JS+1)+WTY(M4)
         LAD=ARR+LADD(I+AOS)
         Z=VAL1*(INT(LAD+TR1)+VAL2*INT(LAD+TR2))
         DO 9083 J=M4,M3
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
            II=II+1
 9083    JJ=JJ+1
 9082 CONTINUE
      RETURN
C
C   WZ   NO 23 ISEG=10
C
 3091 IF (IS.NE.0.OR.JS.NE.0) GO TO 6634
      JJ=JA
      CJJ=C(JJ)
      SJJ=0.0
      DO 904 I=1,N
         II=IA+WAB(I)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)+LADD(I+LOS)
         Z=VAL1*INT(LAD+1)
         S(II)=S(II)+Z*CJJ
         SJJ=SJJ+Z*C(II)
  904 CONTINUE
      S(JJ)=S(JJ)+SJJ
C
C      NO  25
C
 6634 VAL4=SQRT2*VAL1
      IF (JS.NE.0) RETURN
      JJ=JA
      CJJ=C(JJ)
      SJJ=0.0
      DO 905 I=2,N
         SSI=IEOR(SS(I),IS)
         IF (SSI.GT.SS(I)) GO TO 905
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 905
         IF (SSI.EQ.SS(I)) M1=I-1
         II=IA+WTW(I,IS+1)+WTY(M2)
         LSM=IEOR(ASM,SS(I))
         LOS=OS(LSM+1)
         LAD=ARR+KADD(I+AOS)
         DO 906 J=M2,M1
            LAD1=LAD+LADD(J+LOS)
            Z=VAL4*INT(LAD1+1)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
  906    II=II+1
  905 CONTINUE
      S(JJ)=S(JJ)+SJJ
      RETURN
C
C    YY    NO  9    FOUR EXTERNALS
C***********************************************************************
C
  999 WRITE(ITAPE6,998) M,ISEG
  998 FORMAT (2I4)
      RETURN
C
C     CLOSED INTERNAL LOOP
C***********************************************************************
  318 Z=VAL1*(INT(ARR+TR1)+VAL2*INT(ARR+TR2))
      II=IA
      JJ=JA
      DO 4000 I=1,N1
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
 4000 JJ=JJ+1
      RETURN
C
C***********************************************************************
  314 PRINT 315
  315 FORMAT(' INCORRECT ENTRY TO THIS SUBROUTINE. THIS IS FOR 4X.')
      CALL MABORT
C
C     ----- INTERNAL CASE FOR TRACKS OF (3,2,1) -----
C***********************************************************************
  319 CONTINUE
      Z=VAL1*(INT(ARR+1)+INT(ARR+2)+INT(ARR+3))
      II=IA
      JJ=JA
      DO 3999 I=1,N1
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
 3999 JJ=JJ+1
      RETURN
C
C***********************************************************************
C
  317 Z=VAL1*(INT(ARR+TR1)+VAL2*INT(ARR+TR2))
C   ZZ   ARRIVAL,FOR COMPLETENESS
      WRITE(ITAPE6,*) ' ZZ ARRIVAL IN EXTERNAL'
      CALL MABORT
      END
      SUBROUTINE INIT4X(INT,C,S,IJADD,KADD,LADD,WTW,WTX,WTY,WAB,SS)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER ARR,TR1,TR2,ASM,AOS,OS,WTW,WTX,WTY,WAB,SS,SSI,SSJ,SYMORB
      INTEGER BMAX,ORBFRM
      REAL*8 INT(NMAX),C(NWKS),S(NWKS)
      DIMENSION KADD(SYMORB),LADD(SYMORB),IJADD(NUMIJ),WTW(ORBFRM,NSYM)
      DIMENSION WTX(ORBFRM,NSYM),WTY(ORBFRM),WAB(ORBFRM),SS(NORBS)
      COMMON /DIMS/ NBF,NSYM,NORBS,NROWS,NROWS4,NWKS,NWKS2,NLEVS
     *,             NROWOC,LEVFRM
     *,             NWKSMX,NLWKMX,NUWKMX,BMAX,NROOTS,ORBFRM
      COMMON /INTS/   NMAX,NMAX2,NGROUP,NBLKOC,NUMIJ,SYMORB,INTSRT
C  UNIVERSAL IDENTITY OF THE OBJECTS IN THESE COMMON
C     COMMON /ALL/ ARR,VAL1,VAL2,VAL3,ITR1,ITR2,IA,JA,ITYPE,ISEGT
C    *,LVFRM1,NLWKI,NLWKJ,IMAX,IMIN
C     COMMON /SYMM/ JSM,JFSYM,IFSYM,MAXSYM(8),MINSYM(8),ISMOFF(8)
C    #,             NUMSYM(8)
      COMMON /SYMM/ ASM,JS,IS,MX(8),MN(8),OS(8),NUMSYM(8)
      COMMON /TAPES/ITAP52,ITAPE5,ITAPE6,ITAP58,ITAP54,ITAP99,ITAP94
     *,             ITAPE3,ITAP95,ITAP96
      COMMON /ALL/VAL1,VAL2,VAL3,ARR,TR1,TR2,IA,JA,M,ISEG,N,N1,N2
     *,           IMAX,IMIN
      COMMON /MINMAX/ IMING,IMAXG,JMING,JMAXG
C
      REAL*8 Z,VAL1,VAL2,VAL3
      SQRT2=DSQRT(2.0D+00)
      SQRT3=DSQRT(3.0D+00)
      SQT1P5=DSQRT(1.5D+00)
      RETURN
C
      ENTRY SHAPE4
C
      AOS=OS(ASM+1)
      GO TO (301,301,301,301,301,301,301,301,301,301,301,301,301,314
C     GO TO ( YZ, XZ, XY, YY, XX, ZY, YX, YW, WZ, WY, WX, XW, WW,---YY
C
     1,315,316,317,318,319),M
C       XX, WW, ZZ,---4 INTERNALS),M
C
      WRITE(ITAPE6,*) ' FUNNY M'
CALL MABORT
C
  301 PRINT 302
  302 FORMAT(' THIS ENTRY IS NOT POSSIBLE')
      CALL MABORT
C
C    YY    NO  9    FOUR EXTERNALS
C***********************************************************************
  314 IF (IS.GT.JS) RETURN
      M1=MX(JS+1)
      M2=MN(JS+1)
      IF (M2.GT.N) RETURN
      IF (M1.GT.N) M1=N
      IF (M2.LT.2) M2=2
      M3=MX(IS+1)
      M4=MN(IS+1)
      IF (M4.GT.N) RETURN
      M5=IMAX
      M6=IMIN
      IF (M5.GT.M1) M5=M1
      IF (M6.LT.M2) M6=M2
      IF (M5.LT.M6) RETURN
      JJ=JA+WTY(M6)
      DO 2000 I=M6,M5
C
         IF (I.GT.JMAXG.OR.I.LT.JMING) GO TO 2000
C
         IF (IS.EQ.JS) M3=I-1
         IF (M3.LT.M4) GO TO 2000
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD=IJADD(I*(I+1)/2)+KADD(I+KOS)+3
         II=IA+WTY(M4)
         CJJ=C(JJ)
         SJJ=0.0
         DO 2001 J=M4,M3
            LAD1=LAD+LADD(J+LOS)
            Z=INT(LAD1)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 2001    II=II+1
         S(JJ)=S(JJ)+SJJ
 2000 JJ=JJ+1
      RETURN
C
C   XX   NO 13 & 161 FOUR EXTERNALS
C***********************************************************************
  315 M5=IMAX
      M6=IMIN
      IF (M6.LT.3) M6=3
      IF (M5.LT.M6) GO TO 2003
      DO 2004 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(SS(I),IS)
         IF (SSJ.GT.SS(I)) GO TO 2004
         IF (SSI.GT.SSJ) GO TO 2004
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2004
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.2) M2=2
         IF (M1.LT.M2) GO TO 2004
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 2004
         JJ=JA+WTX(I,JS+1)+WTY(M2)
         IIA=IA+WTX(I,IS+1)
         KOS=OS(1)
         LAD=IJADD(I*(I+1)/2)
         DO 2005 J=M2,M1
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 2005
            LOS=OS(SS(J)+1)
            LAD1=LAD+KADD(J+KOS)
            II=IIA+WTY(M4)
            CJJ=C(JJ)
            SJJ=0.0
            DO 2006 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=-INT(LAD2+1)+INT(LAD2+2)
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 2006       II=II+1
            S(JJ)=S(JJ)+SJJ
 2005    JJ=JJ+1
 2004 CONTINUE
 2003 CONTINUE
C
C     NO 161
      IF (N.LT.3) GO TO 8084
      DO 7084 I=3,N
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(SS(I),IS)
         IF (SSJ.GT.SS(I)) GO TO 7084
         IF (SSI.GT.SSJ) GO TO 7084
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 7084
         IF (M2.LT.2) M2=2
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 7084
         M5=IMAX
         M6=IMIN
         IF (M5.GT.M1) M5=M1
         IF (M6.LT.M2) M6=M2
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 7084
         JJ=JA+WTX(I,JS+1)+WTY(M6)
         IIA=IA+WTX(I,IS+1)
         KOS=OS(1)
         DO 7085 J=M6,M5
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 7085
            LOS=OS(SS(J)+1)
            LAD3=IJADD(J*(J+1)/2)+KADD(J+KOS)+3
            II=IIA+WTY(M4)
            CJJ=C(JJ)
            SJJ=0.0
            DO 7086 K=M4,M3
               Z=INT(LAD3+LADD(K+LOS))
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 7086       II=II+1
            S(JJ)=S(JJ)+SJJ
 7085    JJ=JJ+1
 7084 CONTINUE
 8084 CONTINUE
C   NO  14
C
      M5=IMAX
      M6=IMIN
      IF (M6.LT.3) M6=3
      IF (M5.LT.M6) GO TO 8007
      DO 2007 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(IS,SSJ)
         IF (SSJ.GT.SSI) GO TO 2007
         IF (SSI.GT.SS(I)) GO TO 2007
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 2007
         IF (M2.LT.2) M2=2
         IF (SSI.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 2007
         M3=MX(SSJ+1)
         M4=MN(SSJ+1)
         IF (M4.GT.N) GO TO 2007
         JJA=JA+WTX(I,JS+1)
         KOS=OS(1)
         LOS1=OS(SS(I)+1)
         LAD3=IJADD(I*(I+1)/2)+KADD(I+KOS)+3
         DO 2008 J=M2,M1
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 2008
            Z1=INT(LAD3+LADD(J+LOS1))
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            II=IA+WTX(J,IS+1)+WTY(M4)
            JJ=JJA+WTY(M4)
            DO 2009 K=M4,M3
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)+LADD(K+LOS)
               Z=-INT(LAD2+1)+INT(LAD2+2)+Z1
               S(JJ)=S(JJ)+Z*C(II)
               S(II)=S(II)+Z*C(JJ)
               II=II+1
 2009       JJ=JJ+1
 2008    CONTINUE
 2007 CONTINUE
 8007 CONTINUE
C
C    NO 16   BOTH
C
      IF (M5.LT.M6) GO TO 8010
      DO 2010 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(IS,SSJ)
         IF (SSI.GT.SSJ) GO TO 2010
         IF (SSJ.GT.SS(I)) GO TO 2010
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2010
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.2) M2=2
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 2010
         JJ=JA+WTX(I,JS+1)+WTY(M2)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD2=IJADD(I*(I+1)/2)+KADD(I+KOS)
         DO 2011 J=M2,M1
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 2011
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD3=IJADD(I*(I-1)/2+J)+KADD(J+KOS)
            II=IA+WTX(J,IS+1)+WTY(M4)
            CJJ=C(JJ)
            SJJ=0.0
            DO 2012 K=M4,M3
               LAD4=LAD2+LADD(K+LOS)
               LAD5=LAD3+LADD(K+LOS)
               Z=-INT(LAD4+3)-INT(LAD5+2)+INT(LAD5+1)
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 2012       II=II+1
            S(JJ)=S(JJ)+SJJ
 2011    JJ=JJ+1
 2010 CONTINUE
 8010 CONTINUE
C
C    NO  20
C
      IF (M5.LT.4) GO TO 8013
      M6=IMIN
      IF (M6.LT.4) M6=4
      DO 2013 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2013
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2013
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.3) M2=3
         IF (M1.LT.M2) GO TO 2013
         JJ=JA+WTX(I,JS+1)+WTY(M2)
         DO 2014 J=M2,M1
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            CJJ=C(JJ)
            SJJ=0.0
            DO 2015 K=2,J-1
               SSI=IEOR(SS(K),IS)
               IF (SSI.GT.SS(K)) GO TO 2015
               M3=MX(SSI+1)
               M4=MN(SSI+1)
               IF (M4.GT.N) GO TO 2015
               IF (SS(K).EQ.SSI) M3=K-1
               IF (M3.LT.M4) GO TO 2015
               II=IA+WTX(K,IS+1)+WTY(M4)
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)
               DO 2016 L=M4,M3
                  LAD3=LAD2+LADD(L+LOS)
                  Z=INT(LAD3+1)-INT(LAD3+3)
                  S(II)=S(II)+Z*CJJ
                  SJJ=SJJ+Z*C(II)
 2016          II=II+1
 2015       CONTINUE
            S(JJ)=S(JJ)+SJJ
 2014    JJ=JJ+1
 2013 CONTINUE
 8013 CONTINUE
C
C      NO  21
C
      IF(M5.LT.M6) GO TO 8017
      DO 2017 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2017
         JJA=JA+WTX(I,JS+1)
         DO 2018 J=3,I-1
            SSI=IEOR(SS(J),IS)
            IF (SSI.GT.SS(J)) GO TO 2018
            IF (SSJ.GT.SSI) GO TO 2018
            M1=MX(SSI+1)
            M2=MN(SSI+1)
            IF (M2.GT.N) GO TO 2018
            IF (SSI.EQ.SS(J)) M1=J-1
            IF (M2.LT.2) M2=2
            IF (M1.LT.M2) GOTO 2018
            II=IA+WTX(J,IS+1)+WTY(M2)
            M3=MX(SSJ+1)
            M4=MN(SSJ+1)
            IF (M4.GT.N) GO TO 2018
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            DO 2019 K=M2,M1
               IF (SSJ.EQ.SSI) M3=K-1
               IF (M3.LT.M4) GO TO 2019
               JJ=JJA+WTY(M4)
               LAD2=LAD1+KADD(K+KOS)
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               CII=C(II)
               SII=0.0
               DO 2020 L=M4,M3
                  LAD3=LAD2+LADD(L+LOS)
                  Z=-INT(LAD3+1)+INT(LAD3+2)
                  SII=SII+Z*C(JJ)
                  S(JJ)=S(JJ)+Z*CII
 2020          JJ=JJ+1
               S(II)=S(II)+SII
 2019       II=II+1
 2018    CONTINUE
 2017 CONTINUE
 8017 CONTINUE
C
C   NO  22
C
      IF(M5.LT.M6) RETURN
      DO 2021 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2021
         JJA=JA+WTX(I,JS+1)
         DO 2022 J=3,I-1
            SSI=IEOR(SS(J),IS)
            IF (SSJ.GT.SS(J))GO TO 2022
            IF (SSI.GT.SSJ) GO TO 2022
            M1=MX(SSJ+1)
            M2=MN(SSJ+1)
            IF (M2.GT.N) GO TO 2022
            IF (SSJ.EQ.SS(J)) M1=J-1
            IF (M2.LT.2) M2=2
            IF (M1.LT.M2) GO TO 2022
            JJ=JJA+WTY(M2)
            IIA=IA+WTX(J,IS+1)
            M3=MX(SSI+1)
            M4=MN(SSI+1)
            IF (M4.GT.N) GO TO 2022
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            DO 2023 K=M2,M1
               IF (SSI.EQ.SSJ) M3=K-1
               IF (M3.LT.M4) GO TO 2023
               II=IIA+WTY(M4)
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)
               CJJ=C(JJ)
               SJJ=0.0
               DO 2024 L=M4,M3
                  LAD3=LAD2+LADD(L+LOS)
                  Z=-INT(LAD3+3)+INT(LAD3+2)
                  S(II)=S(II)+Z*CJJ
                  SJJ=SJJ+Z*C(II)
 2024          II=II+1
               S(JJ)=S(JJ)+SJJ
 2023       JJ=JJ+1
 2022    CONTINUE
 2021 CONTINUE
      RETURN
C
C   WW   NO 69A FOUR EXTERNALS
C***********************************************************************
  316 M5=IMAX
      M6=IMIN
      IF (M6.LT.2) M6=2
      IF (M5.LT.M6) GO TO 6586
      IF (IS.NE.0.OR.JS.NE.0) GO TO 6586
      DO 2031 I=M6,M5
         JJ=JA+WAB(I)
         LAD=IJADD(I*(I+1)/2)
         CJJ=C(JJ)
         KOS=OS(1)
         SJJ=0.0
         DO 2032 J=1,I-1
            LOS=OS(SS(J)+1)
            LAD1=KADD(J+KOS)+LADD(J+LOS)+LAD
            II=IA+WAB(J)
            Z=INT(LAD1+1)
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 2032    CONTINUE
         S(JJ)=S(JJ)+SJJ
 2031 CONTINUE
C
C    NO   72A
C
 6586 IF (JS.NE.0) GO TO  6635
      IF (M5.LT.M6) GO TO 6635
      DO 2033 I=M6,M5
         SSI=IEOR(SS(I),IS)
         IF (SSI.GT.SS(I)) GO TO 2033
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 2033
         IF (SSI.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GOTO 2033
         JJ=JA+WAB(I)
         II=IA+WTW(I,IS+1)+WTY(M2)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD=IJADD(I*(I+1)/2)+KADD(I+KOS)
         CJJ=C(JJ)
         SJJ=0.0
         DO 2034 J=M2,M1
            LAD1=LAD+LADD(J+LOS)
            Z=SQRT2*(INT(LAD1+3)+INT(LAD1+1))
            S(II)=S(II)+Z*CJJ
            SJJ=SJJ+Z*C(II)
 2034    II=II+1
         S(JJ)=S(JJ)+SJJ
 2033 CONTINUE
C
C    NO  73
C
 6635 M6=IMIN
      IF (M6.LT.3) M6=3
      IF (M5.LT.M6) GO TO 6636
      IF (IS.NE.0) GO TO 6636
      DO 2035 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2035
         JJA=JA+WTW(I,JS+1)
         M3=MX(SSJ+1)
         M4=MN(SSJ+1)
         IF (M4.GT.N) GO TO 2035
         DO 2036 J=2,I-1
            IF (SSJ.GT.SS(J)) GO TO 2036
            IF (SSJ.EQ.SS(J)) M3=J-1
            IF (M3.LT.M4) GO TO 2036
            JJ=JJA+WTY(M4)
            II=IA+WAB(J)
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LOS=OS(SS(I)+1)
            LAD1=IJADD(I*(I-1)/2+J)+KADD(J+KOS)
            CII=C(II)
            SII=0.0
            DO 2037 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=SQRT2*INT(LAD2+1)
               SII=SII+Z*C(JJ)
               S(JJ)=S(JJ)+Z*CII
 2037       JJ=JJ+1
            S(II)=S(II)+SII
 2036    CONTINUE
 2035 CONTINUE
C
C   NO  74A
C
 6636 IF (JS.NE.0) GO TO 6637
      IF (M5.LT.M6) GO TO 6637
      DO 2038 I=M6,M5
         JJ=JA+WAB(I)
         LAD=IJADD(I*(I+1)/2)
         CJJ=C(JJ)
         KOS=OS(1)
         SJJ=0.0
         DO 2039 J=2,I-1
            SSI=IEOR(SS(J),IS)
            IF (SSI.GT.SS(J)) GO TO 2039
            M1=MX(SSI+1)
            M2=MN(SSI+1)
            IF (M2.GT.N) GO TO 2039
            IF (SSI.EQ.SS(J)) M1=J-1
            IF (M1.LT.M2) GO TO 2039
            II=IA+WTW(J,IS+1)+WTY(M2)
            LOS=OS(SS(J)+1)
            LAD1=LAD+KADD(J+KOS)
            DO 2040 K=M2,M1
               LAD2=LAD1+LADD(K+LOS)
               Z=SQRT2*INT(LAD2+1)
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 2040       II=II+1
 2039    CONTINUE
         S(JJ)=S(JJ)+SJJ
 2038 CONTINUE
C
C   NO  76
C
 6637 IF (IS.NE.0) GO TO 6638
      IF (M5.LT.M6) GO TO 8041
      DO 2041 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2041
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2041
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.2) M2=2
         IF (M1.LT.M2) GO TO 2041
         JJ=JA+WTW(I,JS+1)+WTY(M2)
         DO 2042 J=M2,M1
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            CJJ=C(JJ)
            SJJ=0.0
            DO 2043 K=1,J-1
               II=IA+WAB(K)
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)+LADD(K+LOS)
               Z=SQRT2*INT(LAD2+1)
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 2043       CONTINUE
            S(JJ)=S(JJ)+SJJ
            JJ=JJ+1
 2042    CONTINUE
 2041 CONTINUE
 8041 CONTINUE
C
C    NO  78
C
      M6=IMIN
      IF (M6.LT.2) M6=2
      IF (M5.LT.M6) GO TO 6638
      DO 2044 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2044
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2044
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M1.LT.M2) GO TO 2044
         JJ=JA+WTW(I,JS+1)+WTY(M2)
         KOS=OS(1)
         LOS=OS(SS(I)+1)
         LAD=IJADD(I*(I+1)/2)+KADD(I+KOS)
         DO 2045 J=M2,M1
            LAD1=LAD+LADD(J+LOS)
            II=IA+WAB(J)
            Z=SQRT2*(INT(LAD1+3)+INT(LAD1+2))
            S(JJ)=S(JJ)+Z*C(II)
            S(II)=S(II)+Z*C(JJ)
 2045    JJ=JJ+1
 2044 CONTINUE
C
C    NO   84A
C
 6638 M6=IMIN
      IF (M6.LT.3) M6=3
      IF (M5.LT.M6) GOTO 8054
      DO 2048 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(IS,SSJ)
         IF (SSJ.GT.SSI) GO TO 2048
         IF (SSI.GT.SS(I)) GO TO 2048
         M1=MX(SSI+1)
         M2=MN(SSI+1)
         IF (M2.GT.N) GO TO 2048
         M3=MX(SSJ+1)
         M4=MN(SSJ+1)
         IF (M4.GT.N) GO TO 2048
         IF (SSI.EQ.SS(I)) M1=I-1
         IF (M2.LT.2) M2=2
         IF (M1.LT.M2) GO TO 2048
         JJA=JA+WTW(I,JS+1)
         KOS1=OS(1)
         LOS1=OS(SS(I)+1)
         LAD3=IJADD(I*(I+1)/2)+KADD(I+KOS1)+3
         DO 2049 J=M2,M1
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 2049
            Z1=INT(LAD3+LADD(J+LOS1))
            II=IA+WTW(J,IS+1)+WTY(M4)
            JJ=JJA+WTY(M4)
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            DO 2050 K=M4,M3
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)+LADD(K+LOS)
               Z=INT(LAD2+1)+INT(LAD2+2)+Z1
               S(JJ)=S(JJ)+Z*C(II)
               S(II)=S(II)+Z*C(JJ)
               II=II+1
 2050       JJ=JJ+1
 2049    CONTINUE
 2048 CONTINUE
C
C   NO  88A
C
      DO 2051 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(IS,SSJ)
         IF (SSI.GT.SSJ) GO TO 2051
         IF (SSJ.GT.SS(I)) GO TO 2051
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2051
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.2) M2=2
         IF (M1.LT.M2) GO TO 2051
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 2051
         JJ=JA+WTW(I,JS+1)+WTY(M2)
         KOS1=OS(1)
         LOS1=OS(SS(I)+1)
         LAD1=IJADD(I*(I+1)/2)+KADD(I+KOS1)
         DO 2052 J=M2,M1
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 2052
            II=IA+WTW(J,IS+1)+WTY(M4)
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD2=IJADD(I*(I-1)/2+J)+KADD(J+KOS)
            CJJ=C(JJ)
            SJJ=0.0
            DO 2053 K=M4,M3
               Z=INT(LAD1+LADD(K+LOS1)+3)+INT(LAD2+LADD(K+LOS1)+2)
               Z=Z+INT(LAD2+LADD(K+LOS1)+1)
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 2053       II=II+1
            S(JJ)=S(JJ)+SJJ
 2052    JJ=JJ+1
 2051 CONTINUE
C
C   NO   89 & 160
C
      DO 2054 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(SS(I),IS)
         IF (SSJ.GT.SS(I)) GO TO 2054
         IF (SSI.GT.SSJ) GO TO 2054
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2054
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.2) M2=2
         IF (M1.LT.M2) GO TO 2054
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 2054
         JJ=JA+WTW(I,JS+1)+WTY(M2)
         IIA=IA+WTW(I,IS+1)
         KOS=OS(1)
         LAD=IJADD(I*(I+1)/2)
         DO 2055 J=M2,M1
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 2055
            II=IIA+WTY(M4)
            LAD1=LAD+KADD(J+KOS)
            LOS=OS(SS(J)+1)
            CJJ=C(JJ)
            SJJ=0.0
            DO 2056 K=M4,M3
               LAD2=LAD1+LADD(K+LOS)
               Z=INT(LAD2+1)+INT(LAD2+2)
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 2056       II=II+1
            S(JJ)=S(JJ)+SJJ
 2055    JJ=JJ+1
 2054 CONTINUE
 8054 CONTINUE
C
C  NO 160
      IF (N.LT.3) GO TO 7080
      DO 7087 I=3,N
         SSJ=IEOR(SS(I),JS)
         SSI=IEOR(SS(I),IS)
         IF (SSJ.GT.SS(I)) GO TO 7087
         IF (SSI.GT.SSJ) GO TO 7087
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 7087
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.2) M2=2
         M5=IMAX
         M6=IMIN
         IF (M5.GT.M1) M5=M1
         IF (M6.LT.M2) M6=M2
         M3=MX(SSI+1)
         M4=MN(SSI+1)
         IF (M4.GT.N) GO TO 7087
         JJ=JA+WTW(I,JS+1)+WTY(M6)
         IIA=IA+WTW(I,IS+1)
         KOS=OS(1)
         DO 7088 J=M6,M5
            LOS=OS(SS(J)+1)
            LAD3=IJADD(J*(J+1)/2)+KADD(J+KOS)+3
            IF (SSI.EQ.SSJ) M3=J-1
            IF (M3.LT.M4) GO TO 7088
            II=IIA+WTY(M4)
            CJJ=C(JJ)
            SJJ=0.0
            DO 7089 K=M4,M3
               Z=INT(LAD3+LADD(K+LOS))
               S(II)=S(II)+Z*CJJ
               SJJ=SJJ+Z*C(II)
 7089       II=II+1
            S(JJ)=S(JJ)+SJJ
 7088    JJ=JJ+1
 7087 CONTINUE
 7080 CONTINUE
C     NO    99A
C
      M5=IMAX
      M6=IMIN
      IF (M6.LT.4) M6=4
      IF (M5.LT.M6) RETURN
      DO 2057 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2057
         JJA=JA+WTW(I,JS+1)
         DO 2058 J=3,I-1
            SSI=IEOR(SS(J),IS)
            IF(SSJ.GT.SS(J)) GO TO 2058
            IF (SSI.GT.SSJ) GO TO 2058
            M1=MX(SSJ+1)
            M2=MN(SSJ+1)
            IF (M2.GT.N) GO TO 2058
            IF (SSJ.EQ.SS(J)) M1=J-1
            IF (M2.LT.2) M2=2
            JJ=JJA+WTY(M2)
            IIA=IA+WTW(J,IS+1)
            M3=MX(SSI+1)
            M4=MN(SSI+1)
            IF (M4.GT.N) GO TO 2058
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            DO 2059 K=M2,M1
               IF (SSI.EQ.SSJ) M3=K-1
               IF (M3.LT.M4) GO TO 2059
               II=IIA+WTY(M4)
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)
               CJJ=C(JJ)
               SJJ=0.0
               DO 2060 L=M4,M3
                  LAD3=LAD2+LADD(L+LOS)
                  Z=INT(LAD3+3)+INT(LAD3+2)
                  S(II)=S(II)+Z*CJJ
                  SJJ=SJJ+Z*C(II)
 2060          II=II+1
               S(JJ)=S(JJ)+SJJ
 2059       JJ=JJ+1
 2058    CONTINUE
 2057 CONTINUE
C
C     NO   100A
C
      DO 2061 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2061
         JJA=JA+WTW(I,JS+1)
         DO 2062 J=3,I-1
            SSI=IEOR(SS(J),IS)
            IF (SSI.GT.SS(J)) GO TO 2062
            IF (SSJ.GT.SSI) GO TO 2062
            M1=MX(SSI+1)
            M2=MN(SSI+1)
            IF (M2.GT.N) GO TO 2062
            IF (SSI.EQ.SS(J)) M1=J-1
            IF (M2.LT.2) M2=2
            M3=MX(SSJ+1)
            M4=MN(SSJ+1)
            IF (M4.GT.N) GO TO 2062
            II=IA+WTW(J,IS+1)+WTY(M2)
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            DO 2063 K=M2,M1
               IF (SSJ.EQ.SSI) M3=K-1
               IF (M3.LT.M4) GOTO 2063
               JJ=JJA+WTY(M4)
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)
               CII=C(II)
               SII=0.0
               DO 2064 L=M4,M3
                  LAD3=LAD2+LADD(L+LOS)
                  Z=INT(LAD3+1)+INT(LAD3+2)
                  SII=SII+Z*C(JJ)
                  S(JJ)=S(JJ)+Z*CII
 2064          JJ=JJ+1
               S(II)=S(II)+SII
 2063       II=II+1
 2062    CONTINUE
 2061 CONTINUE
C
C   NO   101A
C
      DO 2065 I=M6,M5
         SSJ=IEOR(SS(I),JS)
         IF (SSJ.GT.SS(I)) GO TO 2065
         M1=MX(SSJ+1)
         M2=MN(SSJ+1)
         IF (M2.GT.N) GO TO 2065
         IF (SSJ.EQ.SS(I)) M1=I-1
         IF (M2.LT.3) M2=3
         IF (M1.LT.M2) GOTO 2065
         JJ=JA+WTW(I,JS+1)+WTY(M2)
         DO 2066 J=M2,M1
            KSM=IEOR(SS(I),SS(J))
            KOS=OS(KSM+1)
            LAD1=IJADD(I*(I-1)/2+J)
            CJJ=C(JJ)
            SJJ=0.0
            DO 2067 K=2,J-1
               SSI=IEOR(SS(K),IS)
               IF (SSI.GT.SS(K)) GO TO 2067
               M3=MX(SSI+1)
               M4=MN(SSI+1)
               IF (M4.GT.N) GO TO 2067
               IF (SS(K).EQ.SSI) M3=K-1
               IF (M3.LT.M4) GOTO 2067
               II=IA+WTW(K,IS+1)+WTY(M4)
               LSM=IEOR(KSM,SS(K))
               LOS=OS(LSM+1)
               LAD2=LAD1+KADD(K+KOS)
               DO 2068 L=M4,M3
                  LAD3=LAD2+LADD(L+LOS)
                  Z=INT(LAD3+1)+INT(LAD3+3)
                  S(II)=S(II)+Z*CJJ
                  SJJ=SJJ+Z*C(II)
 2068          II=II+1
 2067       CONTINUE
            S(JJ)=S(JJ)+SJJ
            JJ=JJ+1
 2066    CONTINUE
 2065 CONTINUE
      RETURN
C
C     CLOSED INTERNAL LOOP
C***********************************************************************
  318 Z=VAL1*(INT(ARR+TR1)+VAL2*INT(ARR+TR2))
      II=IA
      JJ=JA
      DO 4000 I=1,N1
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
 4000 JJ=JJ+1
      RETURN
C
C     ----- INTERNAL CASE FOR TRACKS OF (3,2,1) -----
C***********************************************************************
  319 CONTINUE
      Z=VAL1*(INT(ARR+1)+INT(ARR+2)+INT(ARR+3))
      II=IA
      JJ=JA
      DO 3999 I=1,N1
         S(JJ)=S(JJ)+Z*C(II)
         S(II)=S(II)+Z*C(JJ)
         II=II+1
 3999 JJ=JJ+1
      RETURN
C
C***********************************************************************
C
  317 Z=VAL1*(INT(ARR+TR1)+VAL2*INT(ARR+TR2))
C   ZZ   ARRIVAL,FOR COMPLETENESS
      WRITE(ITAPE6,*) ' ZZ ARRIVAL IN EXTERNAL'
      CALL MABORT
      END
      SUBROUTINE SQUARE(CA,C,N)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C     DIMENSION CA(1),C(N,N)
C
C     IJ=0
C     C(1,1)=0.0
C     DO 2 I=2,N
C     DO 1 J=1,I-1
C     IJ=IJ+1
C     T=CA(IJ)
C     C(I,J)=T
C     C(J,I)=-T
C   1 CONTINUE
C     C(I,I)=0.0
C   2 CONTINUE
C     RETURN
C
      DIMENSION CA(1),C(1)
C
      K=1
      JISV=1
      DO 2 I=1,N
      IJ=I
      JI=JISV
      DO 1 J=1,I-1
      T=CA(K)
      C(IJ)=T
      C(JI)=-T
      K=K+1
      IJ=IJ+N
      JI=JI+1
    1 CONTINUE
      C(IJ)=0.0D+00
      JISV=JISV+N
    2 CONTINUE
      RETURN
      END
      SUBROUTINE FOLD (SA,S,N)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C     DIMENSION SA(1),S(N,N)
C
C     IJ=0
C     DO 2 I=2,N
C     DO 1 J=1,I-1
C     IJ=IJ+1
C     SA(IJ)=SA(IJ)+S(I,J)-S(J,I)
C   1 CONTINUE
C   2 CONTINUE
C     RETURN
C
      DIMENSION SA(1),S(1)
C
      K=1
      JISV=1
      DO 2 I=1,N
      JI=JISV
      IJ=I
      DO 1 J=1,I-1
      SA(K)=SA(K)+S(IJ)-S(JI)
      K=K+1
      IJ=IJ+N
      JI=JI+1
    1 CONTINUE
      JISV=JISV+N
    2 CONTINUE
      RETURN
      END
      SUBROUTINE SQUARW(CA,C,N)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C     DIMENSION CA(1),C(N,N)
C
C     SQRT2=DSQRT(2.0D+00)
C     IJ=0
C     DO 2 I=1,N
C     DO 1 J=1,I-1
C     IJ=IJ+1
C     T=CA(IJ)
C     C(I,J)=T
C     C(J,I)=-T
C   1 CONTINUE
C     IJ=IJ+1
C     C(I,I)=SQRT2*CA(IJ)
C   2 CONTINUE
C     RETURN
C
      DIMENSION CA(1),C(1)
C
      SQRT2=DSQRT(2.0D+00)
      K=1
      JISV=1
      DO 2 I=1,N
      IJ=I
      JI=JISV
      DO 1 J=1,I-1
      T=CA(K)
      C(IJ)=T
      C(JI)=T
      K=K+1
      IJ=IJ+N
      JI=JI+1
    1 CONTINUE
      C(IJ)=SQRT2*CA(K)
      K=K+1
      JISV=JISV+N
    2 CONTINUE
      RETURN
      END
      SUBROUTINE FOLDW(SA,S,N)
C
C
C
      IMPLICIT REAL*8 (A-H,O-Z)
C
C     DIMENSION SA(1),S(N,N)
C
C     SQRT2=DSQRT(2.0D+00)
C     IJ=0
C     DO 2 I=1,N
C     DO 1 J=1,I-1
C     IJ=IJ+1
C     SA(IJ)=SA(IJ)+S(I,J)+S(J,I)
C   1 CONTINUE
C     IJ=IJ+1
C     SA(IJ)=SA(IJ)+SQRT2*S(I,I)
C   2 CONTINUE
C     RETURN
C
      DIMENSION SA(1),S(1)
C
      SQRT2=DSQRT(2.0D+00)
      K=1
      JISV=1
      DO 2 I=1,N
      JI=JISV
      IJ=I
      DO 1 J=1,I-1
      SA(K)=SA(K)+S(IJ)+S(JI)
      K=K+1
      IJ=IJ+N
      JI=JI+1
    1 CONTINUE
      SA(K)=SA(K)+SQRT2*S(IJ)
      K=K+1
      JISV=JISV+N
    2 CONTINUE
      RETURN
      END
      SUBROUTINE WFILE(FILE,NSECT,IA,LENGTH)
C
      IMPLICIT INTEGER (A-Z)
C
C
      IF (SEC2I(NSECT).GT.LENGTH) THEN
      N = LENGTH/SEC2I(1)
      NPASS = NSECT/N
      IF(NPASS*N.NE.NSECT) THEN
      NPASS = NPASS + 1
      NEXSEC = NPASS*N - NSECT
      END IF
      NLEN = SEC2I(N)
C
      DO 1 I = 1,NPASS
      IF(I.EQ.NPASS) NLEN = SEC2I(NEXSEC)
      CALL SWRIT(FILE,IA,NLEN)
   1  CONTINUE
C
      ELSE
      CALL SWRIT(FILE,IA,SEC2I(NSECT))
      END IF
C
C
      RETURN
      END
      BLOCK DATA LOOPDT
      COMMON /TABLES/ JSEGNR(22),JSEGPT(22),IARCMN(228),IARCSB(228)
     *,ITRK(228),JCOND(228),KCOND(228),NXTSEG(228),JSEGPX(3)
      DATA JSEGNR/16,34,52,63,75,92,102,118,128,137,148,155,162,172,
     A179,186,193,200,207,214,221,228/
C
      DATA ITRK / 1,  3,  1,  3,  1,  2,  9,  1,  1,  7,  2,  9
     A,           1,  7, 10,  9,  0,  4,  4,  3,  0,  2,  4,  9
     B,           0, 10,  0, 10,  4,  0,  9,  3,  0, 10,  0,  4
     C,           4,  9,  0, 10,  0, 10,  4,  3,  0,  2,  4,  0
     D,           3,  9,  0, 10,  0,  0,  0,  0,  0,  0,  0,  0
     E,           0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0
     F,           0,  0,  0,  0,  5,  5,  0,  0,  0,  3,  5,  0
     G,           3,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,  1
     H,           1,  0,  0,  0,  1,  0,  0,  0,  0,  1,  1,  0
     I,           0,  0,  1,  0,  1,  0,  0,  1,  1,  0,  0,  0
     J,           1,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0
     K,           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     L,           1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     M,           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     N,           0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0
     O,           0,  0,  0,  0,  8,  0,  0,  0,  0,  0,  0,  6
     P,           0,  0,  0,  0,  0,  0,  6,  0,  0,  0,  0,  0
     Q,           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     R,           0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0/
C
      DATA JCOND /-1,  1, -1,  1,  1,  1,  1,  1, -1,  1,  1,  1
     A,           -1,  1,  1,  1, -1,  1,  1,  1, -1,  1,  1,  1
     B,           -1,  1, -1,  1,  1,  1,  1,  1, -1,  1, -1,  1
     C,            1,  1, -1,  1, -1,  1,  1,  1, -1,  1,  1,  1
     D,            1,  1, -1,  1,  0,  0,  0,  0,  0,  0,  0,  0
     E,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     F,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     G,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     H,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     I,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     J,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     K,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     L,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     M,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     N,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     O,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     P,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     Q,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     R,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0/
C
      DATA KCOND / 0,  1,  0,  1,  0,  1,  0,  0,  0,  1,  1,  0
     A,            0,  1,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0
     B,            0,  1,  0,  1,  0,  1,  0,  0,  0,  1,  0,  0
     C,            0,  0,  0,  1,  0,  1,  0,  0,  0,  1,  0,  1
     D,            0,  0,  0,  1,  0,  1,  1,  1,  0,  1,  1,  0
     E,            1,  1,  0,  0,  1,  1,  1,  0,  0,  1,  1,  0
     F,            1,  1,  0,  0,  1,  1,  1,  1,  0,  0,  1,  1
     G,            0,  1,  0,  1,  1,  1,  1,  0,  0,  1,  0,  1
     H,            1,  0,  0,  1,  1,  0,  0,  1,  1,  1,  1,  0
     I,            0,  1,  1,  0,  1,  0,  1,  1,  1,  0,  0,  1
     J,            1,  0,  1,  0,  1,  0,  1,  0,  0,  1,  0,  1
     K,            0,  1,  1,  1,  0,  0,  1,  0,  0,  1,  0,  0
     L,            1,  1,  1,  0,  0,  0,  1,  0,  0,  1,  0,  0
     M,            1,  0,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0
     N,            0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0
     O,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     P,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     Q,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
     R,            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0/
C
      DATA NXTSEG/ 3, 18,  2, 17, 10,  0,  5,  7,  2, 15,  0,  5
     A,            3, 16,  0,  4,  2, 11, 12,  7,  2, 21, 12,  6
     B,            3, 22,  2, 21, 11, 20,  6,  7,  2, 21,  3, 13
     C,           11,  6,  3, 22,  2, 21, 11,  9,  3, 22, 13, 19
     D,            9,  6,  3, 22,  4, 22, 21,  0,  4, 21,  0,  4
     E,           22,  0,  4,  5, 22, 21,  0,  5,  7, 21,  0,  5
     F,           22,  0,  5,  6, 22, 21, 20,  0,  6,  7, 21, 19
     G,            9,  0,  6, 22, 19, 20,  0,  6,  7, 21,  7, 20
     H,            0,  8,  7, 21, 20,  7,  8, 22, 21, 20,  0,  8
     I,            7, 21, 19,  9,  0,  8, 22, 19, 20,  8,  9, 22
     J,           19,  9,  0,  8, 22,  9, 19,  9, 10, 21, 10, 22
     K,           10,  0, 22, 21, 10, 11, 21, 11, 12, 22, 13, 11
     L,            0, 22, 21, 11, 12, 12, 21, 14, 12, 21, 12, 13
     M,           22, 13, 14, 13, 22, 13, 14, 21, 14, 12, 22, 13
     N,           14, 22, 21, 14, 15, 15,  0, 16, 15,  0, 15, 16
     O,            0, 16, 15, 16,  0, 16, 17, 17,  0, 18, 17,  0
     P,           17, 18,  0, 18, 17, 18,  0, 18, 19,  0, 19, 20
     Q,            0, 19, 19, 20,  0, 20, 19, 20,  0, 20, 21, 21
     R,            0, 22, 21,  0, 21, 22,  0, 22, 21, 22,  0, 22/
C
      DATA IARCMN/ 2,  2,  3,  3,  4,  2,  2,  3,  4,  4,  3,  3
     A,            4,  4,  4,  4,  1,  2,  3,  1,  2,  2,  4,  1
     B,            2,  2,  3,  3,  4,  1,  2,  3,  4,  4,  1,  2
     C,            3,  1,  2,  2,  3,  3,  4,  1,  3,  3,  4,  1
     D,            2,  3,  4,  4,  1,  2,  3,  2,  2,  4,  3,  3
     E,            4,  4,  4,  1,  2,  3,  2,  2,  3,  4,  3,  3
     F,            4,  4,  4,  1,  2,  3,  1,  2,  2,  3,  4,  1
     G,            2,  3,  3,  4,  2,  3,  4,  4,  1,  2,  2,  1
     H,            2,  2,  3,  4,  2,  4,  1,  2,  3,  1,  2,  2
     I,            3,  4,  1,  2,  3,  3,  4,  2,  3,  4,  1,  3
     J,            1,  2,  3,  3,  4,  3,  3,  4,  1,  1,  2,  1
     K,            3,  1,  2,  3,  4,  1,  1,  2,  3,  1,  2,  3
     L,            1,  2,  3,  4,  1,  2,  1,  2,  3,  2,  4,  1
     M,            1,  2,  3,  3,  3,  4,  1,  1,  2,  3,  1,  2
     N,            3,  2,  3,  4,  1,  2,  1,  2,  3,  2,  4,  1
     O,            1,  2,  3,  3,  3,  4,  1,  2,  1,  2,  3,  2
     P,            4,  1,  1,  2,  3,  3,  3,  4,  1,  3,  2,  3
     Q,            4,  3,  4,  1,  2,  2,  2,  3,  4,  4,  1,  2
     R,            1,  2,  3,  2,  4,  1,  1,  2,  3,  3,  3,  4/
C
      DATA IARCSB/ 1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  3,  3
     A,            3,  3,  4,  4,  1,  1,  1,  2,  2,  2,  2,  3
     B,            3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  1,  1
     C,            1,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  4
     D,            4,  4,  4,  4,  1,  1,  1,  2,  2,  2,  3,  3
     E,            3,  4,  4,  1,  1,  1,  2,  2,  2,  2,  3,  3
     F,            3,  4,  4,  1,  1,  1,  2,  2,  2,  2,  2,  3
     G,            3,  3,  3,  3,  4,  4,  4,  4,  1,  1,  2,  3
     H,            3,  3,  3,  3,  4,  4,  1,  1,  1,  2,  2,  2
     I,            2,  2,  3,  3,  3,  3,  3,  4,  4,  4,  1,  1
     J,            2,  2,  2,  2,  2,  3,  4,  4,  1,  2,  2,  3
     K,            3,  4,  4,  4,  4,  1,  2,  2,  2,  3,  3,  3
     L,            4,  4,  4,  4,  1,  2,  3,  3,  3,  4,  4,  1
     M,            2,  2,  2,  3,  4,  4,  1,  2,  2,  2,  3,  3
     N,            3,  4,  4,  4,  1,  2,  3,  3,  3,  4,  4,  1
     O,            2,  2,  2,  3,  4,  4,  1,  2,  3,  3,  3,  4
     P,            4,  1,  2,  2,  2,  3,  4,  4,  1,  1,  2,  2
     Q,            2,  3,  4,  1,  1,  2,  3,  3,  3,  4,  1,  2
     R,            3,  3,  3,  4,  4,  1,  2,  2,  2,  3,  4,  4/
C
      DATA JSEGPX/12,29,47/
C
      END
