      PROGRAM MASTER
C   THIS PROGRAM FORMS THE MASTER FILE
C   USING THE PITZER'S SCF INFORMATION
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         SEARCH: C01-31-89  *
C*  DATE:  JANUARY  31, 1989                                          *
C*  REASON: DECREASE CORE FROM 15MB ON 3090 TO 7MB ON 9370.           *
C**********************************************************************
C*  LAST UPDATED ON DECEMBER 09, 1986 BY YUKIO YAMAGUCHI              *
C**********************************************************************
C
      IMPLICIT REAL*8 (A-H,O-Z)
C01-31-89   DIMENSION CC(1200000),IA(1)
      DIMENSION CC(720000),IA(1)
      INTEGER BLABEL(20)
      INTEGER ND(10),MNL(142),MS(142),MTYPE(2,20),ITYP(20)
      DIMENSION A30(1024)
      CHARACTER*8 SCFTYP,CITYP,DERTYP
      CHARACTER*8 TAPE
      LOGICAL TAPE36
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/CALIF/LPARA(1024),APARA(1024)
      COMMON/COUPL/ALPC(465),BETC(465),ALPA(30,30),BETA(30,30)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NTYPES,NTYPEP,NATOM,N3N
      COMMON/GRSCF/FOCC(30),NSORB(30),MOTYP(256),LOTYP(256),KOTYP(256)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/LOCAT/LOCS(1024)
      COMMON/MFSEC/MFILE,NSECT
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/TEMPS/I30(2048)
      COMMON/TYPES/ISTYPE,ICTYPE,NDERIV
      EQUIVALENCE (CC,IA)
      EQUIVALENCE (I30,A30)
    1 FORMAT(//,2X,' THE MASTER FILE PROGRAM'//)
    2 FORMAT(3(A8,2X))
    3 FORMAT(5I5)
    4 FORMAT(2X,' BLABEL = ',20A4/)
    5 FORMAT(2X,' ENUC   = ',F15.8/)
    6 FORMAT(2X,' NST    = ',I5/2X,' NDEG   =',8I5/)
    7 FORMAT(A8,2X,I5)
    8 FORMAT(F10.5,10I5)
    9 FORMAT(A8,2X)
   10 FORMAT(2X,' NBASIS = ',I8/
     1       2X,' NTRI   = ',I8/
     2       2X,' NSYM   = ',I8/
     3       2X,' NBFAO  = ',I8/
     4       2X,' NBFSO  = ',I8/
     5       2X,' NBATRI = ',I8/
     6       2X,' NATOM  = ',I8/
     7       2X,' N3N    = ',I8/
     8       2X,' NTYPES = ',I8/
     9       2X,' NTYPEP = ',I8/
     A       2X,' ISTART = ',I8/
     B       2X,' IPRNT  = ',I8/
     C       2X,' SCFTYP = ',A8/
     D       2X,' CITYP  = ',A8/
     E       2X,' DERTYP = ',A8/
     F       2X,' TAPE   = ',A8)
   11 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
   12 FORMAT(//,2X,' REQUIRED MEMORY EXCEEDS MAXCOR '/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
C
C   ITAP34 = SO INTEGRALS
C   ITAP36 = TWO ELECTRON SO INTEGRALS
C
      CALL TSTART(6)
      CALL NOUNFL
      CALL INITMF(0)
C
      ITAPE3=3
      ITAPE6=6
      ITAP30=30
      ITAP34=34
      ITAP36=36
C01-31-89   MAXCOR=1200000
      MAXCOR=720000
      TAPE36=.TRUE.
      INPUT=5
      CALL LOCATE(INPUT,'# MASTER #',IERR)
C
      WRITE(6,1)
      WRITE(3,1)
C
      READ(5,2) SCFTYP,CITYP,DERTYP
      READ(5,3) IPRNT
C
      IOFF(1)=0
      DO 101 I=1,255
  101 IOFF(I+1)=IOFF(I)+I
C
C   READ IN INTEGRAL INFORMATION FROM 34 FILE
      CALL RFILE(ITAP34)
      CALL WREADW(ITAP34,NKIND,1,1,IEND)
      CALL WREADW(ITAP34,ICLOS,1,IEND,IEND)
      CALL WREADW(ITAP34,BLABEL,20,IEND,IEND)
      CALL WREADW(ITAP34,ENUC,2,IEND,IEND)
      CALL WREADW(ITAP34,NST,1,IEND,IEND)
      CALL WREADW(ITAP34,ND,NST,IEND,IEND)
      CALL WREADW(ITAP34,ITYP,NST,IEND,IEND)
      CALL WREADW(ITAP34,NDEG,NST,IEND,IEND)
      CALL WREADW(ITAP34,NS,1,IEND,IEND)
      CALL WREADW(ITAP34,MTYPE,2*NS,IEND,IEND)
      CALL WREADW(ITAP34,LAPU,1,IEND,IEND)
      CALL WREADW(ITAP34,MS,LAPU,IEND,IEND)
      CALL WREADW(ITAP34,MNL,LAPU,IEND,IPARA)
C     WRITE(6,30) IPARA
C  30 FORMAT(2X,' IPARA = ',I10/)
      ISADR=I2SEC(IPARA)+1
      CALL RSETSA(ITAP34,ISADR)
C
      WRITE(6,4) BLABEL
C     WRITE(3,4) BLABEL
C     WRITE(6,5) ENUC
      WRITE(3,5) ENUC
C     WRITE(6,6) NST,(NDEG(I),I=1,NST)
      WRITE(3,6) NST,(NDEG(I),I=1,NST)
C
      NSYM=0
      NBASIS=0
      DO 102 I=1,NST
      IF(NDEG(I).GT.0) NSYM=NSYM+1
      NBASIS=NBASIS+NDEG(I)
  102 CONTINUE
      IDEG(1)=0
      LSYM(1)=0
      IF(NSYM.EQ.1) GO TO 203
      II=0
      DO 103 I=2,NST
      IF(NDEG(I).LE.0) GO TO 202
  201 II=II+1
      NN=NDEG(II)
      IF(NN.EQ.0) GO TO 201
      IDEG(I)=IDEG(I-1)+NN
      LSYM(I)=LSYM(I-1)+IOFF(NN+1)
      GO TO 103
  202 LSYM(I)=LSYM(I-1)
      IDEG(I)=IDEG(I-1)
  103 CONTINUE
  203 NTRI=IOFF(NBASIS+1)
C
C   READ IN PARAMETERS FROM TAPE30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      NBFSO=I30(18)
      NATOM=I30(19)
      NBFAO=I30(22)
      ISTART=I30(44)
      NTYPES=I30(45)
      NBATRI=IOFF(NBFAO+1)
      N3N=NATOM*3
      NTYPEP=NTYPES+1
C
C   INPUT SHELL INFORMATION ONLY FOR A GRSCF OPEN-SHELL CASE
C   UNNECESSARY FOR A TCSCF CASE
      CALL LOCATE(INPUT,'# MASTER #',IERR)
      READ(5,2) SCFTYP,CITYP,DERTYP
      READ(5,3) IPRNT
      READ(5,9) TAPE
      ISTYPE=0
      IF(SCFTYP.EQ.'CLSCF   ') ISTYPE=1
      IF(SCFTYP.EQ.'GRSCF   ') ISTYPE=2
      IF(SCFTYP.EQ.'TCSCF   ') ISTYPE=3
      IF(SCFTYP.EQ.'GVBSCF  ') ISTYPE=4
      IF(SCFTYP.EQ.'MCSCF   ') ISTYPE=5
      ICTYPE=0
      IF(CITYP.EQ.'SCF     ') ICTYPE=1
      IF(CITYP.EQ.'CI      ') ICTYPE=2
      IF(CITYP.EQ.'MCSCF   ') ICTYPE=3
      NDERIV=0
      IF(DERTYP.EQ.'FIRST   ') NDERIV=1
      IF(DERTYP.EQ.'SECOND  ') NDERIV=2
      IF(DERTYP.EQ.'THIRD   ') NDERIV=3
      IF(DERTYP.EQ.'FOURTH  ') NDERIV=4
      IF(TAPE.EQ.'NOTAPE36') TAPE36=.FALSE.
      IF(TAPE.EQ.'NOFILE36') TAPE36=.FALSE.
      IF(TAPE36) TAPE='  TAPE36'
      WRITE(6,10) NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI,NATOM,N3N,
     1            NTYPES,NTYPEP,ISTART,IPRNT,SCFTYP,CITYP,DERTYP,TAPE
C
C   FORM MASTER FILE
      WRITE(3,20)
   20 FORMAT(//,2X,' NOW YOU ARE IN FORMMS'/)
      CALL FORMMS(CC,IA,MAXCOR)
C
C   CREATE SO INTEGRAL FILES
      WRITE(3,21)
   21 FORMAT(//,2X,' NOW YOU ARE IN RDONE'/)
      IBUFHF=4471
      IC1=1
      IC2=IC1+NTRI
      IC3=IC2+NTRI
      IC4=IC3+NTRI
      IC5=IC4+NTRI
      IA5=IC5+IC5-1
      ICMAX=IC5+IBUFHF
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................S       H       T       V       LBLI    STVI....
      CALL RDONE(CC(IC1),CC(IC2),CC(IC3),CC(IC4),IA(IA5),CC(IC5),
C.......................
     1           IBUFHF)
      CALL MWRIT(CC(IC1),15)
      CALL MWRIT(CC(IC2),16)
      CALL MWRIT(CC(IC1),23)
      CALL MWRIT(CC(IC2),24)
C
      IF(.NOT.TAPE36) GO TO 300
      WRITE(3,22)
   22 FORMAT(//,2X,' NOW YOU ARE IN RDTWO'/)
      IBUFHF=4471
      IC1=1
      IA1=1
      IC2=IC1+IBUFHF
      IA2=IC2+IC2-1
C................LBLI    PKI     LBLO    BUFO...........
      CALL RDTWO(IA(IA1),CC(IC1),IA(IA2),CC(IC2),IBUFHF)
C
  300 CONTINUE
      CALL SREW(ITAP34)
C
C   READ IN SCF INFORMATION FROM TAPE30
      WRITE(3,23)
   23 FORMAT(//,2X,' NOW YOU ARE IN SCFINP'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NATOM
      IC9=IC8+NATOM*3
      IC10=IC9+NTRI
      ICMAX=IC10+NBATRI
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................EIG     OCC     ESO     UAS     EAO     EE......
      CALL SCFINP(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C.................CHGS    XX      WMO     WAO......
     1            CC(IC7),CC(IC8),CC(IC9),CC(IC10))
      CALL MWRIT(CC(IC1),10)
      CALL MWRIT(CC(IC2),11)
      CALL MWRIT(CC(IC3),13)
      CALL MWRIT(CC(IC4),9)
      CALL MWRIT(CC(IC5),14)
      CALL MWRIT(CC(IC7),8)
      CALL MWRIT(CC(IC9),27)
      CALL MWRIT(CC(IC10),26)
C
C    SORT EIGENVECTORS IF NECESSARY
      WRITE(3,24)
   24 FORMAT(//,2X,' NOW YOU ARE IN SORT'/)
      CALL MREAD(LPARA,2)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBASIS
      IC9=IC8+NBASIS
      IA9=IC9+IC9-1
      IC10=IC9+NBASIS
      IA10=IC10+IC10-1
      IC11=IC10+NBASIS
      IA11=IC11+IC11-1
      IC12=IC11+NBASIS
      IA12=IC12+IC12-1
      ICMAX=IC12+NBASIS
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C...............EIG     OCC     ESO     UAS     EAO     EE......
      CALL SORT(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C...............EGN     OCN.....
     1          CC(IC7),CC(IC8),
C...............KORD    LORD     MORD     NORD.....
     2          IA(IA9),IA(IA10),IA(IA11),IA(IA12))
      CALL MWRIT(CC(IC1),18)
      CALL MWRIT(CC(IC2),19)
      CALL MWRIT(CC(IC3),21)
      CALL MWRIT(CC(IC5),22)
      CALL MWRIT(LPARA,2)
      CALL MWRIT(A30,3)
      CALL MWRIT(IA(IA10),4)
C
C   FORM GENERALIZED OPEN-SHELL MO
      IF(.NOT.TAPE36) GO TO 400
      IF(ISTYPE.EQ.1) GO TO 210
      IF(CITYP.EQ.'SCF     '.AND.DERTYP.EQ.'FIRST   ') GO TO 205
      IF(CITYP.EQ.'SCF     '.AND.DERTYP.EQ.'SECOND  ') GO TO 205
      WRITE(3,25)
   25 FORMAT(//,2X,' NOW YOU ARE IN SCFGR'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBFAO*NBFAO
      IC9=IC8+NBATRI
      IC10=IC9+NBATRI
      IC11=IC10+NBATRI
      IC12=IC11+NBATRI
      IC13=IC12+NBATRI
      IC14=IC13+NBFAO*NBFAO
      IC15=IC14+NBFAO*NBFAO
      IA15=IC15+IC15-1
      IC16=IC15+MAXBF2
      ICMAX=IC16+NBFAO*4
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................EIG     OCC     ESO     UAS     EAO     U.......
      CALL SCFGR(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................T       H       DC      FC       FM       FF.......
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................EE       EZ       LBLI     BUFI     CC.......
     2           CC(IC13),CC(IC14),IA(IA15),CC(IC15),CC(IC16))
      CALL MWRIT(CC(IC1),18)
      CALL MWRIT(CC(IC2),19)
      CALL MWRIT(CC(IC3),21)
      CALL MWRIT(CC(IC5),22)
C
C   FORM THE GEMERALIZED LAGRANGIAN MATRICES
  205 CONTINUE
      WRITE(3,26)
   26 FORMAT(//,2X,' NOW YOU ARE IN ZETMAT'/)
      IC1=1
      IC2=IC1+NBASIS
      IC3=IC2+NBASIS
      IC4=IC3+NBFSO*NBASIS
      IC5=IC4+NBFAO*NBFSO
      IC6=IC5+NBFAO*NBASIS
      IC7=IC6+NBFAO*NBFAO
      IC8=IC7+NBFAO*NBFAO
      IC9=IC8+NBATRI
      IC10=IC9+NBATRI*NTYPES
      IC11=IC10+NBATRI*NTYPES
      IC12=IC11+NBATRI*NTYPES
      IC13=IC12+NBATRI*NTYPES
      IC14=IC13+NBATRI
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBATRI
      IA17=IC17+IC17-1
      ICMAX=IC17+MAXBF2
      WRITE(3,11) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C.................EIG     OCC     ESO     EAO     U       T.......
      CALL ZETMAT(CC(IC1),CC(IC2),CC(IC3),CC(IC5),CC(IC6),CC(IC7),
C.................H       DA       DB       ZT      ZETA     EPS......
     1            CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),CC(IC13),
C.................EPA      DT       XA       LBLI     BUFI.....
     2            CC(IC14),CC(IC15),CC(IC16),CC(IC17),IA(IA17))
C
  210 CONTINUE
      GO TO 400
  399 WRITE(3,12) ICMAX,MAXCOR
  400 CONTINUE
C
      CALL RCLOSE(ITAP30,3)
      CALL RCLOSE(ITAP34,3)
      CALL RCLOSE(MFILE,3)
      CALL TSTOP(6)
C
      STOP
      END
      SUBROUTINE FORMMS(AI,IA,MAXCOR)
      REAL*8 AI
      DIMENSION AI(MAXCOR),IA(MAXCOR*2)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/FUNCS/NTYPES,NTYPEP,NATOM,N3N
      COMMON/LOCAT/LOCS(1024)
      COMMON/MFSEC/MFILE,NSECT
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TYPES/ISTYPE,ICTYPE,NDERIV
C
C  NO.  :  CONTENTS
C
C   TRIA. = LOWER TRIANGULAR MATRIX
C   SQUA. = SQUARE MATRIX
C   RECT. = RECTANGULAR MATRIX
C   1   : LOCATION
C   2   : PARAMETERS
C   3   : ENERGIES AND REAL CONSTANTS
C   4   : MO ORDERING IN SCF
C   5   : MO ORDERING IN DRT
C   6   : MO CODE FOR CI
C   7   : MO CODE FOR MCSCF
C   8   : NUCLEAR CHARGE AND GEOMETRY
C   9   : AO-SO TRANSFORMATION MATRIX (RECT.)
C  10   : EIGENVALUES IN PITZER'S SCF (SQUA.)
C  11   : OCCUPATION IN PITZER'S SCF
C  12   : MOTYPE IN PITZER'S SCF
C  13   : SO-MO EIGENVECTORS IN PITZER'S SCF (SQUA.)
C  14   : AO-MO EIGENVECTORS IN PITZER'S SCF (RECT.)
C  15   : SO OVERLAP INTEGRALS IN PITZER'S SCF (TRIA.)
C  16   : ONE ELECTRON SO INTEGRALS IN PITZER'S SCF (TRIA.)
C  17   : ONE ELECTRON MO INTEGRALS IN PITZER'S SCF (TRIA.)
C  18   : EIGENVALUES IN SORTED SCF
C  19   : OCCUPATION IN SORTED SCF
C  20   : MOTYPE IN SORTED SCF
C  21   : SO-MO EIGENVECTORS IN SORTED SCF (SQUA.)
C  22   : AO-MO EIGENVECTORS IN SORTED SCF (RECT.)
C  23   : SO OVERLAP INTEGRALS IN SORTED SCF (TRIA.)
C  24   : ONE ELECTRON SO INTEGRALS IN SORTED SCF (TRIA.)
C  25   : ONE ELECTRON MO INTEGRLAS IN SORTED SCF (TRIA.)
C  26   : LAGRANGIAN MATRIX FOR SCF IN AO BASIS (TRIA.)
C  27   : LAGRANGIAN MATRIX FOR SCF IN MO BASIS (TRIA.)
C  28   : LAGRANGIAN MATRIX FOR CI IN AO BASIS (TRIA.)
C  29   : LAGRANGIAN MATRIX FOR CI IN MO BASIS (SQUA.)
C  30   : ONE PDM IN AO BASIS FOR CI (TRIA.)
C  31   : ONE PDM IN MO BASIS FOR CI (TRIA.)
C  32   : LAGRANGIAN MATRIX FOR MCSCF IN AO BASIS (TRIA.)
C  33   : LAGRANGIAN MATRIX FOR MCSCF IN MO BASIS (SQUA.)
C  34   : ONE PDM IN AO BASIS FOR MCSCF (TRIA.)
C  35   : ONE PDM IN MO BASIS FOR MCSCF (TRIA.)
C  36   : 1ST  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  37   : 2ND  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  38   : 3RD  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  39   : 4TH  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  40   : 5TH  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  41   : 6TH  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  42   : 7TH  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  43   : 8TH  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  44   : 9TH  ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  45   : 10TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  46   : 11TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  47   : 12TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  48   : 13TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  49   : 14TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  50   : 15TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  51   : 16TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  52   : 17TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  53   : 18TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  54   : 19TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C  55   : 20TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF (TRIA.)
C
      NSECT2=NSECT*2
      NSECTH=NSECT/2
      NBASL=((NBASIS-1)/NSECT+1)
      NGEOM=NATOM*8
      NGEOML=((NGEOM-1)/NSECT+1)
      NBAS2=NBASIS*2
      NBAS2L=((NBAS2-1)/NSECT+1)
      NBASQ=NBASIS*NBASIS*2
      NBASQL=((NBASQ-1)/NSECT+1)
      NBASR=NBFAO*NBFSO*2
      NBASRL=((NBASR-1)/NSECT+1)
      NTRI2=NTRI*2
      NTRIL=((NTRI2-1)/NSECT+1)
      NBATRI=IOFF(NBFAO+1)
      NBATR2=NBATRI*2
      NBATRL=((NBATR2-1)/NSECT+1)
      NBASA=NBFAO*NBFAO*2
      NBASAL=((NBASA-1)/NSECT+1)
C
C:::::::::::::::::::::::::::::::::::
C:::GENERATION OF THE MASTER FILE:::
C:::::::::::::::::::::::::::::::::::
C
      CALL RFILE(MFILE)
      CALL IZERO(IA,NBASA)
C
C***1ST MATRIX***
C   SET UP LOCATION OF PARAMETERS AND MATRICES
C   IA(N)         = STARTING POSITION OF THE "N"TH VECTOR
C   IA(N+NSECTH)  = LENGTH OF THE "N"TH VECTOR IN INTEGER WORDS
      IA(1)=1
      IA(1+NSECTH)=NSECT
      IA(2)=IA(1)+1
      IA(2+NSECTH)=NSECT
      IA(3)=IA(2)+1
      IA(3+NSECTH)=NSECT2
      IA(4)=IA(3)+2
      IA(4+NSECTH)=NBASIS
      IA(5)=IA(4)+NBASL
      IA(5+NSECTH)=NBASIS
      IA(6)=IA(5)+NBASL
      IA(6+NSECTH)=NBASIS
      IA(7)=IA(6)+NBASL
      IA(7+NSECTH)=NBASIS
      IA(8)=IA(7)+NBASL
      IA(8+NSECTH)=NGEOM
      IA(9)=IA(8)+NGEOML
      IA(9+NSECTH)=NBASR
      IA(10)=IA(9)+NBASRL
      IA(10+NSECTH)=NBAS2
      IA(11)=IA(10)+NBAS2L
      IA(11+NSECTH)=NBAS2
      IA(12)=IA(11)+NBAS2L
      IA(12+NSECTH)=NBASIS
      IA(13)=IA(12)+NBASL
      IA(13+NSECTH)=NBASQ
      IA(14)=IA(13)+NBASQL
      IA(14+NSECTH)=NBASR
      IA(15)=IA(14)+NBASRL
      IA(15+NSECTH)=NTRI2
      IA(16)=IA(15)+NTRIL
      IA(16+NSECTH)=NTRI2
      IA(17)=IA(16)+NTRIL
      IA(17+NSECTH)=NTRI2
      IA(18)=IA(17)+NTRIL
      IA(18+NSECTH)=NBAS2
      IA(19)=IA(18)+NBAS2L
      IA(19+NSECTH)=NBAS2
      IA(20)=IA(19)+NBAS2L
      IA(20+NSECTH)=NBASIS
      IA(21)=IA(20)+NBASL
      IA(21+NSECTH)=NBASQ
      IA(22)=IA(21)+NBASQL
      IA(22+NSECTH)=NBASR
      IA(23)=IA(22)+NBASRL
      IA(23+NSECTH)=NTRI2
      IA(24)=IA(23)+NTRIL
      IA(24+NSECTH)=NTRI2
      IA(25)=IA(24)+NTRIL
      IA(25+NSECTH)=NTRI2
      IA(26)=IA(25)+NTRIL
      IA(26+NSECTH)=NBATR2
      IA(27)=IA(26)+NBATRL
      IA(27+NSECTH)=NTRI2
      IA(28)=IA(27)+NTRIL
      IA(28+NSECTH)=NBATR2
      IA(29)=IA(28)+NBATRL
      IA(29+NSECTH)=NTRI2
      IA(30)=IA(29)+NTRIL
      IA(30+NSECTH)=NBATR2
      IA(31)=IA(30)+NBATRL
      IA(31+NSECTH)=NTRI2
      IA(32)=IA(31)+NTRIL
      IA(32+NSECTH)=NBATR2
      IA(33)=IA(32)+NBATRL
      IA(33+NSECTH)=NTRI2
      IA(34)=IA(33)+NTRIL
      IA(34+NSECTH)=NBATR2
      IA(35)=IA(34)+NBATRL
      IA(35+NSECTH)=NTRI2
      IA(36)=IA(35)+NTRIL
      IA(36+NSECTH)=NTRI2
      IA(37)=IA(36)+NTRIL
      IA(37+NSECTH)=NTRI2
      IA(38)=IA(37)+NTRIL
      IA(38+NSECTH)=NTRI2
      IA(39)=IA(38)+NTRIL
      IA(39+NSECTH)=NTRI2
      IA(40)=IA(39)+NTRIL
      IA(40+NSECTH)=NTRI2
      IA(41)=IA(40)+NTRIL
      IA(41+NSECTH)=NTRI2
      IA(42)=IA(41)+NTRIL
      IA(42+NSECTH)=NTRI2
      IA(43)=IA(42)+NTRIL
      IA(43+NSECTH)=NTRI2
      IA(44)=IA(43)+NTRIL
      IA(44+NSECTH)=NTRI2
      IA(45)=IA(44)+NTRIL
      IA(45+NSECTH)=NTRI2
      IA(46)=IA(45)+NTRIL
      IA(46+NSECTH)=NTRI2
      IA(47)=IA(46)+NTRIL
      IA(47+NSECTH)=NTRI2
      IA(48)=IA(47)+NTRIL
      IA(48+NSECTH)=NTRI2
      IA(49)=IA(48)+NTRIL
      IA(49+NSECTH)=NTRI2
      IA(50)=IA(49)+NTRIL
      IA(50+NSECTH)=NTRI2
      IA(51)=IA(50)+NTRIL
      IA(51+NSECTH)=NTRI2
      IA(52)=IA(51)+NTRIL
      IA(52+NSECTH)=NTRI2
      IA(53)=IA(52)+NTRIL
      IA(53+NSECTH)=NTRI2
      IA(54)=IA(53)+NTRIL
      IA(54+NSECTH)=NTRI2
      IA(55)=IA(54)+NTRIL
      IA(55+NSECTH)=NTRI2
C
      DO 101 I=1,NSECT
  101 LOCS(I)=IA(I)
C
      CALL RWRIT(MFILE,IA,NSECT,LOCS(1))
C
C***2ND MATRIX***
C   STORE PARAMETERS
      IDUMP=0
      IA(1)=NSECT
      IA(2)=IDUMP
      IA(3)=NBASIS
      IA(4)=NTRI
C     IA(5)=NTOT
C$$$WARNING---DO NOT USE NTOT FOR A LARGE CASE...OVERFLOWS$$$
C     IA(6)=IOPEN
C     IA(7)=IOCC
C     IA(8)=KOCC
C     IA(9)=JOCC
      IA(10)=NATOM
      IA(11)=NBFAO
      IA(12)=NBFSO
      IA(13)=NSYM
C     IA(14)=NWLK
C     IA(15)=NMCSCF
C     IA(16)=ITCSCF
      IA(17)=N3N
      IA(18)=NTYPES
      IA(19)=ISTYPE
      IA(20)=ICTYPE
      IA(21)=NDERIV
C     IA(31)=NDEG(1)
C     IA(32)=NDEG(2)
C     IA(33)=NDEG(3)
C     IA(34)=NDEG(4)
C     IA(35)=NDEG(5)
C     IA(36)=NDEG(6)
C     IA(37)=NDEG(7)
C     IA(38)=NDEG(8)
C     IA(39)=NDEG(9)
C     IA(40)=NDEG(10)
C     IA(41)=NSORB(1)
C           |
C     IA(70)=NSORB(30)
      CALL RWRIT(MFILE,IA,NSECT,LOCS(2))
C
C***3RD MATRIX***
C   STORE ENERGIES AND REAL CONSTANTS
C     AI(1)=ENUC
C     AI(2)=ESCF
C     AI(3)=ECIFZC
C     AI(4)=ECI
C     AI(5)=ECICOR
C     AI(6)=CNOTCI
C     AI(7)=EMCFZC
C     AI(8)=EMC
C     AI(9)=EMCCOR
C     AI(10)=CNOTMC
C     AI(11)=FOCC(1)
C           |
C     AI(40)=FOCC(30)
C     AI(41)=ALPC(1)
C            |
C     AI(505)=ALPC(465)
C     AI(506)=BETC(1)
C            |
C     AI(970)=BETC(465)
      CALL RWRIT(MFILE,IA,NSECT2,LOCS(3))
C
C***4TH MATRIX***
C   STORE MO ORDERING IN SCF
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(4))
C
C***5TH MATRIX***
C   STORE MO ORDERING IN DRT
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(5))
C
C***6TH MATRIX***
C   STORE MO CODE FOR CI
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(6))
C
C***7TH MATRIX***
C   STORE MO CODE FOR MCSCF
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(7))
C
C***8TH MATRIX***
C   STORE NUCLEAR CHARGE AND GEOMETRY
      CALL RWRIT(MFILE,IA,NGEOM,LOCS(8))
C
C***9TH MATRIX***
C   STORE AO-SO MATRIX (RECTANGULAR MATRIX)
      CALL RWRIT(MFILE,IA,NBASR,LOCS(9))
C
C***10 TH MATRIX***
C   STORE EIGENVALUES IN PITZER'S SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(10))
C
C***11TH MATRIX***
C   STORE OCCUPATION IN PITZER'S SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(11))
C
C***12TH MATRIX***
C   STORE MOTYPE IN PITZER'S SCF
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(12))
C
C***13RD MATRIX***
C   STORE SO-MO EIGENVECTORS IN PITZER'S SCF (SQUARE MATRIX)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(13))
C
C***14TH MATRIX***
C   STORE AO-MO EIGENVECTORS IN PITZER'S SCF (RECTANGULAR MATRIX)
      CALL RWRIT(MFILE,IA,NBASR,LOCS(14))
C
C***15TH MATRIX***
C   STORE SO OVERLAP INTEGRALS IN PITZER'S SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(15))
C
C***16TH MATRIX***
C   STORE ONE ELECTRON SO INTEGRALS IN PITZER'S SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(16))
C
C***17TH MATRIX***
C   STORE ONE ELECTRON MO INTEGRALS IN PITZER'S SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(17))
C
C***18TH MATRIX***
C   STORE EIGENVALUES IN SORTED SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(18))
C
C***19TH MATRIX***
C   STORE OCCUPATION IN SORTED SCF
      CALL RWRIT(MFILE,IA,NBAS2,LOCS(19))
C
C***20TH MATRIX***
C   STORE MOTYPE IN SORTED SCF
      CALL RWRIT(MFILE,IA,NBASIS,LOCS(20))
C
C***21ST MATRIX***
C   STORE SO-MO EIGENVECTORS IN SORTED SCF (SQUARE MATRIX)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(21))
C
C***22ND MATRIX***
C   STORE AO-MO EIGENVECTORS IN SORTED SCF (RECTANGULAR MATRIX)
      CALL RWRIT(MFILE,IA,NBASR,LOCS(22))
C
C***23RD MATRIX***
C   STORE SO OVERLAP INTEGRALS IN SORTED SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(23))
C
C***24TH MATRIX***
C   STORE ONE ELECTRON SO INTEGRALS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(24))
C
C***25TH MATRIX***
C   STORE ONE ELECTRON MO INTEGRALS IN SORTED SCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(25))
C
C***26TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR SCF IN AO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(26))
C
C***27TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR SCF IN MO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(27))
C
C***28TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR CI IN AO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(28))
C
C***29TH MATRIX***
C   STORE LAGRANGIAN MATRIX FOR CI IN MO BASIS (SQUARE MATRIX)
C   (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(29))
C
C***30TH MATRIX***
C   STORE ONE PDM IN AO BASIS FOR CI (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(30))
C
C***31ST MATRIX***
C   STORE ONE PDM IN MO BASIS FOR CI (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(31))
C
C***32ND MATRIX***
C   STORE LAGRANGIAN MATRIX FOR MCSCF IN AO BASIS (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(32))
C
C***33RD MATRIX***
C   STORE LAGRANGIAN MATRIX FOR MCSCF IN MO BASIS (SQUARE MATRIX)
      CALL RWRIT(MFILE,IA,NBASQ,LOCS(33))
C
C***34TH MATRIX***
C   STORE ONE PDM IN AO BASIS FOR MCSCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NBATR2,LOCS(34))
C
C***35TH MATRIX***
C   STORE ONE PDM IN MO BASIS FOR MCSCF (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(35))
C
      DO 102 ITYP=1,NTYPEP
C
C***(35+ITYP)TH MATRIX***
C   STORE ITYP-TH ZETA MATRIX FOR GENERALIZED OPEN-SHELL SCF
C   (LOWER TRIANGLE)
      CALL RWRIT(MFILE,IA,NTRI2,LOCS(35+ITYP))
  102 CONTINUE
C
C::::::::::::::::::::::::::::::::::::::::::
C:::END OF GENERATION OF THE MASTER FILE:::
C::::::::::::::::::::::::::::::::::::::::::
C
      CALL SREW(MFILE)
      RETURN
      END
      SUBROUTINE RDONE(S,H,T,V,LBLI,STVI,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION S(NTRI),H(NTRI),T(NTRI),V(NTRI)
      DIMENSION LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' S MATRIX'/)
    2 FORMAT(//,2X,' T MATRIX'/)
    3 FORMAT(//,2X,' V MATRIX'/)
    4 FORMAT(//,2X,' H MATRIX'/)
C
C   READ IN ONE ELECTRON INTEGRALS
C
C   S INTEGRALS
      CALL ONEI(S,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL PRINT(S,NTRI,NBASIS,6)
C
C   T INTEGRALS
  201 CONTINUE
      CALL ONEI(T,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,2)
      CALL PRINT(T,NTRI,NBASIS,6)
C
C   V INTEGRALS
  202 CONTINUE
      CALL ONEI(V,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 203
      WRITE(6,3)
      CALL PRINT(V,NTRI,NBASIS,6)
C
C   TOTAL ONE ELECTRON INTEGRALS
  203 CONTINUE
      DO 101 I=1,NTRI
  101 H(I)=T(I)+V(I)
      IF(IPRNT.LE.3) GO TO 204
      WRITE(6,4)
      CALL PRINT(H,NTRI,NBASIS,6)
C
  204 CONTINUE
      RETURN
      END
      SUBROUTINE ONEI(X,LBLI,STVI,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION X(NTRI),LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,8I5,3F15.7)
C
      CALL ZERO(X,NTRI)
      IBUFSZ=8942
      IBUFS3=1491
      INTI=0
      NBLI=0
  201 NBLI=NBLI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
      IF(IPRNT.GE.5)
     *WRITE(6,1) ILSTI,NBUF
      DO 101 I=1,NBUF
      JSM=ISHFT(LBLI(I+2),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+2),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      IIJJ=IOFF(II)+JJ
      STV0=STVI(I+IBUFS3)
      X(IIJJ)=STV0
C     IF(IPRNT.LE.6) GO TO 101
C     WRITE(6,2) I,IOR,ISM,JOR,JSM,II,JJ,IIJJ,STV0
  101 CONTINUE
      INTI=INTI+NBUF
      IF(ILSTI.EQ.0) GO TO 201
C
      RETURN
      END
      SUBROUTINE RDTWO(LBLI,PKI,LBLO,BUFO,INBUFS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION LBLI(INBUFS*2),PKI(INBUFS),LBLO(MAXBF4),BUFO(MAXBF2)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      DATA A00 / 0.0D+00 /
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,9I5,3F15.7)
C
      CALL RFILE(ITAP36)
C
      IBUFSZ=8942
      IBUFQT=2236
      IBL=0
      INTI=0
      INTO=0
      NBLI=0
      NBLO=0
      NINT=0
  201 NBLI=NBLI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
      IF(IPRNT.GE.5)
     *WRITE(6,1) ILSTI,NBUF
      DO 101 I=1,NBUF
      LOR=ISHFT(LBLI(I+I+2),-2)
      LSM=ISHFT(LOR,-8)
      KOR=ISHFT(LSM,-3)
      KSM=ISHFT(KOR,-8)+1
      KOR=IAND(KOR,255)
      LSM=IAND(LSM,7)+1
      LOR=IAND(LOR,255)
      III=IAND(LBLI(I+I+2),3)
      JSM=ISHFT(LBLI(I+I+1),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+I+1),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      KK=KOR+IDEG(KSM)
      LL=LOR+IDEG(LSM)
      PKII=PKI(I+IBUFQT)
C     IJ=IOFF(IOR)+JOR+LSYM(ISM)
C     IF(IOR.LT.JOR) IJ=IOFF(JOR)+IOR+LSYM(JSM)
C     KL=IOFF(KOR)+LOR+LSYM(KSM)
C     IF(KOR.LT.LOR) KL=IOFF(LOR)+KOR+LSYM(LSM)
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,2) III,IOR,ISM,JOR,JSM,KOR,KSM,LOR,LSM,PKII
  202 CALL PACK(II,JJ,KK,LL,IX,JA,JAA)
      IBL=IBL+1
      LBLO(IBL+IBL-1)=JA
      LBLO(IBL+IBL)=JAA
      BUFO(IBL+MAXBUF)=PKII
      IF(IBL.LT.MAXBUF) GO TO 101
      IBL=0
      NBLO=NBLO+1
      CALL SWRIT(ITAP36,LBLO,MAXBF4)
  101 CONTINUE
      INTI=INTI+NBUF
      IF(ILSTI.EQ.0) GO TO 201
C
      IBL=IBL+1
      NBLO=NBLO+1
      INTO=INTO+IBL
      LBLO(IBL+IBL-1)=0
      LBLO(IBL+IBL)=0
      BUFO(IBL+MAXBUF)=A00
      CALL SWRIT(ITAP36,LBLO,MAXBF4)
C
      CALL SREW(ITAP34)
      CALL RCLOSE(ITAP36,3)
      RETURN
      END
      SUBROUTINE SCFINP(EIG,OCC,ESO,UAS,EAO,EE,CHGS,XX,WMO,WAO)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EE(NBFAO*NBFAO)
      DIMENSION ESO(NBFSO,NBFSO),UAS(NBFAO,NBFSO),EAO(NBFAO,NBFAO)
      DIMENSION CHGS(NATOM),XX(3,NATOM),WMO(NTRI),WAO(NBATRI)
      DIMENSION A30(1024)
      DIMENSION NLAMDA(10)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/COUPL/ALPC(465),BETC(465),ALPA(30,30),BETA(30,30)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NTYPES,NTYPEP,NATOM,N3N
      COMMON/GRSCF/FOCC(30),NSORB(30),MOTYP(256),LOTYP(256),KOTYP(256)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TEMPS/I30(2048)
      COMMON/TYPES/ISTYPE,ICTYPE,NDERIV
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      EQUIVALENCE (I30,A30)
      DATA A00,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' AO-SO MATRIX'/)
    2 FORMAT(//,2X,' ENUC = ',F20.10/
     1          2X,' ESCF = ',F20.10/)
    3 FORMAT(//,2X,' NATOM IS ',I5)
    4 FORMAT(2X,I5,4F20.10,5X,2I5)
    5 FORMAT(2X,' NLAMDA = ',10I5/)
    6 FORMAT(//,2X,' ESO MATRIX'/)
    7 FORMAT(//,2X,' SCF LAGRANGIAN (MO BASIS) MATRIX'/)
    8 FORMAT(//,2X,' FOCC ',10F10.5/)
    9 FORMAT(//,2X,' ALPC MATRIX'/)
   10 FORMAT(//,2X,' BETC MATRIX'/)
   11 FORMAT(//,2X,' ALPA MATRIX'/)
   12 FORMAT(//,2X,' BETA MATRIX'/)
   13 FORMAT(//,2X,' SCF LAGRANGIAN (AO BASIS) MATRIX'/)
   14 FORMAT(//,2X,' EAO MATRIX'/)
   15 FORMAT(//,2X,' MOTYP ',10I5/)
C
      ITAP30=30
      CALL SREW(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      MPOINT=I30(2)
      MCONST=I30(3)
      MCALCS=I30(4)
      NCALCS=I30(5)
      MXCOEF=I30(42)
      IOPEN =I30(43)
      ISTART=I30(44)
      JUNK=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,JUNK,JUNK)
C
C   READ IN NUCLEAR CHARGE
      CALL WREADW(ITAP30,CHGS,NATOM*2,I30(1),JUNK)
C
C   READ IN AO-SO MATRIX
      CALL WREADW(ITAP30,UAS,NBFAO*NBFSO*2,I30(29),JUNK)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL MATOUT(UAS,NBFAO,NBFSO,NBFAO,NBFSO,6)
C
C   READ IN GEOMETRY
  201 CONTINUE
      JUNK=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,JUNK,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,LOCCAL)
      CALL WREADW(ITAP30,I30,20,LOCCAL,JUNK)
      LOCVEC=I30(1)
      LOCCAL=LOCCAL+20
      CALL WREADW(ITAP30,XX,NATOM*6,LOCCAL,LOCCAL)
C
C   READ IN SCF ENERGY
      CALL WREADW(ITAP30,I30,20,LOCCAL,LOCCAL)
      ENUC=A30(1)
      ESCF=A30(2)
      IF(IPRNT.GE.2)
     *WRITE(6,2) ENUC,ESCF
C
      IF(IPRNT.LE.3) GO TO 202
      WRITE(6,3) NATOM
      DO 101 I=1,NATOM
  101 WRITE(6,4) I,XX(1,I),XX(2,I),XX(3,I),CHGS(I)
C
C   READ IN SO-MO EIGENVECTORS
  202 CONTINUE
      CALL WREADW(ITAP30,EE,MXCOEF*2,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,EIG,NBFSO*2,LOCVEC,LOCVEC)
      LOCVEC=LOCVEC+NSYM
      CALL WREADW(ITAP30,NLAMDA,NSYM,LOCVEC,LOCVEC)
      WRITE(3,5) (NLAMDA(I),I=1,NSYM)
      IF(IPRNT.GT.2)
     *WRITE(6,5) (NLAMDA(I),I=1,NSYM)
C
C   FORM SO-MO EIGENVECTOR MATRIX
      CALL ZERO(ESO,NBFSO*NBFSO)
      I=0
      J=0
      DO 103 ISYM=1,NSYM
      N=NLAMDA(ISYM)
      DO 102 K=J+1,J+N
      DO 102 L=J+1,J+N
      I=I+1
      ESO(L,K)=EE(I)
  102 CONTINUE
      J=J+N
  103 CONTINUE
      IF(IPRNT.LE.3) GO TO 203
      WRITE(6,6)
      CALL EIVOUT(ESO,EIG,NBFSO,NBFSO,NBASIS,NBASIS,6)
C
C   READ IN THE LAGRANGIAN MATRIX IN MO BASIS
  203 CONTINUE
      NTRI2=NTRI*2
      CALL WREADW(ITAP30,WMO,NTRI2,ISTART,LOCVEC)
      IF(IPRNT.LE.2) GO TO 204
      WRITE(6,7)
      CALL PRINT(WMO,NTRI,NBASIS,6)
C
C   READ IN OCCUPATION VECTOR
  204 CONTINUE
      CALL WREADW(ITAP30,FOCC,NTYPES*2,LOCVEC,LOCVEC)
      FOCC(NTYPEP)=A00
      IF(IPRNT.LE.2) GO TO 205
      WRITE(6,8) (FOCC(I),I=1,NTYPEP)
C
C   READ IN COUPLING CONSTANTS
  205 CONTINUE
      CALL ZERO(ALPC,465)
      CALL ZERO(BETC,465)
      CALL ZERO(ALPA,NTYPEP*NTYPEP)
      CALL ZERO(BETA,NTYPEP*NTYPEP)
      NSHH=IOFF(NTYPES+1)*2
      CALL WREADW(ITAP30,ALPC,NSHH,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,BETC,NSHH,LOCVEC,LOCVEC)
      WRITE(6,9)
      CALL PRINT(ALPC,465,NTYPES,6)
      WRITE(6,10)
      CALL PRINT(BETC,465,NTYPES,6)
      IJ=0
      DO 105 I=1,NTYPES
      DO 105 J=1,I
      IJ=IJ+1
      ALPA(I,J)=ALPC(IJ)
      ALPA(J,I)=ALPC(IJ)
      BETA(I,J)=BETC(IJ)
      BETA(J,I)=BETC(IJ)
  105 CONTINUE
      IF(IPRNT.LE.0) GO TO 206
      WRITE(6,11)
      CALL MATOUT(ALPA,30,30,NTYPEP,NTYPEP,6)
      WRITE(6,12)
      CALL MATOUT(BETA,30,30,NTYPEP,NTYPEP,6)
C
C   READ IN THE LAGRANGIAN MATRIX IN AO BASIS
  206 CONTINUE
      NBATR2=NBATRI*2
      CALL WREADW(ITAP30,WAO,NBATR2,LOCVEC,LOCVEC)
      IF(IPRNT.LE.2) GO TO 207
      WRITE(6,13)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   READ IN AO-MO EIGENVECTORS
  207 CONTINUE
      NBAS2=NBFAO*NBASIS*2
      CALL WREADW(ITAP30,EAO,NBAS2,LOCVEC,LOCVEC)
      IF(IPRNT.LE.2) GO TO 208
      WRITE(6,14)
      CALL EIVOUT(EAO,EIG,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C   READ IN MOTYP VECTOR
  208 CONTINUE
      CALL WREADW(ITAP30,MOTYP,NBASIS,LOCVEC,LOCVEC)
      IF(IPRNT.LE.2) GO TO 209
      WRITE(6,15) (MOTYP(I),I=1,NBASIS)
C
C   FORM OCCUPATION VECTOR
  209 CONTINUE
      DO 106 I=1,NBASIS
      KK=MOTYP(I)
      IF(KK.NE.NBASIS) GO TO 210
      MOTYP(I)=NTYPEP
      KK=NTYPEP
  210 CONTINUE
      FAC=FOCC(KK)
      OCC(I)=FAC
  106 CONTINUE
      IF(IPRNT.LE.2) GO TO 211
      WRITE(6,14)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
      WRITE(6,15) (MOTYP(I),I=1,NBASIS)
C
  211 CONTINUE
      CALL SREW(ITAP30)
      RETURN
      END
      SUBROUTINE SORT(EIG,OCC,ESO,UAS,EAO,EE,EGN,OCN,
     1                KORD,LORD,MORD,NORD)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),ESO(NBASIS,NBASIS)
      DIMENSION UAS(NBFAO,NBFSO),EAO(NBFAO,NBFAO)
      DIMENSION EE(NBFAO,NBFAO),EGN(NBASIS),OCN(NBASIS)
      DIMENSION KORD(NBASIS),LORD(NBASIS),MORD(NBASIS),NORD(NBASIS)
      DIMENSION A30(1024),LSORB(30)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/CALIF/LPARA(1024),APARA(1024)
      COMMON/COUPL/ALPC(465),BETC(465),ALPA(30,30),BETA(30,30)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NTYPES,NTYPEP,NATOM,N3N
      COMMON/GRSCF/FOCC(30),NSORB(30),MOTYP(256),LOTYP(256),KOTYP(256)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TEMPS/I30(2048)
      COMMON/TYPES/ISTYPE,ICTYPE,NDERIV
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      EQUIVALENCE (I30,A30)
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' IOCC = ',I5,3X,' KOCC = ',I5,3X,' JOCC = ',I5/)
    2 FORMAT(//,2X,' SORTED ESO MATRIX'/)
    3 FORMAT(//,2X,' SORTED EAO MATRIX'/)
    4 FORMAT(//,2X,' LOTYP ',10I5/)
    5 FORMAT(//,2X,' FOCC BEFORE SORT',10F10.5/)
    6 FORMAT(//,2X,' NSORB BEFORE SORT',10I5/)
    7 FORMAT(//,2X,' SORTED FOCC  ',10F10.5/)
    8 FORMAT(//,2X,' SORTED NSORB ',10I5/)
    9 FORMAT(//,2X,' SORTED ALPA MATRIX'/)
   10 FORMAT(//,2X,' SORTED BETA MATRIX'/)
   11 FORMAT(//,2X,' SORTED ALPC MATRIX'/)
   12 FORMAT(//,2X,' SORTED BETC MATRIX'/)
   13 FORMAT(//,2X,' KOTYP VECTOR',10I5/)
C
C   CALCULATE NUMBERS OF OCCUPATIONS
      IOCC=0
      KOCC=0
      DO 101 I=1,NBASIS
      NOCC=INT(OCC(I))
      IF(NOCC-1) 201,202,203
  201 IF(OCC(I).GT.A00) GO TO 202
      GO TO 101
  202 KOCC=KOCC+1
      GO TO 101
  203 IOCC=IOCC+1
  101 CONTINUE
      JOCC=IOCC+KOCC
      WRITE(6,1) IOCC,KOCC,JOCC
C
C   SORT EIGENVALUES AND EIGENVECTORS
      CALL ORDR(EIG,NORD,NBASIS)
      DO 102 II=1,NBASIS
      NN=NORD(II)
      MORD(II)=NN
      OCN(II)=OCC(NN)
  102 CONTINUE
      CALL REORDR(OCN,NORD,NBASIS)
C
C I'TH PITZER'S MO # IS GOING TO GFOCK MO # "LORD(I)"
C
      DO 103 II=1,NBASIS
      NN=NORD(II)
      KORD(II)=MORD(NN)
      EGN(II)=EIG(NN)
  103 CONTINUE
      DO 104 I=1,NBASIS
      EIG(I)=EGN(I)
      OCC(I)=OCN(I)
      LORD(I)=KORD(I)
  104 CONTINUE
C
      DO 106 II=1,NBASIS
      NN=LORD(II)
      DO 105 I=1,NBASIS
  105 EE(I,II)=ESO(I,NN)
      LOTYP(II)=MOTYP(NN)
  106 CONTINUE
      DO 107 I=1,NBASIS
      DO 107 J=1,NBASIS
      ESO(I,J)=EE(I,J)
  107 CONTINUE
      IF(IPRNT.LE.3) GO TO 204
      WRITE(6,2)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBFSO,NBASIS,NBASIS,6)
C
C   TRANSFORM SORTED EIGENVECTORS FROM SO TO AO BASIS
  204 CONTINUE
      CALL ZERO(EAO,NBFAO*NBASIS)
      CALL MXMB(UAS,1,NBFAO,ESO,1,NBFSO,EAO,1,NBFAO,NBFAO,NBFAO,NBFAO)
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,3)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBFAO,NBFAO,NBASIS,6)
C
  205 CONTINUE
C   FORM NSORB VECTOR
      CALL IZERO(NSORB,30)
      DO 110 I=1,NBASIS
      LL=LOTYP(I)
      NSORB(LL)=NSORB(LL)+1
  110 CONTINUE
      IF(IPRNT.LE.2) GO TO 206
      WRITE(6,*) ' BEFORE SORT'
      WRITE(6,4) (LOTYP(I),I=1,NBASIS)
      WRITE(6,5) (FOCC(I),I=1,NTYPEP)
      WRITE(6,6) (NSORB(I),I=1,NTYPEP)
C
C   SORT ONE ELECTRON COUPLING CONSTANTS
  206 CONTINUE
      CALL REORDR(FOCC,NORD,NTYPEP)
      DO 112 I=1,NTYPEP
      II=NORD(I)
      LSORB(I)=NSORB(II)
  112 CONTINUE
      DO 113 I=1,NTYPEP
  113 NSORB(I)=LSORB(I)
      IF(IPRNT.LE.2) GO TO 208
C*    WRITE(6,*) ' AFTER SORT'
      WRITE(6,7) (FOCC(I),I=1,NTYPEP)
      WRITE(6,8) (NSORB(I),I=1,NTYPEP)
C
C   SORT TWO ELECTRON COUPLING CONSTANTS
  208 CONTINUE
      DO 114 I=1,NTYPEP
      II=NORD(I)
      DO 114 J=1,I
      JJ=NORD(J)
      IIJJ=IOFF(MAX0(II,JJ))+MIN0(II,JJ)
      ALPA(I,J)=ALPC(IIJJ)
      BETA(I,J)=BETC(IIJJ)
      ALPA(J,I)=ALPC(IIJJ)
      BETA(J,I)=BETC(IIJJ)
  114 CONTINUE
      IJ=0
      DO 115 I=1,NTYPEP
      DO 115 J=1,I
      IJ=IJ+1
      ALPC(IJ)=ALPA(I,J)
      BETC(IJ)=BETA(I,J)
  115 CONTINUE
      IF(IPRNT.LE.2) GO TO 209
      WRITE(6,9)
      CALL MATOUT(ALPA,30,30,NTYPEP,NTYPEP,6)
      WRITE(6,10)
      CALL MATOUT(BETA,30,30,NTYPEP,NTYPEP,6)
      WRITE(6,11)
      CALL PRINT(ALPC,465,NTYPEP,6)
      WRITE(6,12)
      CALL PRINT(BETC,465,NTYPEP,6)
C
C   DEFINE KOTYP VECTOR
  209 CONTINUE
      MM=0
      DO 116 I=1,NTYPEP
      NN=NSORB(I)
      DO 116 J=1,NN
      MM=MM+1
      KOTYP(MM)=I
  116 CONTINUE
      IF(IPRNT.LE.2) GO TO 210
      WRITE(6,13) (KOTYP(I),I=1,NBASIS)
C
C******************************************
C***STORE INFORMATION IN THE MASTER FILE***
C******************************************
C
C   DEFINE REAL CONSTANTS
  210 CONTINUE
      A30(1)=ENUC
      A30(2)=ESCF
      NTYTRI=IOFF(NTYPEP+1)
      DO 117 I=1,NTYTRI
      A30(I+40)=ALPC(I)
      A30(I+505)=BETC(I)
  117 CONTINUE
      DO 118 I=1,NTYPEP
      A30(I+10)=FOCC(I)
  118 CONTINUE
C
C   DEFINE INTEGER CONSTANTS
      LPARA(6)=IOPEN
      LPARA(7)=IOCC
      LPARA(8)=KOCC
      LPARA(9)=JOCC
      DO 119 I=1,10
  119 LPARA(I+30)=NDEG(I)
      DO 120 I=1,NTYPEP
      LPARA(I+40)=NSORB(I)
  120 CONTINUE
C
      CALL MWRIT(MOTYP,12)
      CALL MWRIT(LOTYP,20)
C
      RETURN
      END
      SUBROUTINE ORDR(A,NORD,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(N),NORD(N)
C
      DO 101 I=1,N
      NORD(I)=I
  101 CONTINUE
      IF(N.LE.1) GO TO 201
      N1=N-1
      DO 103 I=1,N1
      IR=I+1
      DO 102 J=IR,N
      IF(A(I).LT.A(J)) GO TO 102
      AA=A(I)
      A(I)=A(J)
      A(J)=AA
      NN=NORD(I)
      NORD(I)=NORD(J)
      NORD(J)=NN
  102 CONTINUE
  103 CONTINUE
  201 RETURN
C
      ENTRY REORDR(A,NORD,N)
      DO 105 I=1,N
  105 NORD(I)=I
      IF(N.LE.1) GO TO 205
      N1=N-1
      DO 107 I=1,N1
      IR=I+1
      DO 106 J=IR,N
      IF(A(I).GE.A(J)) GO TO 106
      AA=A(I)
      A(I)=A(J)
      A(J)=AA
      NN=NORD(I)
      NORD(I)=NORD(J)
      NORD(J)=NN
  106 CONTINUE
  107 CONTINUE
  205 RETURN
      END
      SUBROUTINE SCFGR(EIG,OCC,ESO,UAS,EAO,U,T,H,DC,FC,FM,FF,EE,EZ,
     1                 LBLI,BUFI,CC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION H(NBATRI),DC(NBATRI),FC(NBATRI),FM(NBATRI),FF(NBATRI)
      DIMENSION EIG(NBASIS),OCC(NBASIS)
      DIMENSION U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION ESO(NBFSO,NBASIS),EAO(NBFAO,NBASIS),UAS(NBFAO,NBFSO)
      DIMENSION EE(NBFAO,NBFAO),EZ(NBFAO,NBFAO)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2),CC(NBFAO*4)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/FUNCS/NTYPES,NTYPEP,NATOMS,N3N
      COMMON/GRSCF/FOCC(30),NSORB(30),MOTYP(256),LOTYP(256),KOTYP(256)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      DATA A00,HALF,ONE / 0.0D+00 , 0.5D+00 , 1.0D+00 /
C
    1 FORMAT(//,
     1 2X,'******************************************'/
     2 2X,'***THE AVERAGED FOCK GENERATING ROUTINE***'/
     3 2X,'******************************************'/)
    2 FORMAT(//,2X,' SORTED PITZER MO (SO BASIS)'/)
    3 FORMAT(//,2X,' DC MATRIX (SO BASIS)'/)
    4 FORMAT(2X,6I5,F15.8)
    5 FORMAT(//,2X,' TWO ELECTRON CONTRIBUTION FOR SO FOCK (F )'/)
    6 FORMAT(//,2X,' H MATRIX (SO BASIS)'/)
    7 FORMAT(//,2X,' MO FOCK MATRIX'/)
    8 FORMAT(//,2X,' TRANSFORMATION MATRIX'/)
    9 FORMAT(//,2X,' GENERAL OPEN-SHELL MO''S (SO BASIS)'/)
   10 FORMAT(//,2X,' GENERAL OPEN-SHELL MO''S (AO BASIS)'/)
   11 FORMAT(//,
     1 2X,'**************************************'/
     2 2X,'***END OF THE AVERAGED FOCK ROUTINE***'/
     3 2X,'**************************************'/)
C
      WRITE(6,1)
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,2)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C  CREATE AVERAGED DENSITY MATRIX IN SO BASIS
  301 IJ=0
      DO 102 I=1,NBASIS
      DO 102 J=1,I
      IJ=IJ+1
      VALU=A00
      DO 101 K=1,JOCC
  101 VALU=VALU+ESO(I,K)*ESO(J,K)*OCC(K)*HALF
      DC(IJ)=VALU
  102 CONTINUE
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,3)
      CALL PRINT(DC,NBATRI,NBASIS,6)
C
C   CREATE FOCK MATRIX USING SO INTEGRALS
C
C   TWO ELECTRON PART
  302 CALL RFILE(ITAP36)
      CALL ZERO(FC,NTRI)
C
  500 CALL SREAD(ITAP36,LBLI,MAXBF4)
      DO 110 I=1,MAXBUF
      IBA=LBLI(I+I-1)
      IBB=LBLI(I+I)
      IF(IBA.EQ.0) GO TO 501
      CALL UNPACK(II,JJ,KK,LL,IX,IBA,IBB)
      VALU=BUFI(MAXBUF+I)
C     IF(IPRNT.LE.5) GO TO 305
C     WRITE(6,4) I,II,JJ,KK,LL,IX,VALU
C
  305 GO TO (201,202,203,204,205,206,207,208,209,210,211,212,212,212),IX
C
C (II/II)   1=(11/11)
C
  201 IIII=IOFF(II+1)
      FC(IIII)=FC(IIII)+DC(IIII)*VALU
      GO TO 110
C
C  (II/KK)  2=(22/11)
C
  202 IIII=IOFF(II+1)
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      VAL2=VALU+VALU
      FC(IIII)=FC(IIII)+DC(KKKK)*VAL2
      FC(KKKK)=FC(KKKK)+DC(IIII)*VAL2
      FC(IIKK)=FC(IIKK)-DC(IIKK)*VALU
      GO TO 110
C
C  (II/IL)  3=(22/21)
C
  203 IIII=IOFF(II+1)
      IILL=IOFF(II)+LL
      VAL2=VALU+VALU
      FC(IIII)=FC(IIII)+DC(IILL)*VAL2
      FC(IILL)=FC(IILL)+DC(IIII)*VALU
      GO TO 110
C
C  (IJ/JJ)  4=(21/11)
C
  204 IIJJ=IOFF(II)+JJ
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      FC(IIJJ)=FC(IIJJ)+DC(JJJJ)*VALU
      FC(JJJJ)=FC(JJJJ)+DC(IIJJ)*VAL2
      GO TO 110
C
C  (IJ/IJ)  5=(21/21)
C
  205 IIJJ=IOFF(II)+JJ
      IIII=IOFF(II+1)
      JJJJ=IOFF(JJ+1)
      VAL3=VALU+VALU+VALU
      FC(IIJJ)=FC(IIJJ)+DC(IIJJ)*VAL3
      FC(IIII)=FC(IIII)-DC(JJJJ)*VALU
      FC(JJJJ)=FC(JJJJ)-DC(IIII)*VALU
      GO TO 110
C
C  (II/KL)  6=(33/21)
C
  206 IIII=IOFF(II+1)
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      FC(IIII)=FC(IIII)+DC(KKLL)*VAL4
      FC(KKLL)=FC(KKLL)+DC(IIII)*VAL2
      FC(IIKK)=FC(IIKK)-DC(IILL)*VALU
      FC(IILL)=FC(IILL)-DC(IIKK)*VALU
      GO TO 110
C
C  (IJ/KK)  7=(32/11)
C
  207 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=IOFF(JJ)+KK
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      FC(IIJJ)=FC(IIJJ)+DC(KKKK)*VAL2
      FC(KKKK)=FC(KKKK)+DC(IIJJ)*VAL4
      FC(IIKK)=FC(IIKK)-DC(JJKK)*VALU
      FC(JJKK)=FC(JJKK)-DC(IIKK)*VALU
      GO TO 110
C
C  (IJ/KK)  8=(31/22)
C
  208 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=JJ+IOFF(KK)
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      FC(IIJJ)=FC(IIJJ)+DC(KKKK)*VAL2
      FC(KKKK)=FC(KKKK)+DC(IIJJ)*VAL4
      FC(IIKK)=FC(IIKK)-DC(JJKK)*VALU
      FC(JJKK)=FC(JJKK)-DC(IIKK)*VALU
      GO TO 110
C
C (IJ/IL)  9=(32/31)
C
  209 IIJJ=IOFF(II)+JJ
      IILL=IOFF(II)+LL
      IIII=IOFF(II+1)
      JJLL=IOFF(JJ)+LL
      VAL2=VALU+VALU
      VAL3=VAL2+VALU
      FC(IIJJ)=FC(IIJJ)+DC(IILL)*VAL3
      FC(IILL)=FC(IILL)+DC(IIJJ)*VAL3
      FC(IIII)=FC(IIII)-DC(JJLL)*VAL2
      FC(JJLL)=FC(JJLL)-DC(IIII)*VALU
      GO TO 110
C
C  (IJ/JL)  10=(32/21)
C
  210 IIJJ=IOFF(II)+JJ
      JJLL=IOFF(JJ)+LL
      IILL=IOFF(II)+LL
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      VAL3=VAL2+VALU
      FC(IIJJ)=FC(IIJJ)+DC(JJLL)*VAL3
      FC(JJLL)=FC(JJLL)+DC(IIJJ)*VAL3
      FC(IILL)=FC(IILL)-DC(JJJJ)*VALU
      FC(JJJJ)=FC(JJJJ)-DC(IILL)*VAL2
      GO TO 110
C
C  (IJ/KJ)  11=(31/21)
C
  211 IIJJ=IOFF(II)+JJ
      JJKK=JJ+IOFF(KK)
      IIKK=IOFF(II)+KK
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      VAL3=VAL2+VALU
      FC(IIJJ)=FC(IIJJ)+DC(JJKK)*VAL3
      FC(JJKK)=FC(JJKK)+DC(IIJJ)*VAL3
      FC(IIKK)=FC(IIKK)-DC(JJJJ)*VALU
      FC(JJJJ)=FC(JJJJ)-DC(IIKK)*VAL2
      GO TO 110
C
C  (IJ/KL)     12=(43/21)
C  (IJ/KL)     13=(42/31)
C
  212 IIJJ=IOFF(II)+JJ
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      JJLL=IOFF(MAX0(JJ,LL))+MIN0(JJ,LL)
      JJKK=IOFF(MAX0(JJ,KK))+MIN0(JJ,KK)
      VAL2=VALU+VALU
      VAL4=VAL2+VAL2
      FC(IIJJ)=FC(IIJJ)+DC(KKLL)*VAL4
      FC(KKLL)=FC(KKLL)+DC(IIJJ)*VAL4
      FC(IIKK)=FC(IIKK)-DC(JJLL)*VALU
      FC(JJLL)=FC(JJLL)-DC(IIKK)*VALU
      FC(IILL)=FC(IILL)-DC(JJKK)*VALU
      FC(JJKK)=FC(JJKK)-DC(IILL)*VALU
C
  110 CONTINUE
      GO TO 500
C
  501 CALL SREW(ITAP36)
C
      IF(IPRNT.LE.2) GO TO 306
      WRITE(6,5)
      CALL PRINT(FC,NBATRI,NBASIS,6)
C
C   ADD ONE ELECTRON PART
  306 CONTINUE
      CALL MREAD(H,16)
      IF(IPRNT.LE.2) GO TO 307
      WRITE(6,6)
      CALL PRINT(H,NBATRI,NBASIS,6)
C
  307 CONTINUE
      DO 111 I=1,NTRI
  111 FC(I)=FC(I)+H(I)
      CALL MOCONV(FC,NBATRI,FM,NBATRI,ESO,U,T)
C
      IF(IPRNT.LE.2) GO TO 308
      WRITE(6,7)
      CALL PRINT(FM,NBATRI,NBASIS,6)
C
  308 CONTINUE
      IC1=1
      IC2=IC1+NBFAO
      IC3=IC2+NBFAO
      IC4=IC3+NBFAO
C
C   ROTATE FM MATRIX
      CALL ZERO(EE,NBASIS*NBASIS)
      NSTR=0
      NEND=0
      DO 115 ITYP=1,NTYPES+1
      NN=NSORB(ITYP)
      IF(NN.EQ.0) GO TO 115
      NSTR=NEND+1
      NEND=NSTR+NN-1
      IF(NN.EQ.1) GO TO 309
      DO 113 I=NSTR,NEND
      DO 113 J=I,NEND
      IJ=IOFF(MAX0(I,J))+MIN0(I,J)
      II=I-NSTR+1
      JJ=J-NSTR+1
      IIJJ=IOFF(MAX0(II,JJ))+MIN0(II,JJ)
      FF(IIJJ)=FM(IJ)
  113 CONTINUE
      CALL ROTATE(EIG,OCC,FF,EE,EZ,CC(IC1),CC(IC2),CC(IC3),CC(IC4),
     1            NSTR-1,NN)
      GO TO 115
  309 EE(NSTR,NSTR)=ONE
  115 CONTINUE
C
      IF(IPRNT.LE.2) GO TO 311
      WRITE(6,8)
      CALL EIGOUT(EE,EIG,OCC,NBFAO,NBFAO,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM SO TO GENERAL OPEN-SHELL BASIS
  311 CONTINUE
      CALL ZERO(EZ,NBFAO*NBASIS)
      CALL MXMB(ESO,1,NBFSO,EE,1,NBFSO,EZ,1,NBFAO,NBFAO,NBFAO,NBFAO)
      DO 122 I=1,NBASIS
      DO 122 J=1,NBASIS
  122 ESO(I,J)=EZ(I,J)
      IF(IPRNT.LE.2) GO TO 312
      WRITE(6,9)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM GENERAL SO TO GENERAL AO BASIS
  312 CONTINUE
      CALL ZERO(EAO,NBFAO*NBASIS)
      CALL MXMB(UAS,1,NBFAO,ESO,1,NBFSO,EAO,1,NBFAO,NBFAO,NBFAO,NBFAO)
      IF(IPRNT.LE.2) GO TO 315
      WRITE(6,10)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
  315 CONTINUE
      WRITE(6,11)
      CALL RCLOSE(ITAP36,3)
      RETURN
      END
      SUBROUTINE ROTATE(EIG,OCC,FF,EE,EZ,EIGN,OCN,DUM1,DUM2,
     1                  NADDS,NBF)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS),FF(NBATRI)
      DIMENSION EE(NBFAO,NBFAO),EZ(NBFAO,NBFAO)
      DIMENSION EIGN(NBFAO),OCN(NBFAO),DUM1(NBFAO),DUM2(NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TEMPS/NORD(400)
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' FF MATRIX'/)
    2 FORMAT(//,2X,' TRANSFORMATION MATRIX'/)
    3 FORMAT(//,2X,' NORD = ',(30I4))
    4 FORMAT(//,2X,' XXXXXWARNING IN NORDXXXXX',I4//)
    5 FORMAT(//,2X,' XXXXXPROGRAM ERROR IN NORD---STOP !XXXXX'//)
    6 FORMAT(//,2X,' SORTED TRANSFORMATION MATRIX'/)
    7 FORMAT(//,2X,' SIGN ADJUSTED TRANSFORMATION MATRIX'/)
C
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,1)
      CALL PRINT(FF,NBATRI,NBF,6)
C
C   DIAGONALIZE FF MATRIX
  301 CALL RSP(NBFAO,NBF,NBATRI,FF,EIGN,1,EZ,DUM1,DUM2)
C
      DO 101 I=1,NBF
      II=NADDS+I
  101 OCN(I)=OCC(II)
      IF(IPRNT.LE.2) GO TO 302
      WRITE(6,2)
      CALL EIGOUT(EZ,EIGN,OCN,NBFAO,NBFAO,NBF,NBF,6)
C
  302 DO 102 I=1,NBF
      NI=1
      NJ=2
  201 IF(DABS(EZ(NI,I)).LT.DABS(EZ(NJ,I))) GO TO 202
      MAXN=NI
      GO TO 203
  202 MAXN=NJ
      NI=NJ
  203 NJ=NJ+1
      IF(NJ.LE.NBF) GO TO 201
      NORD(I)=MAXN
  102 CONTINUE
C
      IF(IPRNT.GE.3)
     *WRITE(6,3) (NORD(I),I=1,NBF)
      DO 105 I=1,NBF
      DO 103 J=1,NBF
      IF(NORD(J).EQ.I) GO TO 105
  103 CONTINUE
      WRITE(6,4) I
      DO 104 K=1,NBF-1
      DO 104 L=K+1,NBF
      IF(NORD(K).EQ.NORD(L)) GO TO 205
  104 CONTINUE
      WRITE(6,5)
      STOP
  205 NORD(K)=I
  105 CONTINUE
      IF(IPRNT.GE.3)
     *WRITE(6,3) (NORD(I),I=1,NBF)
C
      DO 107 I=1,NBF
      II=NADDS+I
      EIG(NORD(I)+NADDS)=EIGN(I)
      DO 107 J=1,NBF
      JJ=NADDS+NORD(J)
      EE(II,JJ)=EZ(I,J)
  107 CONTINUE
      IF(IPRNT.LE.2) GO TO 303
      WRITE(6,6)
      CALL EIGOUT(EE,EIG,OCN,NBFAO,NBFAO,NBF,NBF,6)
C
  303 DO 110 I=1,NBF
      IF(EE(I,I).GT.A00) GO TO 110
      DO 108 J=1,NBF
  108 EE(J,I)=-EE(J,I)
  110 CONTINUE
      IF(IPRNT.LE.2) GO TO 305
      WRITE(6,7)
      CALL EIGOUT(EE,EIG,OCN,NBFAO,NBFAO,NBF,NBF,6)
C
  305 RETURN
      END
      SUBROUTINE ZETMAT(EIG,OCC,ESO,EAO,U,T,H,DA,DB,ZT,ZETA,
     1                  EPS,EPA,DT,XA,LBLI,BUFI)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION EIG(NBASIS),OCC(NBASIS)
      DIMENSION ESO(NBFSO,NBASIS),EAO(NBFAO,NBASIS)
      DIMENSION U(NBFAO,NBFAO),T(NBFAO,NBFAO),H(NBATRI)
      DIMENSION DA(NBATRI,NTYPES),DB(NBATRI,NTYPES)
      DIMENSION ZT(NBATRI,NTYPES),ZETA(NBATRI,NTYPES)
      DIMENSION EPS(NBATRI),EPA(NBATRI),DT(NBATRI),XA(NBATRI)
      DIMENSION LBLI(MAXBF4),BUFI(MAXBF2)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/COUPL/ALPC(465),BETC(465),ALPA(30,30),BETA(30,30)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NTYPES,NTYPEP,NATOMS,N3N
      COMMON/GRSCF/FOCC(30),NSORB(30),MOTYP(256),LOTYP(256),KOTYP(256)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP34,ITAP36
      COMMON/TEMPS/I30(2048)
      COMMON/TYPES/ISTYPE,ICTYPE,NDERIV
      COMMON/CI101/IOPEN,IOCC,JOCC,KOCC
      DATA A00,HALF,TWO,FOUR / 0.0D+00 , 0.5D+00 , 2.0D+00 , 4.0D+00 /
    1 FORMAT(//,2X,' GENERAL OPEN-SHELL MO (SO BASIS)'/)
    2 FORMAT(//,2X,' DA MATRIX (SO BASIS), ITYP = ',I5/)
    3 FORMAT(//,2X,' DB MATRIX (SO BASIS), ITYP = ',I5/)
    4 FORMAT(//,2X,' ZETA MATRIX (SO BASIS) ONE ELECTRON PART, ITYP = ',
     1 I5/)
    5 FORMAT(//,2X,' ZETA MATRIX (MO BASIS) ONE ELECTRON PART, ITYP = ',
     1 I5/)
    6 FORMAT(2X,6I5,F15.8)
    7 FORMAT(//,2X,' ZETA MATRIX (SO BASIS), ITYP = ',I5/)
    8 FORMAT(//,2X,' ZETA MATRIX (MO BASIS), ITYP = ',I5/)
    9 FORMAT(//,2X,' LAGRANGIAN MATRIX (MO BASIS)'/)
   10 FORMAT(//,2X,' LAGRANGIAN MATRIX (AO BASIS)'/)
   11 FORMAT(//,2X,' DENSITY MATRIX (AO BASIS), ITYP = ',I5/)
C
      IF(IPRNT.LE.2) GO TO 301
      WRITE(6,1)
      CALL EIGOUT(ESO,EIG,OCC,NBFSO,NBASIS,NBASIS,NBASIS,6)
C
C   CALCULATE SO DENSITY MATRICES
  301 CONTINUE
      DO 105 ITYP=1,NTYPES
      IJ=0
      DO 102 I=1,NBASIS
      DO 102 J=1,I
      IJ=IJ+1
      VALUA=A00
      VALUB=A00
      DO 101 K=1,NBASIS
      KTYP=KOTYP(K)
      FAC=ESO(I,K)*ESO(J,K)
      VALUA=VALUA+ALPA(ITYP,KTYP)*FAC
      VALUB=VALUB+BETA(ITYP,KTYP)*FAC
  101 CONTINUE
      DA(IJ,ITYP)=VALUA
      DB(IJ,ITYP)=VALUB
  102 CONTINUE
      IF(IPRNT.LE.4) GO TO 105
      WRITE(6,2) ITYP
      CALL PRINT(DA(1,ITYP),NBATRI,NBASIS,6)
      WRITE(6,3) ITYP
      CALL PRINT(DB(1,ITYP),NBATRI,NBASIS,6)
  105 CONTINUE
C
C:::::::::::::::::::::::::::::::::::::::
C:::FORM LAGRANGIAN AND ZETA MATRICES:::
C:::::::::::::::::::::::::::::::::::::::
C
C   ONE ELECTRON PART
      CALL MREAD(H,16)
      DO 108 ITYP=1,NTYPES
      FAC=FOCC(ITYP)*HALF
      DO 106 I=1,NTRI
      ZT(I,ITYP)=H(I)*FAC
  106 CONTINUE
      IF(IPRNT.LE.3) GO TO 108
      WRITE(6,4) ITYP
      CALL PRINT(ZT(1,ITYP),NBATRI,NBASIS,6)
  108 CONTINUE
C
C   TWO ELECTRON PART
      CALL RFILE(ITAP36)
C
  500 CALL SREAD(ITAP36,LBLI,MAXBF4)
      DO 130 I=1,MAXBUF
      IBA=LBLI(I+I-1)
      IBB=LBLI(I+I)
      IF(IBA.EQ.0) GO TO 501
      VALU=BUFI(MAXBUF+I)
      CALL UNPACK(II,JJ,KK,LL,IX,IBA,IBB)
C     IF(IPRNT.LE.5) GO TO 304
C     WRITE(6,6) I,II,JJ,KK,LL,IX,VALU
  304 GO TO (201,202,203,204,205,206,207,208,209,210,211,212,212,212),IX
C
C (II/II)   1=(11/11)
C
  201 IIII=IOFF(II+1)
      DO 111 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+(DA(IIII,ITYP)+DB(IIII,ITYP))*VALU
  111 CONTINUE
      GO TO 130
C
C  (II/KK)  2=(22/11)
C
  202 IIII=IOFF(II+1)
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      DO 112 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DA(KKKK,ITYP)*VALU
      ZT(KKKK,ITYP)=ZT(KKKK,ITYP)+DA(IIII,ITYP)*VALU
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(IIKK,ITYP)*VALU
  112 CONTINUE
      GO TO 130
C
C  (II/IL)  3=(22/21)
C
  203 IIII=IOFF(II+1)
      IILL=IOFF(II)+LL
      VAL2=VALU+VALU
      DO 113 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+(DA(IILL,ITYP)+DB(IILL,ITYP))*VAL2
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+(DA(IIII,ITYP)+DB(IIII,ITYP))*VALU
  113 CONTINUE
      GO TO 130
C
C  (IJ/JJ)  4=(21/11)
C
  204 IIJJ=IOFF(II)+JJ
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      DO 114 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(JJJJ,ITYP)+DB(JJJJ,ITYP))*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+(DA(IIJJ,ITYP)+DB(IIJJ,ITYP))*VAL2
  114 CONTINUE
      GO TO 130
C
C  (IJ/IJ)  5=(21/21)
C
  205 IIJJ=IOFF(II)+JJ
      IIII=IOFF(II+1)
      JJJJ=IOFF(JJ+1)
      DO 115 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DB(JJJJ,ITYP)*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+DB(IIII,ITYP)*VALU
  115 CONTINUE
      GO TO 130
C
C  (II/KL)  6=(33/21)
C
  206 IIII=IOFF(II+1)
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      VAL2=VALU+VALU
      DO 116 ITYP=1,NTYPES
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DA(KKLL,ITYP)*VAL2
      ZT(KKLL,ITYP)=ZT(KKLL,ITYP)+DA(IIII,ITYP)*VALU
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(IILL,ITYP)*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+DB(IIKK,ITYP)*VALU
  116 CONTINUE
      GO TO 130
C
C  (IJ/KK)  7=(32/11)
C
  207 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=IOFF(JJ)+KK
      VAL2=VALU+VALU
      DO 117 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+DA(KKKK,ITYP)*VALU
      ZT(KKKK,ITYP)=ZT(KKKK,ITYP)+DA(IIJJ,ITYP)*VAL2
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJKK,ITYP)*VALU
      ZT(JJKK,ITYP)=ZT(JJKK,ITYP)+DB(IIKK,ITYP)*VALU
  117 CONTINUE
      GO TO 130
C
C  (IJ/KK)  8=(31/22)
C
  208 IIJJ=IOFF(II)+JJ
      KKKK=IOFF(KK+1)
      IIKK=IOFF(II)+KK
      JJKK=JJ+IOFF(KK)
      VAL2=VALU+VALU
      DO 118 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+DA(KKKK,ITYP)*VALU
      ZT(KKKK,ITYP)=ZT(KKKK,ITYP)+DA(IIJJ,ITYP)*VAL2
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJKK,ITYP)*VALU
      ZT(JJKK,ITYP)=ZT(JJKK,ITYP)+DB(IIKK,ITYP)*VALU
  118 CONTINUE
      GO TO 130
C
C (IJ/IL)  9=(32/31)
C
  209 IIJJ=IOFF(II)+JJ
      IILL=IOFF(II)+LL
      IIII=IOFF(II+1)
      JJLL=IOFF(JJ)+LL
      VAL2=VALU+VALU
      DO 119 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(IILL,ITYP)*TWO
     1                            +DB(IILL,ITYP))*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IIII,ITYP)=ZT(IIII,ITYP)+DB(JJLL,ITYP)*VAL2
      ZT(JJLL,ITYP)=ZT(JJLL,ITYP)+DB(IIII,ITYP)*VALU
  119 CONTINUE
      GO TO 130
C
C  (IJ/JL)  10=(32/21)
C
  210 IIJJ=IOFF(II)+JJ
      JJLL=IOFF(JJ)+LL
      IILL=IOFF(II)+LL
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      DO 120 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(JJLL,ITYP)*TWO
     1                            +DB(JJLL,ITYP))*VALU
      ZT(JJLL,ITYP)=ZT(JJLL,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+DB(JJJJ,ITYP)*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+DB(IILL,ITYP)*VAL2
  120 CONTINUE
      GO TO 130
C
C  (IJ/KJ)  11=(31/21)
C
  211 IIJJ=IOFF(II)+JJ
      JJKK=JJ+IOFF(KK)
      IIKK=IOFF(II)+KK
      JJJJ=IOFF(JJ+1)
      VAL2=VALU+VALU
      DO 121 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+(DA(JJKK,ITYP)*TWO
     1                            +DB(JJKK,ITYP))*VALU
      ZT(JJKK,ITYP)=ZT(JJKK,ITYP)+(DA(IIJJ,ITYP)*TWO
     1                            +DB(IIJJ,ITYP))*VALU
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJJJ,ITYP)*VALU
      ZT(JJJJ,ITYP)=ZT(JJJJ,ITYP)+DB(IIKK,ITYP)*VAL2
  121 CONTINUE
      GO TO 130
C
C  (IJ/KL)  12=(43/21)
C  (IJ/KL)  13=(42/31)
C  (IJ/KL)  14=(41/32)
C
  212 IIJJ=IOFF(II)+JJ
      KKLL=IOFF(KK)+LL
      IIKK=IOFF(II)+KK
      IILL=IOFF(II)+LL
      JJLL=IOFF(MAX0(JJ,LL))+MIN0(JJ,LL)
      JJKK=IOFF(MAX0(JJ,KK))+MIN0(JJ,KK)
      VAL2=VALU+VALU
      DO 122 ITYP=1,NTYPES
      ZT(IIJJ,ITYP)=ZT(IIJJ,ITYP)+DA(KKLL,ITYP)*VAL2
      ZT(KKLL,ITYP)=ZT(KKLL,ITYP)+DA(IIJJ,ITYP)*VAL2
      ZT(IIKK,ITYP)=ZT(IIKK,ITYP)+DB(JJLL,ITYP)*VALU
      ZT(JJLL,ITYP)=ZT(JJLL,ITYP)+DB(IIKK,ITYP)*VALU
      ZT(IILL,ITYP)=ZT(IILL,ITYP)+DB(JJKK,ITYP)*VALU
      ZT(JJKK,ITYP)=ZT(JJKK,ITYP)+DB(IILL,ITYP)*VALU
  122 CONTINUE
C
  130 CONTINUE
      GO TO 500
C
  501 CALL SREW(ITAP36)
C
C   TRANSFORM ZETA MATRICES FROM SO TO MO BASIS
      DO 165 ITYP=1,NTYPES
      CALL MOCONV(ZT(1,ITYP),NBATRI,ZETA(1,ITYP),NBATRI,ESO,U,T)
      CALL MWRIT(ZETA(1,ITYP),ITYP+35)
      IF(IPRNT.LE.2) GO TO 165
      WRITE(6,7) ITYP
      CALL PRINT(ZT(1,ITYP),NBATRI,NBASIS,6)
      WRITE(6,8) ITYP
      CALL PRINT(ZETA(1,ITYP),NBATRI,NBASIS,6)
  165 CONTINUE
C
C   FORM THE LAGRANGIAN MATRIX IN MO BASIS
      CALL ZERO(EPS,NTRI)
      NSTR=0
      NEND=0
      DO 173 ITYP=1,NTYPES
      NN=NSORB(ITYP)
      IF(NN.LE.0) GO TO 173
      NSTR=NEND+1
      NEND=NSTR+NN-1
      DO 171 I=NSTR,NEND
      DO 171 J=1,I
      IJ=IOFF(I)+J
      EPS(IJ)=ZETA(IJ,ITYP)
  171 CONTINUE
  173 CONTINUE
      CALL MWRIT(EPS,27)
      IF(IPRNT.LE.2) GO TO 310
      WRITE(6,9)
      CALL PRINT(EPS,NBATRI,NBASIS,6)
C
C   TRANSFORM THE LAGRANGIAN MATRIX FROM MO TO AO BASIS
  310 CONTINUE
C     DO 175 I=1,NBASIS
CC    DO 175 J=1,I
C     IJ=IOFF(I)+J
C     T(I,J)=EPS(IJ)
C     T(J,I)=EPS(IJ)
C 175 CONTINUE
C     DO 177 I=1,NBASIS
C     DO 177 JJ=1,NBFAO
C     VALU=A00
C     DO 176 J=1,NBASIS
C     VALU=VALU+EAO(JJ,J)*T(I,J)
C 176 CONTINUE
C     U(I,JJ)=VALU
C 177 CONTINUE
C     DO 179 II=1,NBFAO
C     DO 179 JJ=1,II
C     IIJJ=IOFF(II)+JJ
C     VALU=A00
C     DO 178 I=1,NBASIS
C     VALU=VALU+EAO(II,I)*U(I,JJ)
C 178 CONTINUE
C     EPA(IIJJ)=VALU*FOUR
C 179 CONTINUE
      CALL AOCONV(EPS,NTRI,EPA,NBATRI,EAO,U,T)
      DO 175 I=1,NTRI
  175 EPA(I)=EPA(I)*FOUR
      CALL MWRIT(EPA,26)
      IF(IPRNT.LE.2) GO TO 315
      WRITE(6,10)
      CALL PRINT(EPA,NBATRI,NBFAO,6)
C
  315 CONTINUE
      CALL RCLOSE(ITAP36,3)
      RETURN
      END
      SUBROUTINE MOCONV(SA,NNA,SM,NNM,ESO,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SA(NNA),SM(NNM)
      DIMENSION ESO(NBFSO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
C
C    TRANSFORMATION FROM SO TO MO BASIS
      NBFASQ=NBFAO*NBFAO
      IIJJ=0
      DO 101 II=1,NBFSO
      DO 101 JJ=1,II
      IIJJ=IIJJ+1
      T(II,JJ)=SA(IIJJ)
      T(JJ,II)=SA(IIJJ)
  101 CONTINUE
      CALL ZERO(U,NBFASQ)
      CALL MXMB(ESO,NBFSO,1,T,1,NBFAO,U,1,NBFAO,NBFAO,NBFAO,NBFAO)
      CALL ZERO(T,NBFASQ)
      CALL MXMB(U,1,NBFAO,ESO,1,NBFSO,T,1,NBFAO,NBFAO,NBFAO,NBFAO)
      IJ=0
      DO 102 I=1,NBASIS
      DO 102 J=1,I
      IJ=IJ+1
      SM(IJ)=T(I,J)
  102 CONTINUE
C
      RETURN
      END
      SUBROUTINE AOCONV(SM,NNM,SA,NNA,EAO,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION SM(NNM),SA(NNA)
      DIMENSION EAO(NBFAO,NBASIS),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
C
C    TRANSFORMATION FROM MO TO AO BASIS
      NBFASQ=NBFAO*NBFAO
      IIJJ=0
      DO 101 II=1,NBASIS
      DO 101 JJ=1,II
      IIJJ=IIJJ+1
      T(II,JJ)=SM(IIJJ)
      T(JJ,II)=SM(IIJJ)
  101 CONTINUE
      CALL ZERO(U,NBFASQ)
      CALL MXMB(EAO,1,NBFAO,T,1,NBFAO,U,1,NBFAO,NBFAO,NBFAO,NBFAO)
      CALL ZERO(T,NBFASQ)
      CALL MXMB(U,1,NBFAO,EAO,NBFAO,1,T,1,NBFAO,NBFAO,NBFAO,NBFAO)
      IJ=0
      DO 102 I=1,NBFAO
      DO 102 J=1,I
      IJ=IJ+1
      SA(IJ)=T(I,J)
  102 CONTINUE
C
      RETURN
      END
