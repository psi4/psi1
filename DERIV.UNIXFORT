      SUBROUTINE BFTOAT(IBF2AT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION IBF2AT(256)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
C
      DO 102 ISHELL=1,NSHELL
      IATOM=KATOM(ISHELL)
      MINBF=KLOC(ISHELL)
      MAXBF=MINBF+KMAX(ISHELL)-KMIN(ISHELL)
      DO 101 IBF=MINBF,MAXBF
      IBF2AT(IBF)=IATOM
  101 CONTINUE
  102 CONTINUE
C
      RETURN
      END
      BLOCK DATA
      COMMON/IJVEC/IX(20),IY(20),IZ(20),JX(20),JY(20),JZ(20)
C
C                                         X  Y  Z  X  X  Y  Y  Z  Z  X
C                       X  Y  Z  X  X  Y  X  Y  Z  X  X  Y  Y  Z  Z  Y
C              S X Y Z  X  Y  Z  Y  Z  Z  X  Y  Z  Y  Z  X  Z  X  Y  Z
C
      DATA IX /1,5,1,1, 9, 1, 1, 5, 5, 1,13, 1, 1, 9, 9, 5, 1, 5, 1, 5/
      DATA IY /1,1,5,1, 1, 9, 1, 5, 1, 5, 1,13, 1, 5, 1, 9, 9, 1, 5, 5/
      DATA IZ /1,1,1,5, 1, 1, 9, 1, 5, 5, 1, 1,13, 1, 5, 1, 5, 9, 9, 5/
      DATA JX /0,1,0,0, 2, 0, 0, 1, 1, 0, 3, 0, 0, 2, 2, 1, 0, 1, 0, 1/
      DATA JY /0,0,1,0, 0, 2, 0, 1, 0, 1, 0, 3, 0, 1, 0, 2, 2, 0, 1, 1/
      DATA JZ /0,0,0,1, 0, 0, 2, 0, 1, 1, 0, 0, 3, 0, 1, 0, 1, 2, 2, 1/
C
      END
      SUBROUTINE DAB(D,DT,Q4)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D(NBATRI,NTYPEP),DT(NBATRI)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COUPL/ALP(5,5),BET(5,5)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA4/MMIJ,MMKL,ISAME(100)
      COMMON/POSIX/IPOS(100),JPOS(100),KPOS(100),LPOS(100),IMUL(100)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TCSCF/SOCC1,SOCC2,SOCC12
      DATA ZERO,HALF,TWO,FOUR,EIGHT / 0.0D+00 , 0.5D+00, 2.0D+00 ,
     1                                4.0D+00 , 8.0D+00 /
      DATA DLIM / 1.0D-10 /
C
      DMAX=ZERO
C
      NN=0
      DO 103 II=1,MMIJ
      IT=IPOS(II)
      JT=JPOS(II)
      NFAC=IMUL(II)
      DO 102 JJ=1,MMKL
      KT=KPOS(JJ)
      LT=LPOS(JJ)
      NN=NN+1
      IJT=IOFF(MAX0(IT,JT))+MIN0(IT,JT)
      KLT=IOFF(MAX0(KT,LT))+MIN0(KT,LT)
      IF(IJT.LT.KLT) GO TO 301
      I=MAX0(IT,JT)
      J=MIN0(IT,JT)
      K=MAX0(KT,LT)
      L=MIN0(KT,LT)
      GO TO 302
  301 CONTINUE
      I=MAX0(KT,LT)
      J=MIN0(KT,LT)
      K=MAX0(IT,JT)
      L=MIN0(IT,JT)
C
  302 CONTINUE
      MIJ=IOFF(MAX0(I,J))+MIN0(I,J)
      MKL=IOFF(MAX0(K,L))+MIN0(K,L)
      MIK=IOFF(MAX0(I,K))+MIN0(I,K)
      MJL=IOFF(MAX0(J,L))+MIN0(J,L)
      MIL=IOFF(MAX0(I,L))+MIN0(I,L)
      MJK=IOFF(MAX0(J,K))+MIN0(J,K)
C
      GO TO (201,202,203,204,204,205),ISTYPE
C
C     ----- CLOSED SHELL SINGLET -----
C
  201 CONTINUE
      DFAC=DT(MIJ)*DT(MKL)*FOUR-DT(MIK)*DT(MJL)-DT(MIL)*DT(MJK)
      GO TO 210
C
C     ----- HIGH-SPIN OPEN-SHELL -----
C
  202 CONTINUE
      DFAC=DT(MIJ)*DT(MKL)*FOUR-DT(MIK)*DT(MJL)-DT(MIL)*DT(MJK)
     1                         -D(MIK,2)*D(MJL,2)-D(MIL,2)*D(MJK,2)
      GO TO 210
C
C     ----- OPEN SHELL SINGLET -----
C
  203 CONTINUE
      DFAC=(DT(MIJ)*DT(MKL)-D(MIJ,2)* D(MKL,2)
     1 +    D(MIJ,3)*D(MKL,4)+D(MIJ,4)*D(MKL,3))*FOUR
     2 -    DT(MIK)*DT(MJL)-DT(MIL)*DT(MJK)
     3 +    D(MIK,2)*D(MJL,2)+D(MIL,2)*D(MJK,2)
     4 +    (D(MIK,3)*D(MJL,4)+D(MIK,4)*D(MJL,3)
     5 +    D(MIL,3)*D(MJK,4)+D(MIL,4)*D(MJK,3))*TWO
      GO TO 210
C
C     ----- GENERAL OPEN SHELL SCF -----
C
  204 CONTINUE
      DFAC1=ZERO
      DFAC2=ZERO
      DO 101 ITYP=1,NTYPES
      DO 101 JTYP=1,NTYPES
      DFAC1=DFAC1+D(MIJ,ITYP)*D(MKL,JTYP)*ALP(ITYP,JTYP)
      DFAC2=DFAC2+(D(MIK,ITYP)*D(MJL,JTYP)+D(MIL,ITYP)*D(MJK,JTYP))*
     1      BET(ITYP,JTYP)
  101 CONTINUE
      DFAC=DFAC1*TWO+DFAC2
      GO TO 210
C
C     ----- TWO-CONFIGURATION SCF (GVB) -----
C
  205 CONTINUE
       DFAC=(DT(MIJ)*DT(MKL)-D(MIJ,2)*D(MKL,2)
     1  +   D(MIJ,3)*D(MKL,3)*SOCC1+D(MIJ,4)*D(MKL,4)*SOCC2)*FOUR
     2                   -DT(MIK)* DT(MJL)- DT(MIL)* DT(MJK)
     3  +      D(MIK,2)*D(MJL,2)+D(MIL,2)*D(MJK,2)
     4  +    (D(MIK,3)*D(MJL,4)+D(MIK,4)*D(MJL,3)
     5  +     D(MIL,3)*D(MJK,4)+D(MIL,4)*D(MJK,3))*SOCC12
      GO TO 210
C
  210 CONTINUE
C
      IF(I.EQ.J) DFAC=DFAC*HALF
      IF(K.EQ.L) DFAC=DFAC*HALF
#ifdef APOLLO
      dfac=dfac*q4*dble(nfac)
#else
      DFAC=DFAC*Q4*DFLOAT(NFAC)
#endif
      IF(DABS(DFAC).GT.DMAX) DMAX=DABS(DFAC)
      ABDENS(NN)=DFAC
  102 CONTINUE
  103 CONTINUE
C
      IF(DMAX.LT.DLIM) Q4=ZERO
C
      RETURN
      END
      SUBROUTINE DENS30(DENS,DENT,EIG,OCC,EAO)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EAO(NBFAO,NBASIS)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' PARAMETERS'/
     * 2X,' NBASIS = ',I8/
     * 2X,' NBFAO  = ',I8/
     * 2X,' NBATRI = ',I8/
     * 2X,' NATOM  = ',I8/
     * 2X,' N3N    = ',I8/
     * 2X,' NATRI  = ',I8/
     * 2X,' IOCC   = ',I8/
     * 2X,' JOCC   = ',I8/
     * 2X,' KOCC   = ',I8/
     * 2X,' NTYPES = ',I8/
     * 2X,' NTYPEP = ',I8/
     * 2X,' ISTYPE = ',I8/
     * 2X,' ICTYPE = ',I8/
     * 2X,' NDERIV = ',I8/
     * 2X,' IAFOCK = ',I8/
     * 2X,' IDFOCK = ',I8/
     * 2X,' IDINT  = ',I8/
     * 2X,' IPRNT  = ',I8/)
    2 FORMAT(//,2X,' TOTAL DENSITY MATRIX'/)
    3 FORMAT(//,2X,' SHELL DENSITY MATRIX, ITYP = ',I5/)
    4 FORMAT(//,2X,' AVERAGE DENSITY MATRIX'/)
C
      IF(IPRNT.GT.3)
     *WRITE(6,1) NBASIS,NBFAO,NBATRI,NATOM,N3N,NATRI,IOCC,JOCC,KOCC,
     1  NTYPES,NTYPEP,ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT,IPRNT
C
C   FORM THE TOTAL DENSITY MATRIX
      IJ=0
      DO 102 I=1,NBFAO
      DO 102 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 101 K=1,NBASIS
      IF(OCC(K).LE.ZERO) GO TO 101
      VALU=VALU+EAO(I,K)*EAO(J,K)*OCC(K)
  101 CONTINUE
      DENT(IJ)=VALU
  102 CONTINUE
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,2)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
  201 CONTINUE
      GO TO (310,301,302,303,304,305),ISTYPE
C
C   HIGH-SPIN OPEN-SHELL SCF
  301 CONTINUE
      NDENTS=2
      IJ=0
      DO 104 I=1,NBFAO
      DO 104 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      DO 103 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO) GO TO 103
      PROD=EAO(I,K)*EAO(J,K)
      IF(FAC.EQ.ONE) GO TO 202
      VALC=VALC+PROD
      GO TO 103
  202 CONTINUE
      VALO=VALO+PROD
  103 CONTINUE
      DENS(IJ,1)=VALC*TWO
      DENS(IJ,2)=VALO
  104 CONTINUE
      GO TO 310
C
C   OPEN-SHELL SINGLET SCF
  302 CONTINUE
      NDENTS=4
      IJ=0
      DO 106 I=1,NBFAO
      DO 106 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      VALO1=ZERO
      VALO2=ZERO
      II=0
      DO 105 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO) GO TO 105
      PROD=EAO(I,K)*EAO(J,K)
      IF(FAC.EQ.ONE) GO TO 203
      VALC=VALC+PROD
      GO TO 105
  203 CONTINUE
      VALO=VALO+PROD
      II=II+1
      IF(II.GE.2) GO TO 204
      VALO1=VALO1+PROD
      GO TO 105
  204 CONTINUE
      VALO2=VALO2+PROD
  105 CONTINUE
      DENS(IJ,1)=VALC*TWO
      DENS(IJ,2)=VALO
      DENS(IJ,3)=VALO1
      DENS(IJ,4)=VALO2
  106 CONTINUE
      GO TO 310
C
C   GENERAL OPEN-SHELL SCF
C   FOR CLOSED SHELL
  303 CONTINUE
      NDENTS=NUNIQ+1
      IJ=0
      DO 108 I=1,NBFAO
      DO 108 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 107 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.NE.TWO) GO TO 107
      VALU=VALU+EAO(I,K)*EAO(J,K)
  107 CONTINUE
      DENS(IJ,1)=VALU*TWO
  108 CONTINUE
C
C   FOR OPEN-SHELLS
      IF(NUNIQ.EQ.0) GO TO 310
      DO 115 ITYP=1,NUNIQ
      ITT=ITYP+1
      COEF=FOCC(ITT)
      NN=LOPN(ITYP)
      IJ=0
      DO 114 I=1,NBFAO
      DO 114 J=1,I
      IJ=IJ+1
      II=0
      VALU=ZERO
      DO 113 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO.OR.FAC.EQ.TWO) GO TO 113
      II=II+1
      IF(FAC.NE.COEF) GO TO 113
      DO 112 L=1,NN
      IF(MOPN(ITYP,L).NE.II) GO TO 112
      VALU=VALU+EAO(I,K)*EAO(J,K)
  112 CONTINUE
  113 CONTINUE
      DENS(IJ,ITT)=VALU*COEF*TWO
  114 CONTINUE
  115 CONTINUE
       GO TO 307
C
C   TWO-CONFIGURATION SCF---GRSCF FORMALISM
  304 CONTINUE
      NDENTS=3
      DO 118 ITYP=1,NTYPES
      FAC=FOCC(ITYP)
      IJ=0
      DO 117 I=1,NBFAO
      DO 117 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 116 K=1,NBASIS
      IF(FAC.NE.OCC(K)) GO TO 116
      VALU=VALU+EAO(I,K)*EAO(J,K)
  116 CONTINUE
      DENS(IJ,ITYP)=VALU*TWO
  117 CONTINUE
  118 CONTINUE
      GO TO 307
C
C   TWO-CONFIGURATION SCF
  305 CONTINUE
      NDENTS=4
      IJ=0
      DO 120 I=1,NBFAO
      DO 120 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      VALO1=ZERO
      VALO2=ZERO
      II=0
      DO 119 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO) GO TO 119
      PROD=EAO(I,K)*EAO(J,K)
      IF(FAC.NE.TWO) GO TO 206
      VALC=VALC+PROD
      GO TO 119
  206 CONTINUE
      VALO=VALO+PROD*FAC
      II=II+1
      IF(II.GE.2) GO TO 207
      VALO1=VALO1+PROD*FAC
      GO TO 119
  207 CONTINUE
      VALO2=VALO2+PROD*FAC
  119 CONTINUE
      DENS(IJ,1)=VALC*TWO
      DENS(IJ,2)=VALO
      DENS(IJ,3)=VALO1
      DENS(IJ,4)=VALO2
  120 CONTINUE
C
C   FORM THE DENSITY MATRIX FOR THE AVERAGED FOCK
  307 CONTINUE
C     IF(IAFOCK.EQ.0) GO TO 310
C     NDENTS=NDENTS+1
C     IJ=0
C     DO 122 I=1,NBFAO
C     DO 122 J=1,I
C     IJ=IJ+1
C     VALU=ZERO
C     DO 121 K=1,NBASIS
C     KTYP=MOTYP(K)
C     FAC=FOCC(KTYP)
C     VALU=VALU+EAO(I,K)*EAO(J,K)*FAC
C 121 CONTINUE
C     DENS(IJ,NTYPEP)=VALU
C 122 CONTINUE
C     IF(IPRNT.LE.3) GO TO 310
C     WRITE(6,3)
C     CALL PRINT(DENS(1,NTYPEP),NBATRI,NBFAO,6)
C
C
  310 CONTINUE
      IF(IPRNT.LE.3) GO TO 210
      DO 125 ITYP=1,NDENTS
      WRITE(6,3) ITYP
      CALL PRINT(DENS(1,ITYP),NBATRI,NBFAO,6)
  125 CONTINUE
C
  210 CONTINUE
      RETURN
      END
      SUBROUTINE DENS40(DENS,DENT,WAO,EIG,OCC,EAO)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI),WAO(NBATRI)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EAO(NBFAO,NBASIS)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      DATA ZERO,TWO / 0.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' SCF EIGENVECTOR (AO BASIS) MATRIX'/)
    2 FORMAT(//,2X,' SCF LAGRANGIAN (AO BASIS) MATRIX'/)
    3 FORMAT(//,2X,' TOTAL DENSITY MATRIX'/)
    4 FORMAT(//,2X,' SHELL DENSITY MATRIX, ITYP = ',I5/)
    5 FORMAT(//,2X,' AVERAGE DENSITY MATRIX'/)
C
C   READ IN AO-MO EIGENVECTORS
      CALL MREAD(EIG,17)
      CALL MREAD(OCC,18)
      CALL MREAD(EAO,20)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,24)
      DO 101 I=1,NBATRI
  101 WAO(I)=WAO(I)*TWO
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   FORM THE TOTAL DENSITY MATRIX
  202 CONTINUE
      IJ=0
      DO 103 I=1,NBFAO
      DO 103 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 102 K=1,NBASIS
      IF(OCC(K).LE.ZERO) GO TO 102
      VALU=VALU+EAO(I,K)*EAO(J,K)*OCC(K)
  102 CONTINUE
      DENT(IJ)=VALU
  103 CONTINUE
      IF(IPRNT.LE.3) GO TO 203
      WRITE(6,3)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   FORM THE SHELL DENSITY MATRICES
  203 CONTINUE
      DO 106 ITYP=1,NTYPES
      IJ=0
      COEF=TWO
      IF(ISTYPE.EQ.4.AND.ITYP.GT.1) COEF=COEF*FOCC(ITYP)
      IST=NSTR(ITYP)
      IED=NEND(ITYP)
      DO 105 I=1,NBFAO
      DO 105 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 104 K=IST,IED
      VALU=VALU+EAO(I,K)*EAO(J,K)
  104 CONTINUE
      DENS(IJ,ITYP)=VALU*COEF
  105 CONTINUE
      IF(IPRNT.LE.3) GO TO 106
      WRITE(6,4) ITYP
      CALL PRINT(DENS(1,ITYP),NBATRI,NBFAO,6)
  106 CONTINUE
C
C   FORM THE DENSITY MATRIX FOR THE AVERAGED FOCK
      IF(IAFOCK.EQ.0) GO TO 205
      IJ=0
      DO 108 I=1,NBFAO
      DO 108 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 107 K=1,NBASIS
      KTYP=MOTYP(K)
      FAC=FOCC(KTYP)
      VALU=VALU+EAO(I,K)*EAO(J,K)*FAC
  107 CONTINUE
      DENS(IJ,NTYPEP)=VALU
  108 CONTINUE
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,5)
      CALL PRINT(DENS(1,NTYPEP),NBATRI,NBASIS,6)
C
  205 CONTINUE
      RETURN
      END
      SUBROUTINE DERFK1(D1TOT,D2TOT,DFH,DFS,BMAT,SS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1TOT(3,NATOM),D2TOT(N3N,N3N)
      DIMENSION DFH(NBATRI,N3N),DFS(NBATRI,3),BMAT(NBATRI,N3N,NTREAD)
      DIMENSION SS(NBATRI)
      DIMENSION IBF2AT(256)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/MFSEC/MFILE,NSECT
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO / 0.0D+00 /
C
C   LOCATION OF MATRICES IN TAPE42
C   (1) E1A
C   (2) E2A
C   (3) SA (N3NXX*NTRIL)
C   (4) HA (N3NXX*NTRIL)
C   (5) TA (N3NXX*NTRIL*NBSET)
C
      ITAP42=42
      CALL RFILE(ITAP42)
C
      CALL SWRIT(ITAP42,D1TOT,N3N*2)
      CALL SWRIT(ITAP42,D2TOT,N3N*N3N*2)
C
      CALL BFTOAT(IBF2AT)
C
C   SAVE SA MATRICES ON TAPE42
      KABC=0
      DO 106 IABC=1,NATOM
      DO 105 IXYZ=1,3
      KABC=KABC+1
      DO 102 I=1,NBATRI
  102 SS(I)=ZERO
      DO 104 I=1,NBASIS
      IA=IOFF(I)
      DO 103 J=1,I
      IF(IBF2AT(I).NE.IABC.AND.IBF2AT(J).NE.IABC) GO TO 103
      IJ=IA+J
      SX=DFS(IJ,IXYZ)
      IF(IBF2AT(I).NE.IABC) SX=-SX
      SS(IJ)=SX
  103 CONTINUE
  104 CONTINUE
CC    CALL PRINT(SS,NBATRI,NBASIS,6)
      CALL SWRIT(ITAP42,SS,NBATR2)
  105 CONTINUE
  106 CONTINUE
C
C   SAVE HA MATRICES ON TAPE42
      DO 107 IABC=1,N3N
CC    CALL PRINT(DFH(1,IABC),NBATRI,NBASIS,6)
      CALL SWRIT(ITAP42,DFH(1,IABC),NBATR2)
  107 CONTINUE
C
C   SAVE TA MATRICES ON TAPE42
      DO 109 ITYP=1,NTREAD
      DO 108 IABC=1,N3N
CC    WRITE(6,*) 'TA MATRIX,ITYP,IABC = ',ITYP,IABC
CC    CALL PRINT(BMAT(1,IABC,ITYP),NBATRI,NBASIS,6)
      CALL SWRIT(ITAP42,BMAT(1,IABC,ITYP),NBATR2)
  108 CONTINUE
  109 CONTINUE
C
      CALL RCLOSE(ITAP42,3)
      RETURN
      END
cets The following is called by a C program which handles dynamic
cets allocation of memory.
      subroutine fentry(cc,ia,maxcor)
cets  PROGRAM DERIVY
C   THE DERIVATIVE PROGRAM
C   THIS PROGRAM IS ABLE TO CALCULATE FIRST AND SECOND DERIVATIVES
C   (FOR ALL KINDS OF WAVE FUNCTIONS ??)
C*********************************************************************
C   NOTICE OF PROGRAM MODIFICATION                                   *
C   BY: WESLEY ALLEN                                                 *
C   DATE: NOVEMBER 5, 1986                                           *
C   REASON:  FIX BUG IN THE FORMATION OF THE OCCUPATION VECTOR FOR   *
C            TCSCF CASES WHERE THE TWO ORBITALS ARE OF THE SAME      *
C            SYMMETRY (THIS INCLUDES ALL SCFX CASES).                *
C*********************************************************************
C***LAST UPDATED ON MAY 15, 1985 BY YUKIO YAMAGUCHI***               *
C*********************************************************************
      IMPLICIT REAL*8 (A-H,O-Z)
cets  integer corsiz
cets  parameter (corsiz=maxcor)
cets  DIMENSION CC(corsiz),IA(1),I30(200)
      dimension cc(maxcor),ia(intowp(maxcor)),i30(200)
      CHARACTER*8 SCFTYP,CITYP,DERTYP,RAMAN
      CHARACTER*8 NOSYM,AFOCK,DFOCK,DERINT
      CHARACTER*8 OPTYPE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COORD/ZAN(50),X(3,50)
      COMMON/ENRGY/ENUC,ESCF
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/EX(200),CS(200)
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/GAUSE/MXSPDF(50),MINSH(3,50),MAXSH(3,50)
      COMMON/NDERS/NDERIV
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/OPEN2/GOCC(10)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/PARA2/NPRIM
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP42
cets  EQUIVALENCE (CC,IA)
    1 FORMAT(//,2X,' THE DERIVATIVE PROGRAM'/)
    2 FORMAT(4(A8,2X))
    3 FORMAT(//,3X,4(A8,2X))
    4 FORMAT(5I5)
    5 FORMAT(A8,2X,I5)
    6 FORMAT(F10.5,10I5)
    7 FORMAT(4(A8,2X),I5)
    8 FORMAT(//,2X,' WRONG INPUT '/
     1          2X,' SCFTYP = ',A8,5X,' CITYP = ',A8,5X,' DERTYP = ',A8,
     2        /)
    9 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
   10 FORMAT(//,2X,' REQUIRED MEMORY EXCEEDS MAXCOR'/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
C
      call drum
      CALL TSTART(6)
C
      ITAPE3=3
      INPUT=5
      ITAP30=30
      ITAP42=42
cets  MAXCOR=corsiz
cets added for unix conversion
      open(unit=11,file='file11',status='unknown')
C
C  READ IN PARAMETERS FROM TAPE30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      IOPEN=I30(43)
      CALL SREW(ITAP30)
C
      CALL LOCATE(INPUT,'# DERIV ##',IERR)
C
      IOFF(1)=0
      DO 101 I=1,255
  101 IOFF(I+1)=IOFF(I)+I
C
      WRITE(6,1)
C
C   CLSCF--+
C   HSOP---+
C   OPSNG--+--SCF----SECOND   FOR SCF 2ND DERIVATIVE
C   GRSCF--+
C   TCSCF--+
C
C   CLSCF--+
C   HSOP---+
C   OPSNG--+--CI-----SECOND   FOR SCF-CI 2ND DERIVATIVE
C   GRSCF--+
C   TCSCF--+
C
C   MCSCF--+--MCSCF--SECOND   FOR MCSCF 2ND DERIVATIVE
C
C   MCSCF--+--CI-----SECOND   FOR MCSCF-CI 2ND DERIVATIVE
C
      READ(5,2) SCFTYP,CITYP,DERTYP,RAMAN
      WRITE(6,3) SCFTYP,CITYP,DERTYP,RAMAN
      READ(5,4) IPRNT
      NUNIQ=0
      IF(IOPEN.NE.0.AND.SCFTYP.EQ.'GRSCF   ') THEN
      READ(5,5) OPTYPE,NUNIQ
      DO 102 I=1,NUNIQ
      READ(5,6) GOCC(I),LL,(MOPN(I,J),J=1,LL)
      LOPN(I)=LL
  102 CONTINUE
      END IF
      READ(5,7) NOSYM,AFOCK,DFOCK,DERINT
C
      ISTYPE=0
      IF(SCFTYP.EQ.'CLSCF   ') ISTYPE=1
      IF(SCFTYP.EQ.'HSOP    ') ISTYPE=2
      IF(SCFTYP.EQ.'OPSNG   ') ISTYPE=3
      IF(SCFTYP.EQ.'GRSCF   ') ISTYPE=4
      IF(SCFTYP.EQ.'TCSCF-GR') ISTYPE=5
      IF(SCFTYP.EQ.'TCSCF   ') ISTYPE=6
      IF(SCFTYP.EQ.'MCSCF   ') ISTYPE=7
      ICTYPE=0
      IF(CITYP.EQ.'SCF     ') ICTYPE=1
      IF(CITYP.EQ.'CI      ') ICTYPE=2
      IF(CITYP.EQ.'MCSCF   ') ICTYPE=3
      NDERIV=0
      IF(DERTYP.EQ.'FIRST   ') NDERIV=1
      IF(DERTYP.EQ.'SECOND  ') NDERIV=2
      IF(DERTYP.EQ.'THIRD   ') NDERIV=3
      IF(DERTYP.EQ.'FOURTH  ') NDERIV=4
      NTYPES=0
      IF(SCFTYP.EQ.'CLSCF   ') NTYPES=1
      IF(SCFTYP.EQ.'HSOP    ') NTYPES=2
      IF(SCFTYP.EQ.'OPSNG   ') NTYPES=3
      IF(SCFTYP.EQ.'GRSCF   ') NTYPES=NUNIQ+1
      IF(SCFTYP.EQ.'TCSCF-GR') NTYPES=3
      IF(SCFTYP.EQ.'TCSCF   ') NTYPES=3
      IF(SCFTYP.EQ.'MCSCF   ') NTYPES=1
      NTYPEP=NTYPES+1
      IF(NDERIV.GE.2.AND.ISTYPE.EQ.2) ISTYPE=4
      IF(NDERIV.GE.2.AND.ISTYPE.EQ.3) ISTYPE=4
      IF(NDERIV.GE.2.AND.ISTYPE.EQ.6) ISTYPE=5
C
      IF(ISTYPE*ICTYPE*NDERIV.EQ.0) GO TO 399
C
      IRAMAN=0
      IF(RAMAN.EQ.'RAMAN   ') IRAMAN=1
      IDFOCK=0
      IF(NDERIV.GE.2) IDFOCK=1
      IF(ICTYPE.GE.2) IDFOCK=1
      IF(DFOCK.EQ.'FIRST   ') IDFOCK=1
      IF(DFOCK.EQ.'SECOND  ') IDFOCK=2
      IF(DFOCK.EQ.'BOTH    ') IDFOCK=3
      IAFOCK=0
      IF(AFOCK.EQ.'AFOCK   ') IAFOCK=1
      IF(ICTYPE.EQ.2) IAFOCK=1
      IDINT=0
      IF(DERINT.EQ.'FIRST   ') IDINT=1
      IF(DERINT.EQ.'SECOND  ') IDINT=2
      IF(DERINT.EQ.'BOTH    ') IDINT=3
C
C================================================
C===READ IN BASIS SET AND GEOMETRY FROM TAPE30===
C================================================
C
      WRITE(3,21)
   21 FORMAT(//,2X,' NOW YOU ARE IN GETBAS'/)
      CALL GETBAS
C
C===========================================
C===FORCE CALCULATION TO NOSYM IF DESIRED===
C===========================================
C
      IF(NOSYM.NE.'NOSYM   ') GO TO 201
      WRITE(3,22)
   22 FORMAT(//,2X,' NOW YOU ARE IN SETNOS'/)
      CALL SETNOS
C
C========================
C===FORM LIMITS ARRAYS===
C========================
C
  201 CONTINUE
      WRITE(3,23)
   23 FORMAT(//,2X,' NOW YOU ARE IN LIMITS'/)
      CALL LIMITS
C
C:::::::::::::::::::::::::::
C:::::NUCLEAR REPULSION:::::
C:::::::::::::::::::::::::::
C
C   CALCULATE DERIVATIVES OF NUCLEAR REPULSION
      WRITE(3,24)
   24 FORMAT(//,2X,' NOW YOU ARE IN NUCTWO'/)
      IC1=1
      IC2=IC1+N3N
      IC3=IC2+N3N
      IC4=IC3+N3N
      IC5=IC4+N3N
      IC6=IC5+N3N
      IC7=IC6+N3N
      IC8=IC7+N3N*N3N
      IC9=IC8+N3N*N3N
      IC10=IC9+N3N*N3N
      IC11=IC10+N3N*N3N
      IC12=IC11+N3N*N3N
      ICMAX=IC12+N3N*N3N
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................D1N     D2N.....
      CALL NUCTWO(CC(IC1),CC(IC7))
C
C===================================================
C===FORM DENSITY AND LAGRANGIAN MATRICES FOR SCF ===
C===================================================
C
      IF(CITYP.NE.'SCF     ') GO TO 205
      IF(NDERIV.GE.2) GO TO 202
      WRITE(3,25)
   25 FORMAT(//,2X,' NOW YOU ARE SCFMAT'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBASIS
      IC18=IC17+NBASIS
      IC19=IC18+NBFAO*NBASIS
      IC20=IC19+NBFAO*NBASIS
      IC21=IC20+NBASIS*NBASIS
      IC22=IC21+NBFAO*NBFAO
      IC23=IC22+NBFAO*NBFAO
      ICMAX=IC23+NBFAO*NBFAO
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................WAO      EIG      OCC      EAO      UAS      ESO......
      CALL SCFMAT(CC(IC15),CC(IC16),CC(IC17),CC(IC18),CC(IC19),CC(IC20),
C.................EE       U        T........
     1            CC(IC21),CC(IC22),CC(IC23))
C
C   FORM DENSITY MATRICES
      WRITE(3,26)
   26 FORMAT(//,2X,' NOW YOU ARE IN DENS30'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBASIS
      IC18=IC17+NBASIS
      ICMAX=IC18+NBFAO*NBASIS
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................DENS     DENT     EIG      OCC      EAO......
      CALL DENS30(CC(IC13),CC(IC14),CC(IC16),CC(IC17),CC(IC18))
      GO TO 203
C
C   READ IN PARAMETERS FROM THE MASTER FILE
  202 CONTINUE
      WRITE(3,27)
   27 FORMAT(//,2X,' NOW YOU ARE IN READMF'/)
      CALL READMF
C
C   FORM DENSITY MATRICES
      WRITE(3,28)
   28 FORMAT(//,2X,' NOW YOU ARE IN DENS40'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBASIS
      IC18=IC17+NBASIS
      ICMAX=IC18+NBFAO*NBASIS
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................DENS     DENT     WAO      EIG      OCC      EAO......
      CALL DENS40(CC(IC13),CC(IC14),CC(IC15),CC(IC16),CC(IC17),CC(IC18))
C
C:::::::::::::::::::::::::::
C:::::SCF WAVE FUNCTION:::::
C:::::::::::::::::::::::::::
C
C   CALCULATE SCF DERIVATIVES
  203 CONTINUE
      WRITE(3,29)
   29 FORMAT(//,2X,' NOW YOU ARE IN SCFDER'/)
C#################################################
C###NOTICE THE FOLLOWING RESTRICTIONS#############
      NTREAD=NTYPEP
      IF(ISTYPE.EQ.5.OR.ISTYPE.EQ.6) NTREAD=7
      IF(IAFOCK.EQ.0) NTREAD=NTREAD-1
      IF(IDFOCK.LE.1) NATRI=1
C###END OF NOTICE#################################
C#################################################
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IA16=IC16+IC16-1
      MAXLFT=MAXCOR-IC16
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL SCFDER(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C.................D2N     D2O     D2F     D2W      D2T      D2TOT....
     1            CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C.................DENS     DENT     WAO      IA       CC..............
     2            CC(IC13),CC(IC14),CC(IC15),IA(IC16),CC(IC16),MAXLFT)
      GO TO 210
C
C::::::::::::::::::::::::::::::
C:::::SCF-CI WAVE FUNCTION:::::
C::::::::::::::::::::::::::::::
C
C   CALCULATE SCF-CI DERIVATIVES
  205 CONTINUE
      IF(SCFTYP.EQ.'MCSCF   ') GO TO 206
      IF(CITYP.NE.'CI      ') GO TO 206
      WRITE(3,30)
   30 FORMAT(//,2X,' NOW YOU ARE IN SCFCI'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IA16=IC16+IC16-1
      MAXLFT=MAXCOR-IC16
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL SCFCI(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................D2N     D2O     D2F     D2W      D2T      D2TOT....
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................DENS     DENT     WAO      IA       CC..............
     2           CC(IC13),CC(IC14),CC(IC15),IA(IC16),CC(IC16),MAXLFT)
      GO TO 210
C
C:::::::::::::::::::::::::::::
C:::::MCSCF WAVE FUNCTION:::::
C:::::::::::::::::::::::::::::
C
C   CALCULATE MCSCF DERIVATIVES
  206 CONTINUE
      IF(CITYP.NE.'MCSCF   ') GO TO 207
      WRITE(3,31)
   31 FORMAT(//,2X,' NOW YOU ARE IN MCSCF'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI
      IC15=IC14+NBATRI
      IA15=IC15+IC15-1
      MAXLFT=MAXCOR-IC15
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL MCSCF(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................D2N     D2O     D2F     D2W      D2T      D2TOT....
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................DENT     WAO      IA       CC..............
     2           CC(IC13),CC(IC14),IA(IC15),CC(IC15),MAXLFT)
      GO TO 210
C
C::::::::::::::::::::::::::::::::
C:::::MCSCF-CI WAVE FUNCTION:::::
C::::::::::::::::::::::::::::::::
C
C   CALCULATE MCSCF-CI DERIVATIVES
  207 CONTINUE
      IF(CITYP.NE.'CI      ') GO TO 210
      WRITE(3,32)
   32 FORMAT(//,2X,' NOW YOU ARE IN MCSCI'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IA15=IC15+IC15-1
      MAXLFT=MAXCOR-IC15
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL MCSCI(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................D2N     D2O     D2F     D2S      D2T      D2TOT....
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................DENT     WAO      IA       CC..............
     2           CC(IC13),CC(IC14),IA(IC15),CC(IC15),MAXLFT)
C
  210 CONTINUE
      GO TO 500
  399 CONTINUE
      WRITE(3,8) SCFTYP,CITYP,DERTYP
      WRITE(6,8) SCFTYP,CITYP,DERTYP
      GO TO 500
  499 CONTINUE
      WRITE(3,10) ICMAX,MAXCOR
      WRITE(6,10) ICMAX,MAXCOR
  500 CONTINUE
      CALL TSTOP(6)
      STOP
      END
      SUBROUTINE FOLD(A,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(N,N)
C
      DO 101 J=1,N
      DO 101 I=1,J-1
      A(I,J)=A(I,J)+A(J,I)
      A(J,I)=A(I,J)
  101 CONTINUE
C
      RETURN
      END
      SUBROUTINE FORME2(D2T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D2T(N3N,N3N)
      COMMON/D2INT/DXIDXI,DXIDXJ,DXIDXK,
     1             DXJDXJ,DXJDXK,DXKDXK,
     2             DYIDYI,DYIDYJ,DYIDYK,
     3             DYJDYJ,DYJDYK,DYKDYK,
     4             DZIDZI,DZIDZJ,DZIDZK,
     5             DZJDZJ,DZJDZK,DZKDZK,
     6             DXIDYI,DXJDYI,DXKDYI,
     7             DXIDYJ,DXJDYJ,DXKDYJ,
     8             DXIDYK,DXJDYK,DXKDYK,
     9             DXIDZI,DXJDZI,DXKDZI,
     A             DXIDZJ,DXJDZJ,DXKDZJ,
     B             DXIDZK,DXJDZK,DXKDZK,
     C             DYIDZI,DYJDZI,DYKDZI,
     D             DYIDZJ,DYJDZJ,DYKDZJ,
     E             DYIDZK,DYJDZK,DYKDZK
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
C
      IF(NPASS.EQ.1) THEN
      I=(NATMS(1)-1)*3
      J=(NATMS(2)-1)*3
      K=(NATMS(3)-1)*3
      L=(NATMS(4)-1)*3
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,J+1)=D2T(I+1,J+1)+DXIDXJ
      D2T(I+1,J+2)=D2T(I+1,J+2)+DXIDYJ
      D2T(I+1,J+3)=D2T(I+1,J+3)+DXIDZJ
C
      D2T(I+1,K+1)=D2T(I+1,K+1)+DXIDXK
      D2T(I+1,K+2)=D2T(I+1,K+2)+DXIDYK
      D2T(I+1,K+3)=D2T(I+1,K+3)+DXIDZK
C
      D2T(I+1,L+1)=D2T(I+1,L+1)-DXIDXI-DXIDXJ-DXIDXK
      D2T(I+1,L+2)=D2T(I+1,L+2)-DXIDYI-DXIDYJ-DXIDYK
      D2T(I+1,L+3)=D2T(I+1,L+3)-DXIDZI-DXIDZJ-DXIDZK
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,J+1)=D2T(I+2,J+1)+DXJDYI
      D2T(I+2,J+2)=D2T(I+2,J+2)+DYIDYJ
      D2T(I+2,J+3)=D2T(I+2,J+3)+DYIDZJ
C
      D2T(I+2,K+1)=D2T(I+2,K+1)+DXKDYI
      D2T(I+2,K+2)=D2T(I+2,K+2)+DYIDYK
      D2T(I+2,K+3)=D2T(I+2,K+3)+DYIDZK
C
      D2T(I+2,L+1)=D2T(I+2,L+1)-DXIDYI-DXJDYI-DXKDYI
      D2T(I+2,L+2)=D2T(I+2,L+2)-DYIDYI-DYIDYJ-DYIDYK
      D2T(I+2,L+3)=D2T(I+2,L+3)-DYIDZI-DYIDZJ-DYIDZK
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,J+1)=D2T(I+3,J+1)+DXJDZI
      D2T(I+3,J+2)=D2T(I+3,J+2)+DYJDZI
      D2T(I+3,J+3)=D2T(I+3,J+3)+DZIDZJ
C
      D2T(I+3,K+1)=D2T(I+3,K+1)+DXKDZI
      D2T(I+3,K+2)=D2T(I+3,K+2)+DYKDZI
      D2T(I+3,K+3)=D2T(I+3,K+3)+DZIDZK
C
      D2T(I+3,L+1)=D2T(I+3,L+1)-DXIDZI-DXJDZI-DXKDZI
      D2T(I+3,L+2)=D2T(I+3,L+2)-DYIDZI-DYJDZI-DYKDZI
      D2T(I+3,L+3)=D2T(I+3,L+3)-DZIDZI-DZIDZJ-DZIDZK
C
      D2T(J+1,J+1)=D2T(J+1,J+1)+DXJDXJ
      D2T(J+1,J+2)=D2T(J+1,J+2)+DXJDYJ
      D2T(J+1,J+3)=D2T(J+1,J+3)+DXJDZJ
C
      D2T(J+1,K+1)=D2T(J+1,K+1)+DXJDXK
      D2T(J+1,K+2)=D2T(J+1,K+2)+DXJDYK
      D2T(J+1,K+3)=D2T(J+1,K+3)+DXJDZK
C
      D2T(J+1,L+1)=D2T(J+1,L+1)-DXIDXJ-DXJDXJ-DXJDXK
      D2T(J+1,L+2)=D2T(J+1,L+2)-DXJDYI-DXJDYJ-DXJDYK
      D2T(J+1,L+3)=D2T(J+1,L+3)-DXJDZI-DXJDZJ-DXJDZK
C
      D2T(J+2,J+2)=D2T(J+2,J+2)+DYJDYJ
      D2T(J+2,J+3)=D2T(J+2,J+3)+DYJDZJ
C
      D2T(J+2,K+1)=D2T(J+2,K+1)+DXKDYJ
      D2T(J+2,K+2)=D2T(J+2,K+2)+DYJDYK
      D2T(J+2,K+3)=D2T(J+2,K+3)+DYJDZK
C
      D2T(J+2,L+1)=D2T(J+2,L+1)-DXIDYJ-DXJDYJ-DXKDYJ
      D2T(J+2,L+2)=D2T(J+2,L+2)-DYIDYJ-DYJDYJ-DYJDYK
      D2T(J+2,L+3)=D2T(J+2,L+3)-DYJDZI-DYJDZJ-DYJDZK
C
      D2T(J+3,J+3)=D2T(J+3,J+3)+DZJDZJ
C
      D2T(J+3,K+1)=D2T(J+3,K+1)+DXKDZJ
      D2T(J+3,K+2)=D2T(J+3,K+2)+DYKDZJ
      D2T(J+3,K+3)=D2T(J+3,K+3)+DZJDZK
C
      D2T(J+3,L+1)=D2T(J+3,L+1)-DXIDZJ-DXJDZJ-DXKDZJ
      D2T(J+3,L+2)=D2T(J+3,L+2)-DYIDZJ-DYJDZJ-DYKDZJ
      D2T(J+3,L+3)=D2T(J+3,L+3)-DZIDZJ-DZJDZJ-DZJDZK
C
      D2T(K+1,K+1)=D2T(K+1,K+1)+DXKDXK
      D2T(K+1,K+2)=D2T(K+1,K+2)+DXKDYK
      D2T(K+1,K+3)=D2T(K+1,K+3)+DXKDZK
C
      D2T(K+1,L+1)=D2T(K+1,L+1)-DXIDXK-DXJDXK-DXKDXK
      D2T(K+1,L+2)=D2T(K+1,L+2)-DXKDYI-DXKDYJ-DXKDYK
      D2T(K+1,L+3)=D2T(K+1,L+3)-DXKDZI-DXKDZJ-DXKDZK
C
      D2T(K+2,K+2)=D2T(K+2,K+2)+DYKDYK
      D2T(K+2,K+3)=D2T(K+2,K+3)+DYKDZK
C
      D2T(K+2,L+1)=D2T(K+2,L+1)-DXIDYK-DXJDYK-DXKDYK
      D2T(K+2,L+2)=D2T(K+2,L+2)-DYIDYK-DYJDYK-DYKDYK
      D2T(K+2,L+3)=D2T(K+2,L+3)-DYKDZI-DYKDZJ-DYKDZK
C
      D2T(K+3,K+3)=D2T(K+3,K+3)+DZKDZK
C
      D2T(K+3,L+1)=D2T(K+3,L+1)-DXIDZK-DXJDZK-DXKDZK
      D2T(K+3,L+2)=D2T(K+3,L+2)-DYIDZK-DYJDZK-DYKDZK
      D2T(K+3,L+3)=D2T(K+3,L+3)-DZIDZK-DZJDZK-DZKDZK
C
      D2T(L+1,L+1)=D2T(L+1,L+1)+DXIDXI+DXIDXJ+DXIDXK+DXIDXJ+DXJDXJ
     #                         +DXJDXK+DXIDXK+DXJDXK+DXKDXK
      D2T(L+1,L+2)=D2T(L+1,L+2)+DXIDYI+DXIDYJ+DXIDYK+DXJDYI+DXJDYJ
     #                         +DXJDYK+DXKDYI+DXKDYJ+DXKDYK
      D2T(L+1,L+3)=D2T(L+1,L+3)+DXIDZI+DXIDZJ+DXIDZK+DXJDZI+DXJDZJ
     #                         +DXJDZK+DXKDZI+DXKDZJ+DXKDZK
C
      D2T(L+2,L+2)=D2T(L+2,L+2)+DYIDYI+DYIDYJ+DYIDYK+DYIDYJ+DYJDYJ
     #                         +DYJDYK+DYIDYK+DYJDYK+DYKDYK
      D2T(L+2,L+3)=D2T(L+2,L+3)+DYIDZI+DYIDZJ+DYIDZK+DYJDZI+DYJDZJ
     #                         +DYJDZK+DYKDZI+DYKDZJ+DYKDZK
C
      D2T(L+3,L+3)=D2T(L+3,L+3)+DZIDZI+DZIDZJ+DZIDZK+DZIDZJ+DZJDZJ
     #                         +DZJDZK+DZIDZK+DZJDZK+DZKDZK
C
      ELSE IF(NPASS.EQ.2) THEN
      I=(NATMS(1)-1)*3
      J=(NATMS(2)-1)*3
      K=(NATMS(3)-1)*3
      IF(I.EQ.J) THEN
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXJ
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYJ
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZJ
      END IF
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,J+1)=D2T(I+1,J+1)+DXIDXJ
      D2T(I+1,J+2)=D2T(I+1,J+2)+DXIDYJ
      D2T(I+1,J+3)=D2T(I+1,J+3)+DXIDZJ
C
      D2T(I+1,K+1)=D2T(I+1,K+1)-DXIDXI-DXIDXJ
      D2T(I+1,K+2)=D2T(I+1,K+2)-DXIDYI-DXIDYJ
      D2T(I+1,K+3)=D2T(I+1,K+3)-DXIDZI-DXIDZJ
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,J+1)=D2T(I+2,J+1)+DXJDYI
      D2T(I+2,J+2)=D2T(I+2,J+2)+DYIDYJ
      D2T(I+2,J+3)=D2T(I+2,J+3)+DYIDZJ
C
      D2T(I+2,K+1)=D2T(I+2,K+1)-DXIDYI-DXJDYI
      D2T(I+2,K+2)=D2T(I+2,K+2)-DYIDYI-DYIDYJ
      D2T(I+2,K+3)=D2T(I+2,K+3)-DYIDZI-DYIDZJ
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,J+1)=D2T(I+3,J+1)+DXJDZI
      D2T(I+3,J+2)=D2T(I+3,J+2)+DYJDZI
      D2T(I+3,J+3)=D2T(I+3,J+3)+DZIDZJ
C
      D2T(I+3,K+1)=D2T(I+3,K+1)-DXIDZI-DXJDZI
      D2T(I+3,K+2)=D2T(I+3,K+2)-DYIDZI-DYJDZI
      D2T(I+3,K+3)=D2T(I+3,K+3)-DZIDZI-DZIDZJ
C
      D2T(J+1,J+1)=D2T(J+1,J+1)+DXJDXJ
      D2T(J+1,J+2)=D2T(J+1,J+2)+DXJDYJ
      D2T(J+1,J+3)=D2T(J+1,J+3)+DXJDZJ
C
      D2T(J+1,K+1)=D2T(J+1,K+1)-DXIDXJ-DXJDXJ
      D2T(J+1,K+2)=D2T(J+1,K+2)-DXJDYI-DXJDYJ
      D2T(J+1,K+3)=D2T(J+1,K+3)-DXJDZI-DXJDZJ
C
      D2T(J+2,J+2)=D2T(J+2,J+2)+DYJDYJ
      D2T(J+2,J+3)=D2T(J+2,J+3)+DYJDZJ
C
      D2T(J+2,K+1)=D2T(J+2,K+1)-DXIDYJ-DXJDYJ
      D2T(J+2,K+2)=D2T(J+2,K+2)-DYIDYJ-DYJDYJ
      D2T(J+2,K+3)=D2T(J+2,K+3)-DYJDZI-DYJDZJ
C
      D2T(J+3,J+3)=D2T(J+3,J+3)+DZJDZJ
C
      D2T(J+3,K+1)=D2T(J+3,K+1)-DXIDZJ-DXJDZJ
      D2T(J+3,K+2)=D2T(J+3,K+2)-DYIDZJ-DYJDZJ
      D2T(J+3,K+3)=D2T(J+3,K+3)-DZIDZJ-DZJDZJ
C
      D2T(K+1,K+1)=D2T(K+1,K+1)+DXIDXI+DXIDXJ+DXIDXJ+DXJDXJ
      D2T(K+1,K+2)=D2T(K+1,K+2)+DXIDYI+DXIDYJ+DXJDYI+DXJDYJ
      D2T(K+1,K+3)=D2T(K+1,K+3)+DXIDZI+DXIDZJ+DXJDZI+DXJDZJ
C
      D2T(K+2,K+2)=D2T(K+2,K+2)+DYIDYI+DYIDYJ+DYIDYJ+DYJDYJ
      D2T(K+2,K+3)=D2T(K+2,K+3)+DYIDZI+DYIDZJ+DYJDZI+DYJDZJ
C
      D2T(K+3,K+3)=D2T(K+3,K+3)+DZIDZI+DZIDZJ+DZIDZJ+DZJDZJ
C
      ELSE IF(NPASS.EQ.3) THEN
      I=(NATMS(1)-1)*3
      K=(NATMS(2)-1)*3
      L=(NATMS(3)-1)*3
      IF(I.EQ.K) THEN
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXK
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYK
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZK
      END IF
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,K+1)=D2T(I+1,K+1)+DXIDXK
      D2T(I+1,K+2)=D2T(I+1,K+2)+DXIDYK
      D2T(I+1,K+3)=D2T(I+1,K+3)+DXIDZK
C
      D2T(I+1,L+1)=D2T(I+1,L+1)-DXIDXI-DXIDXK
      D2T(I+1,L+2)=D2T(I+1,L+2)-DXIDYI-DXIDYK
      D2T(I+1,L+3)=D2T(I+1,L+3)-DXIDZI-DXIDZK
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,K+1)=D2T(I+2,K+1)+DXKDYI
      D2T(I+2,K+2)=D2T(I+2,K+2)+DYIDYK
      D2T(I+2,K+3)=D2T(I+2,K+3)+DYIDZK
C
      D2T(I+2,L+1)=D2T(I+2,L+1)-DXIDYI-DXKDYI
      D2T(I+2,L+2)=D2T(I+2,L+2)-DYIDYI-DYIDYK
      D2T(I+2,L+3)=D2T(I+2,L+3)-DYIDZI-DYIDZK
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,K+1)=D2T(I+3,K+1)+DXKDZI
      D2T(I+3,K+2)=D2T(I+3,K+2)+DYKDZI
      D2T(I+3,K+3)=D2T(I+3,K+3)+DZIDZK
C
      D2T(I+3,L+1)=D2T(I+3,L+1)-DXIDZI-DXKDZI
      D2T(I+3,L+2)=D2T(I+3,L+2)-DYIDZI-DYKDZI
      D2T(I+3,L+3)=D2T(I+3,L+3)-DZIDZI-DZIDZK
C
      D2T(K+1,K+1)=D2T(K+1,K+1)+DXKDXK
      D2T(K+1,K+2)=D2T(K+1,K+2)+DXKDYK
      D2T(K+1,K+3)=D2T(K+1,K+3)+DXKDZK
C
      D2T(K+1,L+1)=D2T(K+1,L+1)-DXIDXK-DXKDXK
      D2T(K+1,L+2)=D2T(K+1,L+2)-DXKDYI-DXKDYK
      D2T(K+1,L+3)=D2T(K+1,L+3)-DXKDZI-DXKDZK
C
      D2T(K+2,K+2)=D2T(K+2,K+2)+DYKDYK
      D2T(K+2,K+3)=D2T(K+2,K+3)+DYKDZK
C
      D2T(K+2,L+1)=D2T(K+2,L+1)-DXIDYK-DXKDYK
      D2T(K+2,L+2)=D2T(K+2,L+2)-DYIDYK-DYKDYK
      D2T(K+2,L+3)=D2T(K+2,L+3)-DYKDZI-DYKDZK
C
      D2T(K+3,K+3)=D2T(K+3,K+3)+DZKDZK
C
      D2T(K+3,L+1)=D2T(K+3,L+1)-DXIDZK-DXKDZK
      D2T(K+3,L+2)=D2T(K+3,L+2)-DYIDZK-DYKDZK
      D2T(K+3,L+3)=D2T(K+3,L+3)-DZIDZK-DZKDZK
C
      D2T(L+1,L+1)=D2T(L+1,L+1)+DXIDXI+DXIDXK+DXIDXK+DXKDXK
      D2T(L+1,L+2)=D2T(L+1,L+2)+DXIDYI+DXIDYK+DXKDYI+DXKDYK
      D2T(L+1,L+3)=D2T(L+1,L+3)+DXIDZI+DXIDZK+DXKDZI+DXKDZK
C
      D2T(L+2,L+2)=D2T(L+2,L+2)+DYIDYI+DYIDYK+DYIDYK+DYKDYK
      D2T(L+2,L+3)=D2T(L+2,L+3)+DYIDZI+DYIDZK+DYKDZI+DYKDZK
C
      D2T(L+3,L+3)=D2T(L+3,L+3)+DZIDZI+DZIDZK+DZIDZK+DZKDZK
C
      ELSE IF(NPASS.EQ.4) THEN
      I=(NATMS(1)-1)*3
      J=(NATMS(2)-1)*3
C
      D2T(I+1,I+1)=D2T(I+1,I+1)+DXIDXI
      D2T(I+1,I+2)=D2T(I+1,I+2)+DXIDYI
      D2T(I+1,I+3)=D2T(I+1,I+3)+DXIDZI
C
      D2T(I+1,J+1)=D2T(I+1,J+1)-DXIDXI
      D2T(I+1,J+2)=D2T(I+1,J+2)-DXIDYI
      D2T(I+1,J+3)=D2T(I+1,J+3)-DXIDZI
C
      D2T(I+2,I+2)=D2T(I+2,I+2)+DYIDYI
      D2T(I+2,I+3)=D2T(I+2,I+3)+DYIDZI
C
      D2T(I+2,J+1)=D2T(I+2,J+1)-DXIDYI
      D2T(I+2,J+2)=D2T(I+2,J+2)-DYIDYI
      D2T(I+2,J+3)=D2T(I+2,J+3)-DYIDZI
C
      D2T(I+3,I+3)=D2T(I+3,I+3)+DZIDZI
C
      D2T(I+3,J+1)=D2T(I+3,J+1)-DXIDZI
      D2T(I+3,J+2)=D2T(I+3,J+2)-DYIDZI
      D2T(I+3,J+3)=D2T(I+3,J+3)-DZIDZI
C
      D2T(J+1,J+1)=D2T(J+1,J+1)+DXIDXI
      D2T(J+1,J+2)=D2T(J+1,J+2)+DXIDYI
      D2T(J+1,J+3)=D2T(J+1,J+3)+DXIDZI
C
      D2T(J+2,J+2)=D2T(J+2,J+2)+DYIDYI
      D2T(J+2,J+3)=D2T(J+2,J+3)+DYIDZI
C
      D2T(J+3,J+3)=D2T(J+3,J+3)+DZIDZI
C
      ELSE
         STOP 'INVALID VALUE OF NPASS IN FORME2'
      END IF
      RETURN
      END
      SUBROUTINE FORMEG(D1T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1T(3,NATOM)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
C
      IF(NPASS.EQ.1) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))+XJDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))+YJDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))+ZJDER
        D1T(1,NATMS(3))=D1T(1,NATMS(3))+XKDER
        D1T(2,NATMS(3))=D1T(2,NATMS(3))+YKDER
        D1T(3,NATMS(3))=D1T(3,NATMS(3))+ZKDER
        D1T(1,NATMS(4))=D1T(1,NATMS(4))-XIDER-XJDER-XKDER
        D1T(2,NATMS(4))=D1T(2,NATMS(4))-YIDER-YJDER-YKDER
        D1T(3,NATMS(4))=D1T(3,NATMS(4))-ZIDER-ZJDER-ZKDER
      ELSE IF(NPASS.EQ.2) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))+XJDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))+YJDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))+ZJDER
        D1T(1,NATMS(3))=D1T(1,NATMS(3))-XIDER-XJDER
        D1T(2,NATMS(3))=D1T(2,NATMS(3))-YIDER-YJDER
        D1T(3,NATMS(3))=D1T(3,NATMS(3))-ZIDER-ZJDER
      ELSE IF(NPASS.EQ.3) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))+XKDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))+YKDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))+ZKDER
        D1T(1,NATMS(3))=D1T(1,NATMS(3))-XIDER-XKDER
        D1T(2,NATMS(3))=D1T(2,NATMS(3))-YIDER-YKDER
        D1T(3,NATMS(3))=D1T(3,NATMS(3))-ZIDER-ZKDER
      ELSE IF(NPASS.EQ.4) THEN
        D1T(1,NATMS(1))=D1T(1,NATMS(1))+XIDER
        D1T(2,NATMS(1))=D1T(2,NATMS(1))+YIDER
        D1T(3,NATMS(1))=D1T(3,NATMS(1))+ZIDER
        D1T(1,NATMS(2))=D1T(1,NATMS(2))-XIDER
        D1T(2,NATMS(2))=D1T(2,NATMS(2))-YIDER
        D1T(3,NATMS(2))=D1T(3,NATMS(2))-ZIDER
      ELSE
        STOP 'INVALID VALUE OF NPASS IN FORMEG'
      END IF
      RETURN
      END
      SUBROUTINE FRMI
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/ROOTS/NONZER
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      DATA DLIM / 1.0D-8 /
C
      N=0
      GO TO (100,200,300,400,500),NONZER
C
  100 CONTINUE
      DO 101 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 101 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 101
      XY=XIN(MX) * YIN(MY) * DENSTY
      XZ=XIN(MX) * ZIN(MZ) * DENSTY
      YZ=YIN(MY) * ZIN(MZ) * DENSTY
C
      XIDER=XIDER + DXI(MX) * YZ
      YIDER=YIDER + DYI(MY) * XZ
      ZIDER=ZIDER + DZI(MZ) * XY
C
  101 CONTINUE
      RETURN
C
  200 CONTINUE
      DO 102 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 102 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 102
      XY1 = XIN(MX) * YIN(MY) * DENSTY
      XZ1 = XIN(MX) * ZIN(MZ) * DENSTY
      YZ1 = YIN(MY) * ZIN(MZ) * DENSTY
C
      XY2 = XIN(MX+256) * YIN(MY+256) * DENSTY
      XZ2 = XIN(MX+256) * ZIN(MZ+256) * DENSTY
      YZ2 = YIN(MY+256) * ZIN(MZ+256) * DENSTY
C
      XIDER = XIDER + DXI(MX) * YZ1 + DXI(MX+256) * YZ2
      YIDER = YIDER + DYI(MY) * XZ1 + DYI(MY+256) * XZ2
      ZIDER = ZIDER + DZI(MZ) * XY1 + DZI(MZ+256) * XY2
C
  102 CONTINUE
      RETURN
C
  300 CONTINUE
      DO 103 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 103 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 103
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3
C
  103 CONTINUE
      RETURN
C
  400 CONTINUE
      DO 104 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 104 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 104
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
C
  104 CONTINUE
      RETURN
C
  500 CONTINUE
      DO 105 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 105 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 105
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XY5 = XIN(MX+1024) * YIN(MY+1024) * DENSTY
      XZ5 = XIN(MX+1024) * ZIN(MZ+1024) * DENSTY
      YZ5 = YIN(MY+1024) * ZIN(MZ+1024) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
     2              + DXI(MX+1024) * YZ5
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
     2              + DYI(MY+1024) * XZ5
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
     2              + DZI(MZ+1024) * XY5
C
  105 CONTINUE
      RETURN
C
      END
 
      SUBROUTINE FRMIJ
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/ROOTS/NONZER
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      DATA DLIM / 1.0D-10 /
C
      N=0
      GO TO (100,200,300,400,500),NONZER
C
  100 CONTINUE
      DO 101 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 101 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 101
      XY=XIN(MX) * YIN(MY) * DENSTY
      XZ=XIN(MX) * ZIN(MZ) * DENSTY
      YZ=YIN(MY) * ZIN(MZ) * DENSTY
C
      XIDER=XIDER + DXI(MX) * YZ
      YIDER=YIDER + DYI(MY) * XZ
      ZIDER=ZIDER + DZI(MZ) * XY
C
      XJDER=XJDER + DXJ(MX) * YZ
      YJDER=YJDER + DYJ(MY) * XZ
      ZJDER=ZJDER + DZJ(MZ) * XY
C
  101 CONTINUE
      RETURN
C
  200 CONTINUE
      DO 102 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 102 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 102
      XY1 = XIN(MX) * YIN(MY) * DENSTY
      XZ1 = XIN(MX) * ZIN(MZ) * DENSTY
      YZ1 = YIN(MY) * ZIN(MZ) * DENSTY
C
      XY2 = XIN(MX+256) * YIN(MY+256) * DENSTY
      XZ2 = XIN(MX+256) * ZIN(MZ+256) * DENSTY
      YZ2 = YIN(MY+256) * ZIN(MZ+256) * DENSTY
C
      XIDER = XIDER + DXI(MX) * YZ1 + DXI(MX+256) * YZ2
      YIDER = YIDER + DYI(MY) * XZ1 + DYI(MY+256) * XZ2
      ZIDER = ZIDER + DZI(MZ) * XY1 + DZI(MZ+256) * XY2
C
      XJDER = XJDER + DXJ(MX) * YZ1 + DXJ(MX+256) * YZ2
      YJDER = YJDER + DYJ(MY) * XZ1 + DYJ(MY+256) * XZ2
      ZJDER = ZJDER + DZJ(MZ) * XY1 + DZJ(MZ+256) * XY2
C
  102 CONTINUE
      RETURN
C
  300 CONTINUE
      DO 103 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 103 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 103
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3
C
      XJDER = XJDER + DXJ(MX     ) * YZ1 + DXJ(MX+ 256) * YZ2
     1              + DXJ(MX+ 512) * YZ3
      YJDER = YJDER + DYJ(MY     ) * XZ1 + DYJ(MY+ 256) * XZ2
     1              + DYJ(MY+ 512) * XZ3
      ZJDER = ZJDER + DZJ(MZ     ) * XY1 + DZJ(MZ+ 256) * XY2
     1              + DZJ(MZ+ 512) * XY3
C
  103 CONTINUE
      RETURN
C
  400 CONTINUE
      DO 104 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 104 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 104
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
C
      XJDER = XJDER + DXJ(MX     ) * YZ1 + DXJ(MX+ 256) * YZ2
     1              + DXJ(MX+ 512) * YZ3 + DXJ(MX+ 768) * YZ4
      YJDER = YJDER + DYJ(MY     ) * XZ1 + DYJ(MY+ 256) * XZ2
     1              + DYJ(MY+ 512) * XZ3 + DYJ(MY+ 768) * XZ4
      ZJDER = ZJDER + DZJ(MZ     ) * XY1 + DZJ(MZ+ 256) * XY2
     1              + DZJ(MZ+ 512) * XY3 + DZJ(MZ+ 768) * XY4
C
  104 CONTINUE
      RETURN
C
  500 CONTINUE
      DO 105 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 105 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 105
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XY5 = XIN(MX+1024) * YIN(MY+1024) * DENSTY
      XZ5 = XIN(MX+1024) * ZIN(MZ+1024) * DENSTY
      YZ5 = YIN(MY+1024) * ZIN(MZ+1024) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
     2              + DXI(MX+1024) * YZ5
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
     2              + DYI(MY+1024) * XZ5
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
     2              + DZI(MZ+1024) * XY5
C
      XJDER = XJDER + DXJ(MX     ) * YZ1 + DXJ(MX+ 256) * YZ2
     1              + DXJ(MX+ 512) * YZ3 + DXJ(MX+ 768) * YZ4
     2              + DXJ(MX+1024) * YZ5
      YJDER = YJDER + DYJ(MY     ) * XZ1 + DYJ(MY+ 256) * XZ2
     1              + DYJ(MY+ 512) * XZ3 + DYJ(MY+ 768) * XZ4
     2              + DYJ(MY+1024) * XZ5
      ZJDER = ZJDER + DZJ(MZ     ) * XY1 + DZJ(MZ+ 256) * XY2
     1              + DZJ(MZ+ 512) * XY3 + DZJ(MZ+ 768) * XY4
     2              + DZJ(MZ+1024) * XY5
C
  105 CONTINUE
      RETURN
C
      END
 
      SUBROUTINE FRMIJK
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/ROOTS/NONZER
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      DATA DLIM / 1.0D-10 /
C
      N=0
      GO TO (100,200,300,400,500),NONZER
C
  100 CONTINUE
      DO 101 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 101 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 101
      XY=XIN(MX) * YIN(MY) * DENSTY
      XZ=XIN(MX) * ZIN(MZ) * DENSTY
      YZ=YIN(MY) * ZIN(MZ) * DENSTY
C
      XIDER=XIDER + DXI(MX) * YZ
      YIDER=YIDER + DYI(MY) * XZ
      ZIDER=ZIDER + DZI(MZ) * XY
C
      XJDER=XJDER + DXJ(MX) * YZ
      YJDER=YJDER + DYJ(MY) * XZ
      ZJDER=ZJDER + DZJ(MZ) * XY
C
      XKDER=XKDER + DXK(MX) * YZ
      YKDER=YKDER + DYK(MY) * XZ
      ZKDER=ZKDER + DZK(MZ) * XY
C
  101 CONTINUE
      RETURN
C
  200 CONTINUE
      DO 102 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 102 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 102
      XY1 = XIN(MX) * YIN(MY) * DENSTY
      XZ1 = XIN(MX) * ZIN(MZ) * DENSTY
      YZ1 = YIN(MY) * ZIN(MZ) * DENSTY
      XY2 = XIN(MX+256) * YIN(MY+256) * DENSTY
      XZ2 = XIN(MX+256) * ZIN(MZ+256) * DENSTY
      YZ2 = YIN(MY+256) * ZIN(MZ+256) * DENSTY
C
      XIDER = XIDER + DXI(MX) * YZ1 + DXI(MX+256) * YZ2
      YIDER = YIDER + DYI(MY) * XZ1 + DYI(MY+256) * XZ2
      ZIDER = ZIDER + DZI(MZ) * XY1 + DZI(MZ+256) * XY2
C
      XJDER = XJDER + DXJ(MX) * YZ1 + DXJ(MX+256) * YZ2
      YJDER = YJDER + DYJ(MY) * XZ1 + DYJ(MY+256) * XZ2
      ZJDER = ZJDER + DZJ(MZ) * XY1 + DZJ(MZ+256) * XY2
C
      XKDER = XKDER + DXK(MX) * YZ1 + DXK(MX+256) * YZ2
      YKDER = YKDER + DYK(MY) * XZ1 + DYK(MY+256) * XZ2
      ZKDER = ZKDER + DZK(MZ) * XY1 + DZK(MZ+256) * XY2
C
  102 CONTINUE
      RETURN
C
  300 CONTINUE
      DO 103 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 103 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 103
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3
C
      XJDER = XJDER + DXJ(MX     ) * YZ1 + DXJ(MX+ 256) * YZ2
     1              + DXJ(MX+ 512) * YZ3
      YJDER = YJDER + DYJ(MY     ) * XZ1 + DYJ(MY+ 256) * XZ2
     1              + DYJ(MY+ 512) * XZ3
      ZJDER = ZJDER + DZJ(MZ     ) * XY1 + DZJ(MZ+ 256) * XY2
     1              + DZJ(MZ+ 512) * XY3
C
      XKDER = XKDER + DXK(MX     ) * YZ1 + DXK(MX+ 256) * YZ2
     1              + DXK(MX+ 512) * YZ3
      YKDER = YKDER + DYK(MY     ) * XZ1 + DYK(MY+ 256) * XZ2
     1              + DYK(MY+ 512) * XZ3
      ZKDER = ZKDER + DZK(MZ     ) * XY1 + DZK(MZ+ 256) * XY2
     1              + DZK(MZ+ 512) * XY3
C
  103 CONTINUE
      RETURN
C
  400 CONTINUE
      DO 104 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 104 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 104
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
C
      XJDER = XJDER + DXJ(MX     ) * YZ1 + DXJ(MX+ 256) * YZ2
     1              + DXJ(MX+ 512) * YZ3 + DXJ(MX+ 768) * YZ4
      YJDER = YJDER + DYJ(MY     ) * XZ1 + DYJ(MY+ 256) * XZ2
     1              + DYJ(MY+ 512) * XZ3 + DYJ(MY+ 768) * XZ4
      ZJDER = ZJDER + DZJ(MZ     ) * XY1 + DZJ(MZ+ 256) * XY2
     1              + DZJ(MZ+ 512) * XY3 + DZJ(MZ+ 768) * XY4
C
      XKDER = XKDER + DXK(MX     ) * YZ1 + DXK(MX+ 256) * YZ2
     1              + DXK(MX+ 512) * YZ3 + DXK(MX+ 768) * YZ4
      YKDER = YKDER + DYK(MY     ) * XZ1 + DYK(MY+ 256) * XZ2
     1              + DYK(MY+ 512) * XZ3 + DYK(MY+ 768) * XZ4
      ZKDER = ZKDER + DZK(MZ     ) * XY1 + DZK(MZ+ 256) * XY2
     1              + DZK(MZ+ 512) * XY3 + DZK(MZ+ 768) * XY4
C
  104 CONTINUE
      RETURN
C
  500 CONTINUE
      DO 105 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 105 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 105
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XY5 = XIN(MX+1024) * YIN(MY+1024) * DENSTY
      XZ5 = XIN(MX+1024) * ZIN(MZ+1024) * DENSTY
      YZ5 = YIN(MY+1024) * ZIN(MZ+1024) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
     2              + DXI(MX+1024) * YZ5
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
     2              + DYI(MY+1024) * XZ5
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
     2              + DZI(MZ+1024) * XY5
C
      XJDER = XJDER + DXJ(MX     ) * YZ1 + DXJ(MX+ 256) * YZ2
     1              + DXJ(MX+ 512) * YZ3 + DXJ(MX+ 768) * YZ4
     2              + DXJ(MX+1024) * YZ5
      YJDER = YJDER + DYJ(MY     ) * XZ1 + DYJ(MY+ 256) * XZ2
     1              + DYJ(MY+ 512) * XZ3 + DYJ(MY+ 768) * XZ4
     2              + DYJ(MY+1024) * XZ5
      ZJDER = ZJDER + DZJ(MZ     ) * XY1 + DZJ(MZ+ 256) * XY2
     1              + DZJ(MZ+ 512) * XY3 + DZJ(MZ+ 768) * XY4
     2              + DZJ(MZ+1024) * XY5
C
      XKDER = XKDER + DXK(MX     ) * YZ1 + DXK(MX+ 256) * YZ2
     1              + DXK(MX+ 512) * YZ3 + DXK(MX+ 768) * YZ4
     2              + DXK(MX+1024) * YZ5
      YKDER = YKDER + DYK(MY     ) * XZ1 + DYK(MY+ 256) * XZ2
     1              + DYK(MY+ 512) * XZ3 + DYK(MY+ 768) * XZ4
     2              + DYK(MY+1024) * XZ5
      ZKDER = ZKDER + DZK(MZ     ) * XY1 + DZK(MZ+ 256) * XY2
     1              + DZK(MZ+ 512) * XY3 + DZK(MZ+ 768) * XY4
     2              + DZK(MZ+1024) * XY5
C
  105 CONTINUE
      RETURN
C
      END
 
      SUBROUTINE FRMIK
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/ROOTS/NONZER
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      DATA DLIM / 1.0D-10 /
C
      N=0
      GO TO (100,200,300,400,500),NONZER
C
  100 CONTINUE
      DO 101 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 101 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 101
      XY=XIN(MX) * YIN(MY) * DENSTY
      XZ=XIN(MX) * ZIN(MZ) * DENSTY
      YZ=YIN(MY) * ZIN(MZ) * DENSTY
C
      XIDER=XIDER + DXI(MX) * YZ
      YIDER=YIDER + DYI(MY) * XZ
      ZIDER=ZIDER + DZI(MZ) * XY
C
      XKDER=XKDER + DXK(MX) * YZ
      YKDER=YKDER + DYK(MY) * XZ
      ZKDER=ZKDER + DZK(MZ) * XY
C
  101 CONTINUE
      RETURN
C
  200 CONTINUE
      DO 102 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 102 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 102
      XY1 = XIN(MX) * YIN(MY) * DENSTY
      XZ1 = XIN(MX) * ZIN(MZ) * DENSTY
      YZ1 = YIN(MY) * ZIN(MZ) * DENSTY
C
      XY2 = XIN(MX+256) * YIN(MY+256) * DENSTY
      XZ2 = XIN(MX+256) * ZIN(MZ+256) * DENSTY
      YZ2 = YIN(MY+256) * ZIN(MZ+256) * DENSTY
C
      XIDER = XIDER + DXI(MX) * YZ1 + DXI(MX+256) * YZ2
      YIDER = YIDER + DYI(MY) * XZ1 + DYI(MY+256) * XZ2
      ZIDER = ZIDER + DZI(MZ) * XY1 + DZI(MZ+256) * XY2
C
      XKDER = XKDER + DXK(MX) * YZ1 + DXK(MX+256) * YZ2
      YKDER = YKDER + DYK(MY) * XZ1 + DYK(MY+256) * XZ2
      ZKDER = ZKDER + DZK(MZ) * XY1 + DZK(MZ+256) * XY2
C
  102 CONTINUE
      RETURN
C
  300 CONTINUE
      DO 103 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 103 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 103
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3
C
      XKDER = XKDER + DXK(MX     ) * YZ1 + DXK(MX+ 256) * YZ2
     1              + DXK(MX+ 512) * YZ3
      YKDER = YKDER + DYK(MY     ) * XZ1 + DYK(MY+ 256) * XZ2
     1              + DYK(MY+ 512) * XZ3
      ZKDER = ZKDER + DZK(MZ     ) * XY1 + DZK(MZ+ 256) * XY2
     1              + DZK(MZ+ 512) * XY3
C
  103 CONTINUE
      RETURN
C
  400 CONTINUE
      DO 104 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 104 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 104
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
C
      XKDER = XKDER + DXK(MX     ) * YZ1 + DXK(MX+ 256) * YZ2
     1              + DXK(MX+ 512) * YZ3 + DXK(MX+ 768) * YZ4
      YKDER = YKDER + DYK(MY     ) * XZ1 + DYK(MY+ 256) * XZ2
     1              + DYK(MY+ 512) * XZ3 + DYK(MY+ 768) * XZ4
      ZKDER = ZKDER + DZK(MZ     ) * XY1 + DZK(MZ+ 256) * XY2
     1              + DZK(MZ+ 512) * XY3 + DZK(MZ+ 768) * XY4
C
  104 CONTINUE
      RETURN
C
  500 CONTINUE
      DO 105 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 105 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 105
      XY1 = XIN(MX     ) * YIN(MY     ) * DENSTY
      XZ1 = XIN(MX     ) * ZIN(MZ     ) * DENSTY
      YZ1 = YIN(MY     ) * ZIN(MZ     ) * DENSTY
C
      XY2 = XIN(MX+ 256) * YIN(MY+ 256) * DENSTY
      XZ2 = XIN(MX+ 256) * ZIN(MZ+ 256) * DENSTY
      YZ2 = YIN(MY+ 256) * ZIN(MZ+ 256) * DENSTY
C
      XY3 = XIN(MX+ 512) * YIN(MY+ 512) * DENSTY
      XZ3 = XIN(MX+ 512) * ZIN(MZ+ 512) * DENSTY
      YZ3 = YIN(MY+ 512) * ZIN(MZ+ 512) * DENSTY
C
      XY4 = XIN(MX+ 768) * YIN(MY+ 768) * DENSTY
      XZ4 = XIN(MX+ 768) * ZIN(MZ+ 768) * DENSTY
      YZ4 = YIN(MY+ 768) * ZIN(MZ+ 768) * DENSTY
C
      XY5 = XIN(MX+1024) * YIN(MY+1024) * DENSTY
      XZ5 = XIN(MX+1024) * ZIN(MZ+1024) * DENSTY
      YZ5 = YIN(MY+1024) * ZIN(MZ+1024) * DENSTY
C
      XIDER = XIDER + DXI(MX     ) * YZ1 + DXI(MX+ 256) * YZ2
     1              + DXI(MX+ 512) * YZ3 + DXI(MX+ 768) * YZ4
     2              + DXI(MX+1024) * YZ5
      YIDER = YIDER + DYI(MY     ) * XZ1 + DYI(MY+ 256) * XZ2
     1              + DYI(MY+ 512) * XZ3 + DYI(MY+ 768) * XZ4
     2              + DYI(MY+1024) * XZ5
      ZIDER = ZIDER + DZI(MZ     ) * XY1 + DZI(MZ+ 256) * XY2
     1              + DZI(MZ+ 512) * XY3 + DZI(MZ+ 768) * XY4
     2              + DZI(MZ+1024) * XY5
C
      XKDER = XKDER + DXK(MX     ) * YZ1 + DXK(MX+ 256) * YZ2
     1              + DXK(MX+ 512) * YZ3 + DXK(MX+ 768) * YZ4
     2              + DXK(MX+1024) * YZ5
      YKDER = YKDER + DYK(MY     ) * XZ1 + DYK(MY+ 256) * XZ2
     1              + DYK(MY+ 512) * XZ3 + DYK(MY+ 768) * XZ4
     2              + DYK(MY+1024) * XZ5
      ZKDER = ZKDER + DZK(MZ     ) * XY1 + DZK(MZ+ 256) * XY2
     1              + DZK(MZ+ 512) * XY3 + DZK(MZ+ 768) * XY4
     2              + DZK(MZ+1024) * XY5
C
  105 CONTINUE
      RETURN
      END
 
      SUBROUTINE GETBAS
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION I30(200),A30(100),CSPD(600),LISO(1600),LICT(400)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/COORD/ZAN(50),X(3,50)
      COMMON/ENRGY/ENUC,ESCF
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/EX(200),CS(200)
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/PARA2/NPRIM
      COMMON/SIGNS/IOFF(256),IPRNT
      EQUIVALENCE (I30,A30)
C
    1 FORMAT(/,3X,20A4/)
    2 FORMAT(2X,' NUCLEAR REPULSION ENERGY:',F20.10)
    3 FORMAT(2X,'               SCF ENERGY:',F20.10)
    4 FORMAT(/,2X,' NPRIM  = ',I5/)
    5 FORMAT(2X,I5,2F20.10)
    6 FORMAT(/,2X,' NSHELL = ',I5/)
    7 FORMAT(2X,8I5)
    8 FORMAT(/,2X,' NATOM = ',I5/)
    9 FORMAT(2X,I5,4F20.10)
C
C   GET CONSTANTS FROM TAPE30
      ITAP30=30
      CALL SREW(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
C
      IEND    = I30(1)
      MPOINT  = I30(2)
      MCONST  = I30(3)
      MCALCS  = I30(4)
      NCALCS  = I30(5)
      NBASIS  = I30(18)
      NATOM   = I30(19)
      NBFAO   = I30(22)
      NSHELL  = I30(27)
      NT      = I30(29)
      NPRIM   = I30(32)
      MXT     = I30(36)
      NISO    = I30(40)
      NSYM    = I30(41)
      NBATRI=IOFF(NBASIS+1)
      NBATR2=intowp(NBATRI)
      N3N=NATOM*3
      NATRI=IOFF(N3N+1)
C
C   READ POINTERS FROM TAPE30
      IPOS=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,IPOS,JUNK)
C
C   READ BASIS SET INFO ETC.
      CALL WREADW(ITAP30,ZAN,intowp(NATOM),I30(1),JUNK)
      CALL WREADW(ITAP30,LICT,NATOM*NT,I30(2),JUNK)
      CALL WREADW(ITAP30,EX,intowp(NPRIM),I30(5),JUNK)
      CALL WREADW(ITAP30,CSPD,intowp(NPRIM*3),I30(6),JUNK)
      CALL WREADW(ITAP30,KSTART,NSHELL,I30(7),JUNK)
      CALL WREADW(ITAP30,KATOM,NSHELL,I30(8),JUNK)
      CALL WREADW(ITAP30,KTYPE,NSHELL,I30(9),JUNK)
      CALL WREADW(ITAP30,KNG,NSHELL,I30(10),JUNK)
      CALL WREADW(ITAP30,KLOC,NSHELL,I30(11),JUNK)
      CALL WREADW(ITAP30,KMIN,NSHELL,I30(12),JUNK)
      CALL WREADW(ITAP30,KMAX,NSHELL,I30(13),JUNK)
      CALL WREADW(ITAP30,T,intowp(MXT),I30(25),JUNK)
      CALL WREADW(ITAP30,INVT,NT,I30(26),JUNK)
      CALL WREADW(ITAP30,LISO,NSHELL*NISO,I30(27),JUNK)
      CALL WREADW(ITAP30,LBLAT,2*NATOM,I30(28),JUNK)
      CALL WREADW(ITAP30,PTR,intowp(3*3*NT),I30(31),JUNK)
      CALL WREADW(ITAP30,DTR,intowp(6*6*NT),I30(32),JUNK)
C
C   AND GET LOCATION OF INDIVIDUAL CALCULATION TO GET GEOMETRY
      IPOS=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,IPOS,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,JUNK)
      WRITE(6,1) (I30(I),I=1,20)
C
      IPOS=LOCCAL+80
      CALL WREADW(ITAP30,X,intowp(NATOM*3),IPOS,JUNK)
C
C   GET ENERGIES AND WRITE OUT
      IPOS=LOCCAL+80+NATOM*6
      CALL WREADW(ITAP30,I30,20,IPOS,JUNK)
      ENUC=A30(1)
      ESCF=A30(2)
      WRITE(6,2) ENUC
      WRITE(6,3) ESCF
C
C   COLLAPSE CONTRACTION COEFFICIENTS INTO ONE-D ARRAY
      IJ=0
      DO 102 I=1,3
      DO 101 J=1,NPRIM
      IJ=IJ+1
      VALU=CSPD(IJ)
      IF(VALU.EQ.ZERO) GO TO 101
      CS(J)=VALU
  101 CONTINUE
  102 CONTINUE
C
      DO 104 I=1,NISO
      II=(I-1)*NSHELL
      DO 103 ISHELL=1,NSHELL
      II=II+1
      ISO(ISHELL,I)=LISO(II)
  103 CONTINUE
  104 CONTINUE
      DO 106 I=1,NT
      II=(I-1)*NATOM
      DO 105 IATOM=1,NATOM
      II=II+1
      ICT(IATOM,I)=LICT(II)
  105 CONTINUE
  106 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,4) NPRIM
      DO 107 I=1,NPRIM
      WRITE(6,5) I,EX(I),CS(I)
  107 CONTINUE
      WRITE(6,6) NSHELL
      DO 108 I=1,NSHELL
      WRITE(6,7) I,KATOM(I),KTYPE(I),KSTART(I),KLOC(I),
     1           KMIN(I),KMAX(I),KNG(I)
  108 CONTINUE
      WRITE(6,8) NATOM
      DO 109 I=1,NATOM
  109 WRITE(6,9) I,ZAN(I),X(1,I),X(2,I),X(3,I)
C
  205 CONTINUE
      CALL RCLOSE(ITAP30,3)
      RETURN
      END
C*******************************************************
C***LAST UPDATED ON APRIL 27, 1985 BY YUKIO YAMAGUCHI***
C*******************************************************
      SUBROUTINE JK2DER(DTYP,DT,D1T,D2T,BMAT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DTYP(NBATRI,NTYPEP),DT(NBATRI),D1T(3,NATOM),D2T(N3N,N3N)
      DIMENSION BMAT(NBATRI,3,NATOM,NTREAD)
      DIMENSION M0(8),M1(8),M2(8),M3(8)
      DIMENSION IX(10),IY(10),IZ(10),LX(20),LY(20),LZ(20),
     1          KX(10),KY(10),KZ(10),JX(10),JY(10),JZ(10)
      LOGICAL IANDJ,KANDL,SAME,EQUAL,DFOCK1,DFOCK2,IDOUBL
      COMMON/ABDEN/ABDENS(1296)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/DERIN/DERINT(1296,9)
      COMMON/DIJPR/PIJ(100),DIJ(100),XIJ(100),YIJ(100),ZIJ(100),
     1             AIJ(100),BIJ(100),ABIJ(100),TIJ(100)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D1INT/DD1(9)
      COMMON/D2INT/DD2(45)
      COMMON/EXPNT/AIT,BJT,CKT,AIBJT,CKDLT,RHOTSQ,AI,BJ,CK,PPIJ,PPKL
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/ZS(200),CS(200)
      COMMON/GAUSB/KNUC(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/GAUSE/MXSPDF(50),MINSH(3,50),MAXSH(3,50)
      COMMON/GEOIN/XAB,YAB,ZAB,XCD,YCD,ZCD,PXX,PYY,PZZ
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/NDERS/NDERIV
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/POSIX/IPOS(100),JPOS(100),KPOS(100),LPOS(100),IMUL(100)
      COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/ROOTS/NONZER
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NIJMAX,NKLMAX,IOFFST
      COMMON/SHELL/ISH,JSH,KSH,LSH
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      DATA ZERO,HALF,ONE,TEN / 0.0D+00 , 0.5D+00 , 1.0D+00 , 10.0D+00 /
      DATA PI252 / 34.986836655250D+00 /
      DATA ITOL / 20 /
      DATA KX / 1,65, 1, 1,129, 1, 1,65,65, 1/
      DATA KY / 1, 1,65, 1, 1,129, 1,65, 1,65/
      DATA KZ / 1, 1, 1,65, 1, 1,129, 1,65,65/
      DATA JX / 0,16, 0, 0,32, 0, 0,16,16, 0/
      DATA JY / 0, 0,16, 0, 0,32, 0,16, 0,16/
      DATA JZ / 0, 0, 0,16, 0, 0,32, 0,16,16/
      DATA LX / 0, 4, 0, 0, 8, 0, 0, 4, 4, 0
     1,        12, 0, 0, 8, 8, 4, 0, 4, 0, 4/
      DATA LY / 0, 0, 4, 0, 0, 8, 0, 4, 0, 4
     1,        0, 12, 0, 4, 0, 8, 8, 0, 4, 4/
      DATA LZ / 0, 0, 0, 4, 0, 0, 8, 0, 4, 4
     1,        0, 0, 12, 0, 4, 0, 4, 8, 8, 4/
      DATA IX / 0, 1, 0, 0, 2, 0, 0, 1, 1, 0/
      DATA IY / 0, 0, 1, 0, 0, 2, 0, 1, 0, 1/
      DATA IZ / 0, 0, 0, 1, 0, 0, 2, 0, 1, 1/
C
C   CALCULATE TWO ELECTRON CONTRIBUTIONS TO THE DERIVATIVES
C
      TOL=ITOL*2.30258D+00
C
      ICOUNT=0
      DFOCK1=IDFOCK.GE.1
      DFOCK2=IDFOCK.GE.2
C
      DO 101 I=1,NATOM
      DO 101 J=1,3
      D1T(J,I)=ZERO
  101 CONTINUE
      IF(DFOCK1) THEN
      DO 102 I=1,NBATRI
      DO 102 J=1,3
      DO 102 K=1,NATOM
      DO 102 L=1,NTYPEP
      BMAT(I,J,K,L)=ZERO
  102 CONTINUE
      END IF
      IF(NDERIV.GE.2) THEN
      DO 103 I=1,N3N
      DO 103 J=1,N3N
      D2T(I,J)=ZERO
  103 CONTINUE
      END IF
C
C%%%%%%%%%%%%%%%%%%%%%
C%%%%%---ATOMS---%%%%%
C%%%%%%%%%%%%%%%%%%%%%
C
      DO 9000 IAT=1,NATOM
      DO 8000 JAT=1,IAT
      DO 7000 KAT=1,IAT
      DO 6000 LAT=1,KAT
C
C$$$$$$$$$$$$$$$$$$$$$$$$$$
C$$$$$ANGULAR MOMENTUM$$$$$
C$$$$$$$$$$$$$$$$$$$$$$$$$$
C
      DO 5000 ISPDF=1,MXSPDF(IAT)
      JMXSPD=MXSPDF(JAT)
      IF(IAT.EQ.JAT) JMXSPD=ISPDF
      DO 4000 JSPDF=1,JMXSPD
      KMXSPD=MXSPDF(KAT)
      IF(IAT.EQ.KAT) KMXSPD=ISPDF
      DO 3000 KSPDF=1,KMXSPD
      LMXSPD=MXSPDF(LAT)
      IF(KAT.EQ.LAT) LMXSPD=KSPDF
      DO 2000 LSPDF=1,LMXSPD
C
C################
C#####ISHELL#####
C################
C
      DO 1000 II=MINSH(ISPDF,IAT),MAXSH(ISPDF,IAT)
C
      DO 111 IT=1,NISO
  111 INDOUT(IT)=ISO(II,IT)
      CALL YSOOUT
      DO 112 IT=1,NT
      ID=INDIN(IT)
      IF(ID.GT.II) GO TO 1000
      M0(IT)=ID
  112 CONTINUE
C
C################
C#####JSHELL#####
C################
C
      MAXJJ=MAXSH(JSPDF,JAT)
      IF(MAXJJ.GT.II) MAXJJ=II
      DO 900 JJ=MINSH(JSPDF,JAT),MAXJJ
C
      DO 113 IT=1,NISO
  113 INDOUT(IT)=ISO(JJ,IT)
      CALL YSOOUT
      DO 114 IT=1,NT
      IDT=M0(IT)
      JDT=INDIN(IT)
      IF(JDT.GT.II) GO TO 900
      ID=MAX0(IDT,JDT)
      JD=MIN0(IDT,JDT)
      IF(ID.EQ.II.AND.JD.GT.JJ) GO TO 900
      M1(IT)=ID
      M2(IT)=JD
  114 CONTINUE
C
C################
C#####KSHELL#####
C################
C
      MAXKK=MAXSH(KSPDF,KAT)
      IF(MAXKK.GT.II) MAXKK=II
      DO 800 KK=MINSH(KSPDF,KAT),MAXKK
C
      DO 115 IT=1,NISO
  115 INDOUT(IT)=ISO(KK,IT)
      CALL YSOOUT
      DO 116 IT=1,NT
      KD=INDIN(IT)
      IF(KD.GT.II) GO TO 800
      M3(IT)=KD
  116 CONTINUE
C
C################
C#####LSHELL#####
C################
C
      MAXLL=MAXSH(LSPDF,LAT)
      IF(MAXLL.GT.KK) MAXLL=KK
      IF(II.EQ.KK.AND.MAXLL.GT.JJ) MAXLL=JJ
      DO 700 LL=MINSH(LSPDF,LAT),MAXLL
C
      DO 117 IT=1,NISO
  117 INDOUT(IT)=ISO(LL,IT)
      CALL YSOOUT
      N4=0
      DO 118 IT=1,NT
      LDT=INDIN(IT)
      IF(LDT.GT.II) GO TO 700
      KDT=M3(IT)
      KD=MAX0(KDT,LDT)
      LD=MIN0(KDT,LDT)
      ID=M1(IT)
      JD=M2(IT)
      IF(ID.NE.II.AND.KD.NE.II) GO TO 118
      IF(KD.LT.ID) GO TO 201
      IF(KD.EQ.ID.AND.LD.LE.JD) GO TO 201
      ND=ID
      ID=KD
      KD=ND
      ND=JD
      JD=LD
      LD=ND
  201 IF(JD.LT.JJ) GO TO 118
      IF(JD.GT.JJ) GO TO 700
      IF(KD.LT.KK) GO TO 118
      IF(KD.GT.KK) GO TO 700
      IF(LD.LT.LL) GO TO 118
      IF(LD.GT.LL) GO TO 700
      N4=N4+1
  118 CONTINUE
C
#ifdef APOLLO
      q4=dble(nt)/dble(n4)
#else
      Q4=DFLOAT(NT)/DFLOAT(N4)
#endif
      CALL REDUN2(II,JJ,KK,LL,Q4,KNUC)
      IF(NPASS.EQ.0) GO TO 700
C
      IANDJ=ISH.EQ.JSH
C
      IATOM=KNUC(ISH)
      AX=C(1,IATOM)
      AY=C(2,IATOM)
      AZ=C(3,IATOM)
      IGMIN=KSTART(ISH)
      IGMAX=IGMIN+KNG(ISH)-1
      LIT=KTYPE(ISH)
      MINI=KMIN(ISH)
      MAXI=KMAX(ISH)
      LOCI=KLOC(ISH)
C
      JATOM=KNUC(JSH)
      BX=C(1,JATOM)
      BY=C(2,JATOM)
      BZ=C(3,JATOM)
      JGMIN=KSTART(JSH)
      JGMAX=JGMIN+KNG(JSH)-1
      LJT=KTYPE(JSH)
      MINJ=KMIN(JSH)
      MAXJ=KMAX(JSH)
      LOCJ=KLOC(JSH)
C
      EQUAL=IATOM.EQ.JATOM
C
      MIJ=0
      JMAX=MAXJ
      III=-1
      DO 122 I=MINI,MAXI
      III=III+1
      JJJ=-1
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
C***  IF(IANDJ) JMAX=I
      DO 121 J=MINJ,JMAX
      JJJ=JJJ+1
      MIJ=MIJ+1
      NFAC=1
      IF(IANDJ.AND.I.EQ.J) NFAC=2
      IMUL(MIJ)=NFAC
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IPOS(MIJ)=LOCI+III
      JPOS(MIJ)=LOCJ+JJJ
  121 CONTINUE
  122 CONTINUE
C
      XAB=AX-BX
      YAB=AY-BY
      ZAB=AZ-BZ
      RAB=XAB*XAB+YAB*YAB+ZAB*ZAB
C
      NIJ=0
      DO 124 IG=IGMIN,IGMAX
      CSI=CS(IG)
      AI=ZS(IG)
      AXI=AI*AX
      AYI=AI*AY
      AZI=AI*AZ
C***  IF(IANDJ) JGMAX=IG
      DO 123 JG=JGMIN,JGMAX
      CSJ=CS(JG)
      BJ=ZS(JG)
      BXJ=BJ*BX
      BYJ=BJ*BY
      BZJ=BJ*BZ
      PPIJ=AI+BJ
      AXB=AI*BJ
      TTIJ=ONE/PPIJ
      TMPIJ=(AXB*RAB)*TTIJ
      IF(TMPIJ.GT.TOL) GO TO 123
      NIJ=NIJ+1
      AIJ(NIJ)=AI
      BIJ(NIJ)=BJ
      ABIJ(NIJ)=AXB
      PIJ(NIJ)=PPIJ
      TIJ(NIJ)=TTIJ
      PXIJ=(AXI+BXJ)*TTIJ
      PYIJ=(AYI+BYJ)*TTIJ
      PZIJ=(AZI+BZJ)*TTIJ
      XIJ(NIJ)=PXIJ
      YIJ(NIJ)=PYIJ
      ZIJ(NIJ)=PZIJ
      DD=CSI*CSJ*TTIJ*DEXP(-TMPIJ)*PI252
C***  IF(IANDJ.AND.IG.NE.JG) THEN
C***  DIJ(NIJ)=DD+DD
C***  ELSE
      DIJ(NIJ)=DD
C***  END IF
  123 CONTINUE
  124 CONTINUE
C
      IF(NIJ.EQ.0) GO TO 700
C
      KANDL=KSH.EQ.LSH
C***  SAME=ISH.EQ.KSH.AND.JSH.EQ.LSH
C
      KATOM=KNUC(KSH)
      CX=C(1,KATOM)
      CY=C(2,KATOM)
      CZ=C(3,KATOM)
      KGMIN=KSTART(KSH)
      KGMAX=KGMIN+KNG(KSH)-1
      LKT=KTYPE(KSH)
      MINK=KMIN(KSH)
      MAXK=KMAX(KSH)
      LOCK=KLOC(KSH)
C
      LATOM=KNUC(LSH)
      DX=C(1,LATOM)
      DY=C(2,LATOM)
      DZ=C(3,LATOM)
      LGMIN=KSTART(LSH)
      LGMAX=LGMIN+KNG(LSH)-1
      LLT=KTYPE(LSH)
      MINL=KMIN(LSH)
      MAXL=KMAX(LSH)
      LOCL=KLOC(LSH)
C
      MKL=0
      LMAX=MAXL
      KKK=-1
      DO 126 K=MINK,MAXK
      KKK=KKK+1
      LLL=-1
      NX=KX(K)
      NY=KY(K)
      NZ=KZ(K)
      IF(KANDL) LMAX=K
      DO 125 L=MINL,LMAX
      LLL=LLL+1
      MKL=MKL+1
      KLX(MKL)=NX+LX(L)
      KLY(MKL)=NY+LY(L)
      KLZ(MKL)=NZ+LZ(L)
      KPOS(MKL)=LOCK+KKK
      LPOS(MKL)=LOCL+LLL
  125 CONTINUE
  126 CONTINUE
C
      XCD=CX-DX
      YCD=CY-DY
      ZCD=CZ-DZ
      RCD=XCD*XCD+YCD*YCD+ZCD*ZCD
C
C***  MAXIND=MKL
C***  DO 128 I=1,MIJ
C***  IF(SAME) MAXIND=I
C***  ISAME(I)=MAXIND
C*128 CONTINUE
C
      NIMAX=LIT-1
      NJMAX=LJT-1
      NKMAX=LKT-1
      NLMAX=LLT-1
      NIJMAX=NIMAX+NJMAX
      NKLMAX=NKMAX+NLMAX
C
C     ----- CALCULATE NUMBER OF ROOTS FOR DERIVATIVES -----
C
      NROOTS=(LIT+LJT+LKT+LLT-2+NDERIV)/2
C
C     ----- FORM PRODUCTS OF DENSITY MATRIX ELEMENTS -----
C
      CALL DAB(DTYP,DT,Q4)
      IF(Q4.EQ.ZERO) GO TO 700
C
      IF(IDFOCK.GE.1) THEN
      IF(NPASS.EQ.1) THEN
      MAXD=9
      ELSE IF(NPASS.EQ.4) THEN
      MAXD=3
      ELSE
      MAXD=6
      END IF
      MIJKL=MIJ*MKL
      DO 130 I=1,MIJKL
      DO 130 J=1,MAXD
      DERINT(I,J)=ZERO
  130 CONTINUE
      END IF
      DO 131 I=1,9
  131 DD1(I)=ZERO
      IF(NDERIV.GE.2) THEN
      DO 132 I=1,45
  132 DD2(I)=ZERO
      END IF
C
C========================
C===K AND L PRIMITIVES===
C========================
C
      MAXLG=LGMAX
      DO 600 KG=KGMIN,KGMAX
      CSK=CS(KG)
      CK=ZS(KG)
      CXK=CK*CX
      CYK=CK*CY
      CZK=CK*CZ
C
      IF(KANDL) MAXLG=KG
      DO 500 LG=LGMIN,MAXLG
      CSL=CS(LG)
      DL=ZS(LG)
      DXL=DL*DX
      DYL=DL*DY
      DZL=DL*DZ
      PPKL=CK+DL
      CXD=CK*DL
      TTKL=ONE/PPKL
      CKT=CK*TTKL
      CKDLT=CXD*TTKL
      TMPKL=(CK*DL*RCD)*TTKL
      IF(TMPKL.GT.TOL) GO TO 500
      PXKL=(CXK+DXL)*TTKL
      PYKL=(CYK+DYL)*TTKL
      PZKL=(CZK+DZL)*TTKL
      PAXKL=(PXKL-AX)*PPKL
      PAYKL=(PYKL-AY)*PPKL
      PAZKL=(PZKL-AZ)*PPKL
      PCXKL=(PXKL-CX)*PPKL
      PCYKL=(PYKL-CY)*PPKL
      PCZKL=(PZKL-CZ)*PPKL
      DD=CSK*CSL*TTKL*DEXP(-TMPKL)
      IF(KANDL.AND.KG.NE.LG) THEN
      DKL=DD+DD
      ELSE
      DKL=DD
      END IF
C
C============================
C===PAIR OF I,J PRIMITIVES===
C============================
C
      DO 400 IJG=1,NIJ
      AI=AIJ(IJG)
      BJ=BIJ(IJG)
      AXB=ABIJ(IJG)
      PPIJ=PIJ(IJG)
      TTIJ=TIJ(IJG)
      AIT=AI*TTIJ
      BJT=BJ*TTIJ
      AIBJT=AXB*TTIJ
      PPP=PPIJ*PPKL
      PSUM=PPIJ+PPKL
      PPT=ONE/PSUM
      PPQ=DSQRT(PPT)
      DENS=DIJ(IJG)*DKL*PPQ
      RHO=PPP*PPT
      PXIJ=XIJ(IJG)
      PYIJ=YIJ(IJG)
      PZIJ=ZIJ(IJG)
      PXX=PXIJ-PXKL
      PYY=PYIJ-PYKL
      PZZ=PZIJ-PZKL
      XX=RHO*(PXX*PXX+PYY*PYY+PZZ*PZZ)
      PAXIJ=(PXIJ-AX)*PPIJ
      PAYIJ=(PYIJ-AY)*PPIJ
      PAZIJ=(PZIJ-AZ)*PPIJ
      PCXIJ=(PXIJ-CX)*PPIJ
      PCYIJ=(PYIJ-CY)*PPIJ
      PCZIJ=(PZIJ-CZ)*PPIJ
      C1X=PCXIJ+PCXKL
      C2X=PCXKL*PPIJ
      C3X=PAXIJ+PAXKL
      C4X=PAXIJ*PPKL
      C1Y=PCYIJ+PCYKL
      C2Y=PCYKL*PPIJ
      C3Y=PAYIJ+PAYKL
      C4Y=PAYIJ*PPKL
      C1Z=PCZIJ+PCZKL
      C2Z=PCZKL*PPIJ
      C3Z=PAZIJ+PAZKL
      C4Z=PAZIJ*PPKL
C
C     ----- ROOTS AND WEIGHTS FOR QUADRATURE
C
      IF(NROOTS.LE.3) THEN
      CALL RT123
      ELSE IF(NROOTS.EQ.4) THEN
      CALL ROOT4
      ELSE IF(NROOTS.EQ.5) THEN
      CALL ROOT5
      ELSE IF(NROOTS.GT.5.AND.NROOTS.LE.9) THEN
      CALL DROOT
      ELSE
      STOP ' WEIRD NUMBER OF ROOTS'
      END IF
      IOFFST=0
      NONZER=0
C
C:::::::::::::::::::::
C:::::---ROOTS---:::::
C:::::::::::::::::::::
C
      DO 300 IROOT=1,NROOTS
      U2=U(IROOT)*RHO
      RHOTSQ=U2*RHO/(RHO+U2)
      F00=DENS*WT(IROOT)
      NONZER=NONZER+1
      DUM=PPP+U2*PSUM
      DUMT=ONE/DUM
      DUMTH=DUMT*HALF
      BP01=(PPIJ+U2)*DUMTH
      B00=U2*DUMTH
      B10=(PPKL+U2)*DUMTH
      XCP00=(U2*C1X+C2X)*DUMT
      XC00 =(U2*C3X+C4X)*DUMT
      YCP00=(U2*C1Y+C2Y)*DUMT
      YC00 =(U2*C3Y+C4Y)*DUMT
      ZCP00=(U2*C1Z+C2Z)*DUMT
      ZC00 =(U2*C3Z+C4Z)*DUMT
C
      IF(NDERIV.GE.2) GO TO 220
C   FOR FIRST DERIVATIVES
      GO TO (211,212,213,214),NPASS
      STOP ' WEIRD NUMBER OF NPASS'
  211 CONTINUE
      CALL XYZIJK
      GO TO 215
  212 CONTINUE
      CALL XYZIJ
      GO TO 215
  213 CONTINUE
      CALL XYZIK
      GO TO 215
  214 CONTINUE
      CALL XYZI
  215 CONTINUE
      IOFFST=IOFFST+256
      GO TO 300
C
C   FOR SECOND DERIVATIVES
  220 CONTINUE
      GO TO (221,222,223,224),NPASS
      STOP ' WEIRD NUMBER OF NPASS'
  221 CONTINUE
      CALL TWOIJK
      CALL MK2IJK
      GO TO 225
  222 CONTINUE
      CALL TWOIJ
      CALL MK2IJ
      GO TO 225
  223 CONTINUE
      CALL TWOIK
      CALL MK2IK
      GO TO 225
  224 CONTINUE
      CALL TWOI
      CALL MK2I
  225 CONTINUE
C
  300 CONTINUE
C
C::::::::::::::::::::::::::::
C:::::---END OF ROOTS---:::::
C::::::::::::::::::::::::::::
C
      IF(NDERIV.GE.2) GO TO 400
      IF(NONZER.EQ.0) GO TO 400
      IF(IDFOCK.NE.0) GO TO 240
C
C  TWO-ELECTRON FIRST DERIVATIVES ONLY
      GO TO (231,232,233,234),NPASS
      STOP ' WEIRD NUMBER OF PASS'
  231 CONTINUE
      CALL FRMIJK
      GO TO 400
  232 CONTINUE
      CALL FRMIJ
      GO TO 400
  233 CONTINUE
      CALL FRMIK
      GO TO 400
  234 CONTINUE
      CALL FRMI
      GO TO 400
C
C   TWO-ELECTRON FIRST DERIVATIVES AND DERIVATIVE FOCK
  240 CONTINUE
      GO TO (241,242,243,244),NPASS
  241 CONTINUE
      CALL MAKIJK
      GO TO 400
  242 CONTINUE
      CALL MAKIJ
      GO TO 400
  243 CONTINUE
      CALL MAKIK
      GO TO 400
  244 CONTINUE
      CALL MAKI
  400 CONTINUE
  500 CONTINUE
  600 CONTINUE
C
      IF(IDFOCK.NE.0) THEN
      CALL MAKGRD(MIJKL)
      CALL MAKEB(BMAT,DTYP,DT,Q4)
      END IF
C***  ICOUNT=ICOUNT+1
      CALL FORMEG(D1T)
      IF(NDERIV.GE.2) THEN
      CALL FORME2(D2T)
      END IF
C
C===========================
C=====END OF PRIMITIVES=====
C===========================
C
  700 CONTINUE
  800 CONTINUE
  900 CONTINUE
 1000 CONTINUE
C
C#######################
C#####END OF SHELLS#####
C#######################
C
 2000 CONTINUE
 3000 CONTINUE
 4000 CONTINUE
 5000 CONTINUE
C
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C$$$$$END OF ANGULAR MOMENTUM$$$$$
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C
 6000 CONTINUE
 7000 CONTINUE
 8000 CONTINUE
 9000 CONTINUE
C
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C%%%%%---END OF ATOMS---%%%%%
C%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C
      IF(DFOCK1) THEN
      DO 140 ITYP=1,NTREAD
      DO 140 IABC=1,NATOM
      DO 140 IXYZ=1,3
      IJ=0
      DO 139 I=1,NBASIS
      DO 139 J=1,I
      IJ=IJ+1
      IF(I.EQ.J) GO TO 139
      BMAT(IJ,IXYZ,IABC,ITYP)=BMAT(IJ,IXYZ,IABC,ITYP)*HALF
  139 CONTINUE
CC    WRITE(6,*) ' ITYP,IABC,IXYZ ',ITYP,IABC,IXYZ
CC    CALL PRINT(BMAT(1,IXYZ,IABC,ITYP),NBATRI,NBASIS,6)
  140 CONTINUE
      END IF
C
      RETURN
      END
      SUBROUTINE LIMITS
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSE/MXSPDF(50),MINSH(3,50),MAXSH(3,50)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT (/,' ATOM # ',I2,' MAXSPDF',I2,/,('   SPDF ',I1,5X,I3
     1  ,          '-',I3))
C
      MXANGM=3
      DO 102 I=1,NATOM
      MXSPDF(I)=0
      DO 101 J=1,MXANGM
      MINSH(J,I)=0
      MAXSH(J,I)=0
  101 CONTINUE
  102 CONTINUE
C
      DO 103 I=1,NSHELL
      IATOM=KATOM(I)
      IF(KTYPE(I).GT.MXSPDF(IATOM)) MXSPDF(IATOM)=KTYPE(I)
  103 CONTINUE
C
      DO 106 IATOM=1,NATOM
      DO 105 ISPDF=1,MXSPDF(IATOM)
      DO 104 ISHELL=1,NSHELL
        IF(KATOM(ISHELL).EQ.IATOM.AND.KTYPE(ISHELL).EQ.ISPDF) THEN
          IF(MINSH(ISPDF,IATOM).EQ.0) MINSH(ISPDF,IATOM)=ISHELL
          MAXSH(ISPDF,IATOM)=ISHELL
        END IF
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
C
      DO 109 IATOM=1,NATOM
      DO 108 ISPDF=1,MXSPDF(IATOM)
      DO 107 ISHELL=MINSH(ISPDF,IATOM),MAXSH(ISPDF,IATOM)
        IF(KTYPE(ISHELL).NE.ISPDF.OR.KATOM(ISHELL).NE.IATOM)
     1      STOP ' # DERIV # ERROR: BASIS FUNCTION ORDER'
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 201
      DO 110 IATOM=1,NATOM
      MX=MXSPDF(IATOM)
      WRITE(6,1) IATOM,MXSPDF(IATOM),(I,MINSH(I,IATOM)
     1  ,    MAXSH(I,IATOM),I=1,MX)
  110 CONTINUE
C
  201 CONTINUE
      RETURN
      END
      SUBROUTINE MAKEB(B,D,DT,Q4)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NBATRI,N3N,NTREAD),D(NBATRI,NTYPEP),DT(NBATRI)
      DIMENSION M(6),DENS(6),NUMC(4)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/CENTR/NCENTR
      COMMON/COUPL/ALP(5,5),BET(5,5)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/PARA4/MMIJ,MMKL,ISAME(100)
      COMMON/POSIX/IPOS(100),JPOS(100),KPOS(100),LPOS(100),IMUL(100)
      COMMON/SIGNS/IOFF(256),IPRNT
      EQUIVALENCE (DENS(1),DIJ),(DENS(2),DKL),(DENS(3),DJL)
      EQUIVALENCE (DENS(4),DIL),(DENS(5),DIK),(DENS(6),DJK)
      EQUIVALENCE (M(1),MKL),(M(2),MIJ),(M(3),MIK)
      EQUIVALENCE (M(4),MJK),(M(5),MJL),(M(6),MIL)
      DATA NUMC/4,3,3,2/
      DATA ZERO,HALF,TWO,FOUR / 0.0D+00 , 0.5D+00 , 2.0D+00 , 4.0D+00 /
C
      NCENTR=NUMC(NPASS)
C
      NN=0
      DO 110 II=1,MMIJ
      IT=IPOS(II)
      JT=JPOS(II)
      NFAC=IMUL(II)
      DO 109 JJ=1,MMKL
      KT=KPOS(JJ)
      LT=LPOS(JJ)
      NN=NN+1
      IJT=IOFF(MAX0(IT,JT))+MIN0(IT,JT)
      KLT=IOFF(MAX0(KT,LT))+MIN0(KT,LT)
      IF(IJT.LT.KLT) GO TO 301
      I=MAX0(IT,JT)
      J=MIN0(IT,JT)
      K=MAX0(KT,LT)
      L=MIN0(KT,LT)
      GO TO 302
  301 CONTINUE
      I=MAX0(KT,LT)
      J=MIN0(KT,LT)
      K=MAX0(IT,JT)
      L=MIN0(IT,JT)
C
  302 CONTINUE
      MIJ=IOFF(MAX0(I,J))+MIN0(I,J)
      MKL=IOFF(MAX0(K,L))+MIN0(K,L)
      MIK=IOFF(MAX0(I,K))+MIN0(I,K)
      MJL=IOFF(MAX0(J,L))+MIN0(J,L)
      MIL=IOFF(MAX0(I,L))+MIN0(I,L)
      MJK=IOFF(MAX0(J,K))+MIN0(J,K)
C
      FACT=Q4
      IF(I.EQ.J) FACT=FACT*HALF
      IF(K.EQ.L) FACT=FACT*HALF
C
C     ----- THIS FACTOR OF TWO IS NEEDED BECAUSE ONLY GENERATE
C               ONE OF TWO POSSIBLE DERIVATIVES OF [II,KL]     -----
C
#ifdef APOLLO
      fact=fact*dble(nfac)
#else
      FACT=FACT*DFLOAT(NFAC)
#endif
C
      GO TO (201,203,203,203,204,204),ISTYPE
      STOP ' WRONG ISTYPE '
C
C     ----- CLOSED SHELL SINGLET -----
C
  201 CONTINUE
      FAC4=FACT*FOUR
      DIJ=DT(MIJ)*FAC4
      DKL=DT(MKL)*FAC4
      DJL=-DT(MJL)*FACT
      DIL=-DT(MIL)*FACT
      DIK=-DT(MIK)*FACT
      DJK=-DT(MJK)*FACT
C
      CALL MBMAT(B,DENS,M,NN,1)
      GO TO 205
C
C     ----- HIGH-SPIN OPEN-SHELL -----
C
C*202 CONTINUE
C---TEMPORARILY COMMENTED OUT---USE GENERAL OPEN-SHELL FORMALISM
C*    FAC2=FACT+FACT
C*    FAC4=FAC2+FAC2
C*    DIJ=DT(MIJ)*FAC4
C*    DKL=DT(MKL)*FAC4
C*    DJL=-D(MJL,1)*FAC2
C*    DIL=-D(MIL,1)*FAC2
C*    DIK=-D(MIK,1)*FAC2
C*    DJK=-D(MJK,1)*FAC2
C*
C*    CALL MBMAT(B,DENS,M,NN,1)
C*
C*    DJL=D(MJL,2)*FAC2
C*    DIL=D(MIL,2)*FAC2
C*    DIK=D(MIK,2)*FAC2
C*    DJK=D(MJK,2)*FAC2
C*
C*    CALL MBMAT2(B,DENS,M,NN,2)
C*    GO TO 205
C
C     ----- OPEN-SHELL SINGLET AND GENERAL OPEN SHELL -----
C
  203 CONTINUE
C   FOR OCCUPIED SPACE
      FAC2=FACT+FACT
      DO 102 ITYP=1,NTYPES
      DIJ=ZERO
      DKL=ZERO
      DJL=ZERO
      DIL=ZERO
      DIK=ZERO
      DJK=ZERO
      DO 101 JTYP=1,NTYPES
      DIJ=DIJ+D(MIJ,JTYP)*ALP(ITYP,JTYP)
      DKL=DKL+D(MKL,JTYP)*ALP(ITYP,JTYP)
      DJL=DJL+D(MJL,JTYP)*BET(ITYP,JTYP)
      DIL=DIL+D(MIL,JTYP)*BET(ITYP,JTYP)
      DIK=DIK+D(MIK,JTYP)*BET(ITYP,JTYP)
      DJK=DJK+D(MJK,JTYP)*BET(ITYP,JTYP)
  101 CONTINUE
      DIJ=DIJ*FAC2
      DKL=DKL*FAC2
      DJL=DJL*FACT
      DIL=DIL*FACT
      DIK=DIK*FACT
      DJK=DJK*FACT
C
      CALL MBMAT(B,DENS,M,NN,ITYP)
  102 CONTINUE
C
C   FOR CORES AND VIRTUALS
      IF(NTYPES.EQ.1) GO TO 205
      IF(IAFOCK.EQ.0) GO TO 205
      FAC4=FAC2+FAC2
      DIJ=DT(MIJ)*FAC4
      DKL=DT(MKL)*FAC4
      DJL=-DT(MJL)*FACT
      DIL=-DT(MIL)*FACT
      DIK=-DT(MIK)*FACT
      DJK=-DT(MJK)*FACT
C
      CALL MBMAT(B,DENS,M,NN,NTREAD)
      GO TO 205
C
C     ----- TWO-CONFIGURATION SCF (GVB) -----
C
  204 CONTINUE
C   FOR OCCUPIED SPACE
      FAC2=FACT+FACT
      DO 103 ITYP=1,NTYPES
      DIJ=D(MIJ,ITYP)*FAC2
      DKL=D(MKL,ITYP)*FAC2
      DJL=D(MJL,ITYP)*FACT
      DIL=D(MIL,ITYP)*FACT
      DIK=D(MIK,ITYP)*FACT
      DJK=D(MJK,ITYP)*FACT
C
      CALL MBMATC(B,DENS,M,NN,ITYP)
  103 CONTINUE
C
C   FOR CORES AND VIRTUALS
      IF(IAFOCK.EQ.0) GO TO 205
      FAC4=FAC2+FAC2
      DIJ=DT(MIJ)*FAC4
      DKL=DT(MKL)*FAC4
      DJL=-DT(MJL)*FACT
      DIL=-DT(MIL)*FACT
      DIK=-DT(MIK)*FACT
      DJK=-DT(MJK)*FACT
C
      CALL MBMAT(B,DENS,M,NN,NTREAD)
C
  205 CONTINUE
C
  109 CONTINUE
  110 CONTINUE
C
      RETURN
      END
      SUBROUTINE MAKGRD(N)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DERIN/DERINT(1296,9)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/PARA3/NATMS(4),NPASS
C
      IF(NPASS.EQ.1) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      XJDER=DOT(DERINT(1,4),ABDENS,N)
      YJDER=DOT(DERINT(1,5),ABDENS,N)
      ZJDER=DOT(DERINT(1,6),ABDENS,N)
      XKDER=DOT(DERINT(1,7),ABDENS,N)
      YKDER=DOT(DERINT(1,8),ABDENS,N)
      ZKDER=DOT(DERINT(1,9),ABDENS,N)
      ELSE IF(NPASS.EQ.2) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      XJDER=DOT(DERINT(1,4),ABDENS,N)
      YJDER=DOT(DERINT(1,5),ABDENS,N)
      ZJDER=DOT(DERINT(1,6),ABDENS,N)
      ELSE IF(NPASS.EQ.3) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      XKDER=DOT(DERINT(1,4),ABDENS,N)
      YKDER=DOT(DERINT(1,5),ABDENS,N)
      ZKDER=DOT(DERINT(1,6),ABDENS,N)
      ELSE IF(NPASS.EQ.4) THEN
      XIDER=DOT(DERINT(1,1),ABDENS,N)
      YIDER=DOT(DERINT(1,2),ABDENS,N)
      ZIDER=DOT(DERINT(1,3),ABDENS,N)
      ELSE
        STOP 'INVALID VALUE OF NPASS IN MAKGRD'
      END IF
      RETURN
      END
      SUBROUTINE MAKIJK
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XIDINT(1),YIDINT(1),ZIDINT(1)
      DIMENSION XJDINT(1),YJDINT(1),ZJDINT(1)
      DIMENSION XKDINT(1),YKDINT(1),ZKDINT(1)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DERIN/DERINT(1296,9)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D1INT/XIDER,YIDER,ZIDER,XJDER,YJDER,ZJDER,
     1             XKDER,YKDER,ZKDER
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/ROOTS/NONZER
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      EQUIVALENCE (DERINT(1,1),XIDINT(1))
      EQUIVALENCE (DERINT(1,2),YIDINT(1))
      EQUIVALENCE (DERINT(1,3),ZIDINT(1))
      EQUIVALENCE (DERINT(1,4),XJDINT(1))
      EQUIVALENCE (DERINT(1,5),YJDINT(1))
      EQUIVALENCE (DERINT(1,6),ZJDINT(1))
      EQUIVALENCE (DERINT(1,7),XKDINT(1))
      EQUIVALENCE (DERINT(1,8),YKDINT(1))
      EQUIVALENCE (DERINT(1,9),ZKDINT(1))
      DATA DLIM / 1.0D-10 /
C
      IOFSET=0
C
      DO 102 IROOT=1,NONZER
      N=0
      DO 101 I=1,MIJ
      NX=IJX(I) + IOFSET
      NY=IJY(I) + IOFSET
      NZ=IJZ(I) + IOFSET
      DO 101 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      XJ=DXJ(MX)
      XK=DXK(MX)
      YI=DYI(MY)
      YJ=DYJ(MY)
      YK=DYK(MY)
      ZI=DZI(MZ)
      ZJ=DZJ(MZ)
      ZK=DZK(MZ)
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      XJDINT(N)=XJDINT(N) + XJ * YZ
      XKDINT(N)=XKDINT(N) + XK * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      YJDINT(N)=YJDINT(N) + YJ * XZ
      YKDINT(N)=YKDINT(N) + YK * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
      ZJDINT(N)=ZJDINT(N) + ZJ * XY
      ZKDINT(N)=ZKDINT(N) + ZK * XY
C
  101 CONTINUE
      IOFSET=IOFSET+256
  102 CONTINUE
      RETURN
C
C-----MAKIJ----------------------------------------------MAKIJ
C
      ENTRY MAKIJ
C
      IOFSET=0
C
      DO 104 IROOT=1,NONZER
      N=0
      DO 103 I=1,MIJ
      NX=IJX(I) + IOFSET
      NY=IJY(I) + IOFSET
      NZ=IJZ(I) + IOFSET
      DO 103 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      XJ=DXJ(MX)
      YI=DYI(MY)
      YJ=DYJ(MY)
      ZI=DZI(MZ)
      ZJ=DZJ(MZ)
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      XJDINT(N)=XJDINT(N) + XJ * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      YJDINT(N)=YJDINT(N) + YJ * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
      ZJDINT(N)=ZJDINT(N) + ZJ * XY
C
  103 CONTINUE
      IOFSET=IOFSET+256
  104 CONTINUE
      RETURN
C
C-----MAKIK-----------------------------------------------MAKIK
C
      ENTRY MAKIK
C
      IOFSET=0
C
      DO 106 IROOT=1,NONZER
      N=0
      DO 105 I=1,MIJ
      NX=IJX(I) + IOFSET
      NY=IJY(I) + IOFSET
      NZ=IJZ(I) + IOFSET
      DO 105 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      XK=DXK(MX)
      YI=DYI(MY)
      YK=DYK(MY)
      ZI=DZI(MZ)
      ZK=DZK(MZ)
C
C     ----- NB. FOR CONVENIENCE, PUT DERIVATIVE INTEGRAL WITH
C           RESPECT TO ATOM K IN J ARRAYS.
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      XJDINT(N)=XJDINT(N) + XK * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      YJDINT(N)=YJDINT(N) + YK * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
      ZJDINT(N)=ZJDINT(N) + ZK * XY
C
  105 CONTINUE
      IOFSET=IOFSET+256
  106 CONTINUE
      RETURN
C
C
C-----MAKI----------------------------------------------MAKI
C
      ENTRY MAKI
C
      IOFSET=0
C
      DO 108 IROOT=1,NONZER
      N=0
      DO 107 I=1,MIJ
      NX=IJX(I) + IOFSET
      NY=IJY(I) + IOFSET
      NZ=IJZ(I) + IOFSET
      DO 107 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      YI=DYI(MY)
      ZI=DZI(MZ)
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
C
  107 CONTINUE
      IOFSET=IOFSET+256
  108 CONTINUE
      RETURN
      END
 
      SUBROUTINE MAKONE(DT,W,D1O,D1F,D1W,D2O,D2F,D2W,DFH,DFS,DSH,DSS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DT(NBATRI),W(NBATRI)
      DIMENSION D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION DFH(NBATRI,3,NATOM),DFS(NBATRI,3)
      DIMENSION DSH(NBATRI,NATRI),DSS(NBATRI,6)
      DIMENSION XIN(16),YIN(16),ZIN(16),DXC(16),DYC(16),DZC(16)
      DIMENSION WXI(16),WYI(16),WZI(16),WXJ(16),WYJ(16),WZJ(16)
      DIMENSION WXIWXI(16),WYIWYI(16),WZIWZI(16)
      DIMENSION WXIWXJ(16),WYIWYJ(16),WZIWZJ(16)
      DIMENSION WXJWXJ(16),WYJWYJ(16),WZJWZJ(16)
      DIMENSION WXIDXC(16),WYIDYC(16),WZIDZC(16)
      DIMENSION WXJDXC(16),WYJDYC(16),WZJDZC(16)
      DIMENSION  DXDXC(16), DYDYC(16), DZDZC(16)
      LOGICAL IANDJ,AANDB,DFOCK1,DFOCK2
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/DSTVG/T,X0,Y0,Z0,NI,NJ,CX,CY,CZ,TAI,TAJ,TAA,UU
      COMMON/DSTVR/VX,VY,VZ,DVX,DVY,DVZ,DDVX,DDVY,DDVZ,WIVX,WIVY,WIVZ
     #,            WIWIVX,WIWIVY,WIWIVZ,WIWJVX,WIWJVY,WIWJVZ
     #,            WJWJVX,WJWJVY,WJWJVZ,WJVX,WJVY,WJVZ
     #,            WIXDVX,WIYDVY,WIZDVZ,WJXDVX,WJYDVY,WJZDVZ
     #,            DEXDXI,DEXDYI,DEXDZI,DEXDXJ,DEXDYJ,DEXDZJ
     #,            DEXDII,DEXDIJ,DEXDJJ,DEXDIC,DEXDJC
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/EX(200),CS(200)
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/IJATM/IATOM,JATOM,ICATOM
      COMMON/IJVEC/IX(20),IY(20),IZ(20),JX(20),JY(20),JZ(20)
      COMMON/IJXYZ/XI,YI,ZI,XJ,YJ,ZJ
      COMMON/INDEX/DENS(100),IJX(100),IJY(100),IJZ(100),IPOINT(100)
      COMMON/NDERS/NDERIV
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA PI212 /1.1283791670955D+0/
      DATA ZERO,HALF,ONE,TWO / 0.0D+00 , 0.5D+00 , 1.0D+00 , 2.0D+00 /
      DATA NQLIM / 4 /
      DATA ITOL / 20 /
      DATA DLIMIT / 1.0D-10 /
C
      TOL=ITOL*2.30258D+00
      DFOCK1=IDFOCK.GE.1
      DFOCK2=IDFOCK.GE.2
C
      DO 101 I=1,NATOM
      DO 101 J=1,3
      D1O(J,I)=ZERO
      D1F(J,I)=zero
      D1W(J,I)=zero
  101 CONTINUE
      IF(NDERIV.GE.2) THEN
      DO 102 I=1,N3N
      DO 102 J=1,N3N
      D2O(J,I)=ZERO
      D2F(J,I)=zero
      D2W(J,I)=zero
  102 CONTINUE
      END IF
      IF(DFOCK1) THEN
      DO 103 I=1,NATOM
      DO 103 J=1,3
      DO 103 K=1,NBATRI
      DFH(K,J,I)=ZERO
  103 CONTINUE
      DO 104 I=1,3
      DO 104 J=1,NBATRI
      DFS(J,I)=ZERO
  104 CONTINUE
      END IF
      IF(DFOCK2) THEN
      DO 105 I=1,NATRI
      DO 105 J=1,NBATRI
      DSH(J,I)=ZERO
  105 CONTINUE
      DO 106 I=1,6
      DO 106 J=1,NBATRI
      DSS(J,I)=ZERO
  106 CONTINUE
      END IF
C
C#################
C#####I SHELL#####
C#################
C
      DO 5000 II=1,NSHELL
C
      IATOM=KATOM(II)
      XI=C(1,IATOM)
      YI=C(2,IATOM)
      ZI=C(3,IATOM)
      IGMIN=KSTART(II)
      IGMAX=IGMIN+KNG(II)-1
      LIT=KTYPE(II)
      MINI=KMIN(II)
      MAXI=KMAX(II)
      LOCI=KLOC(II)-MINI
C
C#################
C#####J SHELL#####
C#################
C
      DO 4000 JJ=1,II
C
      JATOM=KATOM(JJ)
      XJ=C(1,JATOM)
      YJ=C(2,JATOM)
      ZJ=C(3,JATOM)
      JGMIN=KSTART(JJ)
      JGMAX=JGMIN+KNG(JJ)-1
      LJT=KTYPE(JJ)
      MINJ=KMIN(JJ)
      MAXJ=KMAX(JJ)
      LOCJ=KLOC(JJ)-MINJ
      IANDJ=II.EQ.JJ
      AANDB=IATOM.EQ.JATOM
C
      RR=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
C
C     ----- WORK OUT INDICES FOR COMBINING 2D INTEGRALS -----
C
      MIJ=0
      JMAX=MAXJ
      DO 112 I=MINI,MAXI
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
      IF(IANDJ) JMAX=I
      DO 111 J=MINJ,JMAX
      MIJ=MIJ+1
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IPOS=IOFF(LOCI+I)+LOCJ+J
      IPOINT(MIJ)=IPOS
      DENS(MIJ)=DT(IPOS)
      IF(II.NE.JJ.OR.I.NE.J) DENS(MIJ)=DENS(MIJ)*TWO
  111 CONTINUE
  112 CONTINUE
C
C     ----- CALCULATE CORRECT NUMBER OF ROOTS TO USE FOR RYS QUAD. -
C
      NROOTS=(LIT+LJT+NDERIV)/2
C
      IPONT=(IATOM-1)*NBATRI
      JPONT=(JATOM-1)*NBATRI
      IAPT =(IATOM-1)*3+1
      JAPT =(JATOM-1)*3+1
      IAPTT=IOFF(IAPT+1)
      JAPTT=IOFF(JAPT+1)
      MAPT =MAX(IAPT,JAPT)
      NAPT =MIN(IAPT,JAPT)
      IJAPT=IOFF(MAPT)+NAPT
C
C     ----- ZERO TEMPORARY VARIABLES -----
C
      DVDXI=ZERO
      DVDYI=dvdxi
      DVDZI=dvdxi
      DVDXJ=dvdxi
      DVDYJ=dvdxi
      DVDZJ=dvdxi
      DTDX  =dvdxi
      DTDY  =dvdxi
      DTDZ  =dvdxi
      DSDX  =dvdxi
      DSDY  =dvdxi
      DSDZ  =dvdxi
      IF(NDERIV.LE.1) GO TO 201
C
      DVXIXI=zero
      DVXIYI=zero
      DVXIZI=zero
      DVYIYI=zero
      DVYIZI=zero
      DVZIZI=zero
      DVXIXJ=zero
      DVXIYJ=zero
      DVXIZJ=zero
      DVYIXJ=zero
      DVYIYJ=zero
      DVYIZJ=zero
      DVZIXJ=zero
      DVZIYJ=zero
      DVZIZJ=zero
      DVXJXJ=zero
      DVXJYJ=zero
      DVXJZJ=zero
      DVYJYJ=zero
      DVYJZJ=zero
      DVZJZJ=zero
      DTDXDX=zero
      DTDXDY=zero
      DTDXDZ=zero
      DTDYDY=zero
      DTDYDZ=zero
      DTDZDZ=zero
      DSDXDX=zero
      DSDXDY=zero
      DSDXDZ=zero
      DSDYDY=zero
      DSDYDZ=zero
      DSDZDZ=zero
C
C:::::::::::::::::::::
C:::::I PRIMITIVE:::::
C:::::::::::::::::::::
C
  201 CONTINUE
      DO 3000 IG=IGMIN,IGMAX
      CI=CS(IG)
      AI=EX(IG)
      AXI=AI*XI
      AYI=AI*YI
      AZI=AI*ZI
      TAI=AI*TWO
C
C:::::::::::::::::::::
C:::::J PRIMITIVE:::::
C:::::::::::::::::::::
C
      IF(IANDJ) JGMAX=IG
      DO 2000 JG=JGMIN,JGMAX
      CJ=CS(JG)
      AJ=EX(JG)
      AXJ=AJ*XJ
      AYJ=AJ*YJ
      AZJ=AJ*ZJ
      TAJ=AJ*TWO
C
      PP=AI+AJ
      PAA=AI*AJ
      TPP=ONE/PP
      TAA=TAI+TAJ
      RHO2=PAA*TPP*TWO
      TEMP=PAA*TPP*RR
C
C     ----- IGNORE INTEGRAL IF PRE-EXPONENTIAL TOO SMALL -----
C
      IF(TEMP.GT.TOL) GO TO 2000
C
C     ----- DENSITY FACTOR -----
C
      TP=DSQRT(TPP)
      DIJ=CI*CJ*DEXP(-TEMP)
      IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ*TWO
      DIJPI=DIJ*PI212*TPP
      DIJ=-DIJ
C
      AAX=AXI+AXJ
      AAY=AYI+AYJ
      AAZ=AZI+AZJ
      AX=AAX*TPP
      AY=AAY*TPP
      AZ=AAZ*TPP
C
C     ----- CALCULATE DERIVATIVE CONTRIBUTIONS FROM -----
C                KINETIC AND OVERLAP INTEGRALS
C
      IF(AANDB) GO TO 300
C
      X0=AX
      Y0=AY
      Z0=AZ
      T=DSQRT(PP)
      ST=TP
      IN=-NQLIM
      DO 120 NI=1,LIT
      IN=IN+NQLIM
      DO 120 NJ=1,LJT
      JN=IN+NJ
      CALL TDER2
      XIN(JN)=VX             * ST
      YIN(JN)=VY             * ST
      ZIN(JN)=VZ*DIJ         * ST
      WXI(JN)=WIVX           * ST
      WYI(JN)=WIVY           * ST
      WZI(JN)=WIVZ*DIJ       * ST
      DXC(JN)=DVX            * ST
      DYC(JN)=DVY            * ST
      DZC(JN)=DVZ*DIJ        * ST
      WXIDXC(JN)=WIXDVX      * ST
      WYIDYC(JN)=WIYDVY      * ST
      WZIDZC(JN)=WIZDVZ*DIJ  * ST
      IF(NDERIV.LE.1) GO TO 120
C
      WXIWXI(JN)=WIWIVX      * ST
      WYIWYI(JN)=WIWIVY      * ST
      WZIWZI(JN)=WIWIVZ*DIJ  * ST
      DXDXC(JN)=DDVX         * ST
      DYDYC(JN)=DDVY         * ST
      DZDZC(JN)=DDVZ*DIJ     * ST
  120 CONTINUE
C
C     ----- COMBINE TWO-DIMENSIONAL INTEGRALS TO FORM INTEGRALS -----
C
      DO 125 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DD=DENS(I)*HALF
      X = XIN(NX)
      Y = YIN(NY)
      Z = ZIN(NZ)
      XY = X*Y
      XZ = X*Z
      YZ = Y*Z
      DX = DXC(NX)
      DY = DYC(NY)
      DZ = DZC(NZ)
      WX = WXI(NX)
      WY = WYI(NY)
      WZ = WZI(NZ)
      WDX = WXIDXC(NX)
      WDY = WYIDYC(NY)
      WDZ = WZIDZC(NZ)
      IP=IPOINT(I)
      WD=W(IP)
      XTEMP1=WX*YZ
      YTEMP1=WY*XZ
      ZTEMP1=WZ*XY
      XTEMP2=WDX*YZ+WX*(DY*Z+Y*DZ)
      YTEMP2=WDY*XZ+WY*(DX*Z+X*DZ)
      ZTEMP2=WDZ*XY+WZ*(DX*Y+X*DY)
      IF(DABS(WD).LT.DLIMIT) GO TO 401
      DSDX=     XTEMP1*WD+dsdx
      DSDY=     YTEMP1*WD+dsdy
      DSDZ=     ZTEMP1*WD+dsdz
  401 CONTINUE
      IF(DABS(DD).LT.DLIMIT) GO TO 402
      DTDX=     XTEMP2*DD+dtdx
      DTDY=     YTEMP2*DD+dtdy
      DTDZ=     ZTEMP2*DD+dtdz
  402 CONTINUE
      IF(NDERIV.LE.1) GO TO 202
C
      SSDXDX= WXIWXI(NX)*YZ
      SSDXDY= WX*WY*Z
      SSDXDZ= WX*WZ*Y
      SSDYDY= WYIWYI(NY)*XZ
      SSDYDZ= WY*WZ*X
      SSDZDZ= WZIWZI(NZ)*XY
      TTDXDX = DXDXC(NX)*YZ + WXIWXI(NX) * (DY*Z + Y*DZ)
      TTDXDY = (WDX*WY + WX*WDY) * Z + WX*WY*DZ
      TTDXDZ = (WDX*WZ + WX*WDZ) * Y + WX*WZ*DY
      TTDYDY = DYDYC(NY)*XZ + WYIWYI(NY) * (DX*Z + X*DZ)
      TTDYDZ = (WDY*WZ + WY*WDZ) * X + WY*WZ*DX
      TTDZDZ = DZDZC(NZ)*XY + WZIWZI(NZ) * (DX*Y + X*DY)
      IF(DABS(WD).LT.DLIMIT) GO TO 403
      DSDXDX=         SSDXDX*WD + dsdxdx
      DSDXDY=         SSDXDY*WD + dsdxdy
      DSDXDZ=         SSDXDZ*WD + dsdxdz
      DSDYDY=         SSDYDY*WD + dsdydy
      DSDYDZ=         SSDYDZ*WD + dsdydz
      DSDZDZ=         SSDZDZ*WD + dsdzdz
  403 CONTINUE
      IF(DABS(DD).LT.DLIMIT) GO TO 202
      DTDXDX =          TTDXDX * DD + dtdxdx
      DTDXDY =          TTDXDY * DD + dtdxdy
      DTDXDZ =          TTDXDZ * DD + dtdxdz
      DTDYDY =          TTDYDY * DD + dtdydy
      DTDYDZ =          TTDYDZ * DD + dtdydz
      DTDZDZ =          TTDZDZ * DD + dtdzdz
C
  202 CONTINUE
      IF(.NOT.DFOCK1) GO TO 203
      DFS(IP,1)=DFS(IP,1)-XTEMP1
      DFS(IP,2)=DFS(IP,2)-YTEMP1
      DFS(IP,3)=DFS(IP,3)-ZTEMP1
      DFH(IP,1,IATOM)=DFH(IP,1,IATOM)+XTEMP2*HALF
      DFH(IP,1,JATOM)=DFH(IP,1,JATOM)-XTEMP2*HALF
      DFH(IP,2,IATOM)=DFH(IP,2,IATOM)+YTEMP2*HALF
      DFH(IP,2,JATOM)=DFH(IP,2,JATOM)-YTEMP2*HALF
      DFH(IP,3,IATOM)=DFH(IP,3,IATOM)+ZTEMP2*HALF
      DFH(IP,3,JATOM)=DFH(IP,3,JATOM)-ZTEMP2*HALF
  203 CONTINUE
      IF(.NOT.DFOCK2) GO TO 125
      DSS(IP,1)=DSS(IP,1)-SSDXDX
      DSS(IP,2)=DSS(IP,2)-SSDXDY
      DSS(IP,3)=DSS(IP,3)-SSDXDZ
      DSS(IP,4)=DSS(IP,4)-SSDYDY
      DSS(IP,5)=DSS(IP,5)-SSDYDZ
      DSS(IP,6)=DSS(IP,6)-SSDZDZ
C
      ICOUNT=IAPTT
      JCOUNT=JAPTT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDXDX*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDXDX*HALF
      ICOUNT=ICOUNT+IAPT
      JCOUNT=JCOUNT+JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDXDY*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDXDY*HALF
      ICOUNT=ICOUNT+1
      JCOUNT=JCOUNT+1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDYDY*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDYDY*HALF
      ICOUNT=ICOUNT+IAPT
      JCOUNT=JCOUNT+JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDXDZ*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDXDZ*HALF
      ICOUNT=ICOUNT+1
      JCOUNT=JCOUNT+1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDYDZ*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDYDZ*HALF
      ICOUNT=ICOUNT+1
      JCOUNT=JCOUNT+1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDZDZ*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDZDZ*HALF
      ICOUNT=IJAPT
      DSH(IP,ICOUNT)   = DSH(IP,ICOUNT)   -TTDXDX*HALF
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) -TTDXDY*HALF
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) -TTDXDZ*HALF
      ICOUNT=ICOUNT+MAPT
      DSH(IP,ICOUNT)   = DSH(IP,ICOUNT)   -TTDXDY*HALF
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) -TTDYDY*HALF
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) -TTDYDZ*HALF
      ICOUNT=ICOUNT+MAPT+1
      DSH(IP,ICOUNT)   = DSH(IP,ICOUNT)   -TTDXDZ*HALF
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) -TTDYDZ*HALF
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) -TTDZDZ*HALF
C
  125 CONTINUE
  300 CONTINUE
C
C     ----- LOOP OVER ATOMS IN POTENTIAL TERM -----
C
      DO 1000 IC=1,NATOM
      ICATOM=IC
C
      KAPT =(ICATOM-1)*3+1
      KAPTT=IOFF(KAPT+1)
      MMAPT=MAX(IAPT,KAPT)
      NNAPT=MIN(IAPT,KAPT)
      IKAPT=IOFF(MMAPT)+NNAPT
      MMAPT=MAX(JAPT,KAPT)
      NNAPT=MIN(JAPT,KAPT)
      JKAPT=IOFF(MMAPT)+NNAPT
C
      ZNUC=-ZAN(IC)*DIJPI
      CX=C(1,IC)
      CY=C(2,IC)
      CZ=C(3,IC)
      XX=PP*((AX-CX)**2+(AY-CY)**2+(AZ-CZ)**2)
          IF(NROOTS.LE.3) THEN
          CALL RT123
          ELSE IF(NROOTS.EQ.4) THEN
          CALL ROOT4
          ELSE IF(NROOTS.EQ.5) THEN
          CALL ROOT5
          ELSE
          STOP 'NOT ENOUGH ROOTS IN VDERIV'
          END IF
      HFDX=ZERO
      HFDY=zero
      HFDZ=zero
      IF(NDERIV.LE.1) GO TO 204
      HFDXX=zero
      HFDXY=zero
      HFDXZ=zero
      HFDYY=zero
      HFDYZ=zero
      HFDZZ=zero
      DVXIXC=zero
      DVXIYC=zero
      DVXIZC=zero
      DVYIXC=zero
      DVYIYC=zero
      DVYIZC=zero
      DVZIXC=zero
      DVZIYC=zero
      DVZIZC=zero
      DVXJXC=zero
      DVXJYC=zero
      DVXJZC=zero
      DVYJXC=zero
      DVYJYC=zero
      DVYJZC=zero
      DVZJXC=zero
      DVZJYC=zero
      DVZJZC=zero
  204 CONTINUE
      DO 150 IROOT=1,NROOTS
      UU=PP*U(IROOT)
      WW=WT(IROOT)*ZNUC
      TT=PP+UU
      T=DSQRT(TT)
      X0=(AAX+UU*CX)/TT
      Y0=(AAY+UU*CY)/TT
      Z0=(AAZ+UU*CZ)/TT
C
C     ----- CALCULATE TWO-DIMENSIONAL INTEGRALS -----
C
      IN=-NQLIM
      DO 130 NI=1,LIT
      IN=IN+NQLIM
      DO 130 NJ=1,LJT
      JN=IN+NJ
      CALL VDER2
      XIN(JN)=VX
      YIN(JN)=VY
      ZIN(JN)=VZ*WW
      DXC(JN)=DVX
      DYC(JN)=DVY
      DZC(JN)=DVZ*WW
      WXI(JN)=WIVX
      WYI(JN)=WIVY
      WZI(JN)=WIVZ*WW
      WXJ(JN)=WJVX
      WYJ(JN)=WJVY
      WZJ(JN)=WJVZ*WW
      IF(NDERIV.LE.1) GO TO 130
C
      WXIWXI(JN)=WIWIVX
      WYIWYI(JN)=WIWIVY
      WZIWZI(JN)=WIWIVZ*WW
      WXIWXJ(JN)=WIWJVX
      WYIWYJ(JN)=WIWJVY
      WZIWZJ(JN)=WIWJVZ*WW
      WXJWXJ(JN)=WJWJVX
      WYJWYJ(JN)=WJWJVY
      WZJWZJ(JN)=WJWJVZ*WW
      WXIDXC(JN)=WIXDVX
      WYIDYC(JN)=WIYDVY
      WZIDZC(JN)=WIZDVZ*WW
      WXJDXC(JN)=WJXDVX
      WYJDYC(JN)=WJYDVY
      WZJDZC(JN)=WJZDVZ*WW
      DXDXC(JN)=DDVX
      DYDYC(JN)=DDVY
      DZDZC(JN)=DDVZ*WW
  130 CONTINUE
 
C     ----- COMBINE TWO-DIMENSIONAL INTEGRALS TO FORM INTEGRALS -----
C
      ICPONT = (IC-1)*NBATRI
      DO 140 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DD=DENS(I)
      IP=IPOINT(I)
      X = XIN(NX)
      Y = YIN(NY)
      Z = ZIN(NZ)
      XY = X*Y
      XZ = X*Z
      YZ = Y*Z
      XTEMP3 = DXC(NX)*YZ
      YTEMP3 = DYC(NY)*XZ
      ZTEMP3 = DZC(NZ)*XY
      XTEMP4=WXI(NX)*YZ
      YTEMP4=WYI(NY)*XZ
      ZTEMP4=WZI(NZ)*XY
      XTEMP5=WXJ(NX)*YZ
      YTEMP5=WYJ(NY)*XZ
      ZTEMP5=WZJ(NZ)*XY
      IF(DABS(DD).LT.DLIMIT) GO TO 405
      HFDX  = HFDX + XTEMP3*DD
      HFDY  = HFDY + YTEMP3*DD
      HFDZ  = HFDZ + ZTEMP3*DD
      DVDXI=      XTEMP4*DD+dvdxi
      DVDYI=      YTEMP4*DD+dvdyi
      DVDZI=      ZTEMP4*DD+dvdzi
      DVDXJ=      XTEMP5*DD+dvdxj
      DVDYJ=      YTEMP5*DD+dvdyj
      DVDZJ=      ZTEMP5*DD+dvdzj
  405 CONTINUE
      IF(NDERIV.LE.1) GO TO 205
C
      VHFDXX = DXDXC(NX)*YZ
      VHFDXY = DXC(NX)*DYC(NY)*Z
      VHFDXZ = DXC(NX)*Y*DZC(NZ)
      VHFDYY = DYDYC(NY)*XZ
      VHFDYZ = X*DYC(NY)*DZC(NZ)
      VHFDZZ = XY*DZDZC(NZ)
      VVXIXC= WXIDXC(NX)*YZ
      VVXIYC= WXI(NX)*DYC(NY)*Z
      VVXIZC= WXI(NX)*Y*DZC(NZ)
      VVYIXC= DXC(NX)*WYI(NY)*Z
      VVYIYC= WYIDYC(NY)*XZ
      VVYIZC= X*WYI(NY)*DZC(NZ)
      VVZIXC= DXC(NX)*Y*WZI(NZ)
      VVZIYC= X*DYC(NY)*WZI(NZ)
      VVZIZC= XY*WZIDZC(NZ)
      VVXJXC= WXJDXC(NX)*YZ
      VVXJYC= WXJ(NX)*DYC(NY)*Z
      VVXJZC= WXJ(NX)*Y*DZC(NZ)
      VVYJXC= DXC(NX)*WYJ(NY)*Z
      VVYJYC= WYJDYC(NY)*XZ
      VVYJZC= X*WYJ(NY)*DZC(NZ)
      VVZJXC= DXC(NX)*Y*WZJ(NZ)
      VVZJYC= X*DYC(NY)*WZJ(NZ)
      VVZJZC= XY*WZJDZC(NZ)
      VVXIXI= WXIWXI(NX)*YZ
      VVXIYI= WXI(NX)*WYI(NY)*Z
      VVXIZI= WXI(NX)*Y*WZI(NZ)
      VVYIYI= WYIWYI(NY)*XZ
      VVYIZI= X*WYI(NY)*WZI(NZ)
      VVZIZI= XY*WZIWZI(NZ)
      VVXIXJ= WXIWXJ(NX)*YZ
      VVXIYJ= WXI(NX)*WYJ(NY)*Z
      VVXIZJ= WXI(NX)*Y*WZJ(NZ)
      VVYIXJ= WXJ(NX)*WYI(NY)*Z
      VVYIYJ= WYIWYJ(NY)*XZ
      VVYIZJ= X*WYI(NY)*WZJ(NZ)
      VVZIXJ= WXJ(NX)*Y*WZI(NZ)
      VVZIYJ= X*WYJ(NY)*WZI(NZ)
      VVZIZJ= XY*WZIWZJ(NZ)
      VVXJXJ= WXJWXJ(NX)*YZ
      VVXJYJ= WXJ(NX)*WYJ(NY)*Z
      VVXJZJ= WXJ(NX)*Y*WZJ(NZ)
      VVYJYJ= WYJWYJ(NY)*XZ
      VVYJZJ= X*WYJ(NY)*WZJ(NZ)
      VVZJZJ= XY*WZJWZJ(NZ)
      IF(DABS(DD).LT.DLIMIT) GO TO 205
      HFDXX = HFDXX + VHFDXX * DD
      HFDXY = HFDXY + VHFDXY * DD
      HFDXZ = HFDXZ + VHFDXZ * DD
      HFDYY = HFDYY + VHFDYY * DD
      HFDYZ = HFDYZ + VHFDYZ * DD
      HFDZZ = HFDZZ + VHFDZZ * DD
      DVXIXC=DVXIXC + VVXIXC * DD
      DVXIYC=DVXIYC + VVXIYC * DD
      DVXIZC=DVXIZC + VVXIZC * DD
      DVYIXC=DVYIXC + VVYIXC * DD
      DVYIYC=DVYIYC + VVYIYC * DD
      DVYIZC=DVYIZC + VVYIZC * DD
      DVZIXC=DVZIXC + VVZIXC * DD
      DVZIYC=DVZIYC + VVZIYC * DD
      DVZIZC=DVZIZC + VVZIZC * DD
      DVXJXC=DVXJXC + VVXJXC * DD
      DVXJYC=DVXJYC + VVXJYC * DD
      DVXJZC=DVXJZC + VVXJZC * DD
      DVYJXC=DVYJXC + VVYJXC * DD
      DVYJYC=DVYJYC + VVYJYC * DD
      DVYJZC=DVYJZC + VVYJZC * DD
      DVZJXC=DVZJXC + VVZJXC * DD
      DVZJYC=DVZJYC + VVZJYC * DD
      DVZJZC=DVZJZC + VVZJZC * DD
      DVXIXI=DVXIXI + VVXIXI * DD
      DVXIYI=DVXIYI + VVXIYI * DD
      DVXIZI=DVXIZI + VVXIZI * DD
      DVYIYI=DVYIYI + VVYIYI * DD
      DVYIZI=DVYIZI + VVYIZI * DD
      DVZIZI=DVZIZI + VVZIZI * DD
      DVXIXJ=DVXIXJ + VVXIXJ * DD
      DVXIYJ=DVXIYJ + VVXIYJ * DD
      DVXIZJ=DVXIZJ + VVXIZJ * DD
      DVYIXJ=DVYIXJ + VVYIXJ * DD
      DVYIYJ=DVYIYJ + VVYIYJ * DD
      DVYIZJ=DVYIZJ + VVYIZJ * DD
      DVZIXJ=DVZIXJ + VVZIXJ * DD
      DVZIYJ=DVZIYJ + VVZIYJ * DD
      DVZIZJ=DVZIZJ + VVZIZJ * DD
      DVXJXJ=DVXJXJ + VVXJXJ * DD
      DVXJYJ=DVXJYJ + VVXJYJ * DD
      DVXJZJ=DVXJZJ + VVXJZJ * DD
      DVYJYJ=DVYJYJ + VVYJYJ * DD
      DVYJZJ=DVYJZJ + VVYJZJ * DD
      DVZJZJ=DVZJZJ + VVZJZJ * DD
C
  205 CONTINUE
      IF(.NOT.DFOCK1) GO TO 206
      DFH(IP,1,IC)=DFH(IP,1,IC)+XTEMP3
      DFH(IP,2,IC)=DFH(IP,2,IC)+YTEMP3
      DFH(IP,3,IC)=DFH(IP,3,IC)+ZTEMP3
      DFH(IP,1,IATOM) = DFH(IP,1,IATOM) + XTEMP4
      DFH(IP,2,IATOM) = DFH(IP,2,IATOM) + YTEMP4
      DFH(IP,3,IATOM) = DFH(IP,3,IATOM) + ZTEMP4
      DFH(IP,1,JATOM) = DFH(IP,1,JATOM) + XTEMP5
      DFH(IP,2,JATOM) = DFH(IP,2,JATOM) + YTEMP5
      DFH(IP,3,JATOM) = DFH(IP,3,JATOM) + ZTEMP5
  206 CONTINUE
      IF(.NOT.DFOCK2) GO TO 140
C
      ICOUNT = KAPTT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDXX
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDXY
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDYY
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDXZ
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDYZ
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDZZ
 
      IF(KAPT-IAPT) 301,302,303
C
C        WHEN IATOM > ICATOM
C
  301 ICOUNT = IKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVXIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVXIZC
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVYIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVYIZC
      ICOUNT = ICOUNT + IAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVZIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVZIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZC
      GO TO 305
C
C        WHEN IATOM = ICATOM
C
  302 ICOUNT = IKAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIXC
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIXC + VVXIYC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIYC
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIXC + VVXIZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIYC + VVYIZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIZC
      GO TO 305
C
C        WHEN IATOM < ICATOM
C
  303 ICOUNT = IKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIXC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIXC
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIYC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIYC
      ICOUNT = ICOUNT + KAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIZC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIZC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZC
C
  305 IF(KAPT-JAPT) 306,307,308
C
C        WHEN JATOM > ICATOM
C
  306 ICOUNT = JKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVXJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVXJZC
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVYJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVYJZC
      ICOUNT = ICOUNT + JAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVZJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVZJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJZC
      GO TO 310
C
C        WHEN JATOM = ICATOM
C
  307 ICOUNT = JKAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXJXC
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYJXC + VVXJYC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYJYC
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZJXC + VVXJZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZJYC + VVYJZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZJZC
      GO TO 310
C
C        WHEN JATOM < ICATOM
C
  308 ICOUNT = JKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJXC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJXC
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJYC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJYC
      ICOUNT = ICOUNT + KAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJZC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJZC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJZC
C
C       (IATOM,IATOM) & (JATOM,JATOM) PAIRS
C
  310 ICOUNT = IAPTT
      JCOUNT = JAPTT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIXI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVXJXJ
      ICOUNT = ICOUNT + IAPT
      JCOUNT = JCOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIYI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVXJYJ
      ICOUNT = ICOUNT + 1
      JCOUNT = JCOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIYI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVYJYJ
      ICOUNT = ICOUNT + IAPT
      JCOUNT = JCOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIZI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVXJZJ
      ICOUNT = ICOUNT + 1
      JCOUNT = JCOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIZI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVYJZJ
      ICOUNT = ICOUNT + 1
      JCOUNT = JCOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIZI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVZJZJ
C
      IF(IATOM-JATOM) 312,313,311
C
  311 ICOUNT = IJAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVXIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVXIZJ
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVYIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVYIZJ
      ICOUNT = ICOUNT + IAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVZIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVZIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZJ
      GO TO 315
  312 ICOUNT = IJAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIXJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIXJ
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIYJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIYJ
      ICOUNT = ICOUNT + JAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIZJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIZJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZJ
      GO TO 315
C                      WHEN IATOM = JATOM
  313 ICOUNT = IJAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXJ
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIYJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYJ
      ICOUNT = ICOUNT + IAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIZJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIZJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZJ
 
  315 CONTINUE
  140 CONTINUE
C
  150 CONTINUE
      D1F(1,IC) = D1F(1,IC) + HFDX
      D1F(2,IC) = D1F(2,IC) + HFDY
      D1F(3,IC) = D1F(3,IC) + HFDZ
C
      IF(NDERIV.LE.1) GO TO 1000
      ICPT=KAPT
C     ICPT=(IC-1)*3+1
      D2F(ICPT  ,ICPT  ) = D2F(ICPT  ,ICPT  ) + HFDXX
      D2F(ICPT+1,ICPT  ) = D2F(ICPT+1,ICPT  ) + HFDXY
      D2F(ICPT+2,ICPT  ) = D2F(ICPT+2,ICPT  ) + HFDXZ
      D2F(ICPT+1,ICPT+1) = D2F(ICPT+1,ICPT+1) + HFDYY
      D2F(ICPT+2,ICPT+1) = D2F(ICPT+2,ICPT+1) + HFDYZ
      D2F(ICPT+2,ICPT+2) = D2F(ICPT+2,ICPT+2) + HFDZZ
      IPT=IAPT
C    IPT=(IATOM-1)*3+1
      D2O(IPT  ,ICPT  ) = D2O(IPT  ,ICPT  ) + DVXIXC
      D2O(IPT  ,ICPT+1) = D2O(IPT  ,ICPT+1) + DVXIYC
      D2O(IPT  ,ICPT+2) = D2O(IPT  ,ICPT+2) + DVXIZC
      D2O(IPT+1,ICPT  ) = D2O(IPT+1,ICPT  ) + DVYIXC
      D2O(IPT+1,ICPT+1) = D2O(IPT+1,ICPT+1) + DVYIYC
      D2O(IPT+1,ICPT+2) = D2O(IPT+1,ICPT+2) + DVYIZC
      D2O(IPT+2,ICPT  ) = D2O(IPT+2,ICPT  ) + DVZIXC
      D2O(IPT+2,ICPT+1) = D2O(IPT+2,ICPT+1) + DVZIYC
      D2O(IPT+2,ICPT+2) = D2O(IPT+2,ICPT+2) + DVZIZC
      JPT=JAPT
C     JPT=(JATOM-1)*3+1
      D2O(JPT  ,ICPT  ) = D2O(JPT  ,ICPT  ) + DVXJXC
      D2O(JPT  ,ICPT+1) = D2O(JPT  ,ICPT+1) + DVXJYC
      D2O(JPT  ,ICPT+2) = D2O(JPT  ,ICPT+2) + DVXJZC
      D2O(JPT+1,ICPT  ) = D2O(JPT+1,ICPT  ) + DVYJXC
      D2O(JPT+1,ICPT+1) = D2O(JPT+1,ICPT+1) + DVYJYC
      D2O(JPT+1,ICPT+2) = D2O(JPT+1,ICPT+2) + DVYJZC
      D2O(JPT+2,ICPT  ) = D2O(JPT+2,ICPT  ) + DVZJXC
      D2O(JPT+2,ICPT+1) = D2O(JPT+2,ICPT+1) + DVZJYC
      D2O(JPT+2,ICPT+2) = D2O(JPT+2,ICPT+2) + DVZJZC
 1000 CONTINUE
C
 2000 CONTINUE
 3000 CONTINUE
C:::::::::::::::::::::::::
C:::::END OF PRIMITIVES:::
C:::::::::::::::::::::::::
C
      D1O(1,IATOM)=dvdxi+dtdx+D1O(1,IATOM)
      D1O(2,IATOM)=dvdyi+dtdy+D1O(2,IATOM)
      D1O(3,IATOM)=dvdzi+dtdz+D1O(3,IATOM)
      D1O(1,JATOM)=dvdxj-dtdx+D1O(1,JATOM)
      D1O(2,JATOM)=dvdyj-dtdy+D1O(2,JATOM)
      D1O(3,JATOM)=dvdzj-dtdz+D1O(3,JATOM)
      D1W(1,IATOM)=D1W(1,IATOM)+DSDX
      D1W(2,IATOM)=D1W(2,IATOM)+DSDY
      D1W(3,IATOM)=D1W(3,IATOM)+DSDZ
      D1W(1,JATOM)=D1W(1,JATOM)-DSDX
      D1W(2,JATOM)=D1W(2,JATOM)-DSDY
      D1W(3,JATOM)=D1W(3,JATOM)-DSDZ
C
      IF(NDERIV.LE.1) GO TO 4000
C     IPT=(IATOM-1)*3+1
C     JPT=(JATOM-1)*3+1
      IPT=IAPT
      JPT=JAPT
      D2O(IPT  ,IPT  ) = D2O(IPT  ,IPT  ) + DVXIXI + DTDXDX
      D2O(IPT  ,IPT+1) = D2O(IPT  ,IPT+1) + DVXIYI + DTDXDY
      D2O(IPT  ,IPT+2) = D2O(IPT  ,IPT+2) + DVXIZI + DTDXDZ
      D2O(IPT+1,IPT+1) = D2O(IPT+1,IPT+1) + DVYIYI + DTDYDY
      D2O(IPT+1,IPT+2) = D2O(IPT+1,IPT+2) + DVYIZI + DTDYDZ
      D2O(IPT+2,IPT+2) = D2O(IPT+2,IPT+2) + DVZIZI + DTDZDZ
      D2O(IPT  ,JPT  ) = D2O(IPT  ,JPT  ) + DVXIXJ - DTDXDX
      D2O(IPT  ,JPT+1) = D2O(IPT  ,JPT+1) + DVXIYJ - DTDXDY
      D2O(IPT  ,JPT+2) = D2O(IPT  ,JPT+2) + DVXIZJ - DTDXDZ
      D2W(IPT  ,IPT  ) = D2W(IPT  ,IPT  ) + DSDXDX
      D2W(IPT  ,IPT+1) = D2W(IPT  ,IPT+1) + DSDXDY
      D2W(IPT  ,IPT+2) = D2W(IPT  ,IPT+2) + DSDXDZ
      D2W(IPT+1,IPT+1) = D2W(IPT+1,IPT+1) + DSDYDY
      D2W(IPT+1,IPT+2) = D2W(IPT+1,IPT+2) + DSDYDZ
      D2W(IPT+2,IPT+2) = D2W(IPT+2,IPT+2) + DSDZDZ
      D2W(IPT  ,JPT  ) = D2W(IPT  ,JPT  ) - DSDXDX
      D2W(IPT  ,JPT+1) = D2W(IPT  ,JPT+1) - DSDXDY
      D2W(IPT  ,JPT+2) = D2W(IPT  ,JPT+2) - DSDXDZ
      IF(IATOM.NE.JATOM) THEN
      D2O(IPT+1,JPT  ) = D2O(IPT+1,JPT  ) + DVYIXJ - DTDXDY
      D2W(IPT+1,JPT  ) = D2W(IPT+1,JPT  ) - DSDXDY
      END IF
      D2O(IPT+1,JPT+1) = D2O(IPT+1,JPT+1) + DVYIYJ - DTDYDY
      D2O(IPT+1,JPT+2) = D2O(IPT+1,JPT+2) + DVYIZJ - DTDYDZ
      D2W(IPT+1,JPT+1) = D2W(IPT+1,JPT+1) - DSDYDY
      D2W(IPT+1,JPT+2) = D2W(IPT+1,JPT+2) - DSDYDZ
      IF(IATOM.NE.JATOM) THEN
      D2O(IPT+2,JPT  ) = D2O(IPT+2,JPT  ) + DVZIXJ - DTDXDZ
      D2O(IPT+2,JPT+1) = D2O(IPT+2,JPT+1) + DVZIYJ - DTDYDZ
      D2W(IPT+2,JPT  ) = D2W(IPT+2,JPT  ) - DSDXDZ
      D2W(IPT+2,JPT+1) = D2W(IPT+2,JPT+1) - DSDYDZ
      END IF
      D2O(IPT+2,JPT+2) = D2O(IPT+2,JPT+2) + DVZIZJ - DTDZDZ
      D2O(JPT  ,JPT  ) = D2O(JPT  ,JPT  ) + DVXJXJ + DTDXDX
      D2O(JPT  ,JPT+1) = D2O(JPT  ,JPT+1) + DVXJYJ + DTDXDY
      D2O(JPT  ,JPT+2) = D2O(JPT  ,JPT+2) + DVXJZJ + DTDXDZ
      D2O(JPT+1,JPT+1) = D2O(JPT+1,JPT+1) + DVYJYJ + DTDYDY
      D2O(JPT+1,JPT+2) = D2O(JPT+1,JPT+2) + DVYJZJ + DTDYDZ
      D2O(JPT+2,JPT+2) = D2O(JPT+2,JPT+2) + DVZJZJ + DTDZDZ
      D2W(IPT+2,JPT+2) = D2W(IPT+2,JPT+2) - DSDZDZ
      D2W(JPT  ,JPT  ) = D2W(JPT  ,JPT  ) + DSDXDX
      D2W(JPT  ,JPT+1) = D2W(JPT  ,JPT+1) + DSDXDY
      D2W(JPT  ,JPT+2) = D2W(JPT  ,JPT+2) + DSDXDZ
      D2W(JPT+1,JPT+1) = D2W(JPT+1,JPT+1) + DSDYDY
      D2W(JPT+1,JPT+2) = D2W(JPT+1,JPT+2) + DSDYDZ
      D2W(JPT+2,JPT+2) = D2W(JPT+2,JPT+2) + DSDZDZ
C
 4000 CONTINUE
 5000 CONTINUE
C#######################
C#####END OF SHELLS#####
C#######################
C
      RETURN
      END
      SUBROUTINE MBMAT(B,D,M,NN,ISET)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NBATRI,3,NATOM,NTREAD)
      DIMENSION D(6),D2(6),DC(6),M(6),M2(6),MC(6)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CENTR/NCENTR
      COMMON/DERIN/DERINT(1296,3,3)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/PARA3/NATMS(4),NPASS
      DATA ZERO / 0.0D+00 /
C
      DO 104 IXYZ=1,3
      TEMP=ZERO
      DO 102 I=1,NCENTR-1
      T=DERINT(NN,IXYZ,I)
      TEMP=TEMP+T
      IATOM=NATMS(I)
      DO 101 J=1,6
      B(M(J),IXYZ,IATOM,ISET)=B(M(J),IXYZ,IATOM,ISET)+T*D(J)
  101 CONTINUE
  102 CONTINUE
C
C   USE TRANSLATIONAL INVARIANCE FOR LAST ATOM
      IATOM=NATMS(NCENTR)
      DO 103 J=1,6
      B(M(J),IXYZ,IATOM,ISET)=B(M(J),IXYZ,IATOM,ISET)-TEMP*D(J)
  103 CONTINUE
C
  104 CONTINUE
C
      RETURN
C
C------------------------------------------------------------MBMAT2
C
      ENTRY MBMAT2(B,D2,M2,NN2,ISET2)
C
      DO 108 IXYZ=1,3
      TEMP=ZERO
      DO 106 I=1,NCENTR-1
      T=DERINT(NN2,IXYZ,I)
      TEMP=TEMP+T
      IATOM=NATMS(I)
      DO 105 J=3,6
      B(M2(J),IXYZ,IATOM,ISET2)=B(M2(J),IXYZ,IATOM,ISET2)+T*D2(J)
  105 CONTINUE
  106 CONTINUE
C
C   USE TRANSLATIONAL INVARIANCE FOR LAST ATOM
      IATOM=NATMS(NCENTR)
      DO 107 J=3,6
      B(M2(J),IXYZ,IATOM,ISET2)=B(M2(J),IXYZ,IATOM,ISET2)-TEMP*D2(J)
  107 CONTINUE
C
  108 CONTINUE
C
      RETURN
C
C------------------------------------------------------------MBMATC
C
      ENTRY MBMATC(B,DC,MC,NNC,ISETC)
C
      IBSET=ISETC*2-1
      JBSET=ISETC*2
      DO 116 IXYZ=1,3
      TEMP=ZERO
      DO 113 I=1,NCENTR-1
      T=DERINT(NNC,IXYZ,I)
      TEMP=TEMP+T
      IATOM=NATMS(I)
      DO 111 J=1,2
      B(MC(J),IXYZ,IATOM,IBSET)=B(MC(J),IXYZ,IATOM,IBSET)+T*DC(J)
  111 CONTINUE
      DO 112 J=3,6
      B(MC(J),IXYZ,IATOM,JBSET)=B(MC(J),IXYZ,IATOM,JBSET)+T*DC(J)
  112 CONTINUE
  113 CONTINUE
C
C   USE TRANSLATIONAL INVARIANCE FOR LAST ATOM
      IATOM=NATMS(NCENTR)
      DO 114 J=1,2
      B(MC(J),IXYZ,IATOM,IBSET)=B(MC(J),IXYZ,IATOM,IBSET)-TEMP*DC(J)
  114 CONTINUE
      DO 115 J=3,6
      B(MC(J),IXYZ,IATOM,JBSET)=B(MC(J),IXYZ,IATOM,JBSET)-TEMP*DC(J)
  115 CONTINUE
C
  116 CONTINUE
C
      RETURN
      END
      SUBROUTINE MCSCF(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                 D2N,D2O,D2F,D2W,D2T,D2TOT,DENT,WAO,
     2                 IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' ONE PARTICLE DENSITY MATRIX'/)
    2 FORMAT(//,2X,' LAGRANGIAN MATRIX'/)
C
C   OPEN THE MASTER FILE
      CALL INITMF(1)
C
C   READ IN THE ONE PARTICLE DENSITY MATRIX
      CALL MREAD(DENT,38)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,37)
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
  202 CONTINUE
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSH     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
C     CALL JK2DER
C
C     CALL SYMD
C
C     CALL SYMF
C
      RETURN
      END
      SUBROUTINE MCSCI(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                 D2N,D2O,D2F,D2W,D2T,D2TOT,DENT,WAO,
     2                 IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' ONE PARTICLE DENSITY MATRIX'/)
    2 FORMAT(//,2X,' LAGRANGIAN MATRIX'/)
C
C   OPEN THE MASTER FILE
      CALL INITMF(1)
C
C   READ IN THE ONE PARTICLE DENSITY MATRIX
      CALL MREAD(DENT,34)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,32)
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
  202 CONTINUE
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSH     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
C     CALL JK2DER
C
C     CALL SYMD
C
C     CALL SYMF
C
      RETURN
      END
      SUBROUTINE MK2IJK
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION XIDINT(1),YIDINT(1),ZIDINT(1)
      DIMENSION XJDINT(1),YJDINT(1),ZJDINT(1)
      DIMENSION XKDINT(1),YKDINT(1),ZKDINT(1)
      COMMON/ABDEN/ABDENS(1296)
      COMMON/DERIN/DERINT(1296,9)
      COMMON/DINDX/IJX(100),IJY(100),IJZ(100),KLX(100),KLY(100),KLZ(100)
      COMMON/D2INT/DXIDXI,DXIDXJ,DXIDXK,
     1             DXJDXJ,DXJDXK,DXKDXK,
     2             DYIDYI,DYIDYJ,DYIDYK,
     3             DYJDYJ,DYJDYK,DYKDYK,
     4             DZIDZI,DZIDZJ,DZIDZK,
     5             DZJDZJ,DZJDZK,DZKDZK,
     6             DXIDYI,DXJDYI,DXKDYI,
     7             DXIDYJ,DXJDYJ,DXKDYJ,
     8             DXIDYK,DXJDYK,DXKDYK,
     9             DXIDZI,DXJDZI,DXKDZI,
     A             DXIDZJ,DXJDZJ,DXKDZJ,
     B             DXIDZK,DXJDZK,DXKDZK,
     C             DYIDZI,DYJDZI,DYKDZI,
     D             DYIDZJ,DYJDZJ,DYKDZJ,
     E             DYIDZK,DYJDZK,DYKDZK
      COMMON/PARA4/MIJ,MKL,ISAME(100)
      COMMON/ROOTS/NONZER
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      COMMON/TWDII/DXIXI(2304),DYIYI(2304),DZIZI(2304)
      COMMON/TWDJJ/DXJXJ(2304),DYJYJ(2304),DZJZJ(2304)
      COMMON/TWDKK/DXKXK(2304),DYKYK(2304),DZKZK(2304)
      COMMON/TWDIJ/DXIXJ(2304),DYIYJ(2304),DZIZJ(2304)
      COMMON/TWDIK/DXIXK(2304),DYIYK(2304),DZIZK(2304)
      COMMON/TWDJK/DXJXK(2304),DYJYK(2304),DZJZK(2304)
      EQUIVALENCE (DERINT(1,1),XIDINT(1))
      EQUIVALENCE (DERINT(1,2),YIDINT(1))
      EQUIVALENCE (DERINT(1,3),ZIDINT(1))
      EQUIVALENCE (DERINT(1,4),XJDINT(1))
      EQUIVALENCE (DERINT(1,5),YJDINT(1))
      EQUIVALENCE (DERINT(1,6),ZJDINT(1))
      EQUIVALENCE (DERINT(1,7),XKDINT(1))
      EQUIVALENCE (DERINT(1,8),YKDINT(1))
      EQUIVALENCE (DERINT(1,9),ZKDINT(1))
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
      DATA DLIM / 1.0D-10 /
C
      N=0
      DO 101 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 101 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      XJ=DXJ(MX)
      XK=DXK(MX)
      YI=DYI(MY)
      YJ=DYJ(MY)
      YK=DYK(MY)
      ZI=DZI(MZ)
      ZJ=DZJ(MZ)
      ZK=DZK(MZ)
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      XJDINT(N)=XJDINT(N) + XJ * YZ
      XKDINT(N)=XKDINT(N) + XK * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      YJDINT(N)=YJDINT(N) + YJ * XZ
      YKDINT(N)=YKDINT(N) + YK * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
      ZJDINT(N)=ZJDINT(N) + ZJ * XY
      ZKDINT(N)=ZKDINT(N) + ZK * XY
C
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 101
      X=X*DENSTY
      Y=Y*DENSTY
      Z=Z*DENSTY
      XY=XY*DENSTY
      XZ=XZ*DENSTY
      YZ=YZ*DENSTY
      XITZ=XI*Z
      XJTZ=XJ*Z
      XKTZ=XK*Z
      XITY=XI*Y
      XJTY=XJ*Y
      XKTY=XK*Y
      XTYI=X*YI
      XTYJ=X*YJ
      XTYK=X*YK
C
      DXIDXI = DXIDXI + DXIXI(MX) * YZ
      DXIDXJ = DXIDXJ + DXIXJ(MX) * YZ
      DXIDXK = DXIDXK + DXIXK(MX) * YZ
      DXJDXJ = DXJDXJ + DXJXJ(MX) * YZ
      DXJDXK = DXJDXK + DXJXK(MX) * YZ
      DXKDXK = DXKDXK + DXKXK(MX) * YZ
C
      DYIDYI = DYIDYI + DYIYI(MY) * XZ
      DYIDYJ = DYIDYJ + DYIYJ(MY) * XZ
      DYIDYK = DYIDYK + DYIYK(MY) * XZ
      DYJDYJ = DYJDYJ + DYJYJ(MY) * XZ
      DYJDYK = DYJDYK + DYJYK(MY) * XZ
      DYKDYK = DYKDYK + DYKYK(MY) * XZ
C
      DZIDZI = DZIDZI + DZIZI(MZ) * XY
      DZIDZJ = DZIDZJ + DZIZJ(MZ) * XY
      DZIDZK = DZIDZK + DZIZK(MZ) * XY
      DZJDZJ = DZJDZJ + DZJZJ(MZ) * XY
      DZJDZK = DZJDZK + DZJZK(MZ) * XY
      DZKDZK = DZKDZK + DZKZK(MZ) * XY
C
      DXIDYI = DXIDYI + XITZ * YI
      DXIDYJ = DXIDYJ + XITZ * YJ
      DXIDYK = DXIDYK + XITZ * YK
      DXJDYI = DXJDYI + XJTZ * YI
      DXJDYJ = DXJDYJ + XJTZ * YJ
      DXJDYK = DXJDYK + XJTZ * YK
      DXKDYI = DXKDYI + XKTZ * YI
      DXKDYJ = DXKDYJ + XKTZ * YJ
      DXKDYK = DXKDYK + XKTZ * YK
C
      DXIDZI = DXIDZI + XITY  * ZI
      DXIDZJ = DXIDZJ + XITY  * ZJ
      DXIDZK = DXIDZK + XITY  * ZK
      DXJDZI = DXJDZI + XJTY  * ZI
      DXJDZJ = DXJDZJ + XJTY  * ZJ
      DXJDZK = DXJDZK + XJTY  * ZK
      DXKDZI = DXKDZI + XKTY  * ZI
      DXKDZJ = DXKDZJ + XKTY  * ZJ
      DXKDZK = DXKDZK + XKTY  * ZK
C
      DYIDZI = DYIDZI + XTYI * ZI
      DYIDZJ = DYIDZJ + XTYI * ZJ
      DYIDZK = DYIDZK + XTYI * ZK
      DYJDZI = DYJDZI + XTYJ * ZI
      DYJDZJ = DYJDZJ + XTYJ * ZJ
      DYJDZK = DYJDZK + XTYJ * ZK
      DYKDZI = DYKDZI + XTYK * ZI
      DYKDZJ = DYKDZJ + XTYK * ZJ
      DYKDZK = DYKDZK + XTYK * ZK
C
  101 CONTINUE
      RETURN
C
C-----------------------------------------------------------MK2IJ
C
      ENTRY MK2IJ
C
      N=0
      DO 102 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 102 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      XJ=DXJ(MX)
      YI=DYI(MY)
      YJ=DYJ(MY)
      ZI=DZI(MZ)
      ZJ=DZJ(MZ)
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      XJDINT(N)=XJDINT(N) + XJ * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      YJDINT(N)=YJDINT(N) + YJ * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
      ZJDINT(N)=ZJDINT(N) + ZJ * XY
C
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 102
      X=X*DENSTY
      Y=Y*DENSTY
      Z=Z*DENSTY
      XY=XY*DENSTY
      XZ=XZ*DENSTY
      YZ=YZ*DENSTY
      XITZ=XI*Z
      XJTZ=XJ*Z
      XITY=XI*Y
      XJTY=XJ*Y
      XTYI=X*YI
      XTYJ=X*YJ
C
      DXIDXI = DXIDXI + DXIXI(MX) * YZ
      DXIDXJ = DXIDXJ + DXIXJ(MX) * YZ
      DXJDXJ = DXJDXJ + DXJXJ(MX) * YZ
C
      DYIDYI = DYIDYI + DYIYI(MY) * XZ
      DYIDYJ = DYIDYJ + DYIYJ(MY) * XZ
      DYJDYJ = DYJDYJ + DYJYJ(MY) * XZ
C
      DZIDZI = DZIDZI + DZIZI(MZ) * XY
      DZIDZJ = DZIDZJ + DZIZJ(MZ) * XY
      DZJDZJ = DZJDZJ + DZJZJ(MZ) * XY
C
      DXIDYI = DXIDYI + XITZ * YI
      DXIDYJ = DXIDYJ + XITZ * YJ
      DXJDYI = DXJDYI + XJTZ * YI
      DXJDYJ = DXJDYJ + XJTZ * YJ
C
      DXIDZI = DXIDZI + XITY  * ZI
      DXIDZJ = DXIDZJ + XITY  * ZJ
      DXJDZI = DXJDZI + XJTY  * ZI
      DXJDZJ = DXJDZJ + XJTY  * ZJ
C
      DYIDZI = DYIDZI + XTYI * ZI
      DYIDZJ = DYIDZJ + XTYI * ZJ
      DYJDZI = DYJDZI + XTYJ * ZI
      DYJDZJ = DYJDZJ + XTYJ * ZJ
C
  102 CONTINUE
      RETURN
C
C-------------------------------------------------------MK2IK
C
      ENTRY MK2IK
C
      N=0
      DO 103 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 103 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      XK=DXK(MX)
      YI=DYI(MY)
      YK=DYK(MY)
      ZI=DZI(MZ)
      ZK=DZK(MZ)
C
C     ----- FOR SIMPLICITY LATER, THE DERIVATIVE INTEGRALS ON
C           CENTRE K WILL BE IN NJDINT                      -----
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      XJDINT(N)=XJDINT(N) + XK * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      YJDINT(N)=YJDINT(N) + YK * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
      ZJDINT(N)=ZJDINT(N) + ZK * XY
C
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 103
      X=X*DENSTY
      Y=Y*DENSTY
      Z=Z*DENSTY
      XY=XY*DENSTY
      XZ=XZ*DENSTY
      YZ=YZ*DENSTY
      XITZ=XI*Z
      XKTZ=XK*Z
      XITY=XI*Y
      XKTY=XK*Y
      XTYI=X*YI
      XTYK=X*YK
C
      DXIDXI = DXIDXI + DXIXI(MX) * YZ
      DXIDXK = DXIDXK + DXIXK(MX) * YZ
      DXKDXK = DXKDXK + DXKXK(MX) * YZ
C
      DYIDYI = DYIDYI + DYIYI(MY) * XZ
      DYIDYK = DYIDYK + DYIYK(MY) * XZ
      DYKDYK = DYKDYK + DYKYK(MY) * XZ
C
      DZIDZI = DZIDZI + DZIZI(MZ) * XY
      DZIDZK = DZIDZK + DZIZK(MZ) * XY
      DZKDZK = DZKDZK + DZKZK(MZ) * XY
C
      DXIDYI = DXIDYI + XITZ * YI
      DXIDYK = DXIDYK + XITZ * YK
      DXKDYI = DXKDYI + XKTZ * YI
      DXKDYK = DXKDYK + XKTZ * YK
C
      DXIDZI = DXIDZI + XITY  * ZI
      DXIDZK = DXIDZK + XITY  * ZK
      DXKDZI = DXKDZI + XKTY  * ZI
      DXKDZK = DXKDZK + XKTY  * ZK
C
      DYIDZI = DYIDZI + XTYI * ZI
      DYIDZK = DYIDZK + XTYI * ZK
      DYKDZI = DYKDZI + XTYK * ZI
      DYKDZK = DYKDZK + XTYK * ZK
C
  103 CONTINUE
      RETURN
C
C-----------------------------------------------------------MK2I
C
      ENTRY MK2I
C
      N=0
      DO 104 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DO 104 K=1,MKL
      MX=NX+KLX(K)
      MY=NY+KLY(K)
      MZ=NZ+KLZ(K)
      N=N+1
      X=XIN(MX)
      Y=YIN(MY)
      Z=ZIN(MZ)
      XY=X*Y
      XZ=X*Z
      YZ=Y*Z
      XI=DXI(MX)
      YI=DYI(MY)
      ZI=DZI(MZ)
C
      XIDINT(N)=XIDINT(N) + XI * YZ
      YIDINT(N)=YIDINT(N) + YI * XZ
      ZIDINT(N)=ZIDINT(N) + ZI * XY
C
      DENSTY=ABDENS(N)
      IF(DABS(DENSTY).LT.DLIM) GO TO 104
      XITZ=XI*Z*DENSTY
      XITY=XI*Y*DENSTY
      XTYI=X*YI*DENSTY
C
      DXIDXI = DXIDXI + DXIXI(MX) * YZ * DENSTY
C
      DYIDYI = DYIDYI + DYIYI(MY) * XZ * DENSTY
C
      DZIDZI = DZIDZI + DZIZI(MZ) * XY * DENSTY
C
      DXIDYI = DXIDYI + XITZ * YI
C
      DXIDZI = DXIDZI + XITY  * ZI
C
      DYIDZI = DYIDZI + XTYI * ZI
C
  104 CONTINUE
      RETURN
      END
 
      SUBROUTINE NUCTWO(D1N,D2N)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*52 TITLE
      DIMENSION D1N(3,NATOM),D2N(N3N,N3N)
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
    1 FORMAT (//,' INFINITE REPULSION, CENTERS',I3,' AND',I3)
      DATA ZERO,THREE / 0.0D+00 , 3.0D+00 /
      DATA RLIM / 1.0D-7 /
C
C   CALCULATE NUCLEAR REPULSION AND DERIVATIVES
C
      DO 101 I=1,NATOM
      DO 101 J=1,3
      D1N(J,I)=ZERO
  101 CONTINUE
      IF(NDERIV.GE.2) THEN
      DO 102 I=1,N3N
      DO 102 J=1,N3N
  102 D2N(I,J)=ZERO
      END IF
C
      DO 104 I=2,NATOM
      CHGI=ZAN(I)
      IF(DABS(CHGI).GT.RLIM) THEN
      XI=C(1,I)
      YI=C(2,I)
      ZI=C(3,I)
      DO 103 J=1,I-1
      CHGJ=ZAN(J)
      IF(DABS(CHGJ).GT.RLIM) THEN
      XJ=C(1,J)
      YJ=C(2,J)
      ZJ=C(3,J)
      XIJ=XI-XJ
      YIJ=YI-YJ
      ZIJ=ZI-ZJ
      RR=XIJ*XIJ+YIJ*YIJ+ZIJ*ZIJ
        IF(RR.EQ.ZERO) THEN
        WRITE(6,1) I,J
        CALL EXIT
        END IF
      R=DSQRT(RR)
      REP=CHGI*CHGJ/R
      ENERGY=ENERGY+REP
C
      REP3S2=REP/RR
      D1N(1,I)=D1N(1,I)-XIJ*REP3S2
      D1N(2,I)=D1N(2,I)-YIJ*REP3S2
      D1N(3,I)=D1N(3,I)-ZIJ*REP3S2
      D1N(1,J)=D1N(1,J)+XIJ*REP3S2
      D1N(2,J)=D1N(2,J)+YIJ*REP3S2
      D1N(3,J)=D1N(3,J)+ZIJ*REP3S2
C
      IF(NDERIV.LE.1) GO TO 201
      REP5S2=REP3S2/RR
      REP5SS=REP5S2*THREE
      IPT=(I-1)*3+1
      JPT=(J-1)*3+1
      DRDXDX=-REP3S2+REP5SS*XIJ*XIJ
      DRDXDY=        REP5SS*XIJ*YIJ
      DRDXDZ=        REP5SS*XIJ*ZIJ
      DRDYDY=-REP3S2+REP5SS*YIJ*YIJ
      DRDYDZ=        REP5SS*YIJ*ZIJ
      DRDZDZ=-REP3S2+REP5SS*ZIJ*ZIJ
      D2N(IPT  ,IPT  )=D2N(IPT  ,IPT  )+DRDXDX
      D2N(IPT  ,IPT+1)=D2N(IPT  ,IPT+1)+DRDXDY
      D2N(IPT  ,IPT+2)=D2N(IPT  ,IPT+2)+DRDXDZ
      D2N(IPT+1,IPT+1)=D2N(IPT+1,IPT+1)+DRDYDY
      D2N(IPT+1,IPT+2)=D2N(IPT+1,IPT+2)+DRDYDZ
      D2N(IPT+2,IPT+2)=D2N(IPT+2,IPT+2)+DRDZDZ
      D2N(IPT  ,JPT  )=D2N(IPT  ,JPT  )-DRDXDX
      D2N(IPT  ,JPT+1)=D2N(IPT  ,JPT+1)-DRDXDY
      D2N(IPT  ,JPT+2)=D2N(IPT  ,JPT+2)-DRDXDZ
      D2N(IPT+1,JPT  )=D2N(IPT+1,JPT  )-DRDXDY
      D2N(IPT+1,JPT+1)=D2N(IPT+1,JPT+1)-DRDYDY
      D2N(IPT+1,JPT+2)=D2N(IPT+1,JPT+2)-DRDYDZ
      D2N(IPT+2,JPT  )=D2N(IPT+2,JPT  )-DRDXDZ
      D2N(IPT+2,JPT+1)=D2N(IPT+2,JPT+1)-DRDYDZ
      D2N(IPT+2,JPT+2)=D2N(IPT+2,JPT+2)-DRDZDZ
      D2N(JPT  ,JPT  )=D2N(JPT  ,JPT  )+DRDXDX
      D2N(JPT  ,JPT+1)=D2N(JPT  ,JPT+1)+DRDXDY
      D2N(JPT  ,JPT+2)=D2N(JPT  ,JPT+2)+DRDXDZ
      D2N(JPT+1,JPT+1)=D2N(JPT+1,JPT+1)+DRDYDY
      D2N(JPT+1,JPT+2)=D2N(JPT+1,JPT+2)+DRDYDZ
      D2N(JPT+2,JPT+2)=D2N(JPT+2,JPT+2)+DRDZDZ
  201 CONTINUE
      END IF
  103 CONTINUE
      END IF
  104 CONTINUE
C
      TITLE='NUCLEAR CONTRIBUTION TO FIRST DERIVATIVES          '
      CALL PRNONE(TITLE,D1N)
C
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2N,N3N)
      TITLE='NUCLEAR CONTRIBUTION TO SECOND DERIVATIVES         '
      CALL PRNTWO(TITLE,D2N)
      END IF
C
      RETURN
      END
      SUBROUTINE PRNONE(TITLE,D1E)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1E(3,NATOM)
      CHARACTER*52 TITLE
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
    1 FORMAT (//,T10,A52,//,' CENTER',T15,'X',T35,'Y',T55,'Z')
    2 FORMAT (/,1X,I4,3F20.12)
C
      WRITE (6,1) TITLE
      DO 101 I=1,NATOM
      WRITE (6,2) I,D1E(1,I),D1E(2,I),D1E(3,I)
  101 CONTINUE
      RETURN
      END
      SUBROUTINE PRNTWO(TITLE,D2E)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D2E(N3N,N3N)
      CHARACTER*52 TITLE
      CHARACTER LET(3)*1
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      DATA LET /'X','Y','Z'/
    1 FORMAT (//,T10,A52,//,(I26,3I30))
    2 FORMAT (/,T7,12(9X,A1))
    3 FORMAT (/,I5,A1,4X,(12F10.6))
C
      WRITE(6,1) TITLE,(IC,IC=1,NATOM)
      WRITE(6,2) ((LET(I),I=1,3),IC=1,NATOM)
      DO 102 IC=1,NATOM
      DO 101 I=1,3
      IT=3*(IC-1)+I
      WRITE(6,3) IC,LET(I),(D2E(IT,IDQ),IDQ=1,N3N)
  101 CONTINUE
  102 CONTINUE
      RETURN
      END
      SUBROUTINE RDFR(T,MINK,MAXK,LKT,MINL,MAXL,LLT,NTR)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION V(10),T(10,10)
      COMMON/GAUSC/TT(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      DATA ZERO / 0.0D+00 /
C
C   RIGHT MULTIPLY T BY R
C   RESULT BACK IN T
C
      GO TO (203,202,201),LLT
C
C     D SHELL
C
  201 CONTINUE
      DO 104 K=MINK,MAXK
      DO 102 L=5,10
      DUM=ZERO
      DO 101 N=5,10
  101 DUM=DUM+T(K,N)*DTR(N-4,L-4,NTR)
  102 V(L)=DUM
      DO 103 L=5,10
  103 T(K,L)=V(L)
  104 CONTINUE
      GO TO 203
C
C     P SHELL
C
  202 CONTINUE
      DO 108 K=MINK,MAXK
      DO 106 L=2,4
      DUM=ZERO
      DO 105 N=2,4
  105 DUM=DUM+T(K,N)*PTR(N-1,L-1,NTR)
  106 V(L)=DUM
      DO 107 L=2,4
  107 T(K,L)=V(L)
  108 CONTINUE
C
C   LEFT MULTIPLY T BY R
C   RESULT BACK IN T
C
  203 CONTINUE
      GO TO (210,205,204), LKT
C
C     D SHELL
C
  204 CONTINUE
      DO 114 L=MINL,MAXL
      DO 112 K=5,10
      DUM=ZERO
      DO 111 N=5,10
      DUM=DUM+T(N,L)*DTR(N-4,K-4,NTR)
  111 CONTINUE
      V(K)=DUM
  112 CONTINUE
      DO 113 K=5,10
      T(K,L)=V(K)
  113 CONTINUE
  114 CONTINUE
      GO TO 210
C
C     P SHELL
C
  205 CONTINUE
      DO 118 L=MINL,MAXL
      DO 116 K=2,4
      DUM=ZERO
      DO 115 N=2,4
      DUM=DUM+T(N,L)*PTR(N-1,K-1,NTR)
  115 CONTINUE
      V(K)=DUM
  116 CONTINUE
      DO 117 K=2,4
      T(K,L)=V(K)
  117 CONTINUE
  118 CONTINUE
C
  210 CONTINUE
      RETURN
      END
      SUBROUTINE READMF
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/CALIF/LPARA(1024),APARA(1024)
      COMMON/COUPL/ALPA(5,5),BETA(5,5)
      COMMON/ENRGY/ESCF,ENUC
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/MFSEC/MASTER,NSECT
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      DATA ZERO,QURT,HALF,ONE / 0.0D+00 , 0.25D+00 , 0.5D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' PARAMETERS'/
     * 2X,' NBASIS = ',I8/
     * 2X,' NBFAO  = ',I8/
     * 2X,' NBATRI = ',I8/
     * 2X,' NATOM  = ',I8/
     * 2X,' N3N    = ',I8/
     * 2X,' NATRI  = ',I8/
     * 2X,' IOCC   = ',I8/
     * 2X,' JOCC   = ',I8/
     * 2X,' KOCC   = ',I8/
     * 2X,' NTYPES = ',I8/
     * 2X,' NTYPEP = ',I8/
     * 2X,' ISTYPE = ',I8/
     * 2X,' ICTYPE = ',I8/
     * 2X,' IRAMAN = ',I8/
     * 2X,' IAFOCK = ',I8/
     * 2X,' IDFOCK = ',I8/
     * 2X,' IDINT  = ',I8/
     * 2X,' IPRNT  = ',I8/)
    2 FORMAT(//,2X,' ALPA MATRIX'/)
    3 FORMAT(//,2X,' BETA MATRIX'/)
    4 FORMAT(//,2X,' NO.',8X,' FOCC',6X,' NSORB',7X,' NSTR',7X,' NEND'/)
    5 FORMAT(2X,I4,3X,F10.5,7X,I5,7X,I5,7X,I5)
C
      CALL INITMF(1)
C
C   READ IN SCF PARAMETERS
      NBASIS=LPARA(3)
      NBFAO=LPARA(11)
      NBATRI=IOFF(NBFAO+1)
      NBATR2=intowp(NBATRI)
      IOCC=LPARA(7)
      KOCC=LPARA(8)
      JOCC=LPARA(9)
      NATOM=LPARA(10)
      N3N=LPARA(17)
      NATRI=IOFF(N3N+1)
      NTYPES=LPARA(18)
      NTYPEP=NTYPES+1
      ENUC=APARA(1)
      ESCF=APARA(2)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1) NBASIS,NBFAO,NBATRI,NATOM,N3N,NATRI,IOCC,JOCC,KOCC,
     1  NTYPES,NTYPEP,ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT,IPRNT
C
C   READ IN OCCUPATION NUMBERS AND COUPLING CONSTANTS
  201 CONTINUE
      DO 101 I=1,10
      NSORB(I)=LPARA(I+40)
      FOCC(I)=APARA(I+40)
  101 CONTINUE
      DO 102 I=1,NTYPEP
      DO 102 J=1,NTYPEP
      ALPA(I,J)=ZERO
      BETA(I,J)=ZERO
  102 CONTINUE
      IJ=0
      DO 103 I=1,NTYPES
      DO 103 J=1,I
      IJ=IJ+1
      ALPA(I,J)= (ONE-APARA(10+IJ))*FOCC(I)*FOCC(J)*HALF
      BETA(I,J)=-(ONE-APARA(25+IJ))*FOCC(I)*FOCC(J)*QURT
      IF(I.EQ.J) GO TO 103
      ALPA(J,I)=ALPA(I,J)
      BETA(J,I)=BETA(I,J)
  103 CONTINUE
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL MATOUT(ALPA,5,5,NTYPEP,NTYPEP,6)
      WRITE(6,3)
      CALL MATOUT(BETA,5,5,NTYPEP,NTYPEP,6)
  202 CONTINUE
C
C   FORM OCCUPATION ARRAYS
      NSTR(1)=1
      NEND(1)=NSORB(1)
      DO 104 ITYP=2,NTYPEP
      NSTR(ITYP)=NEND(ITYP-1)+1
      NEND(ITYP)=NSTR(ITYP)+NSORB(ITYP)-1
  104 CONTINUE
      DO 106 ITYP=1,NTYPEP
      DO 105 I=NSTR(ITYP),NEND(ITYP)
  105 MOTYP(I)=ITYP
  106 CONTINUE
      IF(IPRNT.LE.3) GO TO 203
      WRITE(6,4)
      DO 107 I=1,NTYPEP
  107 WRITE(6,5) I,FOCC(I),NSORB(I),NSTR(I),NEND(I)
  203 CONTINUE
C
      RETURN
      END
      SUBROUTINE REDUN2(II,JJ,KK,LL,Q4,KATOM)
C     ----- THIS VERSION HALVES Q4 TO ACCOUNT FOR DUPLICATION -----
C                     OF [II,JJ] OR [IJ,IJ]
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION KATOM(200)
      LOGICAL IANDJ,IANDK,IANDL,JANDK,JANDL,KANDL
      COMMON/PARA3/NATMS(4),NPASS
      COMMON/SHELL/ISH,JSH,KSH,LSH
      DATA HALF / 0.5D+00 /
C
      DO 101 I=1,4
  101 NATMS(I)=0
C
      IAT=KATOM(II)
      JAT=KATOM(JJ)
      KAT=KATOM(KK)
      LAT=KATOM(LL)
      IANDJ=IAT.EQ.JAT
      IANDK=IAT.EQ.KAT
      IANDL=IAT.EQ.LAT
      JANDK=JAT.EQ.KAT
      JANDL=JAT.EQ.LAT
      KANDL=KAT.EQ.LAT
      IF(.NOT.IANDJ) GO TO 300
      IF(.NOT.IANDK) GO TO 200
      IF(.NOT.IANDL) GO TO 100
C
C     ----- IAT = JAT = KAT = LAT -----
C
      NPASS=0
      GO TO 1000
C
C     ----- IAT = JAT = KAT _ LAT ----
C
  100 CONTINUE
      NATMS(1)=LAT
      NATMS(2)=IAT
      ISH=LL
      JSH=KK
      KSH=JJ
      LSH=II
      NPASS=4
      GO TO 1000
C
C     ----- IAT = JAT _ KAT = LAT ----
C
  200 IF(.NOT.KANDL) GO TO 250
      IF(KK.EQ.LL) Q4=Q4*HALF
      NATMS(1)=KAT
      NATMS(2)=LAT
      NATMS(3)=IAT
      ISH=KK
      JSH=LL
      KSH=II
      LSH=JJ
      NPASS=2
      GO TO 1000
C
C     ----- IAT = JAT _ KAT _ LAT -----
C
  250 CONTINUE
      NATMS(1)=KAT
      NATMS(2)=LAT
      NATMS(3)=IAT
      ISH=KK
      JSH=LL
      KSH=II
      LSH=JJ
      NPASS=2
      GO TO 1000
C
C     ----- IAT = KAT = LAT _ JAT -----
C
  300 IF(.NOT.IANDK) GO TO 500
      IF(.NOT.IANDL) GO TO 400
      NATMS(1)=JAT
      NATMS(2)=IAT
      ISH=JJ
      JSH=II
      KSH=KK
      LSH=LL
      NPASS=4
      GO TO 1000
C
C     ----- IAT = KAT _ JAT = LAT -----
C     ----- IAT = KAT _ JAT _ LAT -----
C
  400 CONTINUE
      IF(II.EQ.KK.AND.JJ.EQ.LL) Q4=Q4*HALF
      NATMS(1)=JAT
      NATMS(2)=LAT
      NATMS(3)=IAT
      ISH=JJ
      JSH=II
      KSH=LL
      LSH=KK
      NPASS=3
      GO TO 1000
C
C     ----- JAT = KAT = LAT _ IAT -----
C
  500 IF(.NOT.JANDK) GO TO 700
      IF(.NOT.JANDL) GO TO 600
      NATMS(1)=IAT
      NATMS(2)=JAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=4
      GO TO 1000
C
C     ----- JAT = KAT _ IAT _ LAT -----
C
  600 CONTINUE
      NATMS(1)=IAT
      NATMS(2)=LAT
      NATMS(3)=JAT
      ISH=II
      JSH=JJ
      KSH=LL
      LSH=KK
      NPASS=3
      GO TO 1000
C
C     ----- JAT = LAT _ IAT _ KAT -----
C
  700 IF(.NOT.JANDL) GO TO 800
      NATMS(1)=IAT
      NATMS(2)=KAT
      NATMS(3)=JAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=3
      GO TO 1000
C
C     ----- KAT = LAT _ IAT _ JAT ----
C
  800 IF(.NOT.KANDL) GO TO 900
      NATMS(1)=IAT
      NATMS(2)=JAT
      NATMS(3)=KAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=2
      GO TO 1000
C
C     ----- IAT _ JAT _ KAT _ LAT ----
C
  900 CONTINUE
      NATMS(1)=IAT
      NATMS(2)=JAT
      NATMS(3)=KAT
      NATMS(4)=LAT
      ISH=II
      JSH=JJ
      KSH=KK
      LSH=LL
      NPASS=1
C
C     -----
C
 1000 CONTINUE
      RETURN
      END
      SUBROUTINE SCFCI(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                 D2N,D2O,D2F,D2W,D2T,D2TOT,DENS,DENT,WAO,
     2                 IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' ONE PARTICLE DENSITY MATRIX'/)
    2 FORMAT(//,2X,' LAGRANGIAN MATRIX'/)
C
C   OPEN THE MASTER FILE
      CALL INITMF(1)
C
C   READ IN THE ONE PARTICLE DENSITY MATRIX
      CALL MREAD(DENT,34)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,32)
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
  202 CONTINUE
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSF     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
C     CALL JK2DER
C
C     CALL SYMD
C
C     CALL SYMF
C
      RETURN
      END
      SUBROUTINE SCFDER(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                  D2N,D2O,D2F,D2W,D2T,D2TOT,DENS,DENT,WAO,
     2                  IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
C
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSH     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
C     TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
C     CALL PRNONE(TITLE,D1O)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
C
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2F,N3N)
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO SECOND DERIVATIVES'
C     CALL PRNTWO(TITLE,D2F)
      CALL FOLD(D2O,N3N)
      CALL VADD(D2O,D2O,D2F,N3N*N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO SECOND DERIVATIVES   '
      CALL PRNTWO(TITLE,D2O)
      END IF
C
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2W,N3N)
      TITLE='OVERLAP CONTRIBUTION TO SECOND DERIVATIVES        '
      CALL PRNTWO(TITLE,D2W)
      END IF
C
C   CALCULATE TWO-ELECTRON CONTRIBUTIONS
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      IC5=IC4+NBATRI*6
      ICMAX=IC5+NBATRI*N3N*NTREAD
C.................                  B1MAT...
      CALL JK2DER(DENS,DENT,D1T,D2T,CC(IC5))
C
C   SYMMETRIZE TWO-ELECTRON FIRST DERIVATIVES
      CALL SYMD(D1T)
      TITLE='TWO-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1T)
C
C   SYMMETRIZE TWO-ELECTRON SECOND DERIVATIVES
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2T,N3N)
      CALL SYMH(D2T)
      TITLE='TWO-ELECTRON CONTRIBUTION TO SECOND DERIVATIVES   '
      CALL PRNTWO(TITLE,D2T)
      END IF
C
C   SUM UP ALL CONTRIBUTIONS FOR FIRST DERIVATIVES
      CALL VADD(D1TOT,D1O,D1W,N3N)
      CALL VADD(D1TOT,D1T,D1TOT,N3N)
      CALL VADD(D1TOT,D1N,D1TOT,N3N)
      TITLE='-----TOTAL SCF FIRST DERIVATIVES-----             '
      CALL PRNONE(TITLE,D1TOT)
C
C   SUM UP ALL CONTRIBUTIONS FOR SECOND DERIVATIVES
      IF(NDERIV.GE.2) THEN
      CALL VADD(D2TOT,D2O,D2W,N3N*N3N)
      CALL VADD(D2TOT,D2T,D2TOT,N3N*N3N)
      CALL VADD(D2TOT,D2N,D2TOT,N3N*N3N)
      TITLE='-----TOTAL SCF SECOND DERIVATIVES (AO PART)-----  '
      CALL PRNTWO(TITLE,D2TOT)
      END IF
C
      IF(IDFOCK.GE.1) THEN
C   SYMMETRIZE B1 MATRIX ELEMENTS
C................B1MAT...
      CALL SYMF1(CC(IC5))
C
C   FORM TAPE42
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      IC5=IC4+NBATRI*6
      IC6=IC5+NBATRI*N3N*NTREAD
      ICMAX=IC6+NBATRI
C.................            DFH     DFS     B1MAT   SS......
      CALL DERFK1(D1TOT,D2TOT,CC(IC1),CC(IC2),CC(IC5),CC(IC6))
C
      END IF
C
C     IF(IDFOCK.GE.2) THEN
C   SYMMETRIZE B2 MATRIX ELEMENTS
C................B2MAT...
C     CALL SYMF2(CC(IC5))
C
C   FORM TAPE44
C     IC1=1
C     IC2=IC1+NBATRI*N3N
C     IC3=IC2+NBATRI*3
C     IC4=IC3+NBATRI*NATRI
C     IC5=IC4+NBATRI*6
C     IC6=IC5+NBATRI*N3N*NTREAD
C     ICMAX=IC6+NBATRI
C.................DSH     DSS     B2MAT    SS.....
C     CALL DERFK2(CC(IC3),CC(IC4),CC(IC6),CC(IC7))
C
C     END IF
C
C   SAVE FIRST DERIVATIVES ON TAPE11 AND TAPE30
      CALL WRDER(D1TOT)
C
      RETURN
      END
      SUBROUTINE SCFMAT(WAO,EIG,OCC,EAO,UAS,ESO,EE,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION WAO(NBATRI)
      DIMENSION UAS(NBFAO,NBASIS),EIG(NBASIS),OCC(NBASIS)
      DIMENSION ESO(NBASIS,NBASIS),EAO(NBFAO,NBASIS)
      DIMENSION EE(NBFAO*NBFAO),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION NLAMDA(10),NCLOSD(10),NOPEN(10),OCT(2)
      DIMENSION ALPT(15),BETT(15),ALPC(15),BETC(15)
      DIMENSION I30(200),A30(100)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COUPL/ALPA(5,5),BETA(5,5)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/OPEN2/GOCC(10)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      COMMON/TCSCF/SOCC1,SOCC2,SOCC12
      EQUIVALENCE (I30,A30)
      DATA ZERO,QURT,HALF,ONE,TWO / 0.0D+00 , 0.25D+00 , 0.5D+00 ,
     1                              1.0D+00 , 2.0D+00  /
    1 FORMAT(//,2X,' UAS MATRIX'/)
    2 FORMAT(//,2X,' NOPEN = ',10I5/)
    3 FORMAT(//,2X,' ALPT = ',10F10.6/)
    4 FORMAT(//,2X,' BETT = ',10F10.6/)
    5 FORMAT(//,2X,' ESO MATRIX'/)
    6 FORMAT(//,2X,' EAO MATRIX'/)
    7 FORMAT(//,2X,' WAO MATRIX (MO BASIS)'/)
    8 FORMAT(//,2X,' WAO MATRIX (AO BASIS)'/)
    9 FORMAT(//,2X,' ALPA MATRIX'/)
   10 FORMAT(//,2X,' BETA MATRIX'/)
C
C   GET CONSTANTS FROM TAPE30
      ITAP30=30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
C
      IEND    = I30(1)
      MPOINT  = I30(2)
      MCONST  = I30(3)
      MCALCS  = I30(4)
      NCALCS  = I30(5)
      MXCOEF  = I30(42)
      IOPEN   = I30(43)
C
C   READ IN AO-SO MATRIX
      IPOS=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,IPOS,JUNK)
      CALL WREADW(ITAP30,UAS,intowp(NBFAO*NBASIS),I30(29),JUNK)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL MATOUT(UAS,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
  201 CONTINUE
      IPOS=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,IPOS,JUNK)
      IPOS=LOCCAL+60
      CALL WREADW(ITAP30,I30,20,IPOS,JUNK)
      LOCVEC=I30(1)
C
C   READ IN SO-MO EIGENVECTORS
      CALL WREADW(ITAP30,EE,intowp(MXCOEF),LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,EIG,intowp(NBASIS),LOCVEC,LOCVEC)
      LOCVEC=LOCVEC+NSYM
      CALL WREADW(ITAP30,NLAMDA,NSYM,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,NCLOSD,NSYM,LOCVEC,LOCVEC)
C
C   READ IN COUPLING CONSTANTS FOR OPEN SHELLS
      IF(IOPEN.NE.0) THEN
      KOPEN=IABS(IOPEN)
      CALL WREADW(ITAP30,NOPEN,NSYM,LOCVEC,LOCVEC)
      IF(IPRNT.GT.3)
     *WRITE(6,2) (NOPEN(I),I=1,NSYM)
      CALL WREADW(ITAP30,ALPT,intowp(KOPEN),LOCVEC,LOCVEC)
      IF(IPRNT.GT.3)
     *WRITE(6,3) (ALPT(I),I=1,KOPEN)
      CALL WREADW(ITAP30,BETT,intowp(KOPEN),LOCVEC,LOCVEC)
      IF(IPRNT.GT.3)
     *WRITE(6,4) (BETT(I),I=1,KOPEN)
      END IF
C
C   READ IN COUPLING CONSTANTS FOR TCSCF
      IF(IOPEN.GE.0) GO TO 301
      COEF1=ONE-ALPT(1)
      COEF2=ONE-ALPT(3)
      OCT(1)=TWO/COEF1
      OCT(2)=TWO/COEF2
      SOCC1=COEF1*HALF
      SOCC2=COEF2*HALF
      SOCC12=-DSQRT(SOCC1*SOCC2)*TWO
C
C   FORM OCCUPATION VECTOR
  301 CONTINUE
      DO 101 I=1,NBASIS
  101 OCC(I)=ZERO
      ITC=0
      I=0
      DO 105 ISM=1,NSYM
      DO 103 J=I+1,I+NCLOSD(ISM)
      OCC(J)=TWO
  103 CONTINUE
      K=I+NCLOSD(ISM)
      IF(ISTYPE.EQ.5.AND.NOPEN(ISM).NE.0) GO TO 302
      IF(ISTYPE.EQ.6.AND.NOPEN(ISM).NE.0) GO TO 302
      IF(IOPEN.EQ.0) GO TO 303
      DO 104 J=K+1,K+NOPEN(ISM)
      OCC(J)=ONE
  104 CONTINUE
      GO TO 303
  302 CONTINUE
CWA
      DO 305 IWA=1,NOPEN(ISM)
      ITC=ITC+1
  305 OCC(K+IWA)=OCT(ITC)
  303 CONTINUE
      I=I+NLAMDA(ISM)
  105 CONTINUE
C
C   FORM SO-MO EIGENVECTOR MATRIX
      DO 106 I=1,NBASIS
      DO 106 J=1,NBASIS
      ESO(I,J)=ZERO
  106 CONTINUE
      I=0
      J=0
      DO 108 ISYM=1,NSYM
      N=NLAMDA(ISYM)
      DO 107 K=J+1,J+N
      DO 107 L=J+1,J+N
      I=I+1
      ESO(L,K)=EE(I)
  107 CONTINUE
      J=J+N
  108 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 202
      WRITE(6,5)
      CALL EIGOUT(ESO,EIG,OCC,NBASIS,NBASIS,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM SO TO AO BASIS
  202 CONTINUE
      DO 110 I=1,NBFAO
      DO 110 J=1,NBASIS
      VALU=ZERO
      DO 109 K=1,NBASIS
      VALU=VALU+UAS(I,K)*ESO(K,J)
  109 CONTINUE
      EAO(I,J)=VALU
  110 CONTINUE
      IF(IPRNT.LE.3) GO TO 203
      WRITE(6,6)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C   READ IN THE LAGRANGAIN MATRIX
  203 CONTINUE
      CALL WREADW(ITAP30,EE,NBATR2,LOCVEC,JUNK)
      IF(IPRNT.LE.3) GO TO 204
      WRITE(6,7)
      CALL PRINT(EE,NBFAO*NBFAO,NBASIS,6)
C
C   TRANSFORM THE LAGRANGIAN MATRIX FROM MO TO AO BASIS
  204 CONTINUE
      IJ=0
      DO 111 I=1,NBASIS
      DO 111 J=1,I
      IJ=IJ+1
      T(I,J)=EE(IJ)
      T(J,I)=EE(IJ)
  111 CONTINUE
      DO 113 I=1,NBASIS
      DO 113 JJ=1,NBFAO
      VALU=ZERO
      DO 112 J=1,NBASIS
      VALU=VALU+EAO(JJ,J)*T(I,J)
  112 CONTINUE
      U(I,JJ)=VALU
  113 CONTINUE
      IIJJ=0
      DO 115 II=1,NBFAO
      DO 115 JJ=1,II
      IIJJ=IIJJ+1
      VALU=ZERO
      DO 114 I=1,NBASIS
      VALU=VALU+EAO(II,I)*U(I,JJ)
  114 CONTINUE
      WAO(IIJJ)=VALU*TWO
  115 CONTINUE
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,8)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   FORM THE COUPLING CONSTANT MATRICES
  205 CONTINUE
      NNP=IOFF(NTYPES+2)
      DO 116 I=1,NNP
      ALPC(I)=ZERO
      BETC(I)=ZERO
  116 CONTINUE
C
C   FOR CLOSED SHELL
      FOCC(1)=TWO
C
C   FOR OPEN-SHELL
      IF(ISTYPE.EQ.5.OR.ISTYPE.EQ.6) GO TO 206
      II=1
      IF(NUNIQ.EQ.0) GO TO 207
      DO 117 I=1,NUNIQ
      II=II+1
      FOCC(II)=GOCC(I)
  117 CONTINUE
      DO 118 I=1,NUNIQ
      II=I+1
      K=MOPN(I,1)
      DO 118 J=1,I
      JJ=J+1
      L=MOPN(J,1)
      IIJJ=IOFF(II)+JJ
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      ALPC(IIJJ)=ALPT(KL)
      BETC(IIJJ)=BETT(KL)
  118 CONTINUE
      GO TO 207
C
C FOR TCSCF-GR
  206 CONTINUE
      FOCC(2)=OCT(1)
      FOCC(3)=OCT(2)
      ALPC(3)=ONE-ONE/FOCC(2)
      ALPC(5)=ONE
      ALPC(6)=ONE-ONE/FOCC(3)
      BETC(3)=ONE
      BETC(5)=BETT(2)
      BETC(6)=ONE
C
C   VIRTUAL
  207 CONTINUE
      FOCC(II+1)=ZERO
C
      DO 119 I=1,NTYPEP
      DO 119 J=1,NTYPEP
      ALPA(I,J)=ZERO
      BETA(I,J)=ZERO
  119 CONTINUE
      IJ=0
      DO 120 I=1,NTYPES
      DO 120 J=1,I
      IJ=IJ+1
      ALPA(I,J)= (ONE-ALPC(IJ))*FOCC(I)*FOCC(J)*HALF
      BETA(I,J)=-(ONE-BETC(IJ))*FOCC(I)*FOCC(J)*QURT
      IF(I.EQ.J) GO TO 120
      ALPA(J,I)=ALPA(I,J)
      BETA(J,I)=BETA(I,J)
  120 CONTINUE
      IF(IPRNT.LE.2) GO TO 210
      WRITE(6,9)
      CALL MATOUT(ALPA,5,5,NTYPEP,NTYPEP,6)
      WRITE(6,10)
      CALL MATOUT(BETA,5,5,NTYPEP,NTYPEP,6)
  210 CONTINUE
C
      CALL RCLOSE(ITAP30,3)
      RETURN
      END
      SUBROUTINE SETNOS
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
C
C   FORCE THE NO-SYMMETRY CALCULATION FOR CI SECOND DERIVATIVE
    1 FORMAT(/'   $$$$$ SET NO-SYMMETRY FLAG $$$$$'/
     1,       '   VALUES BEFORE SETNOS    NTRANS=',I3)
    2 FORMAT( '  TRANS=',9F10.6)
    3 FORMAT( '   ISO =',10I10)
    4 FORMAT(/'   %%%%%%%%%% AFTER SETNO  NTRANS=',I3)
C
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1) NT
      WRITE(6,2) (T(I),I=1,MXT)
      WRITE(6,3) ((ISO(I,J),I=1,NSHELL),J=1,NISO)
C
  201 CONTINUE
      NT=1
      MXT=9
      DO 101 I=1,9
  101 T(I)=ZERO
      T(1)=ONE
      T(5)=ONE
      T(9)=ONE
      DO 102 I=1,NSHELL
      INDIN(1)=I
cets changed for apollo
      CALL ysoin
      ISO(I,1)=INDOUT(1)
  102 CONTINUE
      IF(IPRNT.LE.3) GO TO 202
      WRITE(6,4) NT
      WRITE(6,2) (T(I),I=1,MXT)
      WRITE(6,3) (ISO(I,1),I=1,NSHELL)
C
  202 CONTINUE
      RETURN
      END
      SUBROUTINE SYMD(D1T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1T(3,NATOM)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,' GRADIENT BEFORE SYMDE')
    2 FORMAT (/,' ICT:',(15I4))
    3 FORMAT (/,' INVT:',(15I4))
    4 FORMAT (//,' TRANSFORMATION MATRICES:',/,(3(/,1X,3F15.6),//))
C
      WRITE(3,1)
      CALL MATOUT(D1T,3,NATOM,3,NATOM,3)
      WRITE(3,2) ICT
      WRITE(3,3) INVT
      WRITE(3,4) (((PTR(IQ,JQ,KQ),IQ=1,3),JQ=1,3),KQ=1,NT)
C
      IF(NT.EQ.1) RETURN
C
C   SYMMETRIZE GRADIENT VECTOR
C
      DO 105 IC=1,NATOM
      DO 101 IT=1,NT
      IF(ICT(IC,IT).GT.IC) GO TO 105
  101 CONTINUE
      DEDX=ZERO
      DEDY=ZERO
      DEDZ=ZERO
      DO 102 IT=1,NT
      ICNU=ICT(IC,IT)
      DEDXP=D1T(1,ICNU)
      DEDYP=D1T(2,ICNU)
      DEDZP=D1T(3,ICNU)
      DEDX=DEDX+DEDXP*PTR(1,1,IT)+DEDYP*PTR(2,1,IT)+DEDZP*PTR(3,1,IT)
      DEDY=DEDY+DEDXP*PTR(1,2,IT)+DEDYP*PTR(2,2,IT)+DEDZP*PTR(3,2,IT)
      DEDZ=DEDZ+DEDXP*PTR(1,3,IT)+DEDYP*PTR(2,3,IT)+DEDZP*PTR(3,3,IT)
  102 CONTINUE
      D1T(1,IC)=DEDX
      D1T(2,IC)=DEDY
      D1T(3,IC)=DEDZ
      DO 104 IT=1,NT
      ICNU=ICT(IC,IT)
      IF(ICNU.EQ.IC) GO TO 104
      IF(IT.EQ.NT) GO TO 201
      IT1=IT+1
      DO 103 JT=IT1,NT
      IF(ICT(IC,JT).EQ.ICNU) GO TO 104
  103 CONTINUE
  201 CONTINUE
      JT=INVT(IT)
      D1T(1,ICNU)=D1T(1,IC)*PTR(1,1,JT)+D1T(2,IC)*PTR(2,1,JT)
     1                                 +D1T(3,IC)*PTR(3,1,JT)
      D1T(2,ICNU)=D1T(1,IC)*PTR(1,2,JT)+D1T(2,IC)*PTR(2,2,JT)
     1                                 +D1T(3,IC)*PTR(3,2,JT)
      D1T(3,ICNU)=D1T(1,IC)*PTR(1,3,JT)+D1T(2,IC)*PTR(2,3,JT)
     1                                 +D1T(3,IC)*PTR(3,3,JT)
  104 CONTINUE
  105 CONTINUE
C
#ifdef APOLLO
      fact=one/dble(nt)
#else
      FACT=ONE/DFLOAT(NT)
#endif
      DO 106 J=1,NATOM
      DO 106 I=1,3
      D1T(I,J)=D1T(I,J)*FACT
  106 CONTINUE
C
      RETURN
      END
      SUBROUTINE SYMF1(B)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NBATRI,3,NATOM,NTREAD)
      DIMENSION TX(10,10),TY(10,10),TZ(10,10)
      DIMENSION UX(10,10),UY(10,10),UZ(10,10)
      DIMENSION VX(10,10),VY(10,10),VZ(10,10)
      DIMENSION MI(8),MJ(8),MIAT(8),MOP(8)
      LOGICAL IANDJ
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
C
      IF(NT.EQ.1) RETURN
C
#ifdef APOLLO
      fact=one/dble(nt)
#else
      FACT=ONE/DFLOAT(NT)
#endif
C
C::::::::::::::::::::::::::
C:::::OPEN-SHELL TYPES:::::
C::::::::::::::::::::::::::
C
      DO 1000 IBSET=1,NTREAD
C
C     ----- FIND A BLOCK (I,J) -----
C
C#################
C#####I SHELL#####
C#################
C
      DO 900 II=1,NSHELL
C
      DO 101 ITR=1,NISO
  101 INDOUT(ITR)=ISO(II,ITR)
      CALL YSOOUT
      DO 102 ITR=1,NT
      IST=INDIN(ITR)
      IF(IST.GT.II) GO TO 900
  102 MI(ITR)=IST
      LIT=KTYPE(II)
      MINI=KMIN(II)
      MAXI=KMAX(II)
      LOCI=KLOC(II)-MINI
C
C#################
C#####J SHELL#####
C#################
C
      DO 800 JJ=1,II
C
      DO 103 ITR=1,NISO
  103 INDOUT(ITR)=ISO(JJ,ITR)
      CALL YSOOUT
      DO 104 ITR=1,NT
      JST=INDIN(ITR)
      MJ(ITR)=JST
      IF(JST.GT.II) GO TO 800
      IST=MI(ITR)
      ISH=MAX0(IST,JST)
      JSH=MIN0(IST,JST)
      IF(ISH.EQ.II.AND.JSH.GT.JJ) GO TO 800
  104 CONTINUE
      LJT=KTYPE(JJ)
      MINJ=KMIN(JJ)
      MAXJ=KMAX(JJ)
      LOCJ=KLOC(JJ)-MINJ
      IANDJ=II.EQ.JJ
      JMAX=MAXJ
C
C   FIND THEM THERE EQUIVALENT BLOCKS
C   TRANSFER THE EQUIVALENT BLOCK INTO T-MATRIX
C   COMPUTE R T R
C   PUT RESULT BACK INTO THE (I,J) BLOCK OF H-MATRIX
C
      DO 400 IAT=1,NATOM
C
      DO 105 ITR=1,NT
  105 MIAT(ITR)=ICT(IAT,ITR)
      DO 106 I=1,10
      DO 106 J=1,10
      VX(J,I)=ZERO
      VY(J,I)=ZERO
      VZ(J,I)=ZERO
  106 CONTINUE
      DO 107 ITR=1,NT
      MOP(ITR)=0
      MIT=MI(ITR)
      MJT=MJ(ITR)
      MOI=1
      IF(MIT.LT.MJT) MOI=-1
      MII=MAX0(MIT,MJT)
      MJJ=MIN0(MIT,MJT)
      IF(MII.NE.II.OR.MJJ.NE.JJ) GO TO 107
      MOP(ITR)=MOI
      IF(IAT.LT.MIAT(ITR)) GO TO 400
  107 CONTINUE
      DO 110 ITR=1,NT
      NTR=ITR
      NIAT=MIAT(NTR)
      KK=MI(ITR)
      LL=MJ(ITR)
      LOCK=KLOC(KK)-KMIN(KK)
      LOCL=KLOC(LL)-KMIN(LL)
      DO 108 K=MINI,MAXI
      LCK=LOCK+K
      IF(IANDJ) JMAX=K
      DO 108 L=MINJ,JMAX
      LCL=LOCL+L
      LCKL=IOFF(MAX0(LCK,LCL))+MIN0(LCK,LCL)
      TX(K,L)=B(LCKL,1,NIAT,IBSET)
      TY(K,L)=B(LCKL,2,NIAT,IBSET)
      TZ(K,L)=B(LCKL,3,NIAT,IBSET)
      IF(IANDJ) THEN
      TX(L,K)=B(LCKL,1,NIAT,IBSET)
      TY(L,K)=B(LCKL,2,NIAT,IBSET)
      TZ(L,K)=B(LCKL,3,NIAT,IBSET)
      END IF
  108 CONTINUE
      CALL RDFR(TX,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(TY,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(TZ,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      DO 109 I=MINI,MAXI
      DO 109 J=MINJ,MAXJ
      VX(I,J)=VX(I,J) + PTR(1,1,NTR)*TX(I,J)
     1                + PTR(2,1,NTR)*TY(I,J)
     2                + PTR(3,1,NTR)*TZ(I,J)
      VY(I,J)=VY(I,J) + PTR(1,2,NTR)*TX(I,J)
     1                + PTR(2,2,NTR)*TY(I,J)
     2                + PTR(3,2,NTR)*TZ(I,J)
      VZ(I,J)=VZ(I,J) + PTR(1,3,NTR)*TX(I,J)
     1                + PTR(2,3,NTR)*TY(I,J)
     2                + PTR(3,3,NTR)*TZ(I,J)
  109 CONTINUE
  110 CONTINUE
C
      DO 120 ITR=1,NT
      IF(MOP(ITR).EQ.0) GO TO 120
      MOI=MOP(ITR)
      NTR=INVT(ITR)
      JAT=MIAT(NTR)
      IF(MOI.LT.0) GO TO 201
      MINX=MINI
      MAXX=MAXI
      LXT=LIT
      MINY=MINJ
      MAXY=MAXJ
      LYT=LJT
      DO 111 I=1,10
      DO 111 J=1,10
      TX(J,I)=ZERO
      TY(J,I)=ZERO
      TZ(J,I)=ZERO
      UX(J,I)=VX(J,I)
      UY(J,I)=VY(J,I)
      UZ(J,I)=VZ(J,I)
  111 CONTINUE
      GO TO 203
  201 MINX=MINJ
      MAXX=MAXJ
      LXT=LJT
      MINY=MINI
      MAXY=MAXI
      LYT=LIT
  202 CONTINUE
      DO 112 I=1,10
      DO 112 J=1,10
      TX(J,I)=ZERO
      TY(J,I)=ZERO
      TZ(J,I)=ZERO
      UX(J,I)=VX(I,J)
      UY(J,I)=VY(I,J)
      UZ(J,I)=VZ(I,J)
  112 CONTINUE
C
  203 CONTINUE
      CALL RDFR(UX,MINX,MAXX,LXT,MINY,MAXY,LYT,NTR)
      CALL RDFR(UY,MINX,MAXX,LXT,MINY,MAXY,LYT,NTR)
      CALL RDFR(UZ,MINX,MAXX,LXT,MINY,MAXY,LYT,NTR)
      DO 113 I=MINI,MAXI
      DO 113 J=MINJ,MAXJ
      TX(I,J)=TX(I,J) + PTR(1,1,NTR)*UX(I,J)
     1                + PTR(2,1,NTR)*UY(I,J)
     2                + PTR(3,1,NTR)*UZ(I,J)
      TY(I,J)=TY(I,J) + PTR(1,2,NTR)*UX(I,J)
     1                + PTR(2,2,NTR)*UY(I,J)
     2                + PTR(3,2,NTR)*UZ(I,J)
      TZ(I,J)=TZ(I,J) + PTR(1,3,NTR)*UX(I,J)
     1                + PTR(2,3,NTR)*UY(I,J)
     2                + PTR(3,3,NTR)*UZ(I,J)
  113 CONTINUE
      DO 115 I=MINI,MAXI
      LCI=LOCI+I
      JMAX=MAXJ
      IF(IANDJ) JMAX=I
      DO 115 J=MINJ,JMAX
      LCJ=LOCJ+J
      LCIJ=IOFF(MAX0(LCI,LCJ))+MIN0(LCI,LCJ)
      B(LCIJ,1,JAT,IBSET)=TX(I,J)*FACT
      B(LCIJ,2,JAT,IBSET)=TY(I,J)*FACT
      B(LCIJ,3,JAT,IBSET)=TZ(I,J)*FACT
  115 CONTINUE
  120 CONTINUE
C
  400 CONTINUE
C
C   FOR EACH BLOCK(K,L) EQUIVALENT TO (I,J)
C   FIND THE TRANSFORMATION THAT MAPS (K,L) TO (I,J)
C   COMPUTE (R)T(R)
C   PUT THE RESULT BACK INTO THE (K,L) BLOCK OF THE H-MATRIX
C
      DO 600 ITR=1,NT
      IF(ITR.EQ.1) GO TO 600
      KK=MI(ITR)
      LL=MJ(ITR)
      K=MAX0(KK,LL)
      L=MIN0(KK,LL)
      IF(K.EQ.II.AND.L.EQ.JJ) GO TO 600
      NTR=ITR+1
      IF(NTR.GT.NT) GO TO 205
      DO 121 IT=NTR,NT
      IX=MI(IT)
      JX=MJ(IT)
      I=MAX0(IX,JX)
      J=MIN0(IX,JX)
      IF(I.EQ.K.AND.J.EQ.L) GO TO 600
  121 CONTINUE
  205 CONTINUE
C
      NTR=INVT(ITR)
      DO 500 IAT=1,NATOM
C
      DO 122 I=1,10
      DO 122 J=1,10
      TX(J,I)=ZERO
      TY(J,I)=ZERO
      TZ(J,I)=ZERO
  122 CONTINUE
      DO 123 JTR=1,NT
  123 MIAT(JTR)=ICT(IAT,JTR)
      NIAT=MIAT(NTR)
      DO 125 K=MINI,MAXI
      LCK=LOCI+K
      IF(IANDJ) JMAX=K
      DO 125 L=MINJ,JMAX
      LCL=LOCJ+L
      LCKL=IOFF(MAX0(LCK,LCL))+MIN0(LCK,LCL)
      VX(K,L)=B(LCKL,1,NIAT,IBSET)
      VY(K,L)=B(LCKL,2,NIAT,IBSET)
      VZ(K,L)=B(LCKL,3,NIAT,IBSET)
      IF(.NOT.IANDJ) GO TO 125
      VX(L,K)=B(LCKL,1,NIAT,IBSET)
      VY(L,K)=B(LCKL,2,NIAT,IBSET)
      VZ(L,K)=B(LCKL,3,NIAT,IBSET)
  125 CONTINUE
      CALL RDFR(VX,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(VY,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      CALL RDFR(VZ,MINI,MAXI,LIT,MINJ,MAXJ,LJT,NTR)
      DO 126 I=MINI,MAXI
      DO 126 J=MINJ,MAXJ
      TX(I,J)=TX(I,J) + PTR(1,1,NTR)*VX(I,J)
     1                + PTR(2,1,NTR)*VY(I,J)
     2                + PTR(3,1,NTR)*VZ(I,J)
      TY(I,J)=TY(I,J) + PTR(1,2,NTR)*VX(I,J)
     1                + PTR(2,2,NTR)*VY(I,J)
     2                + PTR(3,2,NTR)*VZ(I,J)
      TZ(I,J)=TZ(I,J) + PTR(1,3,NTR)*VX(I,J)
     1                + PTR(2,3,NTR)*VY(I,J)
     2                + PTR(3,3,NTR)*VZ(I,J)
  126 CONTINUE
      LOCK=KLOC(KK)-KMIN(KK)
      LOCL=KLOC(LL)-KMIN(LL)
      NIAT=IAT
      DO 127 K=MINI,MAXI
      LCK=LOCK+K
      IF(IANDJ) JMAX=K
      DO 127 L=MINJ,JMAX
      LCL=LOCL+L
      LCKL=IOFF(MAX0(LCK,LCL))+MIN0(LCK,LCL)
      B(LCKL,1,NIAT,IBSET)=TX(K,L)
      B(LCKL,2,NIAT,IBSET)=TY(K,L)
      B(LCKL,3,NIAT,IBSET)=TZ(K,L)
  127 CONTINUE
C
  500 CONTINUE
C
  600 CONTINUE
C
  800 CONTINUE
  900 CONTINUE
C
C###############################
C#####END OF I AND J SHELLS#####
C###############################
C
 1000 CONTINUE
C
C:::::::::::::::::::::::::::::::::
C:::::END OF OPEN-SHELL TYPES:::::
C:::::::::::::::::::::::::::::::::
C
      RETURN
      END
      SUBROUTINE SYMH(D2T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D2T(N3N,N3N)
      DIMENSION TH(3,3),WH(3,3),RH(3,3),WK(3,3)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
      DATA ZERO,ONE / 0.0D+00, 1.0D+00 /
C
      IF(NT.EQ.1) RETURN
C
C   SYMMETRIZE FORCE-CONSTANT MATRIX
C
      DO 2000 IC=1,NATOM
      DO 101 IT=1,NT
      ICNEW=ICT(IC,IT)
      IF(ICNEW.GT.IC) GO TO 2000
  101 CONTINUE
      DO 1000 JC=1,IC
      DO 102 IT=1,NT
      ICNEW=MAX0(ICT(IC,IT),ICT(JC,IT))
      JCNEW=MIN0(ICT(IC,IT),ICT(JC,IT))
      IF(ICNEW.GT.IC) GO TO 1000
      IF(ICNEW.EQ.IC.AND.JCNEW.GT.JC) GO TO 1000
  102 CONTINUE
      IJPR1=IOFF(IC)+JC
C
C   SUMMATION OF ALL PARTIAL CONTRIBUTION TO CORRECT MATRIX
      DO 103 I=1,3
      DO 103 J=1,3
  103 WH(J,I)=ZERO
      DO 115 IT=1,NT
      ICNEW=MAX0(ICT(IC,IT),ICT(JC,IT))
      JCNEW=MIN0(ICT(IC,IT),ICT(JC,IT))
      IJPR2=IOFF(ICNEW)+JCNEW
      IINDX=(ICNEW-1)*3
      JINDX=(JCNEW-1)*3
      IF(ICT(JC,IT).GT.ICT(IC,IT)) GO TO 201
      DO 104 I=1,3
      DO 104 J=1,3
  104 TH(J,I)=D2T(IINDX+J,JINDX+I)
      GO TO 202
  201 CONTINUE
      DO 105 I=1,3
      DO 105 J=1,3
  105 TH(I,J)=D2T(IINDX+J,JINDX+I)
  202 CONTINUE
      DO 106 I=1,3
      DO 106 J=1,3
  106 RH(J,I)=PTR(J,I,IT)
      DO 108 I=1,3
      DO 108 J=1,3
      SUM=ZERO
      DO 107 K=1,3
  107 SUM=SUM+TH(J,K)*RH(K,I)
  108 WK(J,I)=SUM
      DO 110 I=1,3
      DO 110 J=1,3
      SUM=ZERO
      DO 109 K=1,3
  109 SUM=SUM+RH(K,J)*WK(K,I)
  110 WH(J,I)=WH(J,I)+SUM
  115 CONTINUE
C
      IINDX=(IC-1)*3
      JINDX=(JC-1)*3
      DO 116 I=1,3
      DO 116 J=1,3
  116 D2T(IINDX+J,JINDX+I)=WH(J,I)
C
C   TRANSFER CORRECT BLOCK INTO EQUIVALENT BLOCKS
C
      DO 125 IT=1,NT
      ICNEW=MAX0(ICT(IC,IT),ICT(JC,IT))
      JCNEW=MIN0(ICT(IC,IT),ICT(JC,IT))
      IJPR2=IOFF(ICNEW)+JCNEW
      IF(IJPR2.EQ.IJPR1) GO TO 125
      IF(IT.EQ.NT) GO TO 203
      IT1=IT+1
      DO 117 JT=IT1,NT
      ICSAM=MAX0(ICT(IC,JT),ICT(JC,JT))
      JCSAM=MIN0(ICT(IC,JT),ICT(JC,JT))
      IJPR3=IOFF(ICSAM)+JCSAM
      IF(IJPR3.EQ.IJPR2) GO TO 125
  117 CONTINUE
  203 CONTINUE
      N=INVT(IT)
      DO 118 I=1,3
      DO 118 J=1,3
  118 RH(J,I)=PTR(J,I,N)
      DO 120 I=1,3
      DO 120 J=1,3
      SUM=ZERO
      DO 119 K=1,3
  119 SUM=SUM+WH(J,K)*RH(K,I)
  120 WK(J,I)=SUM
      DO 122 I=1,3
      DO 122 J=1,3
      SUM=ZERO
      DO 121 K=1,3
  121 SUM=SUM+RH(K,J)*WK(K,I)
  122 TH(J,I)=SUM
      IINDX=(ICNEW-1)*3
      JINDX=(JCNEW-1)*3
      IF(ICT(JC,IT).GT.ICT(IC,IT)) GO TO 204
      DO 123 I=1,3
      DO 123 J=1,3
  123 D2T(IINDX+J,JINDX+I)=TH(J,I)
      GO TO 125
  204 CONTINUE
      DO 124 I=1,3
      DO 124 J=1,3
  124 D2T(IINDX+J,JINDX+I)=TH(I,J)
C
  125 CONTINUE
C
 1000 CONTINUE
 2000 CONTINUE
C
#ifdef APOLLO
      fact=one/dble(nt)
#else
      FACT=ONE/DFLOAT(NT)
#endif
      DO 130 IC=1,N3N
      DO 130 JC=1,N3N
  130 D2T(IC,JC)=D2T(IC,JC)*FACT
      DO 131 I=1,N3N
      DO 131 J=1,I
  131 D2T(J,I)=D2T(I,J)
C
      RETURN
      END
      SUBROUTINE TWOI
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWDII/DXIXI(2304),DYIYI(2304),DZIZI(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIBSQ = RHOTSQ / (B*B)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DICP00 = EI * RTIAB
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
      DIDICN = -EIJIA*TWO - EIIA * RHO2TI
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
      DXIXI(I) = ZERO
      DYIYI(I) = ZERO
      DZIZI(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
        DXIXI(I2) = ZERO
        DYIYI(I2) = ZERO
        DZIZI(I2) = ZERO
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
        DXIXI(I) = ZERO
        DYIYI(I) = ZERO
        DZIZI(I) = ZERO
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
          DXIXI(I) = DICP00 * DXI(I2) + DICP00 * DXI(I2)
          DYIYI(I) = DICP00 * DYI(I2) + DICP00 * DYI(I2)
          DZIZI(I) = DICP00 * DZI(I2) + DICP00 * DZI(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 101 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
          DXIXI(N0) = B10NL1 * DXIXI(NL20) + DIC00 * DXI(NL10)
     #    +             XC00 * DXIXI(NL10) + DIC00 * DXI(NL10)
          DYIYI(N0) = B10NL1 * DYIYI(NL20) + DIC00 * DYI(NL10)
     #    +             YC00 * DYIYI(NL10) + DIC00 * DYI(NL10)
          DZIZI(N0) = B10NL1 * DZIZI(NL20) + DIC00 * DZI(NL10)
     #    +             ZC00 * DZIZI(NL10) + DIC00 * DZI(NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
            DXIXI(N1) = B00N  * DXIXI(NL10) + DICP00 * DXI(N0)
     #      +           XCP00 * DXIXI(N0)   + DICP00 * DXI(N0)
            DYIYI(N1) = B00N  * DYIYI(NL10) + DICP00 * DYI(N0)
     #      +           YCP00 * DYIYI(N0)   + DICP00 * DYI(N0)
            DZIZI(N1) = B00N  * DZIZI(NL10) + DICP00 * DZI(N0)
     #      +           ZCP00 * DZIZI(N0)   + DICP00 * DZI(N0)
          END IF
  101   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 102 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
          DXIXI(I0M) = BPML1 * DXIXI(I0ML2) + DICP00 * DXI(I0ML1)
     #    +            XCP00 * DXIXI(I0ML1) + DICP00 * DXI(I0ML1)
          DYIYI(I0M) = BPML1 * DYIYI(I0ML2) + DICP00 * DYI(I0ML1)
     #    +            YCP00 * DYIYI(I0ML1) + DICP00 * DYI(I0ML1)
          DZIZI(I0M) = BPML1 * DZIZI(I0ML2) + DICP00 * DZI(I0ML1)
     #    +            ZCP00 * DZIZI(I0ML1) + DICP00 * DZI(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
            DXIXI(I1M) = B00M * DXIXI(I0ML1) + DIC00 * DXI(I0M)
     #      +            XC00 * DXIXI(I0M)   + DIC00 * DXI(I0M)
            DYIYI(I1M) = B00M * DYIYI(I0ML1) + DIC00 * DYI(I0M)
     #      +            YC00 * DYIYI(I0M)   + DIC00 * DYI(I0M)
            DZIZI(I1M) = B00M * DZIZI(I0ML1) + DIC00 * DZI(I0M)
     #      +            ZC00 * DZIZI(I0M)   + DIC00 * DZI(I0M)
          END IF
  102   CONTINUE
      END IF
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 104 M=2,MMAX
          M8=M*32 + IOFFST
          DO 103 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
            DXIXI(NM) = B10NL1 * DXIXI(NL2M) + DIC00 * DXI(NL1M)
     #      +             XC00 * DXIXI(NL1M) + DIC00 * DXI(NL1M)
     #      +             B00M * DXIXI(NL1ML1)
            DYIYI(NM) = B10NL1 * DYIYI(NL2M) + DIC00 * DYI(NL1M)
     #      +             YC00 * DYIYI(NL1M) + DIC00 * DYI(NL1M)
     #      +             B00M * DYIYI(NL1ML1)
            DZIZI(NM) = B10NL1 * DZIZI(NL2M) + DIC00 * DZI(NL1M)
     #      +             ZC00 * DZIZI(NL1M) + DIC00 * DZI(NL1M)
     #      +             B00M * DZIZI(NL1ML1)
  103     CONTINUE
  104   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 107 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 106 J=1,NJMAX
          JM = J * 8 + MPT
          DO 105 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
            DXIXI(IJM) =        DXIXI(I1JL1M) + DXI(IJL1M)
     #      +            XIMXJ * DXIXI(IJL1M) + DXI(IJL1M)
            DYIYI(IJM) =        DYIYI(I1JL1M) + DYI(IJL1M)
     #      +            YIMYJ * DYIYI(IJL1M) + DYI(IJL1M)
            DZIZI(IJM) =        DZIZI(I1JL1M) + DZI(IJL1M)
     #      +            ZIMZJ * DZIZI(IJL1M) + DZI(IJL1M)
  105     CONTINUE
  106   CONTINUE
  107 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 110 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 109 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 108 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
            DXIXI(IJMNEW) = DXIXI(IJMOLD)
            DYIYI(IJMNEW) = DYIYI(IJMOLD)
            DZIZI(IJMNEW) = DZIZI(IJMOLD)
  108     CONTINUE
  109   CONTINUE
  110 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 114 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 113 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 112 J=0,NJMAX
            JKL = J * 16 + KL
            DO 111 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
              DXIXI(IJKL) =          DXIXI(KP1LM1)
     #        +              XKMXL * DXIXI(IJKLM1)
              DYIYI(IJKL) =          DYIYI(KP1LM1)
     #        +              YKMYL * DYIYI(IJKLM1)
              DZIZI(IJKL) =          DZIZI(KP1LM1)
     #        +              ZKMZL * DZIZI(IJKLM1)
  111       CONTINUE
  112     CONTINUE
  113   CONTINUE
  114 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 118 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 117 K=0,NKMAX
          KL = K*64 + LPT
          DO 116 J=0,NJMAX
            JKL = J*16 + KL
            DO 115 I=1,NIMAX+1
              IJKL = I + JKL
              DXIXI(IJKL) = DXIXI(IJKL) + (XICNST*XICNST + DIDICN) *
     *        XIN(IJKL)+             XICNST * DXI(IJKL) + XICNST *
     *        DXI(IJKL)
              DYIYI(IJKL) = DYIYI(IJKL) + (YICNST*YICNST + DIDICN) *
     *        YIN(IJKL)+             YICNST * DYI(IJKL) + YICNST *
     *        DYI(IJKL)
              DZIZI(IJKL) = DZIZI(IJKL) + (ZICNST*ZICNST + DIDICN) *
     *        ZIN(IJKL)+             ZICNST * DZI(IJKL) + ZICNST *
     *        DZI(IJKL)
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
  115       CONTINUE
  116     CONTINUE
  117   CONTINUE
  118 CONTINUE
      RETURN
      END
 
      SUBROUTINE TWOIJ
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/IJTWO/DIC00,DJC00,DICP00,DJCP00,
     1             XICNST,YICNST,ZICNST,XJCNST,YJCNST,ZJCNST,
     2             DIDICN,DIDJCN,DJDJCN
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWDII/DXIXI(2304),DYIYI(2304),DZIZI(2304)
      COMMON/TWDJJ/DXJXJ(2304),DYJYJ(2304),DZJZJ(2304)
      COMMON/TWDIJ/DXIXJ(2304),DYIYJ(2304),DZIZJ(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIBSQ = RHOTSQ / (B*B)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DJC00  = EJ/A - RTIASQ*EJ
      DICP00 = EI * RTIAB
      DJCP00 = EJ * RTIAB
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      RHO2TJ = RHO2T*EJIA
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
      XJCNST =   XIMXJ*EIJIA*TWO - XAMXB*RHO2TJ
      YJCNST =   YIMYJ*EIJIA*TWO - YAMYB*RHO2TJ
      ZJCNST = ( ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TJ)
      DIDICN = -EIJIA*TWO - EIIA * RHO2TI
      DIDJCN =  EIJIA*TWO - EJIA * RHO2TI
      DJDJCN = -EIJIA*TWO - EJIA * RHO2TJ
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
      DXJ(I) = ZERO
      DYJ(I) = ZERO
      DZJ(I) = ZERO
      DXIXI(I) = ZERO
      DXIXJ(I) = ZERO
      DXJXJ(I) = ZERO
      DYIYI(I) = ZERO
      DYIYJ(I) = ZERO
      DYJYJ(I) = ZERO
      DZIZI(I) = ZERO
      DZIZJ(I) = ZERO
      DZJZJ(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
        DXJ(I2) = DJC00
        DYJ(I2) = DJC00
        DZJ(I2) = DJC00 * F00
        DXIXI(I2) = ZERO
        DXIXJ(I2) = ZERO
        DXJXJ(I2) = ZERO
        DYIYI(I2) = ZERO
        DYIYJ(I2) = ZERO
        DYJYJ(I2) = ZERO
        DZIZI(I2) = ZERO
        DZIZJ(I2) = ZERO
        DZJZJ(I2) = ZERO
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
        DXJ(I) = DJCP00
        DYJ(I) = DJCP00
        DZJ(I) = DJCP00 * F00
        DXIXI(I) = ZERO
        DXIXJ(I) = ZERO
        DXJXJ(I) = ZERO
        DYIYI(I) = ZERO
        DYIYJ(I) = ZERO
        DYJYJ(I) = ZERO
        DZIZI(I) = ZERO
        DZIZJ(I) = ZERO
        DZJZJ(I) = ZERO
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
          DXJ(I) = DJCP00 * XIN(I2) + XCP00 * DXJ(I2)
          DYJ(I) = DJCP00 * YIN(I2) + YCP00 * DYJ(I2)
          DZJ(I) = DJCP00 * ZIN(I2) + ZCP00 * DZJ(I2)
          DXIXI(I) = DICP00 * DXI(I2) + DICP00 * DXI(I2)
          DXIXJ(I) = DICP00 * DXJ(I2) + DJCP00 * DXI(I2)
          DXJXJ(I) = DJCP00 * DXJ(I2) + DJCP00 * DXJ(I2)
          DYIYI(I) = DICP00 * DYI(I2) + DICP00 * DYI(I2)
          DYIYJ(I) = DICP00 * DYJ(I2) + DJCP00 * DYI(I2)
          DYJYJ(I) = DJCP00 * DYJ(I2) + DJCP00 * DYJ(I2)
          DZIZI(I) = DICP00 * DZI(I2) + DICP00 * DZI(I2)
          DZIZJ(I) = DICP00 * DZJ(I2) + DJCP00 * DZI(I2)
          DZJZJ(I) = DJCP00 * DZJ(I2) + DJCP00 * DZJ(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 101 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
          DXJ(N0) = B10NL1 * DXJ(NL20) + DJC00 * XIN(NL10) + XC00* DXJ
     *    (NL10)
          DYJ(N0) = B10NL1 * DYJ(NL20) + DJC00 * YIN(NL10) + YC00* DYJ
     *    (NL10)
          DZJ(N0) = B10NL1 * DZJ(NL20) + DJC00 * ZIN(NL10) + ZC00* DZJ
     *    (NL10)
          DXIXI(N0) = B10NL1 * DXIXI(NL20) + DIC00 * DXI(NL10)
     #    +             XC00 * DXIXI(NL10) + DIC00 * DXI(NL10)
          DXIXJ(N0) = B10NL1 * DXIXJ(NL20) + DIC00 * DXJ(NL10)
     #    +             XC00 * DXIXJ(NL10) + DJC00 * DXI(NL10)
          DXJXJ(N0) = B10NL1 * DXJXJ(NL20) + DJC00 * DXJ(NL10)
     #    +             XC00 * DXJXJ(NL10) + DJC00 * DXJ(NL10)
          DYIYI(N0) = B10NL1 * DYIYI(NL20) + DIC00 * DYI(NL10)
     #    +             YC00 * DYIYI(NL10) + DIC00 * DYI(NL10)
          DYIYJ(N0) = B10NL1 * DYIYJ(NL20) + DIC00 * DYJ(NL10)
     #    +             YC00 * DYIYJ(NL10) + DJC00 * DYI(NL10)
          DYJYJ(N0) = B10NL1 * DYJYJ(NL20) + DJC00 * DYJ(NL10)
     #    +             YC00 * DYJYJ(NL10) + DJC00 * DYJ(NL10)
          DZIZI(N0) = B10NL1 * DZIZI(NL20) + DIC00 * DZI(NL10)
     #    +             ZC00 * DZIZI(NL10) + DIC00 * DZI(NL10)
          DZIZJ(N0) = B10NL1 * DZIZJ(NL20) + DIC00 * DZJ(NL10)
     #    +             ZC00 * DZIZJ(NL10) + DJC00 * DZI(NL10)
          DZJZJ(N0) = B10NL1 * DZJZJ(NL20) + DJC00 * DZJ(NL10)
     #    +             ZC00 * DZJZJ(NL10) + DJC00 * DZJ(NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
            DXJ(N1) = B00N * DXJ(NL10) + DJCP00 * XIN(N0) + XCP00 *
     *      DXJ(N0)
            DYJ(N1) = B00N * DYJ(NL10) + DJCP00 * YIN(N0) + YCP00 *
     *      DYJ(N0)
            DZJ(N1) = B00N * DZJ(NL10) + DJCP00 * ZIN(N0) + ZCP00 *
     *      DZJ(N0)
            DXIXI(N1) = B00N  * DXIXI(NL10) + DICP00 * DXI(N0)
     #      +           XCP00 * DXIXI(N0)   + DICP00 * DXI(N0)
            DXIXJ(N1) = B00N  * DXIXJ(NL10) + DICP00 * DXJ(N0)
     #      +           XCP00 * DXIXJ(N0)   + DJCP00 * DXI(N0)
            DXJXJ(N1) = B00N  * DXJXJ(NL10) + DJCP00 * DXJ(N0)
     #      +           XCP00 * DXJXJ(N0)   + DJCP00 * DXJ(N0)
            DYIYI(N1) = B00N  * DYIYI(NL10) + DICP00 * DYI(N0)
     #      +           YCP00 * DYIYI(N0)   + DICP00 * DYI(N0)
            DYIYJ(N1) = B00N  * DYIYJ(NL10) + DICP00 * DYJ(N0)
     #      +           YCP00 * DYIYJ(N0)   + DJCP00 * DYI(N0)
            DYJYJ(N1) = B00N  * DYJYJ(NL10) + DJCP00 * DYJ(N0)
     #      +           YCP00 * DYJYJ(N0)   + DJCP00 * DYJ(N0)
            DZIZI(N1) = B00N  * DZIZI(NL10) + DICP00 * DZI(N0)
     #      +           ZCP00 * DZIZI(N0)   + DICP00 * DZI(N0)
            DZIZJ(N1) = B00N  * DZIZJ(NL10) + DICP00 * DZJ(N0)
     #      +           ZCP00 * DZIZJ(N0)   + DJCP00 * DZI(N0)
            DZJZJ(N1) = B00N  * DZJZJ(NL10) + DJCP00 * DZJ(N0)
     #      +           ZCP00 * DZJZJ(N0)   + DJCP00 * DZJ(N0)
          END IF
  101   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 102 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
          DXJ(I0M) = BPML1 * DXJ(I0ML2) + DJCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXJ(I0ML1)
          DYJ(I0M) = BPML1 * DYJ(I0ML2) + DJCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYJ(I0ML1)
          DZJ(I0M) = BPML1 * DZJ(I0ML2) + DJCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZJ(I0ML1)
          DXIXI(I0M) = BPML1 * DXIXI(I0ML2) + DICP00 * DXI(I0ML1)
     #    +            XCP00 * DXIXI(I0ML1) + DICP00 * DXI(I0ML1)
          DXIXJ(I0M) = BPML1 * DXIXJ(I0ML2) + DICP00 * DXJ(I0ML1)
     #    +            XCP00 * DXIXJ(I0ML1) + DJCP00 * DXI(I0ML1)
          DXJXJ(I0M) = BPML1 * DXJXJ(I0ML2) + DJCP00 * DXJ(I0ML1)
     #    +            XCP00 * DXJXJ(I0ML1) + DJCP00 * DXJ(I0ML1)
          DYIYI(I0M) = BPML1 * DYIYI(I0ML2) + DICP00 * DYI(I0ML1)
     #    +            YCP00 * DYIYI(I0ML1) + DICP00 * DYI(I0ML1)
          DYIYJ(I0M) = BPML1 * DYIYJ(I0ML2) + DICP00 * DYJ(I0ML1)
     #    +            YCP00 * DYIYJ(I0ML1) + DJCP00 * DYI(I0ML1)
          DYJYJ(I0M) = BPML1 * DYJYJ(I0ML2) + DJCP00 * DYJ(I0ML1)
     #    +            YCP00 * DYJYJ(I0ML1) + DJCP00 * DYJ(I0ML1)
          DZIZI(I0M) = BPML1 * DZIZI(I0ML2) + DICP00 * DZI(I0ML1)
     #    +            ZCP00 * DZIZI(I0ML1) + DICP00 * DZI(I0ML1)
          DZIZJ(I0M) = BPML1 * DZIZJ(I0ML2) + DICP00 * DZJ(I0ML1)
     #    +            ZCP00 * DZIZJ(I0ML1) + DJCP00 * DZI(I0ML1)
          DZJZJ(I0M) = BPML1 * DZJZJ(I0ML2) + DJCP00 * DZJ(I0ML1)
     #    +            ZCP00 * DZJZJ(I0ML1) + DJCP00 * DZJ(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
            DXJ(I1M) = B00M * DXJ(I0ML1) + DJC00 * XIN(I0M) + XC00 *
     *      DXJ(I0M)
            DYJ(I1M) = B00M * DYJ(I0ML1) + DJC00 * YIN(I0M) + YC00 *
     *      DYJ(I0M)
            DZJ(I1M) = B00M * DZJ(I0ML1) + DJC00 * ZIN(I0M) + ZC00 *
     *      DZJ(I0M)
            DXIXI(I1M) = B00M * DXIXI(I0ML1) + DIC00 * DXI(I0M)
     #      +            XC00 * DXIXI(I0M)   + DIC00 * DXI(I0M)
            DXIXJ(I1M) = B00M * DXIXJ(I0ML1) + DIC00 * DXJ(I0M)
     #      +            XC00 * DXIXJ(I0M)   + DJC00 * DXI(I0M)
            DXJXJ(I1M) = B00M * DXJXJ(I0ML1) + DJC00 * DXJ(I0M)
     #      +            XC00 * DXJXJ(I0M)   + DJC00 * DXJ(I0M)
            DYIYI(I1M) = B00M * DYIYI(I0ML1) + DIC00 * DYI(I0M)
     #      +            YC00 * DYIYI(I0M)   + DIC00 * DYI(I0M)
            DYIYJ(I1M) = B00M * DYIYJ(I0ML1) + DIC00 * DYJ(I0M)
     #      +            YC00 * DYIYJ(I0M)   + DJC00 * DYI(I0M)
            DYJYJ(I1M) = B00M * DYJYJ(I0ML1) + DJC00 * DYJ(I0M)
     #      +            YC00 * DYJYJ(I0M)   + DJC00 * DYJ(I0M)
            DZIZI(I1M) = B00M * DZIZI(I0ML1) + DIC00 * DZI(I0M)
     #      +            ZC00 * DZIZI(I0M)   + DIC00 * DZI(I0M)
            DZIZJ(I1M) = B00M * DZIZJ(I0ML1) + DIC00 * DZJ(I0M)
     #      +            ZC00 * DZIZJ(I0M)   + DJC00 * DZI(I0M)
            DZJZJ(I1M) = B00M * DZJZJ(I0ML1) + DJC00 * DZJ(I0M)
     #      +            ZC00 * DZJZJ(I0M)   + DJC00 * DZJ(I0M)
          END IF
  102   CONTINUE
      END IF
C
      CALL TWOIJ1
C
      RETURN
      END
 
      SUBROUTINE TWOIJ1
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/IJTWO/DIC00,DJC00,DICP00,DJCP00,
     1             XICNST,YICNST,ZICNST,XJCNST,YJCNST,ZJCNST,
     2             DIDICN,DIDJCN,DJDJCN
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWDII/DXIXI(2304),DYIYI(2304),DZIZI(2304)
      COMMON/TWDJJ/DXJXJ(2304),DYJYJ(2304),DZJZJ(2304)
      COMMON/TWDIJ/DXIXJ(2304),DYIYJ(2304),DZIZJ(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 104 M=2,MMAX
          M8=M*32 + IOFFST
          DO 103 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
            DXJ(NM) = B10NL1 * DXJ(NL2M) + B00M * DXJ(NL1ML1)
     1      +          DJC00 * XIN(NL1M) + XC00  * DXJ(NL1M)
            DYJ(NM) = B10NL1 * DYJ(NL2M) + B00M * DYJ(NL1ML1)
     1      +          DJC00 * YIN(NL1M) + YC00  * DYJ(NL1M)
            DZJ(NM) = B10NL1 * DZJ(NL2M) + B00M * DZJ(NL1ML1)
     1      +          DJC00 * ZIN(NL1M) + ZC00  * DZJ(NL1M)
            DXIXI(NM) = B10NL1 * DXIXI(NL2M) + DIC00 * DXI(NL1M)
     #      +             XC00 * DXIXI(NL1M) + DIC00 * DXI(NL1M)
     #      +             B00M * DXIXI(NL1ML1)
            DXIXJ(NM) = B10NL1 * DXIXJ(NL2M) + DIC00 * DXJ(NL1M)
     #      +             XC00 * DXIXJ(NL1M) + DJC00 * DXI(NL1M)
     #      +             B00M * DXIXJ(NL1ML1)
            DXJXJ(NM) = B10NL1 * DXJXJ(NL2M) + DJC00 * DXJ(NL1M)
     #      +             XC00 * DXJXJ(NL1M) + DJC00 * DXJ(NL1M)
     #      +             B00M * DXJXJ(NL1ML1)
            DYIYI(NM) = B10NL1 * DYIYI(NL2M) + DIC00 * DYI(NL1M)
     #      +             YC00 * DYIYI(NL1M) + DIC00 * DYI(NL1M)
     #      +             B00M * DYIYI(NL1ML1)
            DYIYJ(NM) = B10NL1 * DYIYJ(NL2M) + DIC00 * DYJ(NL1M)
     #      +             YC00 * DYIYJ(NL1M) + DJC00 * DYI(NL1M)
     #      +             B00M * DYIYJ(NL1ML1)
            DYJYJ(NM) = B10NL1 * DYJYJ(NL2M) + DJC00 * DYJ(NL1M)
     #      +             YC00 * DYJYJ(NL1M) + DJC00 * DYJ(NL1M)
     #      +             B00M * DYJYJ(NL1ML1)
            DZIZI(NM) = B10NL1 * DZIZI(NL2M) + DIC00 * DZI(NL1M)
     #      +             ZC00 * DZIZI(NL1M) + DIC00 * DZI(NL1M)
     #      +             B00M * DZIZI(NL1ML1)
            DZIZJ(NM) = B10NL1 * DZIZJ(NL2M) + DIC00 * DZJ(NL1M)
     #      +             ZC00 * DZIZJ(NL1M) + DJC00 * DZI(NL1M)
     #      +             B00M * DZIZJ(NL1ML1)
            DZJZJ(NM) = B10NL1 * DZJZJ(NL2M) + DJC00 * DZJ(NL1M)
     #      +             ZC00 * DZJZJ(NL1M) + DJC00 * DZJ(NL1M)
     #      +             B00M * DZJZJ(NL1ML1)
  103     CONTINUE
  104   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 107 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 106 J=1,NJMAX
          JM = J * 8 + MPT
          DO 105 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
            DXJ(IJM) = DXJ(I1JL1M) + XIMXJ * DXJ(IJL1M) - XIN(IJL1M)
            DYJ(IJM) = DYJ(I1JL1M) + YIMYJ * DYJ(IJL1M) - YIN(IJL1M)
            DZJ(IJM) = DZJ(I1JL1M) + ZIMZJ * DZJ(IJL1M) - ZIN(IJL1M)
            DXIXI(IJM) =        DXIXI(I1JL1M) + DXI(IJL1M)
     #      +            XIMXJ * DXIXI(IJL1M) + DXI(IJL1M)
            DXIXJ(IJM) =        DXIXJ(I1JL1M) + DXJ(IJL1M)
     #      +            XIMXJ * DXIXJ(IJL1M) - DXI(IJL1M)
            DXJXJ(IJM) =        DXJXJ(I1JL1M) - DXJ(IJL1M)
     #      +            XIMXJ * DXJXJ(IJL1M) - DXJ(IJL1M)
            DYIYI(IJM) =        DYIYI(I1JL1M) + DYI(IJL1M)
     #      +            YIMYJ * DYIYI(IJL1M) + DYI(IJL1M)
            DYIYJ(IJM) =        DYIYJ(I1JL1M) + DYJ(IJL1M)
     #      +            YIMYJ * DYIYJ(IJL1M) - DYI(IJL1M)
            DYJYJ(IJM) =        DYJYJ(I1JL1M) - DYJ(IJL1M)
     #      +            YIMYJ * DYJYJ(IJL1M) - DYJ(IJL1M)
            DZIZI(IJM) =        DZIZI(I1JL1M) + DZI(IJL1M)
     #      +            ZIMZJ * DZIZI(IJL1M) + DZI(IJL1M)
            DZIZJ(IJM) =        DZIZJ(I1JL1M) + DZJ(IJL1M)
     #      +            ZIMZJ * DZIZJ(IJL1M) - DZI(IJL1M)
            DZJZJ(IJM) =        DZJZJ(I1JL1M) - DZJ(IJL1M)
     #      +            ZIMZJ * DZJZJ(IJL1M) - DZJ(IJL1M)
  105     CONTINUE
  106   CONTINUE
  107 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 110 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 109 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 108 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
            DXJ(IJMNEW) = DXJ(IJMOLD)
            DYJ(IJMNEW) = DYJ(IJMOLD)
            DZJ(IJMNEW) = DZJ(IJMOLD)
            DXIXI(IJMNEW) = DXIXI(IJMOLD)
            DXIXJ(IJMNEW) = DXIXJ(IJMOLD)
            DXJXJ(IJMNEW) = DXJXJ(IJMOLD)
            DYIYI(IJMNEW) = DYIYI(IJMOLD)
            DYIYJ(IJMNEW) = DYIYJ(IJMOLD)
            DYJYJ(IJMNEW) = DYJYJ(IJMOLD)
            DZIZI(IJMNEW) = DZIZI(IJMOLD)
            DZIZJ(IJMNEW) = DZIZJ(IJMOLD)
            DZJZJ(IJMNEW) = DZJZJ(IJMOLD)
  108     CONTINUE
  109   CONTINUE
  110 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 114 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 113 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 112 J=0,NJMAX
            JKL = J * 16 + KL
            DO 111 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
              DXJ(IJKL) = DXJ(KP1LM1) + XKMXL * DXJ(IJKLM1)
              DYJ(IJKL) = DYJ(KP1LM1) + YKMYL * DYJ(IJKLM1)
              DZJ(IJKL) = DZJ(KP1LM1) + ZKMZL * DZJ(IJKLM1)
              DXIXI(IJKL) =          DXIXI(KP1LM1)
     #        +              XKMXL * DXIXI(IJKLM1)
              DXIXJ(IJKL) =          DXIXJ(KP1LM1)
     #        +              XKMXL * DXIXJ(IJKLM1)
              DXJXJ(IJKL) =          DXJXJ(KP1LM1)
     #        +              XKMXL * DXJXJ(IJKLM1)
              DYIYI(IJKL) =          DYIYI(KP1LM1)
     #        +              YKMYL * DYIYI(IJKLM1)
              DYIYJ(IJKL) =          DYIYJ(KP1LM1)
     #        +              YKMYL * DYIYJ(IJKLM1)
              DYJYJ(IJKL) =          DYJYJ(KP1LM1)
     #        +              YKMYL * DYJYJ(IJKLM1)
              DZIZI(IJKL) =          DZIZI(KP1LM1)
     #        +              ZKMZL * DZIZI(IJKLM1)
              DZIZJ(IJKL) =          DZIZJ(KP1LM1)
     #        +              ZKMZL * DZIZJ(IJKLM1)
              DZJZJ(IJKL) =          DZJZJ(KP1LM1)
     #        +              ZKMZL * DZJZJ(IJKLM1)
  111       CONTINUE
  112     CONTINUE
  113   CONTINUE
  114 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 118 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 117 K=0,NKMAX
          KL = K*64 + LPT
          DO 116 J=0,NJMAX
            JKL = J*16 + KL
            DO 115 I=1,NIMAX+1
              IJKL = I + JKL
              DXIXI(IJKL) = DXIXI(IJKL) + (XICNST*XICNST + DIDICN) *
     *        XIN(IJKL)+             XICNST * DXI(IJKL) + XICNST *
     *        DXI(IJKL)
              DXIXJ(IJKL) = DXIXJ(IJKL) + (XICNST*XJCNST + DIDJCN) *
     *        XIN(IJKL)+             XICNST * DXJ(IJKL) + XJCNST *
     *        DXI(IJKL)
              DXJXJ(IJKL) = DXJXJ(IJKL) + (XJCNST*XJCNST + DJDJCN) *
     *        XIN(IJKL)+             XJCNST * DXJ(IJKL) + XJCNST *
     *        DXJ(IJKL)
              DYIYI(IJKL) = DYIYI(IJKL) + (YICNST*YICNST + DIDICN) *
     *        YIN(IJKL)+             YICNST * DYI(IJKL) + YICNST *
     *        DYI(IJKL)
              DYIYJ(IJKL) = DYIYJ(IJKL) + (YICNST*YJCNST + DIDJCN) *
     *        YIN(IJKL)+             YICNST * DYJ(IJKL) + YJCNST *
     *        DYI(IJKL)
              DYJYJ(IJKL) = DYJYJ(IJKL) + (YJCNST*YJCNST + DJDJCN) *
     *        YIN(IJKL)+             YJCNST * DYJ(IJKL) + YJCNST *
     *        DYJ(IJKL)
              DZIZI(IJKL) = DZIZI(IJKL) + (ZICNST*ZICNST + DIDICN) *
     *        ZIN(IJKL)+             ZICNST * DZI(IJKL) + ZICNST *
     *        DZI(IJKL)
              DZIZJ(IJKL) = DZIZJ(IJKL) + (ZICNST*ZJCNST + DIDJCN) *
     *        ZIN(IJKL)+             ZICNST * DZJ(IJKL) + ZJCNST *
     *        DZI(IJKL)
              DZJZJ(IJKL) = DZJZJ(IJKL) + (ZJCNST*ZJCNST + DJDJCN) *
     *        ZIN(IJKL)+             ZJCNST * DZJ(IJKL) + ZJCNST *
     *        DZJ(IJKL)
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
              DXJ(IJKL) = DXJ(IJKL) + XJCNST * XIN(IJKL)
              DYJ(IJKL) = DYJ(IJKL) + YJCNST * YIN(IJKL)
              DZJ(IJKL) = DZJ(IJKL) + ZJCNST * ZIN(IJKL)
  115       CONTINUE
  116     CONTINUE
  117   CONTINUE
  118 CONTINUE
      RETURN
      END
 
C*******************************************************
C***LAST UPDATED ON APRIL 25, 1985 BY YUKIO YAMAGUCHI***
C*******************************************************
      SUBROUTINE TWOIJK
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      COMMON/TWDII/DXIXI(2304),DYIYI(2304),DZIZI(2304)
      COMMON/TWDJJ/DXJXJ(2304),DYJYJ(2304),DZJZJ(2304)
      COMMON/TWDKK/DXKXK(2304),DYKYK(2304),DZKZK(2304)
      COMMON/TWDIJ/DXIXJ(2304),DYIYJ(2304),DZIZJ(2304)
      COMMON/TWDIK/DXIXK(2304),DYIYK(2304),DZIZK(2304)
      COMMON/TWDJK/DXJXK(2304),DYJYK(2304),DZJZK(2304)
      COMMON/VARIL/RTIASQ,RTIBSQ,RTIAB,DIC00,DJC00,DKC00
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIBSQ = RHOTSQ / (B*B)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DJC00  = EJ/A - RTIASQ*EJ
      DKC00  = EK * RTIAB
      DICP00 = EI * RTIAB
      DJCP00 = EJ * RTIAB
      DKCP00 = EK/B - RTIBSQ*EK - 1
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      RHO2TJ = RHO2T*EJIA
      RHO2TK = RHO2T*EKIB
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
      XJCNST =   XIMXJ*EIJIA*TWO - XAMXB*RHO2TJ
      YJCNST =   YIMYJ*EIJIA*TWO - YAMYB*RHO2TJ
      ZJCNST = ( ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TJ)
      XKCNST =  -XKMXL*EKLIB*TWO + XAMXB*RHO2TK
      YKCNST =  -YKMYL*EKLIB*TWO + YAMYB*RHO2TK
      ZKCNST = (-ZKMZL*EKLIB*TWO + ZAMZB*RHO2TK)
      DIDICN = -EIJIA*TWO - EIIA * RHO2TI
      DIDJCN =  EIJIA*TWO - EJIA * RHO2TI
      DIDKCN =              EKIB * RHO2TI
      DJDJCN = -EIJIA*TWO - EJIA * RHO2TJ
      DJDKCN =              EKIB * RHO2TJ
      DKDKCN = -EKLIB*TWO - EKIB * RHO2TK
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
      DXJ(I) = ZERO
      DYJ(I) = ZERO
      DZJ(I) = ZERO
      DXK(I) = ZERO
      DYK(I) = ZERO
      DZK(I) = ZERO
      DXIXI(I) = ZERO
      DXIXJ(I) = ZERO
      DXIXK(I) = ZERO
      DXJXJ(I) = ZERO
      DXJXK(I) = ZERO
      DXKXK(I) = ZERO
      DYIYI(I) = ZERO
      DYIYJ(I) = ZERO
      DYIYK(I) = ZERO
      DYJYJ(I) = ZERO
      DYJYK(I) = ZERO
      DYKYK(I) = ZERO
      DZIZI(I) = ZERO
      DZIZJ(I) = ZERO
      DZIZK(I) = ZERO
      DZJZJ(I) = ZERO
      DZJZK(I) = ZERO
      DZKZK(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
        DXJ(I2) = DJC00
        DYJ(I2) = DJC00
        DZJ(I2) = DJC00 * F00
        DXK(I2) = DKC00
        DYK(I2) = DKC00
        DZK(I2) = DKC00 * F00
        DXIXI(I2) = ZERO
        DXIXJ(I2) = ZERO
        DXIXK(I2) = ZERO
        DXJXJ(I2) = ZERO
        DXJXK(I2) = ZERO
        DXKXK(I2) = ZERO
        DYIYI(I2) = ZERO
        DYIYJ(I2) = ZERO
        DYIYK(I2) = ZERO
        DYJYJ(I2) = ZERO
        DYJYK(I2) = ZERO
        DYKYK(I2) = ZERO
        DZIZI(I2) = ZERO
        DZIZJ(I2) = ZERO
        DZIZK(I2) = ZERO
        DZJZJ(I2) = ZERO
        DZJZK(I2) = ZERO
        DZKZK(I2) = ZERO
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
        DXJ(I) = DJCP00
        DYJ(I) = DJCP00
        DZJ(I) = DJCP00 * F00
        DXK(I) = DKCP00
        DYK(I) = DKCP00
        DZK(I) = DKCP00 * F00
        DXIXI(I) = ZERO
        DXIXJ(I) = ZERO
        DXIXK(I) = ZERO
        DXJXJ(I) = ZERO
        DXJXK(I) = ZERO
        DXKXK(I) = ZERO
        DYIYI(I) = ZERO
        DYIYJ(I) = ZERO
        DYIYK(I) = ZERO
        DYJYJ(I) = ZERO
        DYJYK(I) = ZERO
        DYKYK(I) = ZERO
        DZIZI(I) = ZERO
        DZIZJ(I) = ZERO
        DZIZK(I) = ZERO
        DZJZJ(I) = ZERO
        DZJZK(I) = ZERO
        DZKZK(I) = ZERO
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
          DXJ(I) = DJCP00 * XIN(I2) + XCP00 * DXJ(I2)
          DYJ(I) = DJCP00 * YIN(I2) + YCP00 * DYJ(I2)
          DZJ(I) = DJCP00 * ZIN(I2) + ZCP00 * DZJ(I2)
          DXK(I) = DKCP00 * XIN(I2) + XCP00 * DXK(I2)
          DYK(I) = DKCP00 * YIN(I2) + YCP00 * DYK(I2)
          DZK(I) = DKCP00 * ZIN(I2) + ZCP00 * DZK(I2)
          DXIXI(I) = DICP00 * DXI(I2) + DICP00 * DXI(I2)
          DXIXJ(I) = DICP00 * DXJ(I2) + DJCP00 * DXI(I2)
          DXIXK(I) = DICP00 * DXK(I2) + DKCP00 * DXI(I2)
          DXJXJ(I) = DJCP00 * DXJ(I2) + DJCP00 * DXJ(I2)
          DXJXK(I) = DJCP00 * DXK(I2) + DKCP00 * DXJ(I2)
          DXKXK(I) = DKCP00 * DXK(I2) + DKCP00 * DXK(I2)
          DYIYI(I) = DICP00 * DYI(I2) + DICP00 * DYI(I2)
          DYIYJ(I) = DICP00 * DYJ(I2) + DJCP00 * DYI(I2)
          DYIYK(I) = DICP00 * DYK(I2) + DKCP00 * DYI(I2)
          DYJYJ(I) = DJCP00 * DYJ(I2) + DJCP00 * DYJ(I2)
          DYJYK(I) = DJCP00 * DYK(I2) + DKCP00 * DYJ(I2)
          DYKYK(I) = DKCP00 * DYK(I2) + DKCP00 * DYK(I2)
          DZIZI(I) = DICP00 * DZI(I2) + DICP00 * DZI(I2)
          DZIZJ(I) = DICP00 * DZJ(I2) + DJCP00 * DZI(I2)
          DZIZK(I) = DICP00 * DZK(I2) + DKCP00 * DZI(I2)
          DZJZJ(I) = DJCP00 * DZJ(I2) + DJCP00 * DZJ(I2)
          DZJZK(I) = DJCP00 * DZK(I2) + DKCP00 * DZJ(I2)
          DZKZK(I) = DKCP00 * DZK(I2) + DKCP00 * DZK(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 101 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
          DXJ(N0) = B10NL1 * DXJ(NL20) + DJC00 * XIN(NL10) + XC00* DXJ
     *    (NL10)
          DYJ(N0) = B10NL1 * DYJ(NL20) + DJC00 * YIN(NL10) + YC00* DYJ
     *    (NL10)
          DZJ(N0) = B10NL1 * DZJ(NL20) + DJC00 * ZIN(NL10) + ZC00* DZJ
     *    (NL10)
          DXK(N0) = B10NL1 * DXK(NL20) + DKC00 * XIN(NL10) + XC00* DXK
     *    (NL10)
          DYK(N0) = B10NL1 * DYK(NL20) + DKC00 * YIN(NL10) + YC00* DYK
     *    (NL10)
          DZK(N0) = B10NL1 * DZK(NL20) + DKC00 * ZIN(NL10) + ZC00* DZK
     *    (NL10)
          DXIXI(N0) = B10NL1 * DXIXI(NL20) + DIC00 * DXI(NL10)
     #    +             XC00 * DXIXI(NL10) + DIC00 * DXI(NL10)
          DXIXJ(N0) = B10NL1 * DXIXJ(NL20) + DIC00 * DXJ(NL10)
     #    +             XC00 * DXIXJ(NL10) + DJC00 * DXI(NL10)
          DXIXK(N0) = B10NL1 * DXIXK(NL20) + DIC00 * DXK(NL10)
     #    +             XC00 * DXIXK(NL10) + DKC00 * DXI(NL10)
          DXJXJ(N0) = B10NL1 * DXJXJ(NL20) + DJC00 * DXJ(NL10)
     #    +             XC00 * DXJXJ(NL10) + DJC00 * DXJ(NL10)
          DXJXK(N0) = B10NL1 * DXJXK(NL20) + DJC00 * DXK(NL10)
     #    +             XC00 * DXJXK(NL10) + DKC00 * DXJ(NL10)
          DXKXK(N0) = B10NL1 * DXKXK(NL20) + DKC00 * DXK(NL10)
     #    +             XC00 * DXKXK(NL10) + DKC00 * DXK(NL10)
          DYIYI(N0) = B10NL1 * DYIYI(NL20) + DIC00 * DYI(NL10)
     #    +             YC00 * DYIYI(NL10) + DIC00 * DYI(NL10)
          DYIYJ(N0) = B10NL1 * DYIYJ(NL20) + DIC00 * DYJ(NL10)
     #    +             YC00 * DYIYJ(NL10) + DJC00 * DYI(NL10)
          DYIYK(N0) = B10NL1 * DYIYK(NL20) + DIC00 * DYK(NL10)
     #    +             YC00 * DYIYK(NL10) + DKC00 * DYI(NL10)
          DYJYJ(N0) = B10NL1 * DYJYJ(NL20) + DJC00 * DYJ(NL10)
     #    +             YC00 * DYJYJ(NL10) + DJC00 * DYJ(NL10)
          DYJYK(N0) = B10NL1 * DYJYK(NL20) + DJC00 * DYK(NL10)
     #    +             YC00 * DYJYK(NL10) + DKC00 * DYJ(NL10)
          DYKYK(N0) = B10NL1 * DYKYK(NL20) + DKC00 * DYK(NL10)
     #    +             YC00 * DYKYK(NL10) + DKC00 * DYK(NL10)
          DZIZI(N0) = B10NL1 * DZIZI(NL20) + DIC00 * DZI(NL10)
     #    +             ZC00 * DZIZI(NL10) + DIC00 * DZI(NL10)
          DZIZJ(N0) = B10NL1 * DZIZJ(NL20) + DIC00 * DZJ(NL10)
     #    +             ZC00 * DZIZJ(NL10) + DJC00 * DZI(NL10)
          DZIZK(N0) = B10NL1 * DZIZK(NL20) + DIC00 * DZK(NL10)
     #    +             ZC00 * DZIZK(NL10) + DKC00 * DZI(NL10)
          DZJZJ(N0) = B10NL1 * DZJZJ(NL20) + DJC00 * DZJ(NL10)
     #    +             ZC00 * DZJZJ(NL10) + DJC00 * DZJ(NL10)
          DZJZK(N0) = B10NL1 * DZJZK(NL20) + DJC00 * DZK(NL10)
     #    +             ZC00 * DZJZK(NL10) + DKC00 * DZJ(NL10)
          DZKZK(N0) = B10NL1 * DZKZK(NL20) + DKC00 * DZK(NL10)
     #    +             ZC00 * DZKZK(NL10) + DKC00 * DZK(NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
            DXJ(N1) = B00N * DXJ(NL10) + DJCP00 * XIN(N0) + XCP00 *
     *      DXJ(N0)
            DYJ(N1) = B00N * DYJ(NL10) + DJCP00 * YIN(N0) + YCP00 *
     *      DYJ(N0)
            DZJ(N1) = B00N * DZJ(NL10) + DJCP00 * ZIN(N0) + ZCP00 *
     *      DZJ(N0)
            DXK(N1) = B00N * DXK(NL10) + DKCP00 * XIN(N0) + XCP00 *
     *      DXK(N0)
            DYK(N1) = B00N * DYK(NL10) + DKCP00 * YIN(N0) + YCP00 *
     *      DYK(N0)
            DZK(N1) = B00N * DZK(NL10) + DKCP00 * ZIN(N0) + ZCP00 *
     *      DZK(N0)
            DXIXI(N1) = B00N  * DXIXI(NL10) + DICP00 * DXI(N0)
     #      +           XCP00 * DXIXI(N0)   + DICP00 * DXI(N0)
            DXIXJ(N1) = B00N  * DXIXJ(NL10) + DICP00 * DXJ(N0)
     #      +           XCP00 * DXIXJ(N0)   + DJCP00 * DXI(N0)
            DXIXK(N1) = B00N  * DXIXK(NL10) + DICP00 * DXK(N0)
     #      +           XCP00 * DXIXK(N0)   + DKCP00 * DXI(N0)
            DXJXJ(N1) = B00N  * DXJXJ(NL10) + DJCP00 * DXJ(N0)
     #      +           XCP00 * DXJXJ(N0)   + DJCP00 * DXJ(N0)
            DXJXK(N1) = B00N  * DXJXK(NL10) + DJCP00 * DXK(N0)
     #      +           XCP00 * DXJXK(N0)   + DKCP00 * DXJ(N0)
            DXKXK(N1) = B00N  * DXKXK(NL10) + DKCP00 * DXK(N0)
     #      +           XCP00 * DXKXK(N0)   + DKCP00 * DXK(N0)
            DYIYI(N1) = B00N  * DYIYI(NL10) + DICP00 * DYI(N0)
     #      +           YCP00 * DYIYI(N0)   + DICP00 * DYI(N0)
            DYIYJ(N1) = B00N  * DYIYJ(NL10) + DICP00 * DYJ(N0)
     #      +           YCP00 * DYIYJ(N0)   + DJCP00 * DYI(N0)
            DYIYK(N1) = B00N  * DYIYK(NL10) + DICP00 * DYK(N0)
     #      +           YCP00 * DYIYK(N0)   + DKCP00 * DYI(N0)
            DYJYJ(N1) = B00N  * DYJYJ(NL10) + DJCP00 * DYJ(N0)
     #      +           YCP00 * DYJYJ(N0)   + DJCP00 * DYJ(N0)
            DYJYK(N1) = B00N  * DYJYK(NL10) + DJCP00 * DYK(N0)
     #      +           YCP00 * DYJYK(N0)   + DKCP00 * DYJ(N0)
            DYKYK(N1) = B00N  * DYKYK(NL10) + DKCP00 * DYK(N0)
     #      +           YCP00 * DYKYK(N0)   + DKCP00 * DYK(N0)
            DZIZI(N1) = B00N  * DZIZI(NL10) + DICP00 * DZI(N0)
     #      +           ZCP00 * DZIZI(N0)   + DICP00 * DZI(N0)
            DZIZJ(N1) = B00N  * DZIZJ(NL10) + DICP00 * DZJ(N0)
     #      +           ZCP00 * DZIZJ(N0)   + DJCP00 * DZI(N0)
            DZIZK(N1) = B00N  * DZIZK(NL10) + DICP00 * DZK(N0)
     #      +           ZCP00 * DZIZK(N0)   + DKCP00 * DZI(N0)
            DZJZJ(N1) = B00N  * DZJZJ(NL10) + DJCP00 * DZJ(N0)
     #      +           ZCP00 * DZJZJ(N0)   + DJCP00 * DZJ(N0)
            DZJZK(N1) = B00N  * DZJZK(NL10) + DJCP00 * DZK(N0)
     #      +           ZCP00 * DZJZK(N0)   + DKCP00 * DZJ(N0)
            DZKZK(N1) = B00N  * DZKZK(NL10) + DKCP00 * DZK(N0)
     #      +           ZCP00 * DZKZK(N0)   + DKCP00 * DZK(N0)
          END IF
  101   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 102 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
          DXJ(I0M) = BPML1 * DXJ(I0ML2) + DJCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXJ(I0ML1)
          DYJ(I0M) = BPML1 * DYJ(I0ML2) + DJCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYJ(I0ML1)
          DZJ(I0M) = BPML1 * DZJ(I0ML2) + DJCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZJ(I0ML1)
          DXK(I0M) = BPML1 * DXK(I0ML2) + DKCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXK(I0ML1)
          DYK(I0M) = BPML1 * DYK(I0ML2) + DKCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYK(I0ML1)
          DZK(I0M) = BPML1 * DZK(I0ML2) + DKCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZK(I0ML1)
          DXIXI(I0M) = BPML1 * DXIXI(I0ML2) + DICP00 * DXI(I0ML1)
     #    +            XCP00 * DXIXI(I0ML1) + DICP00 * DXI(I0ML1)
          DXIXJ(I0M) = BPML1 * DXIXJ(I0ML2) + DICP00 * DXJ(I0ML1)
     #    +            XCP00 * DXIXJ(I0ML1) + DJCP00 * DXI(I0ML1)
          DXIXK(I0M) = BPML1 * DXIXK(I0ML2) + DICP00 * DXK(I0ML1)
     #    +            XCP00 * DXIXK(I0ML1) + DKCP00 * DXI(I0ML1)
          DXJXJ(I0M) = BPML1 * DXJXJ(I0ML2) + DJCP00 * DXJ(I0ML1)
     #    +            XCP00 * DXJXJ(I0ML1) + DJCP00 * DXJ(I0ML1)
          DXJXK(I0M) = BPML1 * DXJXK(I0ML2) + DJCP00 * DXK(I0ML1)
     #    +            XCP00 * DXJXK(I0ML1) + DKCP00 * DXJ(I0ML1)
          DXKXK(I0M) = BPML1 * DXKXK(I0ML2) + DKCP00 * DXK(I0ML1)
     #    +            XCP00 * DXKXK(I0ML1) + DKCP00 * DXK(I0ML1)
          DYIYI(I0M) = BPML1 * DYIYI(I0ML2) + DICP00 * DYI(I0ML1)
     #    +            YCP00 * DYIYI(I0ML1) + DICP00 * DYI(I0ML1)
          DYIYJ(I0M) = BPML1 * DYIYJ(I0ML2) + DICP00 * DYJ(I0ML1)
     #    +            YCP00 * DYIYJ(I0ML1) + DJCP00 * DYI(I0ML1)
          DYIYK(I0M) = BPML1 * DYIYK(I0ML2) + DICP00 * DYK(I0ML1)
     #    +            YCP00 * DYIYK(I0ML1) + DKCP00 * DYI(I0ML1)
          DYJYJ(I0M) = BPML1 * DYJYJ(I0ML2) + DJCP00 * DYJ(I0ML1)
     #    +            YCP00 * DYJYJ(I0ML1) + DJCP00 * DYJ(I0ML1)
          DYJYK(I0M) = BPML1 * DYJYK(I0ML2) + DJCP00 * DYK(I0ML1)
     #    +            YCP00 * DYJYK(I0ML1) + DKCP00 * DYJ(I0ML1)
          DYKYK(I0M) = BPML1 * DYKYK(I0ML2) + DKCP00 * DYK(I0ML1)
     #    +            YCP00 * DYKYK(I0ML1) + DKCP00 * DYK(I0ML1)
          DZIZI(I0M) = BPML1 * DZIZI(I0ML2) + DICP00 * DZI(I0ML1)
     #    +            ZCP00 * DZIZI(I0ML1) + DICP00 * DZI(I0ML1)
          DZIZJ(I0M) = BPML1 * DZIZJ(I0ML2) + DICP00 * DZJ(I0ML1)
     #    +            ZCP00 * DZIZJ(I0ML1) + DJCP00 * DZI(I0ML1)
          DZIZK(I0M) = BPML1 * DZIZK(I0ML2) + DICP00 * DZK(I0ML1)
     #    +            ZCP00 * DZIZK(I0ML1) + DKCP00 * DZI(I0ML1)
          DZJZJ(I0M) = BPML1 * DZJZJ(I0ML2) + DJCP00 * DZJ(I0ML1)
     #    +            ZCP00 * DZJZJ(I0ML1) + DJCP00 * DZJ(I0ML1)
          DZJZK(I0M) = BPML1 * DZJZK(I0ML2) + DJCP00 * DZK(I0ML1)
     #    +            ZCP00 * DZJZK(I0ML1) + DKCP00 * DZJ(I0ML1)
          DZKZK(I0M) = BPML1 * DZKZK(I0ML2) + DKCP00 * DZK(I0ML1)
     #    +            ZCP00 * DZKZK(I0ML1) + DKCP00 * DZK(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
            DXJ(I1M) = B00M * DXJ(I0ML1) + DJC00 * XIN(I0M) + XC00 *
     *      DXJ(I0M)
            DYJ(I1M) = B00M * DYJ(I0ML1) + DJC00 * YIN(I0M) + YC00 *
     *      DYJ(I0M)
            DZJ(I1M) = B00M * DZJ(I0ML1) + DJC00 * ZIN(I0M) + ZC00 *
     *      DZJ(I0M)
            DXK(I1M) = B00M * DXK(I0ML1) + DKC00 * XIN(I0M) + XC00 *
     *      DXK(I0M)
            DYK(I1M) = B00M * DYK(I0ML1) + DKC00 * YIN(I0M) + YC00 *
     *      DYK(I0M)
            DZK(I1M) = B00M * DZK(I0ML1) + DKC00 * ZIN(I0M) + ZC00 *
     *      DZK(I0M)
            DXIXI(I1M) = B00M * DXIXI(I0ML1) + DIC00 * DXI(I0M)
     #      +            XC00 * DXIXI(I0M)   + DIC00 * DXI(I0M)
            DXIXJ(I1M) = B00M * DXIXJ(I0ML1) + DIC00 * DXJ(I0M)
     #      +            XC00 * DXIXJ(I0M)   + DJC00 * DXI(I0M)
            DXIXK(I1M) = B00M * DXIXK(I0ML1) + DIC00 * DXK(I0M)
     #      +            XC00 * DXIXK(I0M)   + DKC00 * DXI(I0M)
            DXJXJ(I1M) = B00M * DXJXJ(I0ML1) + DJC00 * DXJ(I0M)
     #      +            XC00 * DXJXJ(I0M)   + DJC00 * DXJ(I0M)
            DXJXK(I1M) = B00M * DXJXK(I0ML1) + DJC00 * DXK(I0M)
     #      +            XC00 * DXJXK(I0M)   + DKC00 * DXJ(I0M)
            DXKXK(I1M) = B00M * DXKXK(I0ML1) + DKC00 * DXK(I0M)
     #      +            XC00 * DXKXK(I0M)   + DKC00 * DXK(I0M)
            DYIYI(I1M) = B00M * DYIYI(I0ML1) + DIC00 * DYI(I0M)
     #      +            YC00 * DYIYI(I0M)   + DIC00 * DYI(I0M)
            DYIYJ(I1M) = B00M * DYIYJ(I0ML1) + DIC00 * DYJ(I0M)
     #      +            YC00 * DYIYJ(I0M)   + DJC00 * DYI(I0M)
            DYIYK(I1M) = B00M * DYIYK(I0ML1) + DIC00 * DYK(I0M)
     #      +            YC00 * DYIYK(I0M)   + DKC00 * DYI(I0M)
            DYJYJ(I1M) = B00M * DYJYJ(I0ML1) + DJC00 * DYJ(I0M)
     #      +            YC00 * DYJYJ(I0M)   + DJC00 * DYJ(I0M)
            DYJYK(I1M) = B00M * DYJYK(I0ML1) + DJC00 * DYK(I0M)
     #      +            YC00 * DYJYK(I0M)   + DKC00 * DYJ(I0M)
            DYKYK(I1M) = B00M * DYKYK(I0ML1) + DKC00 * DYK(I0M)
     #      +            YC00 * DYKYK(I0M)   + DKC00 * DYK(I0M)
            DZIZI(I1M) = B00M * DZIZI(I0ML1) + DIC00 * DZI(I0M)
     #      +            ZC00 * DZIZI(I0M)   + DIC00 * DZI(I0M)
            DZIZJ(I1M) = B00M * DZIZJ(I0ML1) + DIC00 * DZJ(I0M)
     #      +            ZC00 * DZIZJ(I0M)   + DJC00 * DZI(I0M)
            DZIZK(I1M) = B00M * DZIZK(I0ML1) + DIC00 * DZK(I0M)
     #      +            ZC00 * DZIZK(I0M)   + DKC00 * DZI(I0M)
            DZJZJ(I1M) = B00M * DZJZJ(I0ML1) + DJC00 * DZJ(I0M)
     #      +            ZC00 * DZJZJ(I0M)   + DJC00 * DZJ(I0M)
            DZJZK(I1M) = B00M * DZJZK(I0ML1) + DJC00 * DZK(I0M)
     #      +            ZC00 * DZJZK(I0M)   + DKC00 * DZJ(I0M)
            DZKZK(I1M) = B00M * DZKZK(I0ML1) + DKC00 * DZK(I0M)
     #      +            ZC00 * DZKZK(I0M)   + DKC00 * DZK(I0M)
          END IF
  102   CONTINUE
      END IF
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 104 M=2,MMAX
          M8=M*32 + IOFFST
          DO 103 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
            DXJ(NM) = B10NL1 * DXJ(NL2M) + B00M * DXJ(NL1ML1)
     1      +          DJC00 * XIN(NL1M) + XC00  * DXJ(NL1M)
            DYJ(NM) = B10NL1 * DYJ(NL2M) + B00M * DYJ(NL1ML1)
     1      +          DJC00 * YIN(NL1M) + YC00  * DYJ(NL1M)
            DZJ(NM) = B10NL1 * DZJ(NL2M) + B00M * DZJ(NL1ML1)
     1      +          DJC00 * ZIN(NL1M) + ZC00  * DZJ(NL1M)
            DXK(NM) = B10NL1 * DXK(NL2M) + B00M * DXK(NL1ML1)
     1      +          DKC00 * XIN(NL1M) + XC00  * DXK(NL1M)
            DYK(NM) = B10NL1 * DYK(NL2M) + B00M * DYK(NL1ML1)
     1      +          DKC00 * YIN(NL1M) + YC00  * DYK(NL1M)
            DZK(NM) = B10NL1 * DZK(NL2M) + B00M * DZK(NL1ML1)
     1      +          DKC00 * ZIN(NL1M) + ZC00  * DZK(NL1M)
            DXIXI(NM) = B10NL1 * DXIXI(NL2M) + DIC00 * DXI(NL1M)
     #      +             XC00 * DXIXI(NL1M) + DIC00 * DXI(NL1M)
     #      +             B00M * DXIXI(NL1ML1)
            DXIXJ(NM) = B10NL1 * DXIXJ(NL2M) + DIC00 * DXJ(NL1M)
     #      +             XC00 * DXIXJ(NL1M) + DJC00 * DXI(NL1M)
     #      +             B00M * DXIXJ(NL1ML1)
            DXIXK(NM) = B10NL1 * DXIXK(NL2M) + DIC00 * DXK(NL1M)
     #      +             XC00 * DXIXK(NL1M) + DKC00 * DXI(NL1M)
     #      +             B00M * DXIXK(NL1ML1)
            DXJXJ(NM) = B10NL1 * DXJXJ(NL2M) + DJC00 * DXJ(NL1M)
     #      +             XC00 * DXJXJ(NL1M) + DJC00 * DXJ(NL1M)
     #      +             B00M * DXJXJ(NL1ML1)
            DXJXK(NM) = B10NL1 * DXJXK(NL2M) + DJC00 * DXK(NL1M)
     #      +             XC00 * DXJXK(NL1M) + DKC00 * DXJ(NL1M)
     #      +             B00M * DXJXK(NL1ML1)
            DXKXK(NM) = B10NL1 * DXKXK(NL2M) + DKC00 * DXK(NL1M)
     #      +             XC00 * DXKXK(NL1M) + DKC00 * DXK(NL1M)
     #      +             B00M * DXKXK(NL1ML1)
            DYIYI(NM) = B10NL1 * DYIYI(NL2M) + DIC00 * DYI(NL1M)
     #      +             YC00 * DYIYI(NL1M) + DIC00 * DYI(NL1M)
     #      +             B00M * DYIYI(NL1ML1)
            DYIYJ(NM) = B10NL1 * DYIYJ(NL2M) + DIC00 * DYJ(NL1M)
     #      +             YC00 * DYIYJ(NL1M) + DJC00 * DYI(NL1M)
     #      +             B00M * DYIYJ(NL1ML1)
            DYIYK(NM) = B10NL1 * DYIYK(NL2M) + DIC00 * DYK(NL1M)
     #      +             YC00 * DYIYK(NL1M) + DKC00 * DYI(NL1M)
     #      +             B00M * DYIYK(NL1ML1)
            DYJYJ(NM) = B10NL1 * DYJYJ(NL2M) + DJC00 * DYJ(NL1M)
     #      +             YC00 * DYJYJ(NL1M) + DJC00 * DYJ(NL1M)
     #      +             B00M * DYJYJ(NL1ML1)
            DYJYK(NM) = B10NL1 * DYJYK(NL2M) + DJC00 * DYK(NL1M)
     #      +             YC00 * DYJYK(NL1M) + DKC00 * DYJ(NL1M)
     #      +             B00M * DYJYK(NL1ML1)
            DYKYK(NM) = B10NL1 * DYKYK(NL2M) + DKC00 * DYK(NL1M)
     #      +             YC00 * DYKYK(NL1M) + DKC00 * DYK(NL1M)
     #      +             B00M * DYKYK(NL1ML1)
            DZIZI(NM) = B10NL1 * DZIZI(NL2M) + DIC00 * DZI(NL1M)
     #      +             ZC00 * DZIZI(NL1M) + DIC00 * DZI(NL1M)
     #      +             B00M * DZIZI(NL1ML1)
            DZIZJ(NM) = B10NL1 * DZIZJ(NL2M) + DIC00 * DZJ(NL1M)
     #      +             ZC00 * DZIZJ(NL1M) + DJC00 * DZI(NL1M)
     #      +             B00M * DZIZJ(NL1ML1)
            DZIZK(NM) = B10NL1 * DZIZK(NL2M) + DIC00 * DZK(NL1M)
     #      +             ZC00 * DZIZK(NL1M) + DKC00 * DZI(NL1M)
     #      +             B00M * DZIZK(NL1ML1)
            DZJZJ(NM) = B10NL1 * DZJZJ(NL2M) + DJC00 * DZJ(NL1M)
     #      +             ZC00 * DZJZJ(NL1M) + DJC00 * DZJ(NL1M)
     #      +             B00M * DZJZJ(NL1ML1)
            DZJZK(NM) = B10NL1 * DZJZK(NL2M) + DJC00 * DZK(NL1M)
     #      +             ZC00 * DZJZK(NL1M) + DKC00 * DZJ(NL1M)
     #      +             B00M * DZJZK(NL1ML1)
            DZKZK(NM) = B10NL1 * DZKZK(NL2M) + DKC00 * DZK(NL1M)
     #      +             ZC00 * DZKZK(NL1M) + DKC00 * DZK(NL1M)
     #      +             B00M * DZKZK(NL1ML1)
  103     CONTINUE
  104   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 107 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 106 J=1,NJMAX
          JM = J * 8 + MPT
          DO 105 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
            DXJ(IJM) = DXJ(I1JL1M) + XIMXJ * DXJ(IJL1M) - XIN(IJL1M)
            DYJ(IJM) = DYJ(I1JL1M) + YIMYJ * DYJ(IJL1M) - YIN(IJL1M)
            DZJ(IJM) = DZJ(I1JL1M) + ZIMZJ * DZJ(IJL1M) - ZIN(IJL1M)
            DXK(IJM) = DXK(I1JL1M) + XIMXJ * DXK(IJL1M)
            DYK(IJM) = DYK(I1JL1M) + YIMYJ * DYK(IJL1M)
            DZK(IJM) = DZK(I1JL1M) + ZIMZJ * DZK(IJL1M)
            DXIXI(IJM) =        DXIXI(I1JL1M) + DXI(IJL1M)
     #      +            XIMXJ * DXIXI(IJL1M) + DXI(IJL1M)
            DXIXJ(IJM) =        DXIXJ(I1JL1M) + DXJ(IJL1M)
     #      +            XIMXJ * DXIXJ(IJL1M) - DXI(IJL1M)
            DXIXK(IJM) =        DXIXK(I1JL1M) + DXK(IJL1M)
     #      +            XIMXJ * DXIXK(IJL1M)
            DXJXJ(IJM) =        DXJXJ(I1JL1M) - DXJ(IJL1M)
     #      +            XIMXJ * DXJXJ(IJL1M) - DXJ(IJL1M)
            DXJXK(IJM) =        DXJXK(I1JL1M) - DXK(IJL1M)
     #      +            XIMXJ * DXJXK(IJL1M)
            DXKXK(IJM) =        DXKXK(I1JL1M)
     #      +            XIMXJ * DXKXK(IJL1M)
            DYIYI(IJM) =        DYIYI(I1JL1M) + DYI(IJL1M)
     #      +            YIMYJ * DYIYI(IJL1M) + DYI(IJL1M)
            DYIYJ(IJM) =        DYIYJ(I1JL1M) + DYJ(IJL1M)
     #      +            YIMYJ * DYIYJ(IJL1M) - DYI(IJL1M)
            DYIYK(IJM) =        DYIYK(I1JL1M) + DYK(IJL1M)
     #      +            YIMYJ * DYIYK(IJL1M)
            DYJYJ(IJM) =        DYJYJ(I1JL1M) - DYJ(IJL1M)
     #      +            YIMYJ * DYJYJ(IJL1M) - DYJ(IJL1M)
            DYJYK(IJM) =        DYJYK(I1JL1M) - DYK(IJL1M)
     #      +            YIMYJ * DYJYK(IJL1M)
            DYKYK(IJM) =        DYKYK(I1JL1M)
     #      +            YIMYJ * DYKYK(IJL1M)
            DZIZI(IJM) =        DZIZI(I1JL1M) + DZI(IJL1M)
     #      +            ZIMZJ * DZIZI(IJL1M) + DZI(IJL1M)
            DZIZJ(IJM) =        DZIZJ(I1JL1M) + DZJ(IJL1M)
     #      +            ZIMZJ * DZIZJ(IJL1M) - DZI(IJL1M)
            DZIZK(IJM) =        DZIZK(I1JL1M) + DZK(IJL1M)
     #      +            ZIMZJ * DZIZK(IJL1M)
            DZJZJ(IJM) =        DZJZJ(I1JL1M) - DZJ(IJL1M)
     #      +            ZIMZJ * DZJZJ(IJL1M) - DZJ(IJL1M)
            DZJZK(IJM) =        DZJZK(I1JL1M) - DZK(IJL1M)
     #      +            ZIMZJ * DZJZK(IJL1M)
            DZKZK(IJM) =        DZKZK(I1JL1M)
     #      +            ZIMZJ * DZKZK(IJL1M)
  105     CONTINUE
  106   CONTINUE
  107 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 110 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 109 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 108 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
            DXJ(IJMNEW) = DXJ(IJMOLD)
            DYJ(IJMNEW) = DYJ(IJMOLD)
            DZJ(IJMNEW) = DZJ(IJMOLD)
            DXK(IJMNEW) = DXK(IJMOLD)
            DYK(IJMNEW) = DYK(IJMOLD)
            DZK(IJMNEW) = DZK(IJMOLD)
            DXIXI(IJMNEW) = DXIXI(IJMOLD)
            DXIXJ(IJMNEW) = DXIXJ(IJMOLD)
            DXIXK(IJMNEW) = DXIXK(IJMOLD)
            DXJXJ(IJMNEW) = DXJXJ(IJMOLD)
            DXJXK(IJMNEW) = DXJXK(IJMOLD)
            DXKXK(IJMNEW) = DXKXK(IJMOLD)
            DYIYI(IJMNEW) = DYIYI(IJMOLD)
            DYIYJ(IJMNEW) = DYIYJ(IJMOLD)
            DYIYK(IJMNEW) = DYIYK(IJMOLD)
            DYJYJ(IJMNEW) = DYJYJ(IJMOLD)
            DYJYK(IJMNEW) = DYJYK(IJMOLD)
            DYKYK(IJMNEW) = DYKYK(IJMOLD)
            DZIZI(IJMNEW) = DZIZI(IJMOLD)
            DZIZJ(IJMNEW) = DZIZJ(IJMOLD)
            DZIZK(IJMNEW) = DZIZK(IJMOLD)
            DZJZJ(IJMNEW) = DZJZJ(IJMOLD)
            DZJZK(IJMNEW) = DZJZK(IJMOLD)
            DZKZK(IJMNEW) = DZKZK(IJMOLD)
  108     CONTINUE
  109   CONTINUE
  110 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 114 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 113 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 112 J=0,NJMAX
            JKL = J * 16 + KL
            DO 111 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
              DXJ(IJKL) = DXJ(KP1LM1) + XKMXL * DXJ(IJKLM1)
              DYJ(IJKL) = DYJ(KP1LM1) + YKMYL * DYJ(IJKLM1)
              DZJ(IJKL) = DZJ(KP1LM1) + ZKMZL * DZJ(IJKLM1)
              DXK(IJKL) = DXK(KP1LM1) + XKMXL * DXK(IJKLM1) + XIN(
     *        IJKLM1)
              DYK(IJKL) = DYK(KP1LM1) + YKMYL * DYK(IJKLM1) + YIN(
     *        IJKLM1)
              DZK(IJKL) = DZK(KP1LM1) + ZKMZL * DZK(IJKLM1) + ZIN(
     *        IJKLM1)
              DXIXI(IJKL) =          DXIXI(KP1LM1)
     #        +              XKMXL * DXIXI(IJKLM1)
              DXIXJ(IJKL) =          DXIXJ(KP1LM1)
     #        +              XKMXL * DXIXJ(IJKLM1)
              DXIXK(IJKL) =          DXIXK(KP1LM1)
     #        +              XKMXL * DXIXK(IJKLM1) + DXI(IJKLM1)
              DXJXJ(IJKL) =          DXJXJ(KP1LM1)
     #        +              XKMXL * DXJXJ(IJKLM1)
              DXJXK(IJKL) =          DXJXK(KP1LM1)
     #        +              XKMXL * DXJXK(IJKLM1) + DXJ(IJKLM1)
              DXKXK(IJKL) =          DXKXK(KP1LM1) + DXK(IJKLM1)
     #        +              XKMXL * DXKXK(IJKLM1) + DXK(IJKLM1)
              DYIYI(IJKL) =          DYIYI(KP1LM1)
     #        +              YKMYL * DYIYI(IJKLM1)
              DYIYJ(IJKL) =          DYIYJ(KP1LM1)
     #        +              YKMYL * DYIYJ(IJKLM1)
              DYIYK(IJKL) =          DYIYK(KP1LM1)
     #        +              YKMYL * DYIYK(IJKLM1) + DYI(IJKLM1)
              DYJYJ(IJKL) =          DYJYJ(KP1LM1)
     #        +              YKMYL * DYJYJ(IJKLM1)
              DYJYK(IJKL) =          DYJYK(KP1LM1)
     #        +              YKMYL * DYJYK(IJKLM1) + DYJ(IJKLM1)
              DYKYK(IJKL) =          DYKYK(KP1LM1) + DYK(IJKLM1)
     #        +              YKMYL * DYKYK(IJKLM1) + DYK(IJKLM1)
              DZIZI(IJKL) =          DZIZI(KP1LM1)
     #        +              ZKMZL * DZIZI(IJKLM1)
              DZIZJ(IJKL) =          DZIZJ(KP1LM1)
     #        +              ZKMZL * DZIZJ(IJKLM1)
              DZIZK(IJKL) =          DZIZK(KP1LM1)
     #        +              ZKMZL * DZIZK(IJKLM1) + DZI(IJKLM1)
              DZJZJ(IJKL) =          DZJZJ(KP1LM1)
     #        +              ZKMZL * DZJZJ(IJKLM1)
              DZJZK(IJKL) =          DZJZK(KP1LM1)
     #        +              ZKMZL * DZJZK(IJKLM1) + DZJ(IJKLM1)
              DZKZK(IJKL) =          DZKZK(KP1LM1) + DZK(IJKLM1)
     #        +              ZKMZL * DZKZK(IJKLM1) + DZK(IJKLM1)
  111       CONTINUE
  112     CONTINUE
  113   CONTINUE
  114 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 118 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 117 K=0,NKMAX
          KL = K*64 + LPT
          DO 116 J=0,NJMAX
            JKL = J*16 + KL
            DO 115 I=1,NIMAX+1
              IJKL = I + JKL
              DXIXI(IJKL) = DXIXI(IJKL) + (XICNST*XICNST + DIDICN) *
     *        XIN(IJKL)+             XICNST * DXI(IJKL) + XICNST *
     *        DXI(IJKL)
              DXIXJ(IJKL) = DXIXJ(IJKL) + (XICNST*XJCNST + DIDJCN) *
     *        XIN(IJKL)+             XICNST * DXJ(IJKL) + XJCNST *
     *        DXI(IJKL)
              DXIXK(IJKL) = DXIXK(IJKL) + (XICNST*XKCNST + DIDKCN) *
     *        XIN(IJKL)+             XICNST * DXK(IJKL) + XKCNST *
     *        DXI(IJKL)
              DXJXJ(IJKL) = DXJXJ(IJKL) + (XJCNST*XJCNST + DJDJCN) *
     *        XIN(IJKL)+             XJCNST * DXJ(IJKL) + XJCNST *
     *        DXJ(IJKL)
              DXJXK(IJKL) = DXJXK(IJKL) + (XJCNST*XKCNST + DJDKCN) *
     *        XIN(IJKL)+             XJCNST * DXK(IJKL) + XKCNST *
     *        DXJ(IJKL)
              DXKXK(IJKL) = DXKXK(IJKL) + (XKCNST*XKCNST + DKDKCN) *
     *        XIN(IJKL)+             XKCNST * DXK(IJKL) + XKCNST *
     *        DXK(IJKL)
              DYIYI(IJKL) = DYIYI(IJKL) + (YICNST*YICNST + DIDICN) *
     *        YIN(IJKL)+             YICNST * DYI(IJKL) + YICNST *
     *        DYI(IJKL)
              DYIYJ(IJKL) = DYIYJ(IJKL) + (YICNST*YJCNST + DIDJCN) *
     *        YIN(IJKL)+             YICNST * DYJ(IJKL) + YJCNST *
     *        DYI(IJKL)
              DYIYK(IJKL) = DYIYK(IJKL) + (YICNST*YKCNST + DIDKCN) *
     *        YIN(IJKL)+             YICNST * DYK(IJKL) + YKCNST *
     *        DYI(IJKL)
              DYJYJ(IJKL) = DYJYJ(IJKL) + (YJCNST*YJCNST + DJDJCN) *
     *        YIN(IJKL)+             YJCNST * DYJ(IJKL) + YJCNST *
     *        DYJ(IJKL)
              DYJYK(IJKL) = DYJYK(IJKL) + (YJCNST*YKCNST + DJDKCN) *
     *        YIN(IJKL)+             YJCNST * DYK(IJKL) + YKCNST *
     *        DYJ(IJKL)
              DYKYK(IJKL) = DYKYK(IJKL) + (YKCNST*YKCNST + DKDKCN) *
     *        YIN(IJKL)+             YKCNST * DYK(IJKL) + YKCNST *
     *        DYK(IJKL)
              DZIZI(IJKL) = DZIZI(IJKL) + (ZICNST*ZICNST + DIDICN) *
     *        ZIN(IJKL)+             ZICNST * DZI(IJKL) + ZICNST *
     *        DZI(IJKL)
              DZIZJ(IJKL) = DZIZJ(IJKL) + (ZICNST*ZJCNST + DIDJCN) *
     *        ZIN(IJKL)+             ZICNST * DZJ(IJKL) + ZJCNST *
     *        DZI(IJKL)
              DZIZK(IJKL) = DZIZK(IJKL) + (ZICNST*ZKCNST + DIDKCN) *
     *        ZIN(IJKL)+             ZICNST * DZK(IJKL) + ZKCNST *
     *        DZI(IJKL)
              DZJZJ(IJKL) = DZJZJ(IJKL) + (ZJCNST*ZJCNST + DJDJCN) *
     *        ZIN(IJKL)+             ZJCNST * DZJ(IJKL) + ZJCNST *
     *        DZJ(IJKL)
              DZJZK(IJKL) = DZJZK(IJKL) + (ZJCNST*ZKCNST + DJDKCN) *
     *        ZIN(IJKL)+             ZJCNST * DZK(IJKL) + ZKCNST *
     *        DZJ(IJKL)
              DZKZK(IJKL) = DZKZK(IJKL) + (ZKCNST*ZKCNST + DKDKCN) *
     *        ZIN(IJKL)+             ZKCNST * DZK(IJKL) + ZKCNST *
     *        DZK(IJKL)
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
              DXJ(IJKL) = DXJ(IJKL) + XJCNST * XIN(IJKL)
              DYJ(IJKL) = DYJ(IJKL) + YJCNST * YIN(IJKL)
              DZJ(IJKL) = DZJ(IJKL) + ZJCNST * ZIN(IJKL)
              DXK(IJKL) = DXK(IJKL) + XKCNST * XIN(IJKL)
              DYK(IJKL) = DYK(IJKL) + YKCNST * YIN(IJKL)
              DZK(IJKL) = DZK(IJKL) + ZKCNST * ZIN(IJKL)
  115       CONTINUE
  116     CONTINUE
  117   CONTINUE
  118 CONTINUE
      RETURN
      END
 
      SUBROUTINE TWOIK
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/IKTWO/DIC00,DKC00,DICP00,DKCP00,
     1             XICNST,YICNST,ZICNST,XKCNST,YKCNST,ZKCNST,
     2             DIDICN,DIDKCN,DKDKCN
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      COMMON/TWDII/DXIXI(2304),DYIYI(2304),DZIZI(2304)
      COMMON/TWDKK/DXKXK(2304),DYKYK(2304),DZKZK(2304)
      COMMON/TWDIK/DXIXK(2304),DYIYK(2304),DZIZK(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIBSQ = RHOTSQ / (B*B)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DKC00  = EK * RTIAB
      DICP00 = EI * RTIAB
      DKCP00 = EK/B - RTIBSQ*EK - 1
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      RHO2TK = RHO2T*EKIB
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
      XKCNST =  -XKMXL*EKLIB*TWO + XAMXB*RHO2TK
      YKCNST =  -YKMYL*EKLIB*TWO + YAMYB*RHO2TK
      ZKCNST = (-ZKMZL*EKLIB*TWO + ZAMZB*RHO2TK)
      DIDICN = -EIJIA*TWO - EIIA * RHO2TI
      DIDKCN =              EKIB * RHO2TI
      DKDKCN = -EKLIB*TWO - EKIB * RHO2TK
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
      DXK(I) = ZERO
      DYK(I) = ZERO
      DZK(I) = ZERO
      DXIXI(I) = ZERO
      DXIXK(I) = ZERO
      DXKXK(I) = ZERO
      DYIYI(I) = ZERO
      DYIYK(I) = ZERO
      DYKYK(I) = ZERO
      DZIZI(I) = ZERO
      DZIZK(I) = ZERO
      DZKZK(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
        DXK(I2) = DKC00
        DYK(I2) = DKC00
        DZK(I2) = DKC00 * F00
        DXIXI(I2) = ZERO
        DXIXK(I2) = ZERO
        DXKXK(I2) = ZERO
        DYIYI(I2) = ZERO
        DYIYK(I2) = ZERO
        DYKYK(I2) = ZERO
        DZIZI(I2) = ZERO
        DZIZK(I2) = ZERO
        DZKZK(I2) = ZERO
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
        DXK(I) = DKCP00
        DYK(I) = DKCP00
        DZK(I) = DKCP00 * F00
        DXIXI(I) = ZERO
        DXIXK(I) = ZERO
        DXKXK(I) = ZERO
        DYIYI(I) = ZERO
        DYIYK(I) = ZERO
        DYKYK(I) = ZERO
        DZIZI(I) = ZERO
        DZIZK(I) = ZERO
        DZKZK(I) = ZERO
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
          DXK(I) = DKCP00 * XIN(I2) + XCP00 * DXK(I2)
          DYK(I) = DKCP00 * YIN(I2) + YCP00 * DYK(I2)
          DZK(I) = DKCP00 * ZIN(I2) + ZCP00 * DZK(I2)
          DXIXI(I) = DICP00 * DXI(I2) + DICP00 * DXI(I2)
          DXIXK(I) = DICP00 * DXK(I2) + DKCP00 * DXI(I2)
          DXKXK(I) = DKCP00 * DXK(I2) + DKCP00 * DXK(I2)
          DYIYI(I) = DICP00 * DYI(I2) + DICP00 * DYI(I2)
          DYIYK(I) = DICP00 * DYK(I2) + DKCP00 * DYI(I2)
          DYKYK(I) = DKCP00 * DYK(I2) + DKCP00 * DYK(I2)
          DZIZI(I) = DICP00 * DZI(I2) + DICP00 * DZI(I2)
          DZIZK(I) = DICP00 * DZK(I2) + DKCP00 * DZI(I2)
          DZKZK(I) = DKCP00 * DZK(I2) + DKCP00 * DZK(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 101 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
          DXK(N0) = B10NL1 * DXK(NL20) + DKC00 * XIN(NL10) + XC00* DXK
     *    (NL10)
          DYK(N0) = B10NL1 * DYK(NL20) + DKC00 * YIN(NL10) + YC00* DYK
     *    (NL10)
          DZK(N0) = B10NL1 * DZK(NL20) + DKC00 * ZIN(NL10) + ZC00* DZK
     *    (NL10)
          DXIXI(N0) = B10NL1 * DXIXI(NL20) + DIC00 * DXI(NL10)
     #    +             XC00 * DXIXI(NL10) + DIC00 * DXI(NL10)
          DXIXK(N0) = B10NL1 * DXIXK(NL20) + DIC00 * DXK(NL10)
     #    +             XC00 * DXIXK(NL10) + DKC00 * DXI(NL10)
          DXKXK(N0) = B10NL1 * DXKXK(NL20) + DKC00 * DXK(NL10)
     #    +             XC00 * DXKXK(NL10) + DKC00 * DXK(NL10)
          DYIYI(N0) = B10NL1 * DYIYI(NL20) + DIC00 * DYI(NL10)
     #    +             YC00 * DYIYI(NL10) + DIC00 * DYI(NL10)
          DYIYK(N0) = B10NL1 * DYIYK(NL20) + DIC00 * DYK(NL10)
     #    +             YC00 * DYIYK(NL10) + DKC00 * DYI(NL10)
          DYKYK(N0) = B10NL1 * DYKYK(NL20) + DKC00 * DYK(NL10)
     #    +             YC00 * DYKYK(NL10) + DKC00 * DYK(NL10)
          DZIZI(N0) = B10NL1 * DZIZI(NL20) + DIC00 * DZI(NL10)
     #    +             ZC00 * DZIZI(NL10) + DIC00 * DZI(NL10)
          DZIZK(N0) = B10NL1 * DZIZK(NL20) + DIC00 * DZK(NL10)
     #    +             ZC00 * DZIZK(NL10) + DKC00 * DZI(NL10)
          DZKZK(N0) = B10NL1 * DZKZK(NL20) + DKC00 * DZK(NL10)
     #    +             ZC00 * DZKZK(NL10) + DKC00 * DZK(NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
            DXK(N1) = B00N * DXK(NL10) + DKCP00 * XIN(N0) + XCP00 *
     *      DXK(N0)
            DYK(N1) = B00N * DYK(NL10) + DKCP00 * YIN(N0) + YCP00 *
     *      DYK(N0)
            DZK(N1) = B00N * DZK(NL10) + DKCP00 * ZIN(N0) + ZCP00 *
     *      DZK(N0)
            DXIXI(N1) = B00N  * DXIXI(NL10) + DICP00 * DXI(N0)
     #      +           XCP00 * DXIXI(N0)   + DICP00 * DXI(N0)
            DXIXK(N1) = B00N  * DXIXK(NL10) + DICP00 * DXK(N0)
     #      +           XCP00 * DXIXK(N0)   + DKCP00 * DXI(N0)
            DXKXK(N1) = B00N  * DXKXK(NL10) + DKCP00 * DXK(N0)
     #      +           XCP00 * DXKXK(N0)   + DKCP00 * DXK(N0)
            DYIYI(N1) = B00N  * DYIYI(NL10) + DICP00 * DYI(N0)
     #      +           YCP00 * DYIYI(N0)   + DICP00 * DYI(N0)
            DYIYK(N1) = B00N  * DYIYK(NL10) + DICP00 * DYK(N0)
     #      +           YCP00 * DYIYK(N0)   + DKCP00 * DYI(N0)
            DYKYK(N1) = B00N  * DYKYK(NL10) + DKCP00 * DYK(N0)
     #      +           YCP00 * DYKYK(N0)   + DKCP00 * DYK(N0)
            DZIZI(N1) = B00N  * DZIZI(NL10) + DICP00 * DZI(N0)
     #      +           ZCP00 * DZIZI(N0)   + DICP00 * DZI(N0)
            DZIZK(N1) = B00N  * DZIZK(NL10) + DICP00 * DZK(N0)
     #      +           ZCP00 * DZIZK(N0)   + DKCP00 * DZI(N0)
            DZKZK(N1) = B00N  * DZKZK(NL10) + DKCP00 * DZK(N0)
     #      +           ZCP00 * DZKZK(N0)   + DKCP00 * DZK(N0)
          END IF
  101   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 102 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
          DXK(I0M) = BPML1 * DXK(I0ML2) + DKCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXK(I0ML1)
          DYK(I0M) = BPML1 * DYK(I0ML2) + DKCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYK(I0ML1)
          DZK(I0M) = BPML1 * DZK(I0ML2) + DKCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZK(I0ML1)
          DXIXI(I0M) = BPML1 * DXIXI(I0ML2) + DICP00 * DXI(I0ML1)
     #    +            XCP00 * DXIXI(I0ML1) + DICP00 * DXI(I0ML1)
          DXIXK(I0M) = BPML1 * DXIXK(I0ML2) + DICP00 * DXK(I0ML1)
     #    +            XCP00 * DXIXK(I0ML1) + DKCP00 * DXI(I0ML1)
          DXKXK(I0M) = BPML1 * DXKXK(I0ML2) + DKCP00 * DXK(I0ML1)
     #    +            XCP00 * DXKXK(I0ML1) + DKCP00 * DXK(I0ML1)
          DYIYI(I0M) = BPML1 * DYIYI(I0ML2) + DICP00 * DYI(I0ML1)
     #    +            YCP00 * DYIYI(I0ML1) + DICP00 * DYI(I0ML1)
          DYIYK(I0M) = BPML1 * DYIYK(I0ML2) + DICP00 * DYK(I0ML1)
     #    +            YCP00 * DYIYK(I0ML1) + DKCP00 * DYI(I0ML1)
          DYKYK(I0M) = BPML1 * DYKYK(I0ML2) + DKCP00 * DYK(I0ML1)
     #    +            YCP00 * DYKYK(I0ML1) + DKCP00 * DYK(I0ML1)
          DZIZI(I0M) = BPML1 * DZIZI(I0ML2) + DICP00 * DZI(I0ML1)
     #    +            ZCP00 * DZIZI(I0ML1) + DICP00 * DZI(I0ML1)
          DZIZK(I0M) = BPML1 * DZIZK(I0ML2) + DICP00 * DZK(I0ML1)
     #    +            ZCP00 * DZIZK(I0ML1) + DKCP00 * DZI(I0ML1)
          DZKZK(I0M) = BPML1 * DZKZK(I0ML2) + DKCP00 * DZK(I0ML1)
     #    +            ZCP00 * DZKZK(I0ML1) + DKCP00 * DZK(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
            DXK(I1M) = B00M * DXK(I0ML1) + DKC00 * XIN(I0M) + XC00 *
     *      DXK(I0M)
            DYK(I1M) = B00M * DYK(I0ML1) + DKC00 * YIN(I0M) + YC00 *
     *      DYK(I0M)
            DZK(I1M) = B00M * DZK(I0ML1) + DKC00 * ZIN(I0M) + ZC00 *
     *      DZK(I0M)
            DXIXI(I1M) = B00M * DXIXI(I0ML1) + DIC00 * DXI(I0M)
     #      +            XC00 * DXIXI(I0M)   + DIC00 * DXI(I0M)
            DXIXK(I1M) = B00M * DXIXK(I0ML1) + DIC00 * DXK(I0M)
     #      +            XC00 * DXIXK(I0M)   + DKC00 * DXI(I0M)
            DXKXK(I1M) = B00M * DXKXK(I0ML1) + DKC00 * DXK(I0M)
     #      +            XC00 * DXKXK(I0M)   + DKC00 * DXK(I0M)
            DYIYI(I1M) = B00M * DYIYI(I0ML1) + DIC00 * DYI(I0M)
     #      +            YC00 * DYIYI(I0M)   + DIC00 * DYI(I0M)
            DYIYK(I1M) = B00M * DYIYK(I0ML1) + DIC00 * DYK(I0M)
     #      +            YC00 * DYIYK(I0M)   + DKC00 * DYI(I0M)
            DYKYK(I1M) = B00M * DYKYK(I0ML1) + DKC00 * DYK(I0M)
     #      +            YC00 * DYKYK(I0M)   + DKC00 * DYK(I0M)
            DZIZI(I1M) = B00M * DZIZI(I0ML1) + DIC00 * DZI(I0M)
     #      +            ZC00 * DZIZI(I0M)   + DIC00 * DZI(I0M)
            DZIZK(I1M) = B00M * DZIZK(I0ML1) + DIC00 * DZK(I0M)
     #      +            ZC00 * DZIZK(I0M)   + DKC00 * DZI(I0M)
            DZKZK(I1M) = B00M * DZKZK(I0ML1) + DKC00 * DZK(I0M)
     #      +            ZC00 * DZKZK(I0M)   + DKC00 * DZK(I0M)
          END IF
  102   CONTINUE
      END IF
C
      CALL TWOIK1
C
      RETURN
      END
 
      SUBROUTINE TWOIK1
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/IKTWO/DIC00,DKC00,DICP00,DKCP00,
     1             XICNST,YICNST,ZICNST,XKCNST,YKCNST,ZKCNST,
     2             DIDICN,DIDKCN,DKDKCN
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      COMMON/TWDII/DXIXI(2304),DYIYI(2304),DZIZI(2304)
      COMMON/TWDKK/DXKXK(2304),DYKYK(2304),DZKZK(2304)
      COMMON/TWDIK/DXIXK(2304),DYIYK(2304),DZIZK(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 104 M=2,MMAX
          M8=M*32 + IOFFST
          DO 103 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
            DXK(NM) = B10NL1 * DXK(NL2M) + B00M * DXK(NL1ML1)
     1      +          DKC00 * XIN(NL1M) + XC00  * DXK(NL1M)
            DYK(NM) = B10NL1 * DYK(NL2M) + B00M * DYK(NL1ML1)
     1      +          DKC00 * YIN(NL1M) + YC00  * DYK(NL1M)
            DZK(NM) = B10NL1 * DZK(NL2M) + B00M * DZK(NL1ML1)
     1      +          DKC00 * ZIN(NL1M) + ZC00  * DZK(NL1M)
            DXIXI(NM) = B10NL1 * DXIXI(NL2M) + DIC00 * DXI(NL1M)
     #      +             XC00 * DXIXI(NL1M) + DIC00 * DXI(NL1M)
     #      +             B00M * DXIXI(NL1ML1)
            DXIXK(NM) = B10NL1 * DXIXK(NL2M) + DIC00 * DXK(NL1M)
     #      +             XC00 * DXIXK(NL1M) + DKC00 * DXI(NL1M)
     #      +             B00M * DXIXK(NL1ML1)
            DXKXK(NM) = B10NL1 * DXKXK(NL2M) + DKC00 * DXK(NL1M)
     #      +             XC00 * DXKXK(NL1M) + DKC00 * DXK(NL1M)
     #      +             B00M * DXKXK(NL1ML1)
            DYIYI(NM) = B10NL1 * DYIYI(NL2M) + DIC00 * DYI(NL1M)
     #      +             YC00 * DYIYI(NL1M) + DIC00 * DYI(NL1M)
     #      +             B00M * DYIYI(NL1ML1)
            DYIYK(NM) = B10NL1 * DYIYK(NL2M) + DIC00 * DYK(NL1M)
     #      +             YC00 * DYIYK(NL1M) + DKC00 * DYI(NL1M)
     #      +             B00M * DYIYK(NL1ML1)
            DYKYK(NM) = B10NL1 * DYKYK(NL2M) + DKC00 * DYK(NL1M)
     #      +             YC00 * DYKYK(NL1M) + DKC00 * DYK(NL1M)
     #      +             B00M * DYKYK(NL1ML1)
            DZIZI(NM) = B10NL1 * DZIZI(NL2M) + DIC00 * DZI(NL1M)
     #      +             ZC00 * DZIZI(NL1M) + DIC00 * DZI(NL1M)
     #      +             B00M * DZIZI(NL1ML1)
            DZIZK(NM) = B10NL1 * DZIZK(NL2M) + DIC00 * DZK(NL1M)
     #      +             ZC00 * DZIZK(NL1M) + DKC00 * DZI(NL1M)
     #      +             B00M * DZIZK(NL1ML1)
            DZKZK(NM) = B10NL1 * DZKZK(NL2M) + DKC00 * DZK(NL1M)
     #      +             ZC00 * DZKZK(NL1M) + DKC00 * DZK(NL1M)
     #      +             B00M * DZKZK(NL1ML1)
  103     CONTINUE
  104   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 107 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 106 J=1,NJMAX
          JM = J * 8 + MPT
          DO 105 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
            DXK(IJM) = DXK(I1JL1M) + XIMXJ * DXK(IJL1M)
            DYK(IJM) = DYK(I1JL1M) + YIMYJ * DYK(IJL1M)
            DZK(IJM) = DZK(I1JL1M) + ZIMZJ * DZK(IJL1M)
            DXIXI(IJM) =        DXIXI(I1JL1M) + DXI(IJL1M)
     #      +            XIMXJ * DXIXI(IJL1M) + DXI(IJL1M)
            DXIXK(IJM) =        DXIXK(I1JL1M) + DXK(IJL1M)
     #      +            XIMXJ * DXIXK(IJL1M)
            DXKXK(IJM) =        DXKXK(I1JL1M)
     #      +            XIMXJ * DXKXK(IJL1M)
            DYIYI(IJM) =        DYIYI(I1JL1M) + DYI(IJL1M)
     #      +            YIMYJ * DYIYI(IJL1M) + DYI(IJL1M)
            DYIYK(IJM) =        DYIYK(I1JL1M) + DYK(IJL1M)
     #      +            YIMYJ * DYIYK(IJL1M)
            DYKYK(IJM) =        DYKYK(I1JL1M)
     #      +            YIMYJ * DYKYK(IJL1M)
            DZIZI(IJM) =        DZIZI(I1JL1M) + DZI(IJL1M)
     #      +            ZIMZJ * DZIZI(IJL1M) + DZI(IJL1M)
            DZIZK(IJM) =        DZIZK(I1JL1M) + DZK(IJL1M)
     #      +            ZIMZJ * DZIZK(IJL1M)
            DZKZK(IJM) =        DZKZK(I1JL1M)
     #      +            ZIMZJ * DZKZK(IJL1M)
  105     CONTINUE
  106   CONTINUE
  107 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 110 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 109 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 108 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
            DXK(IJMNEW) = DXK(IJMOLD)
            DYK(IJMNEW) = DYK(IJMOLD)
            DZK(IJMNEW) = DZK(IJMOLD)
            DXIXI(IJMNEW) = DXIXI(IJMOLD)
            DXIXK(IJMNEW) = DXIXK(IJMOLD)
            DXKXK(IJMNEW) = DXKXK(IJMOLD)
            DYIYI(IJMNEW) = DYIYI(IJMOLD)
            DYIYK(IJMNEW) = DYIYK(IJMOLD)
            DYKYK(IJMNEW) = DYKYK(IJMOLD)
            DZIZI(IJMNEW) = DZIZI(IJMOLD)
            DZIZK(IJMNEW) = DZIZK(IJMOLD)
            DZKZK(IJMNEW) = DZKZK(IJMOLD)
  108     CONTINUE
  109   CONTINUE
  110 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 114 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 113 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 112 J=0,NJMAX
            JKL = J * 16 + KL
            DO 111 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
              DXK(IJKL) = DXK(KP1LM1) + XKMXL * DXK(IJKLM1) + XIN(
     *        IJKLM1)
              DYK(IJKL) = DYK(KP1LM1) + YKMYL * DYK(IJKLM1) + YIN(
     *        IJKLM1)
              DZK(IJKL) = DZK(KP1LM1) + ZKMZL * DZK(IJKLM1) + ZIN(
     *        IJKLM1)
              DXIXI(IJKL) =          DXIXI(KP1LM1)
     #        +              XKMXL * DXIXI(IJKLM1)
              DXIXK(IJKL) =          DXIXK(KP1LM1)
     #        +              XKMXL * DXIXK(IJKLM1) + DXI(IJKLM1)
              DXKXK(IJKL) =          DXKXK(KP1LM1) + DXK(IJKLM1)
     #        +              XKMXL * DXKXK(IJKLM1) + DXK(IJKLM1)
              DYIYI(IJKL) =          DYIYI(KP1LM1)
     #        +              YKMYL * DYIYI(IJKLM1)
              DYIYK(IJKL) =          DYIYK(KP1LM1)
     #        +              YKMYL * DYIYK(IJKLM1) + DYI(IJKLM1)
              DYKYK(IJKL) =          DYKYK(KP1LM1) + DYK(IJKLM1)
     #        +              YKMYL * DYKYK(IJKLM1) + DYK(IJKLM1)
              DZIZI(IJKL) =          DZIZI(KP1LM1)
     #        +              ZKMZL * DZIZI(IJKLM1)
              DZIZK(IJKL) =          DZIZK(KP1LM1)
     #        +              ZKMZL * DZIZK(IJKLM1) + DZI(IJKLM1)
              DZKZK(IJKL) =          DZKZK(KP1LM1) + DZK(IJKLM1)
     #        +              ZKMZL * DZKZK(IJKLM1) + DZK(IJKLM1)
  111       CONTINUE
  112     CONTINUE
  113   CONTINUE
  114 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 118 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 117 K=0,NKMAX
          KL = K*64 + LPT
          DO 116 J=0,NJMAX
            JKL = J*16 + KL
            DO 115 I=1,NIMAX+1
              IJKL = I + JKL
              DXIXI(IJKL) = DXIXI(IJKL) + (XICNST*XICNST + DIDICN) *
     *        XIN(IJKL)+             XICNST * DXI(IJKL) + XICNST *
     *        DXI(IJKL)
              DXIXK(IJKL) = DXIXK(IJKL) + (XICNST*XKCNST + DIDKCN) *
     *        XIN(IJKL)+             XICNST * DXK(IJKL) + XKCNST *
     *        DXI(IJKL)
              DXKXK(IJKL) = DXKXK(IJKL) + (XKCNST*XKCNST + DKDKCN) *
     *        XIN(IJKL)+             XKCNST * DXK(IJKL) + XKCNST *
     *        DXK(IJKL)
              DYIYI(IJKL) = DYIYI(IJKL) + (YICNST*YICNST + DIDICN) *
     *        YIN(IJKL)+             YICNST * DYI(IJKL) + YICNST *
     *        DYI(IJKL)
              DYIYK(IJKL) = DYIYK(IJKL) + (YICNST*YKCNST + DIDKCN) *
     *        YIN(IJKL)+             YICNST * DYK(IJKL) + YKCNST *
     *        DYI(IJKL)
              DYKYK(IJKL) = DYKYK(IJKL) + (YKCNST*YKCNST + DKDKCN) *
     *        YIN(IJKL)+             YKCNST * DYK(IJKL) + YKCNST *
     *        DYK(IJKL)
              DZIZI(IJKL) = DZIZI(IJKL) + (ZICNST*ZICNST + DIDICN) *
     *        ZIN(IJKL)+             ZICNST * DZI(IJKL) + ZICNST *
     *        DZI(IJKL)
              DZIZK(IJKL) = DZIZK(IJKL) + (ZICNST*ZKCNST + DIDKCN) *
     *        ZIN(IJKL)+             ZICNST * DZK(IJKL) + ZKCNST *
     *        DZI(IJKL)
              DZKZK(IJKL) = DZKZK(IJKL) + (ZKCNST*ZKCNST + DKDKCN) *
     *        ZIN(IJKL)+             ZKCNST * DZK(IJKL) + ZKCNST *
     *        DZK(IJKL)
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
              DXK(IJKL) = DXK(IJKL) + XKCNST * XIN(IJKL)
              DYK(IJKL) = DYK(IJKL) + YKCNST * YIN(IJKL)
              DZK(IJKL) = DZK(IJKL) + ZKCNST * ZIN(IJKL)
  115       CONTINUE
  116     CONTINUE
  117   CONTINUE
  118 CONTINUE
      RETURN
      END
 
      SUBROUTINE VADD(A,B,C,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(N),B(N),C(N)
C
      DO 101 I=1,N
      A(I)=B(I)+C(I)
  101 CONTINUE
      RETURN
      END
C*******************************************************
C***LAST UPDATED ON APRIL 25, 1985 BY YUKIO YAMAGUCHI***
C*******************************************************
      SUBROUTINE VDER2
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/DSTVG/T,X0,Y0,Z0,NI,NJ,CX,CY,CZ,TAI,TAJ,TAA,UU
      COMMON/DSTVR/VX,VY,VZ,DVX,DVY,DVZ,DDVX,DDVY,DDVZ,WIVX,WIVY,WIVZ
     #,            WIWIVX,WIWIVY,WIWIVZ,WIWJVX,WIWJVY,WIWJVZ
     #,            WJWJVX,WJWJVY,WJWJVZ,WJVX,WJVY,WJVZ
     #,            WIXDVX,WIYDVY,WIZDVZ,WJXDVX,WJYDVY,WJZDVZ
     #,            DEXDXI,DEXDYI,DEXDZI,DEXDXJ,DEXDYJ,DEXDZJ
     #,            DEXDII,DEXDIJ,DEXDJJ,DEXDIC,DEXDJC
      COMMON/IJATM/IATOM,JATOM,ICATOM
      COMMON/IJXYZ/XI,YI,ZI,XJ,YJ,ZJ
      COMMON/NDERS/NDERIV
      DIMENSION H(21),W(21),LMIN(6),LMAX(6)
      DIMENSION COORD0(3),COORDI(3)
      DIMENSION COORDJ(3),COORDC(3),V(3),DV(3),DDV(3),WIV(3),WIWIV(3)
      DIMENSION WIWJV(3),WJWJV(3),WIDV(3),DEXDI(3),DEXDJ(3),WJV(3)
      DIMENSION WJDV(3)
      EQUIVALENCE (V,VX),(DV,DVX),(DDV,DDVX),(WIV,WIVX),(WIWIV,WIWIVX)
      EQUIVALENCE (WIWJV,WIWJVX),            (WJV,WJVX)
      EQUIVALENCE (WJWJV,WJWJVX),(WIDV,WIXDVX),(WJDV,WJXDVX)
      EQUIVALENCE (COORD0,X0),(COORDI,XI),(COORDJ,XJ),(COORDC,CX)
      EQUIVALENCE (DEXDI,DEXDXI),(DEXDJ,DEXDXJ)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
      DATA LMIN /1,  2,  4,  7, 11, 16/
      DATA LMAX /1,  3,  6, 10, 15, 21/
      DATA H   /0.0D+00
     1,         -.707106781186548D+00,  0.707106781186548D+00
     2,         -1.22474487139159D+00,0.0D+00,1.22474487139159D+00
     3,         -1.65068012388578D+00, -0.524647623275290D+00
     4,          0.524647623275290D+00, 1.65068012388578D+00
     5,   -2.02018287045609D+00,-0.958572464613819D+00,0.0D+00
     6,          0.958572464613819D+00, 2.02018287045609D+00
     7,         -2.350604973674D+00  , -1.335849074014D+00
     8,         -0.436077411928D+00  ,  0.436077411928D+00
     9,          1.335849074014D+00  ,  2.350604973674D+00/
      DATA W   /1.77245385090552D+00
     1,         0.8862269254528D+00  ,  0.8862269254528D+00
     2,         0.2954089751509D+00  ,  1.181635900604D+00
     3,         0.2954089751509D+00
     4,         8.131283544725D-02   ,  8.049140900055D-01
     5,         8.049140900055D-01   ,  8.131283544725D-02
     6,         1.995324205905D-02   ,  3.936193231522D-01
     7,         9.453087204829D-01   ,  3.936193231522D-01
     8,         1.995324205905D-02
     9,         4.530009905509D-03   ,  1.570673203229D-01
     A,         7.246295952244D-01   ,  7.246295952244D-01
     B,         1.570673203229D-01   ,  4.530009905509D-03/
C
      TWOUU=TWO*UU
      NPTS=(NI+NJ+NDERIV)/2 + 1
      IF(IATOM.EQ.JATOM) THEN
      IF(IATOM.EQ.ICATOM) THEN
      TWOAA  = TAA + TWO*UU
      TWOUU=ZERO
      ELSE
      TWOAA  = TAA
      END IF
      NA=NI+NJ-2
      DO 102 IXYZ=1,3
      V(IXYZ)=zero
      DV(IXYZ)=v(ixyz)
      WIV(IXYZ)=v(ixyz)
      WJV(IXYZ)=v(ixyz)
      IF(NDERIV.LE.1) GO TO 201
      DDV(IXYZ)=v(ixyz)
      WIWIV(IXYZ)=v(ixyz)
      WIWJV(IXYZ)=v(ixyz)
      WJWJV(IXYZ)=v(ixyz)
      WIDV(IXYZ)=v(ixyz)
      WJDV(IXYZ)=v(ixyz)
C
  201 CONTINUE
      DO 101 IPT=LMIN(NPTS),LMAX(NPTS)
      PT=H(IPT)/T+COORD0(IXYZ)
      A=PT-COORDI(IXYZ)
      C=(PT-COORDC(IXYZ))*TWOUU
      WT=W(IPT)
      WTC=WT*C
      WTCSQ=WTC*C
      IF(NA.GT.2) THEN
      ANAM2=A**(NA-2)
      ANAM1=ANAM2*A
      ANA  =ANAM1*A
      ANAP1=ANA*A
      ELSE IF(NA.EQ.2) THEN
      ANAM2=ONE
      ANAM1=A
      ANA  =A*A
      ANAP1=ANA*A
      ELSE IF(NA.EQ.1) THEN
      ANAM2=ZERO
      ANAM1=ONE
      ANA  =A
      ANAP1=A*A
      ELSE IF(NA.EQ.0) THEN
      ANAM2=ZERO
      ANAM1=zero
      ANA  =ONE
      ANAP1=A
      ELSE
      STOP 'NEGATIVE VALUE OF NA, FOR I=J, IN VDER'
      END IF
      ANAP2=ANAP1*A
C
      V(IXYZ)=V(IXYZ) + ANA *WT
      DV(IXYZ)=DV(IXYZ) + ANA * WTC
      TEMP= (TWOAA*ANAP1 - NA*ANAM1) * WT
      WIV(IXYZ) = temp + wiv(ixyz)
      IF(NDERIV.LE.1) GO TO 101
      DDV(IXYZ)=ANA * WTCSQ - TWOUU*ANA*WT +ddv(ixyz)
      WIDV(IXYZ)= TEMP * C + widv(ixyz)
      WIWIV(IXYZ)=              (NA*(NA-1)*ANAM2 - TWOAA*(2*NA+1)*ANA
     *           +  twoaa*twoaa*anap2) * wt + wiwiv(ixyz)
  101 CONTINUE
  102 CONTINUE
      ELSE
      IF(IATOM.EQ.ICATOM) THEN
      TWOAI  = TAI + TWO*UU
      TWOUU  = ZERO
      ELSE
      TWOAI  = TAI
      END IF
      IF(JATOM.EQ.ICATOM) THEN
      TWOAJ  = TAJ + TWO*UU
      TWOUU  = ZERO
      ELSE
      TWOAJ  = TAJ
      END IF
      NA=NI-1
      NB=NJ-1
      DO 104 IXYZ=1,3
      V(IXYZ)=ZERO
      DV(IXYZ)=v(ixyz)
      WIV(IXYZ)=v(ixyz)
      WJV(IXYZ)=v(ixyz)
      IF(NDERIV.LE.1) GO TO 202
      DDV(IXYZ)=v(ixyz)
      WIWIV(IXYZ)=v(ixyz)
      WIWJV(IXYZ)=v(ixyz)
      WJWJV(IXYZ)=v(ixyz)
      WIDV(IXYZ)=v(ixyz)
      WJDV(IXYZ)=v(ixyz)
C
  202 CONTINUE
      DO 103 IPT=LMIN(NPTS),LMAX(NPTS)
      PT=H(IPT)/T+COORD0(IXYZ)
      A=PT-COORDI(IXYZ)
      B=PT-COORDJ(IXYZ)
      C=(PT-COORDC(IXYZ))*TWOUU
      WT=W(IPT)
      WTC=WT*C
      WTCSQ=WTC*C
      IF(NA.GT.2) THEN
      ANAM2=A**(NA-2)
      ANAM1=ANAM2*A
      ANA  =ANAM1*A
      ANAP1=ANA*A
      ELSE IF(NA.EQ.2) THEN
      ANAM2=ONE
      ANAM1=A
      ANA  =A*A
      ANAP1=ANA*A
      ELSE IF(NA.EQ.1) THEN
      ANAM2=ZERO
      ANAM1=ONE
      ANA  =A
      ANAP1=A*A
      ELSE IF(NA.EQ.0) THEN
      ANAM2=ZERO
      ANAM1=zero
      ANA  =ONE
      ANAP1=A
      ELSE
      STOP 'NEGATIVE VALUE OF NA IN VDER'
      END IF
      IF(NB.GT.2) THEN
      BNBM2=B**(NB-2)
      BNBM1=BNBM2*B
      BNB  =BNBM1*B
      BNBP1=BNB*B
      ELSE IF(NB.EQ.2) THEN
      BNBM2=ONE
      BNBM1=B
      BNB  =B*B
      BNBP1=BNB*B
      ELSE IF(NB.EQ.1) THEN
      BNBM2=ZERO
      BNBM1=ONE
      BNB  =B
      BNBP1=B*B
      ELSE IF(NB.EQ.0) THEN
      BNBM2=ZERO
      BNBM1=zero
      BNB  =ONE
      BNBP1=B
      ELSE
      STOP 'NEGATIVE VALUE OF NB IN VDER'
      END IF
      ANAP2=ANAP1*A
      BNBP2=BNBP1*B
      ANABNB= ANA*BNB
C
      V(IXYZ)=V(IXYZ) + ANABNB * WT
      DV(IXYZ)=DV(IXYZ) + ANABNB * WTC
      TEMPI = (TWOAI*ANAP1 - NA*ANAM1) * BNB * WT
      TEMPJ = (TWOAJ*BNBP1 - NB*BNBM1) * ANA * WT
      WIV(IXYZ)=TEMPI + wiv(ixyz)
      WJV(IXYZ)=TEMPJ + wjv(ixyz)
      IF(NDERIV.LE.1) GO TO 103
      DDV(IXYZ)=ANABNB * WTCSQ - TWOUU*ANABNB*WT + ddv(ixyz)
      WIDV(IXYZ)=TEMPI * C + widv(ixyz)
      WJDV(IXYZ)=TEMPJ * C + wjdv(ixyz)
      WIWIV(IXYZ)=(NA*(NA-1)*ANAM2-TWOAI*(2*NA+1)*ana +
     *        TWOAI*TWOAI*ANAP2) * BNB * WT + wiwiv(ixyz)
      WIWJV(IXYZ)=              (TWOAI * ANAP1 - NA * ANAM1)
     #         *                (TWOAJ * BNBP1 - NB * BNBM1) *
     *         WT             + wiwjv(ixyz)
       WJWJV(IXYZ)= (NB*(NB-1)*BNBM2-TWOAJ*(2*NB+1) * bnb
     *         +TWOAJ*TWOAJ*BNBP2) * ANA * WT + wjwjv(ixyz)
  103 CONTINUE
  104 CONTINUE
      END IF
      RETURN
C
C
      ENTRY TDER2
C
  997 NPTS=(NI+NJ+NDERIV)/2+1
      TWOAI=TAI
      TWOAJ=TAJ
      NA=NI-1
      NB=NJ-1
      DO 106 IXYZ=1,3
      V(IXYZ)=ZERO
      DV(IXYZ)=v(ixyz)
      WIV(IXYZ)=v(ixyz)
      WIDV(IXYZ)=v(ixyz)
      IF(NDERIV.LE.1) GO TO 203
      WIWIV(IXYZ)=v(ixyz)
      DDV(IXYZ)=v(ixyz)
C
  203 CONTINUE
      DO 105 IPT=LMIN(NPTS),LMAX(NPTS)
      PT=H(IPT)/T+COORD0(IXYZ)
      A=PT-COORDI(IXYZ)
      B=PT-COORDJ(IXYZ)
      WT=W(IPT)
      IF(NA.GT.2) THEN
      ANAM2=A**(NA-2)
      ANAM1=ANAM2*A
      ANA  =ANAM1*A
      ANAP1=ANA*A
      ELSE IF(NA.EQ.2) THEN
      ANAM2=ONE
      ANAM1=A
      ANA  =A*A
      ANAP1=ANA*A
      ELSE IF(NA.EQ.1) THEN
      ANAM2=ZERO
      ANAM1=ONE
      ANA  =A
      ANAP1=A*A
      ELSE IF(NA.EQ.0) THEN
      ANAM2=ZERO
      ANAM1=zero
      ANA  =ONE
      ANAP1=A
      ELSE
      STOP 'NEGATIVE VALUE OF NA IN TDER'
      END IF
      IF(NB.GT.2) THEN
      BNBM2=B**(NB-2)
      BNBM1=BNBM2*B
      BNB  =BNBM1*B
      BNBP1=BNB*B
      ELSE IF(NB.EQ.2) THEN
      BNBM2=ONE
      BNBM1=B
      BNB  =B*B
      BNBP1=BNB*B
      ELSE IF(NB.EQ.1) THEN
      BNBM2=ZERO
      BNBM1=ONE
      BNB  =B
      BNBP1=B*B
      ELSE IF(NB.EQ.0) THEN
      BNBM2=ZERO
      BNBM1=zero
      BNB  =ONE
      BNBP1=B
      ELSE
      STOP 'NEGATIVE VALUE OF NB IN TDER'
      END IF
      ANAP2=ANAP1*A
      BNBP2=BNBP1*B
      TWOAJ2=TWOAJ*TWOAJ
      TWOAI2=TWOAI*TWOAI
      DELSQB=NB*(NB-1)*BNBM2-TWOAJ*(2*NB+1)*BNB+TWOAJ2*BNBP2
C
      V(IXYZ)=V(IXYZ) + ANA*BNB*WT
      DV(IXYZ)=DV(IXYZ) + ANA*DELSQB*WT
      WIV(IXYZ)=(TWOAI*ANAP1-NA*ANAM1)*BNB*WT +wiv(ixyz)
      WIDV(IXYZ)=(TWOAI*ANAP1-NA*ANAM1)*DELSQB*WT + widv(ixyz)
      IF(NDERIV.LE.1) GO TO 105
      WIWIV(IXYZ)=(NA*(NA-1)*ANAM2-TWOAI*(2*NA+1)*ana +
     *      TWOAI2*ANAP2)*BNB*WT + wiwiv(ixyz)
      DDV(IXYZ)=            (NA*(NA-1)*ANAM2-TWOAI*(2*NA+1)*ANA
     #      +         TWOAI2*ANAP2)*DELSQB*WT + ddv(ixyz)
  105 CONTINUE
  106 CONTINUE
      RETURN
      END
 
      SUBROUTINE WRDER(D1TOT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1TOT(3,NATOM)
      DIMENSION I30(200),A30(100)
      COMMON/COORD/ZAN(50),X(3,50)
      COMMON/ENRGY/ENUC,ESCF
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      EQUIVALENCE (I30,A30)
    1 FORMAT(20A4)
    2 FORMAT(I5,F20.10)
    3 FORMAT(4F20.10)
    4 FORMAT(20X,3F20.10)
C
C::::::::::::::::::::::::::::::::::::::::::
C:::SAVE FIRST DERIVATIVES ON THE TAPE30:::
C::::::::::::::::::::::::::::::::::::::::::
C
C   GET CONSTANTS FROM TAPE30
      ITAP30=30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      IEND    = I30(1)
      MPOINT  = I30(2)
      MCONST  = I30(3)
      MCALCS  = I30(4)
      NCALCS  = I30(5)
C
C   AND GET LOCATION OF INDIVIDUAL CALCULATION TO SAVE GRADIENTS
      IPOS=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,IPOS,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,JUNK)
      LOCCAL=LOCCAL+61
      CALL WREADW(ITAP30,LOCDER,1,LOCCAL,JUNK)
      IF(LOCDER.LE.0) THEN
        LOCDER=IEND
cps I am not sure about the following INTOWP. Could be plain '*2'. Paul
        iend=iend+n3n*2
cets    IEND=IEND+intowp(N3N)
        CALL WWRITW(ITAP30,LOCDER,1,LOCCAL,JUNK)
        CALL WWRITW(ITAP30,IEND,1,101,JUNK)
      END IF
      CALL WWRITW(ITAP30,D1TOT,intowp(N3N),LOCDER,JUNK)
      CALL RCLOSE(ITAP30,3)
C
C::::::::::::::::::::::::::::::::::::::::::
C:::SAVE FIRST DERIVATIVES ON THE TAPE11:::
C::::::::::::::::::::::::::::::::::::::::::
C
      ITAP11=11
      REWIND ITAP11
      WRITE(ITAP11,1) (I30(I),I=1,20)
      WRITE(ITAP11,2) NATOM,ESCF
      DO 101 I=1,NATOM
      WRITE(ITAP11,3) ZAN(I),X(1,I),X(2,I),X(3,I)
  101 CONTINUE
      DO 102 I=1,NATOM
      WRITE(ITAP11,4) D1TOT(1,I),D1TOT(2,I),D1TOT(3,I)
  102 CONTINUE
      REWIND ITAP11
C
      RETURN
      END
      SUBROUTINE XYZI
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DICP00 = EI * RTIAB
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 1 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
          END IF
    1   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 2 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
          END IF
    2   CONTINUE
      END IF
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 4 M=2,MMAX
          M8=M*32 + IOFFST
          DO 3 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
    3     CONTINUE
    4   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 7 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 6 J=1,NJMAX
          JM = J * 8 + MPT
          DO 5 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
    5     CONTINUE
    6   CONTINUE
    7 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 10 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 9 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 8 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
    8     CONTINUE
    9   CONTINUE
   10 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 14 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 13 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 12 J=0,NJMAX
            JKL = J * 16 + KL
            DO 11 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
   11       CONTINUE
   12     CONTINUE
   13   CONTINUE
   14 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 18 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 17 K=0,NKMAX
          KL = K*64 + LPT
          DO 16 J=0,NJMAX
            JKL = J*16 + KL
            DO 15 I=1,NIMAX+1
              IJKL = I + JKL
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
   15       CONTINUE
   16     CONTINUE
   17   CONTINUE
   18 CONTINUE
      RETURN
      END
 
      SUBROUTINE XYZIJ
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DJC00  = EJ/A - RTIASQ*EJ
      DICP00 = EI * RTIAB
      DJCP00 = EJ * RTIAB
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      RHO2TJ = RHO2T*EJIA
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
      XJCNST =   XIMXJ*EIJIA*TWO - XAMXB*RHO2TJ
      YJCNST =   YIMYJ*EIJIA*TWO - YAMYB*RHO2TJ
      ZJCNST = ( ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TJ)
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
      DXJ(I) = ZERO
      DYJ(I) = ZERO
      DZJ(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
        DXJ(I2) = DJC00
        DYJ(I2) = DJC00
        DZJ(I2) = DJC00 * F00
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
        DXJ(I) = DJCP00
        DYJ(I) = DJCP00
        DZJ(I) = DJCP00 * F00
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
          DXJ(I) = DJCP00 * XIN(I2) + XCP00 * DXJ(I2)
          DYJ(I) = DJCP00 * YIN(I2) + YCP00 * DYJ(I2)
          DZJ(I) = DJCP00 * ZIN(I2) + ZCP00 * DZJ(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 1 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
          DXJ(N0) = B10NL1 * DXJ(NL20) + DJC00 * XIN(NL10) + XC00* DXJ
     *    (NL10)
          DYJ(N0) = B10NL1 * DYJ(NL20) + DJC00 * YIN(NL10) + YC00* DYJ
     *    (NL10)
          DZJ(N0) = B10NL1 * DZJ(NL20) + DJC00 * ZIN(NL10) + ZC00* DZJ
     *    (NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
            DXJ(N1) = B00N * DXJ(NL10) + DJCP00 * XIN(N0) + XCP00 *
     *      DXJ(N0)
            DYJ(N1) = B00N * DYJ(NL10) + DJCP00 * YIN(N0) + YCP00 *
     *      DYJ(N0)
            DZJ(N1) = B00N * DZJ(NL10) + DJCP00 * ZIN(N0) + ZCP00 *
     *      DZJ(N0)
          END IF
    1   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 2 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
          DXJ(I0M) = BPML1 * DXJ(I0ML2) + DJCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXJ(I0ML1)
          DYJ(I0M) = BPML1 * DYJ(I0ML2) + DJCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYJ(I0ML1)
          DZJ(I0M) = BPML1 * DZJ(I0ML2) + DJCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZJ(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
            DXJ(I1M) = B00M * DXJ(I0ML1) + DJC00 * XIN(I0M) + XC00 *
     *      DXJ(I0M)
            DYJ(I1M) = B00M * DYJ(I0ML1) + DJC00 * YIN(I0M) + YC00 *
     *      DYJ(I0M)
            DZJ(I1M) = B00M * DZJ(I0ML1) + DJC00 * ZIN(I0M) + ZC00 *
     *      DZJ(I0M)
          END IF
    2   CONTINUE
      END IF
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 4 M=2,MMAX
          M8=M*32 + IOFFST
          DO 3 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
            DXJ(NM) = B10NL1 * DXJ(NL2M) + B00M * DXJ(NL1ML1)
     1      +          DJC00 * XIN(NL1M) + XC00  * DXJ(NL1M)
            DYJ(NM) = B10NL1 * DYJ(NL2M) + B00M * DYJ(NL1ML1)
     1      +          DJC00 * YIN(NL1M) + YC00  * DYJ(NL1M)
            DZJ(NM) = B10NL1 * DZJ(NL2M) + B00M * DZJ(NL1ML1)
     1      +          DJC00 * ZIN(NL1M) + ZC00  * DZJ(NL1M)
    3     CONTINUE
    4   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 7 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 6 J=1,NJMAX
          JM = J * 8 + MPT
          DO 5 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
            DXJ(IJM) = DXJ(I1JL1M) + XIMXJ * DXJ(IJL1M) - XIN(IJL1M)
            DYJ(IJM) = DYJ(I1JL1M) + YIMYJ * DYJ(IJL1M) - YIN(IJL1M)
            DZJ(IJM) = DZJ(I1JL1M) + ZIMZJ * DZJ(IJL1M) - ZIN(IJL1M)
    5     CONTINUE
    6   CONTINUE
    7 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 10 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 9 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 8 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
            DXJ(IJMNEW) = DXJ(IJMOLD)
            DYJ(IJMNEW) = DYJ(IJMOLD)
            DZJ(IJMNEW) = DZJ(IJMOLD)
    8     CONTINUE
    9   CONTINUE
   10 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 14 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 13 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 12 J=0,NJMAX
            JKL = J * 16 + KL
            DO 11 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
              DXJ(IJKL) = DXJ(KP1LM1) + XKMXL * DXJ(IJKLM1)
              DYJ(IJKL) = DYJ(KP1LM1) + YKMYL * DYJ(IJKLM1)
              DZJ(IJKL) = DZJ(KP1LM1) + ZKMZL * DZJ(IJKLM1)
   11       CONTINUE
   12     CONTINUE
   13   CONTINUE
   14 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 18 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 17 K=0,NKMAX
          KL = K*64 + LPT
          DO 16 J=0,NJMAX
            JKL = J*16 + KL
            DO 15 I=1,NIMAX+1
              IJKL = I + JKL
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
              DXJ(IJKL) = DXJ(IJKL) + XJCNST * XIN(IJKL)
              DYJ(IJKL) = DYJ(IJKL) + YJCNST * YIN(IJKL)
              DZJ(IJKL) = DZJ(IJKL) + ZJCNST * ZIN(IJKL)
   15       CONTINUE
   16     CONTINUE
   17   CONTINUE
   18 CONTINUE
      RETURN
      END
 
      SUBROUTINE XYZIJK
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODJ/DXJ(2304),DYJ(2304),DZJ(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIBSQ = RHOTSQ / (B*B)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DJC00  = EJ/A - RTIASQ*EJ
      DKC00  = EK * RTIAB
      DICP00 = EI * RTIAB
      DJCP00 = EJ * RTIAB
      DKCP00 = EK/B - RTIBSQ*EK - 1
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      RHO2TJ = RHO2T*EJIA
      RHO2TK = RHO2T*EKIB
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
      XJCNST =   XIMXJ*EIJIA*TWO - XAMXB*RHO2TJ
      YJCNST =   YIMYJ*EIJIA*TWO - YAMYB*RHO2TJ
      ZJCNST = ( ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TJ)
      XKCNST =  -XKMXL*EKLIB*TWO + XAMXB*RHO2TK
      YKCNST =  -YKMYL*EKLIB*TWO + YAMYB*RHO2TK
      ZKCNST = (-ZKMZL*EKLIB*TWO + ZAMZB*RHO2TK)
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
      DXJ(I) = ZERO
      DYJ(I) = ZERO
      DZJ(I) = ZERO
      DXK(I) = ZERO
      DYK(I) = ZERO
      DZK(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
        DXJ(I2) = DJC00
        DYJ(I2) = DJC00
        DZJ(I2) = DJC00 * F00
        DXK(I2) = DKC00
        DYK(I2) = DKC00
        DZK(I2) = DKC00 * F00
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
        DXJ(I) = DJCP00
        DYJ(I) = DJCP00
        DZJ(I) = DJCP00 * F00
        DXK(I) = DKCP00
        DYK(I) = DKCP00
        DZK(I) = DKCP00 * F00
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
          DXJ(I) = DJCP00 * XIN(I2) + XCP00 * DXJ(I2)
          DYJ(I) = DJCP00 * YIN(I2) + YCP00 * DYJ(I2)
          DZJ(I) = DJCP00 * ZIN(I2) + ZCP00 * DZJ(I2)
          DXK(I) = DKCP00 * XIN(I2) + XCP00 * DXK(I2)
          DYK(I) = DKCP00 * YIN(I2) + YCP00 * DYK(I2)
          DZK(I) = DKCP00 * ZIN(I2) + ZCP00 * DZK(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 1 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
          DXJ(N0) = B10NL1 * DXJ(NL20) + DJC00 * XIN(NL10) + XC00* DXJ
     *    (NL10)
          DYJ(N0) = B10NL1 * DYJ(NL20) + DJC00 * YIN(NL10) + YC00* DYJ
     *    (NL10)
          DZJ(N0) = B10NL1 * DZJ(NL20) + DJC00 * ZIN(NL10) + ZC00* DZJ
     *    (NL10)
          DXK(N0) = B10NL1 * DXK(NL20) + DKC00 * XIN(NL10) + XC00* DXK
     *    (NL10)
          DYK(N0) = B10NL1 * DYK(NL20) + DKC00 * YIN(NL10) + YC00* DYK
     *    (NL10)
          DZK(N0) = B10NL1 * DZK(NL20) + DKC00 * ZIN(NL10) + ZC00* DZK
     *    (NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
            DXJ(N1) = B00N * DXJ(NL10) + DJCP00 * XIN(N0) + XCP00 *
     *      DXJ(N0)
            DYJ(N1) = B00N * DYJ(NL10) + DJCP00 * YIN(N0) + YCP00 *
     *      DYJ(N0)
            DZJ(N1) = B00N * DZJ(NL10) + DJCP00 * ZIN(N0) + ZCP00 *
     *      DZJ(N0)
            DXK(N1) = B00N * DXK(NL10) + DKCP00 * XIN(N0) + XCP00 *
     *      DXK(N0)
            DYK(N1) = B00N * DYK(NL10) + DKCP00 * YIN(N0) + YCP00 *
     *      DYK(N0)
            DZK(N1) = B00N * DZK(NL10) + DKCP00 * ZIN(N0) + ZCP00 *
     *      DZK(N0)
          END IF
    1   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 2 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
          DXJ(I0M) = BPML1 * DXJ(I0ML2) + DJCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXJ(I0ML1)
          DYJ(I0M) = BPML1 * DYJ(I0ML2) + DJCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYJ(I0ML1)
          DZJ(I0M) = BPML1 * DZJ(I0ML2) + DJCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZJ(I0ML1)
          DXK(I0M) = BPML1 * DXK(I0ML2) + DKCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXK(I0ML1)
          DYK(I0M) = BPML1 * DYK(I0ML2) + DKCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYK(I0ML1)
          DZK(I0M) = BPML1 * DZK(I0ML2) + DKCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZK(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
            DXJ(I1M) = B00M * DXJ(I0ML1) + DJC00 * XIN(I0M) + XC00 *
     *      DXJ(I0M)
            DYJ(I1M) = B00M * DYJ(I0ML1) + DJC00 * YIN(I0M) + YC00 *
     *      DYJ(I0M)
            DZJ(I1M) = B00M * DZJ(I0ML1) + DJC00 * ZIN(I0M) + ZC00 *
     *      DZJ(I0M)
            DXK(I1M) = B00M * DXK(I0ML1) + DKC00 * XIN(I0M) + XC00 *
     *      DXK(I0M)
            DYK(I1M) = B00M * DYK(I0ML1) + DKC00 * YIN(I0M) + YC00 *
     *      DYK(I0M)
            DZK(I1M) = B00M * DZK(I0ML1) + DKC00 * ZIN(I0M) + ZC00 *
     *      DZK(I0M)
          END IF
    2   CONTINUE
      END IF
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 4 M=2,MMAX
          M8=M*32 + IOFFST
          DO 3 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
            DXJ(NM) = B10NL1 * DXJ(NL2M) + B00M * DXJ(NL1ML1)
     1      +          DJC00 * XIN(NL1M) + XC00  * DXJ(NL1M)
            DYJ(NM) = B10NL1 * DYJ(NL2M) + B00M * DYJ(NL1ML1)
     1      +          DJC00 * YIN(NL1M) + YC00  * DYJ(NL1M)
            DZJ(NM) = B10NL1 * DZJ(NL2M) + B00M * DZJ(NL1ML1)
     1      +          DJC00 * ZIN(NL1M) + ZC00  * DZJ(NL1M)
            DXK(NM) = B10NL1 * DXK(NL2M) + B00M * DXK(NL1ML1)
     1      +          DKC00 * XIN(NL1M) + XC00  * DXK(NL1M)
            DYK(NM) = B10NL1 * DYK(NL2M) + B00M * DYK(NL1ML1)
     1      +          DKC00 * YIN(NL1M) + YC00  * DYK(NL1M)
            DZK(NM) = B10NL1 * DZK(NL2M) + B00M * DZK(NL1ML1)
     1      +          DKC00 * ZIN(NL1M) + ZC00  * DZK(NL1M)
    3     CONTINUE
    4   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 7 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 6 J=1,NJMAX
          JM = J * 8 + MPT
          DO 5 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
            DXJ(IJM) = DXJ(I1JL1M) + XIMXJ * DXJ(IJL1M) - XIN(IJL1M)
            DYJ(IJM) = DYJ(I1JL1M) + YIMYJ * DYJ(IJL1M) - YIN(IJL1M)
            DZJ(IJM) = DZJ(I1JL1M) + ZIMZJ * DZJ(IJL1M) - ZIN(IJL1M)
            DXK(IJM) = DXK(I1JL1M) + XIMXJ * DXK(IJL1M)
            DYK(IJM) = DYK(I1JL1M) + YIMYJ * DYK(IJL1M)
            DZK(IJM) = DZK(I1JL1M) + ZIMZJ * DZK(IJL1M)
    5     CONTINUE
    6   CONTINUE
    7 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 10 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 9 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 8 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
            DXJ(IJMNEW) = DXJ(IJMOLD)
            DYJ(IJMNEW) = DYJ(IJMOLD)
            DZJ(IJMNEW) = DZJ(IJMOLD)
            DXK(IJMNEW) = DXK(IJMOLD)
            DYK(IJMNEW) = DYK(IJMOLD)
            DZK(IJMNEW) = DZK(IJMOLD)
    8     CONTINUE
    9   CONTINUE
   10 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 14 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 13 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 12 J=0,NJMAX
            JKL = J * 16 + KL
            DO 11 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
              DXJ(IJKL) = DXJ(KP1LM1) + XKMXL * DXJ(IJKLM1)
              DYJ(IJKL) = DYJ(KP1LM1) + YKMYL * DYJ(IJKLM1)
              DZJ(IJKL) = DZJ(KP1LM1) + ZKMZL * DZJ(IJKLM1)
              DXK(IJKL) = DXK(KP1LM1) + XKMXL * DXK(IJKLM1) + XIN(
     *        IJKLM1)
              DYK(IJKL) = DYK(KP1LM1) + YKMYL * DYK(IJKLM1) + YIN(
     *        IJKLM1)
              DZK(IJKL) = DZK(KP1LM1) + ZKMZL * DZK(IJKLM1) + ZIN(
     *        IJKLM1)
   11       CONTINUE
   12     CONTINUE
   13   CONTINUE
   14 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 18 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 17 K=0,NKMAX
          KL = K*64 + LPT
          DO 16 J=0,NJMAX
            JKL = J*16 + KL
            DO 15 I=1,NIMAX+1
              IJKL = I + JKL
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
              DXJ(IJKL) = DXJ(IJKL) + XJCNST * XIN(IJKL)
              DYJ(IJKL) = DYJ(IJKL) + YJCNST * YIN(IJKL)
              DZJ(IJKL) = DZJ(IJKL) + ZJCNST * ZIN(IJKL)
              DXK(IJKL) = DXK(IJKL) + XKCNST * XIN(IJKL)
              DYK(IJKL) = DYK(IJKL) + YKCNST * YIN(IJKL)
              DZK(IJKL) = DZK(IJKL) + ZKCNST * ZIN(IJKL)
   15       CONTINUE
   16     CONTINUE
   17   CONTINUE
   18 CONTINUE
      RETURN
      END
 
      SUBROUTINE XYZIK
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/EXPNT/EIIA,EJIA,EKIB,EIJIA,EKLIB,RHOTSQ,EI,EJ,EK,A,B
      COMMON/GEOIN/XIMXJ,YIMYJ,ZIMZJ,XKMXL,YKMYL,ZKMZL,
     1             XAMXB,YAMYB,ZAMZB
      COMMON/SETD /BP01,B00,B10,XCP00,XC00,YCP00,YC00,ZCP00,ZC00,F00,
     1             NIMAX,NJMAX,NKMAX,NLMAX,NMAX,MMAX,IOFFST
      COMMON/TWOD0/XIN(2304),YIN(2304),ZIN(2304)
      COMMON/TWODI/DXI(2304),DYI(2304),DZI(2304)
      COMMON/TWODK/DXK(2304),DYK(2304),DZK(2304)
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
C
      RTIASQ = RHOTSQ / (A*A)
      RTIBSQ = RHOTSQ / (B*B)
      RTIAB  = RHOTSQ / (A*B)
      DIC00  = EI/A - RTIASQ*EI - 1
      DKC00  = EK * RTIAB
      DICP00 = EI * RTIAB
      DKCP00 = EK/B - RTIBSQ*EK - 1
      RHO2T  = RHOTSQ + RHOTSQ
      RHO2TI = RHO2T*EIIA
      RHO2TK = RHO2T*EKIB
      XICNST =  -XIMXJ*EIJIA*TWO - XAMXB*RHO2TI
      YICNST =  -YIMYJ*EIJIA*TWO - YAMYB*RHO2TI
      ZICNST = (-ZIMZJ*EIJIA*TWO - ZAMZB*RHO2TI)
      XKCNST =  -XKMXL*EKLIB*TWO + XAMXB*RHO2TK
      YKCNST =  -YKMYL*EKLIB*TWO + YAMYB*RHO2TK
      ZKCNST = (-ZKMZL*EKLIB*TWO + ZAMZB*RHO2TK)
C
C
C     ----- I(0,0) -----
C
      I = IOFFST + 1
      XIN(I) = ONE
      YIN(I) = ONE
      ZIN(I) = F00
      DXI(I) = ZERO
      DYI(I) = ZERO
      DZI(I) = ZERO
      DXK(I) = ZERO
      DYK(I) = ZERO
      DZK(I) = ZERO
C
C     ----- I(1,0)=C00 -----
C
      IF (NMAX.NE.0) THEN
        I2 = IOFFST + 2
        XIN(I2) = XC00
        YIN(I2) = YC00
        ZIN(I2) = ZC00 * F00
        DXI(I2) = DIC00
        DYI(I2) = DIC00
        DZI(I2) = DIC00 * F00
        DXK(I2) = DKC00
        DYK(I2) = DKC00
        DZK(I2) = DKC00 * F00
      END IF
C
C     ----- I(0,1)=CP00 -----
C
      IF (MMAX.NE.0) THEN
        I = IOFFST + 33
        XIN(I) = XCP00
        YIN(I) = YCP00
        ZIN(I) = ZCP00 * F00
        DXI(I) = DICP00
        DYI(I) = DICP00
        DZI(I) = DICP00 * F00
        DXK(I) = DKCP00
        DYK(I) = DKCP00
        DZK(I) = DKCP00 * F00
C
C     ----- I(1,1)=B00 * I(0,0) + CP00 * I(1,0) -----
C
        IF (NMAX.NE.0) THEN
          I = IOFFST + 34
          XIN(I) = XCP00 * XIN(I2) + B00
          YIN(I) = YCP00 * YIN(I2) + B00
          ZIN(I) = ZCP00 * ZIN(I2) + B00 * F00
          DXI(I) = DICP00 * XIN(I2) + XCP00 * DXI(I2)
          DYI(I) = DICP00 * YIN(I2) + YCP00 * DYI(I2)
          DZI(I) = DICP00 * ZIN(I2) + ZCP00 * DZI(I2)
          DXK(I) = DKCP00 * XIN(I2) + XCP00 * DXK(I2)
          DYK(I) = DKCP00 * YIN(I2) + YCP00 * DYK(I2)
          DZK(I) = DKCP00 * ZIN(I2) + ZCP00 * DZK(I2)
        END IF
      END IF
C
C     ----- I(N,0)=(N-1)B10 * I(N-2,0) + C00 * I(N-1,0) -----
C
      IF (NMAX.GT.1) THEN
        DO 1 N=2,NMAX
          NL10=N + IOFFST
          N0=NL10+1
          NL20=NL10 - 1
          B10NL1=(N-1) * B10
          XIN(N0) = B10NL1 * XIN(NL20) + XC00 * XIN(NL10)
          YIN(N0) = B10NL1 * YIN(NL20) + YC00 * YIN(NL10)
          ZIN(N0) = B10NL1 * ZIN(NL20) + ZC00 * ZIN(NL10)
          DXI(N0) = B10NL1 * DXI(NL20) + DIC00 * XIN(NL10) + XC00* DXI
     *    (NL10)
          DYI(N0) = B10NL1 * DYI(NL20) + DIC00 * YIN(NL10) + YC00* DYI
     *    (NL10)
          DZI(N0) = B10NL1 * DZI(NL20) + DIC00 * ZIN(NL10) + ZC00* DZI
     *    (NL10)
          DXK(N0) = B10NL1 * DXK(NL20) + DKC00 * XIN(NL10) + XC00* DXK
     *    (NL10)
          DYK(N0) = B10NL1 * DYK(NL20) + DKC00 * YIN(NL10) + YC00* DYK
     *    (NL10)
          DZK(N0) = B10NL1 * DZK(NL20) + DKC00 * ZIN(NL10) + ZC00* DZK
     *    (NL10)
C
C     ----- I(N,1)=N * B00 * I(N-1,0) + CP00 * I(N,0) -----
C
          IF (MMAX.NE.0) THEN
            N1=N0+32
            B00N = B00 * N
            XIN(N1) = B00N * XIN(NL10) + XCP00 * XIN(N0)
            YIN(N1) = B00N * YIN(NL10) + YCP00 * YIN(N0)
            ZIN(N1) = B00N * ZIN(NL10) + ZCP00 * ZIN(N0)
            DXI(N1) = B00N * DXI(NL10) + DICP00 * XIN(N0) + XCP00 *
     *      DXI(N0)
            DYI(N1) = B00N * DYI(NL10) + DICP00 * YIN(N0) + YCP00 *
     *      DYI(N0)
            DZI(N1) = B00N * DZI(NL10) + DICP00 * ZIN(N0) + ZCP00 *
     *      DZI(N0)
            DXK(N1) = B00N * DXK(NL10) + DKCP00 * XIN(N0) + XCP00 *
     *      DXK(N0)
            DYK(N1) = B00N * DYK(NL10) + DKCP00 * YIN(N0) + YCP00 *
     *      DYK(N0)
            DZK(N1) = B00N * DZK(NL10) + DKCP00 * ZIN(N0) + ZCP00 *
     *      DZK(N0)
          END IF
    1   CONTINUE
      END IF
C
C     ----- I(0,M)=(M-1)BP01 * I(0,M-2) + CP00 * I(0,M-1) -----
C
      IF (MMAX.GT.1) THEN
        DO 2 M=2,MMAX
          I0M = M*32 +  1 + IOFFST
          I0ML1 = I0M - 32
          I0ML2 = I0ML1 - 32
          I1M   = I0M + 1
          BPML1 = (M-1) * BP01
          XIN(I0M) = BPML1 * XIN(I0ML2) + XCP00 * XIN(I0ML1)
          YIN(I0M) = BPML1 * YIN(I0ML2) + YCP00 * YIN(I0ML1)
          ZIN(I0M) = BPML1 * ZIN(I0ML2) + ZCP00 * ZIN(I0ML1)
          DXI(I0M) = BPML1 * DXI(I0ML2) + DICP00 * XIN(I0ML1)
     1    +                                XCP00 * DXI(I0ML1)
          DYI(I0M) = BPML1 * DYI(I0ML2) + DICP00 * YIN(I0ML1)
     1    +                                YCP00 * DYI(I0ML1)
          DZI(I0M) = BPML1 * DZI(I0ML2) + DICP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZI(I0ML1)
          DXK(I0M) = BPML1 * DXK(I0ML2) + DKCP00 * XIN(I0ML1)
     1    +                                XCP00 * DXK(I0ML1)
          DYK(I0M) = BPML1 * DYK(I0ML2) + DKCP00 * YIN(I0ML1)
     1    +                                YCP00 * DYK(I0ML1)
          DZK(I0M) = BPML1 * DZK(I0ML2) + DKCP00 * ZIN(I0ML1)
     1    +                                ZCP00 * DZK(I0ML1)
C
C     ----- I(1,M)=M * B00 * I(0,M-1) + C00 * I(0,M) -----
C
          IF (NMAX.NE.0) THEN
            B00M = M * B00
            XIN(I1M) = B00M * XIN(I0ML1) + XC00 * XIN(I0M)
            YIN(I1M) = B00M * YIN(I0ML1) + YC00 * YIN(I0M)
            ZIN(I1M) = B00M * ZIN(I0ML1) + ZC00 * ZIN(I0M)
            DXI(I1M) = B00M * DXI(I0ML1) + DIC00 * XIN(I0M) + XC00 *
     *      DXI(I0M)
            DYI(I1M) = B00M * DYI(I0ML1) + DIC00 * YIN(I0M) + YC00 *
     *      DYI(I0M)
            DZI(I1M) = B00M * DZI(I0ML1) + DIC00 * ZIN(I0M) + ZC00 *
     *      DZI(I0M)
            DXK(I1M) = B00M * DXK(I0ML1) + DKC00 * XIN(I0M) + XC00 *
     *      DXK(I0M)
            DYK(I1M) = B00M * DYK(I0ML1) + DKC00 * YIN(I0M) + YC00 *
     *      DYK(I0M)
            DZK(I1M) = B00M * DZK(I0ML1) + DKC00 * ZIN(I0M) + ZC00 *
     *      DZK(I0M)
          END IF
    2   CONTINUE
      END IF
C
C     ----- I(N,M)=(N-1)B10 * I(N-2,M) + M * B00 * I(N-1,M-1) +
C                                            C00 * I(N-1,M)   -----
C
      IF (NMAX.GT.1.AND.MMAX.GT.1) THEN
        DO 4 M=2,MMAX
          M8=M*32 + IOFFST
          DO 3 N=2,NMAX
            NM=N + 1 + M8
            NL1M=NM - 1
            NL1ML1= NL1M - 32
            NL2M = NL1M - 1
            B10NL1 = (N-1) * B10
            B00M = M * B00
            XIN(NM) = B10NL1 * XIN(NL2M) + B00M * XIN(NL1ML1) +XC00 *
     *      XIN(NL1M)
            YIN(NM) = B10NL1 * YIN(NL2M) + B00M * YIN(NL1ML1) +YC00 *
     *      YIN(NL1M)
            ZIN(NM) = B10NL1 * ZIN(NL2M) + B00M * ZIN(NL1ML1) +ZC00 *
     *      ZIN(NL1M)
            DXI(NM) = B10NL1 * DXI(NL2M) + B00M * DXI(NL1ML1)
     1      +          DIC00 * XIN(NL1M) + XC00  * DXI(NL1M)
            DYI(NM) = B10NL1 * DYI(NL2M) + B00M * DYI(NL1ML1)
     1      +          DIC00 * YIN(NL1M) + YC00  * DYI(NL1M)
            DZI(NM) = B10NL1 * DZI(NL2M) + B00M * DZI(NL1ML1)
     1      +          DIC00 * ZIN(NL1M) + ZC00  * DZI(NL1M)
            DXK(NM) = B10NL1 * DXK(NL2M) + B00M * DXK(NL1ML1)
     1      +          DKC00 * XIN(NL1M) + XC00  * DXK(NL1M)
            DYK(NM) = B10NL1 * DYK(NL2M) + B00M * DYK(NL1ML1)
     1      +          DKC00 * YIN(NL1M) + YC00  * DYK(NL1M)
            DZK(NM) = B10NL1 * DZK(NL2M) + B00M * DZK(NL1ML1)
     1      +          DKC00 * ZIN(NL1M) + ZC00  * DZK(NL1M)
    3     CONTINUE
    4   CONTINUE
      END IF
C
C     ----- I(I,J,M)=I(I+1,J-1,M) + (QI-QJ) * I(I,J-1,M) -----
C
      DO 7 M=0,MMAX
        MPT = M * 32 + IOFFST
        DO 6 J=1,NJMAX
          JM = J * 8 + MPT
          DO 5 I=1,NIMAX + NJMAX - J + 1
            IJM = I + JM
            IJL1M = IJM - 8
            I1JL1M = IJL1M + 1
            XIN(IJM) = XIN(I1JL1M) + XIMXJ * XIN(IJL1M)
            YIN(IJM) = YIN(I1JL1M) + YIMYJ * YIN(IJL1M)
            ZIN(IJM) = ZIN(I1JL1M) + ZIMZJ * ZIN(IJL1M)
            DXI(IJM) = DXI(I1JL1M) + XIMXJ * DXI(IJL1M) + XIN(IJL1M)
            DYI(IJM) = DYI(I1JL1M) + YIMYJ * DYI(IJL1M) + YIN(IJL1M)
            DZI(IJM) = DZI(I1JL1M) + ZIMZJ * DZI(IJL1M) + ZIN(IJL1M)
            DXK(IJM) = DXK(I1JL1M) + XIMXJ * DXK(IJL1M)
            DYK(IJM) = DYK(I1JL1M) + YIMYJ * DYK(IJL1M)
            DZK(IJM) = DZK(I1JL1M) + ZIMZJ * DZK(IJL1M)
    5     CONTINUE
    6   CONTINUE
    7 CONTINUE
C
C     ----- I(I,J,M,0) = I(I,J,M) -----
C
      DO 10 M=MMAX,0,-1
        MNEW = M * 64 + IOFFST
        MOLD = M * 32 + IOFFST
        DO 9 J=NJMAX,0,-1
          JMNEW = MNEW + J * 16
          JMOLD = MOLD + J * 8
          DO 8 I=NIMAX+1,1,-1
            IJMNEW = JMNEW + I
            IJMOLD = JMOLD + I
            XIN(IJMNEW) = XIN(IJMOLD)
            YIN(IJMNEW) = YIN(IJMOLD)
            ZIN(IJMNEW) = ZIN(IJMOLD)
            DXI(IJMNEW) = DXI(IJMOLD)
            DYI(IJMNEW) = DYI(IJMOLD)
            DZI(IJMNEW) = DZI(IJMOLD)
            DXK(IJMNEW) = DXK(IJMOLD)
            DYK(IJMNEW) = DYK(IJMOLD)
            DZK(IJMNEW) = DZK(IJMOLD)
    8     CONTINUE
    9   CONTINUE
   10 CONTINUE
C
C     ----- I(I,J,K,L)=I(I,J,K+1,L-1) + (QK-QL) * I(I,J,K,L-1) -----
C
      DO 14 L=1,NLMAX
        LPT = 4 * L + IOFFST
        DO 13 K=0,NKMAX + NLMAX - L
          KL = K * 64 + LPT
          DO 12 J=0,NJMAX
            JKL = J * 16 + KL
            DO 11 I=1,NIMAX+1
              IJKL = I + JKL
              IJKLM1 = IJKL - 4
              KP1LM1 = IJKLM1 + 64
              XIN(IJKL) = XIN(KP1LM1) + XKMXL * XIN(IJKLM1)
              YIN(IJKL) = YIN(KP1LM1) + YKMYL * YIN(IJKLM1)
              ZIN(IJKL) = ZIN(KP1LM1) + ZKMZL * ZIN(IJKLM1)
              DXI(IJKL) = DXI(KP1LM1) + XKMXL * DXI(IJKLM1)
              DYI(IJKL) = DYI(KP1LM1) + YKMYL * DYI(IJKLM1)
              DZI(IJKL) = DZI(KP1LM1) + ZKMZL * DZI(IJKLM1)
              DXK(IJKL) = DXK(KP1LM1) + XKMXL * DXK(IJKLM1) + XIN(
     *        IJKLM1)
              DYK(IJKL) = DYK(KP1LM1) + YKMYL * DYK(IJKLM1) + YIN(
     *        IJKLM1)
              DZK(IJKL) = DZK(KP1LM1) + ZKMZL * DZK(IJKLM1) + ZIN(
     *        IJKLM1)
   11       CONTINUE
   12     CONTINUE
   13   CONTINUE
   14 CONTINUE
C
C     ----- ADD DERIVATIVE OF EXP(-D) AND EXP(-G) -----
C
      DO 18 L=0,NLMAX
        LPT = L*4 + IOFFST
        DO 17 K=0,NKMAX
          KL = K*64 + LPT
          DO 16 J=0,NJMAX
            JKL = J*16 + KL
            DO 15 I=1,NIMAX+1
              IJKL = I + JKL
              DXI(IJKL) = DXI(IJKL) + XICNST * XIN(IJKL)
              DYI(IJKL) = DYI(IJKL) + YICNST * YIN(IJKL)
              DZI(IJKL) = DZI(IJKL) + ZICNST * ZIN(IJKL)
              DXK(IJKL) = DXK(IJKL) + XKCNST * XIN(IJKL)
              DYK(IJKL) = DYK(IJKL) + YKCNST * YIN(IJKL)
              DZK(IJKL) = DZK(IJKL) + ZKCNST * ZIN(IJKL)
   15       CONTINUE
   16     CONTINUE
   17   CONTINUE
   18 CONTINUE
      RETURN
      END
 
      SUBROUTINE YSOOUT
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      integer rshift
      iword=0
      do 20 j=1,nt
         if (mod(j-1,4).eq.0) then
            iword=iword+1
            indin(j)=and(indout(iword),255)
         else
            indin(j)=and(rshift(indout(iword),8*mod(j-1,4)),255)
         end if
   20 continue
c
      RETURN
C
C--YSOIN-------------------------------------------------YSOIN
C
      ENTRY YSOIN
C
      iword=0
      DO 40 J=1,NT
         if (mod(j-1,4).eq.0) then
            iword=iword+1
            indout(iword)=indin(j)
         else
            indout(iword)=or(indout(iword),lshift(indin(j),
     #                       8*mod(j-1,4)))
         end if
   40 CONTINUE
c
      RETURN
      END
