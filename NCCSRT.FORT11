      subroutine fentry(cc,ic,maxcor)
C
C     VERSION FOR CCTRANS, USES 100 SECTORS FOR ALL BUFFERS.
C      GES  JULY 25,88
C**** Program Mods **************************************************
C********************************************************************
c Put in run time core allocation 2/18/89 - clj.
C********************************************************************
c Moved to PSI area on 2/4/89 by clj.
c********************************************************************
      IMPLICIT INTEGER (A-Z)
      REAL*8 CC(maxcor)
      INTEGER IC(1)
C     INTEGER IC(3000000)
clj021889      EQUIVALENCE (CC,IC)
      REAL*8 TIMLIM,ENUC,ESCF,ECORR,ETOT
      REAL*4 EECPU,EETIME,EETCPU
      CHARACTER*32 DATTIM
      CHARACTER* 4 LABEL(20),OPTION,PRTS,RSTR,CHAR,SORT
      COMMON/TIEMPO/EECPU,EETIME,EETCPU
      COMMON/RESTAR/TIMLIM
      COMMON/INTS/NSGOO,NSGVV,NSGOV,NSHOV,NSLOV,NSLVO
clj021889
clj   DIMENSION NLAMDA(8),ITEMP(1),NC(8),ITYP(8),FLOV(8,4),ITEP(8),
      DIMENSION NLAMDA(8),ITEMP(100),NC(8),ITYP(8),FLOV(8,4),ITEP(8),
     .          NOSYM(8),NVSYM(8),NFZO(8),NFZV(8),NDOC(8),NUOC(8),
     .          NT3(8)
      CALL NOUNFL
      CALL DATETM(DATTIM,EECPU,EETIME,EETCPU)
clj021889      MAXCOR= 500000
C     MAXCOR=1500000
      CALL TSTART(6)
      WRITE(6,6000)
 6000 FORMAT(//,47('-'),/,47('-'),/,
     .'NCCSRT: INTEGRAL SORT FOR NEW CC CODES        ',/,
     .'     WRITTEN BY GUSTAVO SCUSERIA  ',/,47('-'),/,47('-'),//)
C
    1 FORMAT ('                                                ')
    2 FORMAT ('************************************************')
C
      INPUT=5
      JOUT=6
      ITAP30=30
      ITAP60=60
      ITAP61=61
      ITAP62=62
      ITAP63=63
      ITAP64=64
      ITAP65=65
      ITAP66=66
      ITAP71=71
      ITAP78=78
C
      CALL RFILE(ITAP30)
      CALL RFILE(ITAP60)
      CALL RFILE(ITAP61)
      CALL RFILE(ITAP62)
      CALL RFILE(ITAP63)
      CALL RFILE(ITAP64)
      CALL RFILE(ITAP65)
      CALL RFILE(ITAP66)
C     CALL RFILE(ITAP71)
      CALL RFILE(ITAP78)
      INTBUF=SEC2I(100)/INTOWP(1)
      WRITE (JOUT,*) ' SEC2I = 100, INTBUF=',INTBUF
C     CALL SREAD(ITAP78,INTBUF,1)
C     WRITE (JOUT,*) ' INTBUF=',INTBUF
      CALL ZERO(CC,MAXCOR)
C
      CALL WREADW(ITAP30,IC,200,101,LWORD)
      MPOINT=IC(2)
      MCONST=IC(3)
      MCALCS=IC(4)
      NCALCS=IC(5)
      NT  =IC(18)
      NBF=NT
      NAT=IC(19)
      NTAO=IC(22)
      NIRRED=IC(28)
      NSYMHF=IC(41)
      MXCOEF=IC(42)
clj021889
c     write(6,*) 'fentry: read the following from file30:'
c     write(6,8891) 'mpoint','mconst','mcalcs','ncalcs','nt'
c8891 format(5a8)
c     write(6,8892)  mpoint , mconst , mcalcs , ncalcs , nt
c8892 format(5i8)
c     write(6,8891) 'nat','ntao','nirred','nsymhf','mxcoef'
c     write(6,8892)  nat , ntao , nirred , nsymhf , mxcoef
      CALL ZERO(CC,MAXCOR)
      WTEMP=1
      COORD=WTEMP+NT
      ZAN=COORD+3*NAT
      DVEC=ZAN+NAT
      WVEC=DVEC+NT*NT
      XVEC=WVEC+NT*NT
      XARR=XVEC+NT*NT
      EEE=XARR+NT
      PTOCC=WPADTI(EEE+NT)
      ORBSYM=PTOCC+NT
      ILAST=IADTWP(ORBSYM+NT)
      CALL READ30(ITAP30,MPOINT,MCONST,MCALCS,NCALCS,NT,NSYMHF,NAT,
     .    MXCOEF,CC(EEE),NLAMDA,ITEMP,6,NC,NO,CC(WTEMP),IC(PTOCC),ITYP,
     .    IC(ORBSYM),FLOV,NIRRED,ITEP,ENUC,ESCF,CHAR,NORD,CC(ZAN),
     .    CC(COORD))
clj01889
c     write(6,*) 'fentry: returned from read30'
      NV=NT-NO
C
C     IBKTSP=MAXCOR-INTBUF
C     LENGTH=IBKTSP/LTYP
C     NIOBF=INTOWP(LENGTH)/SEC2I(1)
      LTYP=7
      NIOBF=100
      LENGTH=NIOBF*(SEC2I(1)/INTOWP(1))
      IBKTSP=LENGTH*LTYP
C
      JBKT=ILAST
      JIBKT=WPADTI(JBKT)
      JBUF=JBKT+IBKTSP
      JIBUF=WPADTI(JBUF)
      JTOP=JBUF+INTBUF
      WRITE(*,*)' REQUIRED  CORE FOR CCSORT IS',JTOP
      LEFT=MAXCOR-JTOP
      IF(LEFT.LT.0)THEN
      WRITE(6,*)'NOT ENOUGH CC, REQUIRES',JTOP, '  REAL*8 WORDS'
      call mabort
      stop
      ENDIF
C
clj02189
c     write(6,*) 'fentry: calling sorti'
      CALL SORTI(CC(JBKT),IC(JIBKT),CC(JBUF),IC(JIBUF),LENGTH,
     .           LTYP,IBKTSP,INTBUF,NBF,NO,ITAP60,ITAP61,ITAP62,ITAP63,
     .           ITAP64,ITAP65,ITAP66,ITAP78,JOUT)
clj02189
c     write(6,*) 'fentry: returned from sorti'
C
C     IBKTSP=LENGTH
C     JBKT=ILAST
C     JIBKT=WPADTI(JBKT)
C     JBUF=JBKT+IBKTSP
      BUF=ILAST
      IBUF=WPADTI(BUF)
      IPQ=WPADTI(BUF+LENGTH)
      ITV=IPQ+NBF
      BOFF=ITV+NT
      BADD=BOFF+NV*NV
      GBUCK=IADTWP(BADD+NV*NV)
      JTOP=GBUCK+NV*NV
      WRITE(*,*)' REQUIRED  CORE FOR RE-SORTING B INTS IS ',JTOP
      LEFT=MAXCOR-JTOP
      WRITE(*,*)' REMAINING CORE IS ',LEFT
      IF(LEFT.LT.0)THEN
      WRITE(6,*)'NOT ENOUGH CORE, REQUIRES',JTOP, '  REAL*8 WORDS'
      STOP
      ENDIF
clj02189
c     write(6,*) 'fentry: calling sortb'
      CALL SORTB(CC(BUF),IC(IBUF),LENGTH,
     .           NBF,NO,ITAP61,ITAP71,JOUT,
     .           NIRRED,FLOV,IC(ORBSYM),IC(IPQ),IC(ITV),NV,IC(BOFF),
     .           IC(BADD),LEFT,CC(JTOP),CC(GBUCK))
clj02189
c     write(6,*) 'fentry: returned from sortb'
C
      CALL RCLOSE(ITAP30,3)
      CALL RCLOSE(ITAP78,3)
      CALL RCLOSE(ITAP60,3)
      CALL RCLOSE(ITAP61,3)
      CALL RCLOSE(ITAP62,3)
      CALL RCLOSE(ITAP63,3)
      CALL RCLOSE(ITAP64,3)
      CALL RCLOSE(ITAP65,3)
      CALL RCLOSE(ITAP66,3)
C     CALL RCLOSE(ITAP71,3)
      WRITE(JOUT,*)'  >>>   SORTING OF INTEGRALS  COMPLETED   <<<'
      CALL TSTOP(6)
C
      END
C
C                         ********************
C-------------------------****** SORTI *******-------------------------
C                         ********************
C
      SUBROUTINE SORTI(BKT,IBKT,BUF,IBUF,LENGTH,LTYP,IBKTSP,INTBUF,NBF,
     .                 NO,ITAP60,ITAP61,ITAP62,ITAP63,ITAP64,ITAP65,
     .                 ITAP66,ITAP78,JOUT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION BKT(IBKTSP),BUF(INTBUF),IBKT(IBKTSP*2),
     .          IBUF(INTBUF*2)
      DATA ITEMP /255/
   11 FORMAT ('                                                ')
   12 FORMAT ('************************************************')
   19 FORMAT (4I3,F20.12)
      WRITE(*,*) '   IN SORTI '
      CALL ZERO(BKT,IBKTSP)
C
      INTLEN=(INTOWP(LENGTH)-2)/INTOWP(1)
      MAXVAL=INTOWP(INTLEN)/(1+INTOWP(1))
      IVOFF=(MAXVAL+3)/INTOWP(1)
C     WRITE (JOUT,*) ' LENGTH',LENGTH
C     WRITE (JOUT,*) ' INTLEN',INTLEN
C     WRITE (JOUT,*) ' MAXVAL',MAXVAL
C     WRITE (JOUT,*) ' IVOFF',IVOFF
C
      IBFLEN=(INTOWP(INTBUF)-2)/INTOWP(1)
      MAXBUF=INTOWP(IBFLEN)/(1+INTOWP(1))
      IBOFF=(MAXBUF+3)/INTOWP(1)
C     WRITE (JOUT,*) ' MAXBUF=',MAXBUF
           CALL SREW(ITAP78)
      WRITE(6,*)' READING TAPE78'
C
  111 CALL ZERO(BUF,INTBUF)
      CALL SREAD(ITAP78,BUF,INTOWP(INTBUF))
C
      CALL SETMBF(IFLG,IBUF(1))
clj030489      WRITE (JOUT,*) ' IFLG=',IFLG
      CALL SETMBF(MBUF,IBUF(2))
clj030489      WRITE (JOUT,*) ' MBUF=',MBUF
      DO 101 II=1,MBUF
         CALL SETMBF(IJKL,IBUF(2+II))
         I=ISHFT(IJKL,-24)
         J=IAND(ITEMP,ISHFT(IJKL,-16))
         K=IAND(ITEMP,ISHFT(IJKL,-8))
         L=IAND(ITEMP,IJKL)
         RINT=BUF(IBOFF+II)
C        WRITE (JOUT,11)
C        WRITE (JOUT,12)
C        WRITE (JOUT,*) ' *********  INTS AS READ INTO SORTI *******'
C        WRITE (JOUT,11)
C        WRITE (JOUT,12)
C        WRITE (JOUT,19) I,J,K,L,RINT
         IF (L.GT.NO) THEN
            IF (J.GT.NO) THEN
               NTYP=1
            ELSE
               NTYP=6
            END IF
         ELSE IF (K.GT.NO) THEN
            IF (J.GT.NO) THEN
               NTYP=5
            ELSE
               NTYP=3
            END IF
         ELSE IF (I.LE.NO) THEN
            NTYP=0
         ELSE IF (J.GT.NO) THEN
            NTYP=2
         ELSE
            NTYP=4
         END IF
C        WRITE (JOUT,*) ' NTYP',NTYP
         ITAP=60+NTYP
         NOFF=NTYP*LENGTH
C        WRITE (JOUT,*) ' NOFF',NOFF
         IFILL=IBKT(INTOWP(NOFF)+2)+1
C        WRITE (JOUT,*) ' IFILL',IFILL
         IF (IFILL.GT.MAXVAL) THEN
C           WRITE (JOUT,*) ' BUCKET DUMPED'
C           WRITE (JOUT,*) ' IFILL',IFILL
C           WRITE (JOUT,*) ' NTYP',NTYP
C           WRITE (JOUT,*) ' LENGTH',LENGTH
            CALL BKTDMP(BKT(NOFF+1),LENGTH,ITAP)
            CALL ZERO(BKT(NOFF+1),LENGTH)
            IFILL=1
         END IF
         IBKT(INTOWP(NOFF)+2+IFILL)=IJKL
         BKT(IVOFF+NOFF+IFILL)=RINT
         IBKT(INTOWP(NOFF)+2)=IFILL
C        IF (NTYP.EQ.3) THEN
C           WRITE (JOUT,19) I,J,K,L,BKT(IVOFF+NOFF+IFILL)
C        END IF
C
  101 CONTINUE
      IF (IFLG.EQ.0) GOTO 111
      DO 22 JTYP=1,LTYP
         ITAP=59+JTYP
         NOFF=(JTYP-1)*LENGTH
         IBKT(INTOWP(NOFF)+1)=-1
         CALL BKTDMP(BKT(NOFF+1),LENGTH,ITAP)
   22 CONTINUE
C
      RETURN
      END
C
C                         ********************
C-------------------------****** SORTB *******-------------------------
C                         ********************
C
      SUBROUTINE SORTB(BUF,IBUF,LENGTH,NBF,
     .                 NO,ITAP61,ITAP71,JOUT,NIRRED,FLOV,ORBSYM,
     .                 IPQ,ITV,NV,BOFF,BADD,LEFT,CORE,GBUCK)
      IMPLICIT INTEGER (A-Z)
      REAL*8 BUF(LENGTH),RINT,CORE(LEFT),GBUCK(NV*NV)
      INTEGER IBUF(LENGTH*2)
      INTEGER ORBSYM(NBF),FLOV(NIRRED,4),BOFF(NV*NV),BADD(NV*NV),
     .        ITV(NBF),IPQ(NBF)
C
C  OJO SOLO 100 LOOPS AND  8 IRREPS.
C
      INTEGER NAC(8),NBD(8)
      INTEGER FPAIR(100),LPAIR(100),FINT(100),LINT(100)
C
      DATA ITEMP /255/
   11 FORMAT ('                                                ')
   12 FORMAT ('************************************************')
C
      WRITE(6,*) '>>>>>>   IN SORTB <<<<<<<<<'
      WRITE(6,*) 'LEFT  ', LEFT
      WRITE(6,*) 'NIRRED', NIRRED
      WRITE(6,*) 'NO=',NO,' NV=',NV,' NBF=',NBF
      WRITE(6,*) 'ORBSYM'
      WRITE(6,*)  ORBSYM
      WRITE(6,*) 'FLOV  '
      WRITE(6,*)  FLOV
C
C     CONSTRUCT SYMM.-PACKING ARRAYS
C
      DO 50 I=1,NBF
      IPQ(I)=(I*(I-1))/2
      ITV(I)=(I-1)*NV
   50 CONTINUE
C
C     CONSTRUCT SYMM.-PACKING ARRAYS
C
      TOFF=0
      SOFF=0
      ACPR=0
      LOOP=1
      FPAIR(1)=1
      LPAIR(1)=NV*(NV+1)/2
      FINT(1)=1
      LINT(1)=0
      DO 190 TSYM=1,NIRRED
      WRITE(6,*)'TSYM=',TSYM
      NOFF=0
      NAC(TSYM)=0
      DO 180 A=1,NV
      ASYM=ORBSYM(A+NO)
      DO 170 C=1,A
      CSYM=ORBSYM(C+NO)
      ACSYM=IEOR(ASYM,CSYM)
      IF(ACSYM.NE.TSYM-1)GO TO 170
      AC=IPQ(A)+C
      BOFF(AC)=TOFF
C     BOFF(AC)=NOFF
      NAC(TSYM)=NAC(TSYM)+1
      ACPR=ACPR+1
      NBD(TSYM)=0
      NADD=0
      DO 150 B=1,NV
      BSYM=ORBSYM(B+NO)
      DSYM=IEOR(BSYM,ACSYM)+1
      FD=FLOV(DSYM,3)-NO
      LD=FLOV(DSYM,4)-NO
      DO 140 D=FD,LD
      BD=ITV(B)+D
      NOFF=NOFF+1
      NADD=NADD+1
      BADD(BD)=NADD
      TOFF=TOFF+1
      SOFF=SOFF+1
      TOT=BOFF(AC)+BADD(BD)
      NBD(TSYM)=NBD(TSYM)+1
C     WRITE(6,634)A,C,AC,BOFF(AC),B,D,BD,BADD(BD),TOT,TOFF
  634 FORMAT(10(1X,I6))
  140 CONTINUE
  150 CONTINUE
      IF(SOFF.LT.LEFT)THEN
      LINT(LOOP)=TOFF
      LPAIR(LOOP)=ACPR
      ELSE
      LOOP=LOOP+1
      FINT(LOOP)=LINT(LOOP-1)+1
      FPAIR(LOOP)=LPAIR(LOOP-1)+1
      LINT(LOOP)=TOFF
      LPAIR(LOOP)=ACPR
      SOFF=NADD
      ENDIF
  170 CONTINUE
  180 CONTINUE
  190 CONTINUE
C
      WRITE(6,*)
      WRITE(6,*)LOOP,' LOOPS ARE NEEDED TO RESORT BINTS'
      WRITE(6,*)
      DO 231 I=1,LOOP
      WRITE(6,*  )'   I,   FPAIR(I),    LPAIR(I),    FINT(I),   LINT(I)'
      WRITE(6,654)I,FPAIR(I),LPAIR(I),FINT(I),LINT(I)
  654 FORMAT(5(2X,I8))
  231 CONTINUE
      WRITE(6,*)
      WRITE(6,*  )'   ISYM        NAC(ISYM)      NBD(ISYM)'
      TPAR=0
      SIZE71=0
      DO 232 I=1,NIRRED
      WRITE(6,652)I,NAC(I),NBD(I)
      TPAR=TPAR+NAC(I)
      SIZE71=SIZE71+NAC(I)*NBD(I)
  652 FORMAT(3(2X,I8))
  232 CONTINUE
      WRITE(6,*)
      WRITE(6,*)'NV2 =', NV*(NV+1)/2
      WRITE(6,*)'TPAR=', TPAR
      WRITE(6,*)
      WRITE(6,*)'SIZE71=',SIZE71
      WRITE(6,*)
C
      INTLEN=(INTOWP(LENGTH)-2)/INTOWP(1)
      MAXVAL=INTOWP(INTLEN)/(1+INTOWP(1))
      IVOFF=(MAXVAL+3)/INTOWP(1)
      WRITE (JOUT,*) ' LENGTH',LENGTH
      WRITE (JOUT,*) ' INTLEN',INTLEN
      WRITE (JOUT,*) ' MAXVAL',MAXVAL
      WRITE (JOUT,*) ' IVOFF',IVOFF
C
      CALL RFILE(ITAP71)
      POINT=1
      DO 1000 ILOOP=1,LOOP
      CALL ZERO(GBUCK,NV*NV)
      CALL ZERO(CORE ,LEFT )
      FFINT =FINT (ILOOP)
      LLINT =LINT (ILOOP)
      FFPAIR=FPAIR(ILOOP)
      LLPAIR=LPAIR(ILOOP)
      SHIFT=FFINT-1
      WRITE(*,*)'LOOP=',ILOOP,' SHIFT=',SHIFT
      CALL SREW(ITAP61)
  111 CALL ZERO(BUF,LENGTH)
      CALL SREAD(ITAP61,BUF,INTOWP(LENGTH))
C
      CALL SETMBF(IFLG,IBUF(1))
C     WRITE (JOUT,*) ' IFLG=',IFLG
      CALL SETMBF(MBUF,IBUF(2))
C     WRITE (JOUT,*) ' MBUF=',MBUF
C     WRITE (4   ,*) ' MBUF=',MBUF
      DO 101 II=1,MBUF
         CALL SETMBF(ABCD,IBUF(2+II))
         A=ISHFT(ABCD,-24)
         B=IAND(ITEMP,ISHFT(ABCD,-16))
         C=IAND(ITEMP,ISHFT(ABCD,-8))
         D=IAND(ITEMP,ABCD)
          A=A-NO
          B=B-NO
          C=C-NO
          D=D-NO
         RINT=BUF(IVOFF+II)
C        WRITE (JOUT,19) A,B,C,D,RINT
   19 FORMAT (4I3,F20.12,3X,'**')
C
      AC=IPQ(A)+C
      BD=ITV(B)+D
      ACBD=BOFF(AC)+BADD(BD)
      IF(ACBD.GE.FFINT.AND.ACBD.LE.LLINT) THEN
      ACBD=ACBD-SHIFT
      CORE(ACBD)=RINT
      ENDIF
C
      IF(B.GE.C) THEN
      BC=IPQ(B)+C
      AD=ITV(A)+D
      BCAD=BOFF(BC)+BADD(AD)
      IF(BCAD.GE.FFINT.AND.BCAD.LE.LLINT) THEN
      BCAD=BCAD-SHIFT
      CORE(BCAD)=RINT
      ENDIF
      ENDIF
C
      AD=IPQ(A)+D
      BC=ITV(B)+C
      ADBC=BOFF(AD)+BADD(BC)
      IF(ADBC.GE.FFINT.AND.ADBC.LE.LLINT) THEN
      ADBC=ADBC-SHIFT
      CORE(ADBC)=RINT
      ENDIF
C
      IF(B.GE.D) THEN
      BD=IPQ(B)+D
      AC=ITV(A)+C
      BDAC=BOFF(BD)+BADD(AC)
      IF(BDAC.GE.FFINT.AND.BDAC.LE.LLINT) THEN
      BDAC=BDAC-SHIFT
      CORE(BDAC)=RINT
      ENDIF
      ENDIF
C
      IF(C.GE.A) THEN
      CA=IPQ(C)+A
      DB=ITV(D)+B
      CADB=BOFF(CA)+BADD(DB)
      IF(CADB.GE.FFINT.AND.CADB.LE.LLINT) THEN
      CADB=CADB-SHIFT
      CORE(CADB)=RINT
      ENDIF
      ENDIF
C
      IF(C.GE.B) THEN
      CB=IPQ(C)+B
      DA=ITV(D)+A
      CBDA=BOFF(CB)+BADD(DA)
      IF(CBDA.GE.FFINT.AND.CBDA.LE.LLINT) THEN
      CBDA=CBDA-SHIFT
      CORE(CBDA)=RINT
      ENDIF
      ENDIF
C
      IF(D.GE.A) THEN
      DA=IPQ(D)+A
      CB=ITV(C)+B
      DACB=BOFF(DA)+BADD(CB)
      IF(DACB.GE.FFINT.AND.DACB.LE.LLINT) THEN
      DACB=DACB-SHIFT
      CORE(DACB)=RINT
      ENDIF
      ENDIF
C
      IF(D.GE.B) THEN
      DB=IPQ(D)+B
      CA=ITV(C)+A
      DBCA=BOFF(DB)+BADD(CA)
      IF(DBCA.GE.FFINT.AND.DBCA.LE.LLINT) THEN
      DBCA=DBCA-SHIFT
      CORE(DBCA)=RINT
      ENDIF
      ENDIF
C
  101 CONTINUE
      IF (IFLG.EQ.0) GOTO 111
C
      TOFF=0
      IAC=0
      DO 390 TSYM=1,NIRRED
      DO 380 A=1,NV
      ASYM=ORBSYM(A+NO)
      DO 370 C=1,A
      CSYM=ORBSYM(C+NO)
      ACSYM=IEOR(ASYM,CSYM)
      IF(ACSYM.NE.TSYM-1)GO TO 370
      IAC=IAC+1
      IF(IAC.LT.FFPAIR.OR.IAC.GT.LLPAIR)GO TO 365
      NADD=0
      DO 350 B=1,NV
      BSYM=ORBSYM(B+NO)
      DSYM=IEOR(BSYM,ACSYM)+1
      FD=FLOV(DSYM,3)-NO
      LD=FLOV(DSYM,4)-NO
      DO 340 D=FD,LD
      NADD=NADD+1
      TOFF=TOFF+1
      GBUCK(NADD)=CORE(TOFF)
  340 CONTINUE
  350 CONTINUE
      LBD=NBD(TSYM)
C     WRITE(6,651)IAC,A,C,NBD(TSYM)
  651 FORMAT(' WRITING PAIR',I4,' A=',I3,' C=',I3,' OF LENGTH ',I6)
      CALL WWRITW(ITAP71,GBUCK,INTOWP(LBD),POINT,POINT)
  365 CONTINUE
  370 CONTINUE
  380 CONTINUE
  390 CONTINUE
C
 1000 CONTINUE
      CALL RCLOSE(ITAP71,3)
C
C     READ 71 TO CHECK INTEGRALS
C
C     CALL RFILE(ITAP71)
C     POINT=1
C     DO 590 TSYM=1,NIRRED
C     DO 580 A=1,NV
C     ASYM=ORBSYM(A+NO)
C     DO 570 C=1,A
C     CSYM=ORBSYM(C+NO)
C     ACSYM=IEOR(ASYM,CSYM)
C     IF(ACSYM.NE.TSYM-1)GO TO 570
C     LBD=NBD(TSYM)
C     CALL WREADW(ITAP71,GBUCK,INTOWP(LBD),POINT,POINT)
C     NADD=0
C     DO 550 B=1,NV
C     BSYM=ORBSYM(B+NO)
C     DSYM=IEOR(BSYM,ACSYM)+1
C     FD=FLOV(DSYM,3)-NO
C     LD=FLOV(DSYM,4)-NO
C     DO 540 D=FD,LD
C     NADD=NADD+1
C     WRITE(6,656)A  ,B  ,C  ,D  ,GBUCK(NADD)
C 656 FORMAT (4I3,F20.12,3X,'71')
C 540 CONTINUE
C 550 CONTINUE
C 570 CONTINUE
C 580 CONTINUE
C 590 CONTINUE
C     CALL RCLOSE(ITAP71,3)
C
      RETURN
      END
C
C                           ******************
C---------------------------***** SETMBF *****--------------------------
C                           ******************
C
      SUBROUTINE SETMBF(MBUF,IBUF)
      IMPLICIT REAL*8 (A-H,O-Z)
      MBUF=IBUF
      RETURN
      END
      RETURN
      END
C
C                           ******************
C---------------------------***** BKTDMP *****-------------------------
C                           ******************
C
      SUBROUTINE BKTDMP(BKT,LENGTH,IDISK)
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION BKT(LENGTH)
      CALL SWRIT(IDISK,BKT,INTOWP(LENGTH))
      RETURN
      END
C
C                         ********************
C-------------------------****** READ30 ******-------------------------
C                         ********************
C
      SUBROUTINE READ30(ITAP30,MPOINT,MCONST,MCALCS,NCALCS,NT,
     .               NSYMHF,NAT,MXCOEF,EIGVAL,NLAMDA,ITEMP,JOUT,NC,NO,
     .                  WTEMP,PTOCC,ITYP,ORBSYM,FLOV,NIRRED,ITEP,
     .                  ENUC,ESCF,CHAR,NORD,ZAN,COORD)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*4 ITYP(NSYMHF),ICSYM,ITEP(NIRRED)
      CHARACTER*4 CHAR,LABEL(20)
      INTEGER NORD
      REAL*8 EIGVAL(NT),WTEMP(NT),ZAN(NAT),COORD(3,NAT)
      INTEGER NLAMDA(NSYMHF),ITEMP(MCALCS),NC(NSYMHF),PTOCC(NT),
     .        ORBSYM(NT),FLOV(NIRRED,4),SYMORB
C
clj021889
c     write(6,*) 'read30: entered'
      JPOINT = 101 + MCONST + MPOINT
      CALL WREADW (ITAP30,ITEMP,MCALCS,JPOINT,JPOINT)
      LOCCAL = ITEMP(NCALCS)
      JPOINT = LOCCAL + 60
      CALL WREADW (ITAP30,LOCVEC,1,JPOINT,JPOINT)
      LOCVEC=LOCVEC+INTOWP(MXCOEF)
      CALL WREADW (ITAP30,EIGVAL,INTOWP(NT),LOCVEC,LOCVEC)
      CALL WREADW (ITAP30,ITYP,NSYMHF,LOCVEC,LOCVEC)
C     LOCVEC = LOCVEC + NSYMHF
C     WRITE(*,*) ' LOCVEC,MXCOEF = ',LOCVEC,MXCOEF
      CALL WREADW (ITAP30,NLAMDA,NSYMHF,LOCVEC,LOCVEC)
      CALL WREADW (ITAP30,NC,NSYMHF,LOCVEC,LOCVEC)
      NO=0
      DO 555 I=1,NSYMHF
         NO=NO+NC(I)
C        WRITE (6,*) ' I,NC=',I,NC(I)
  555 CONTINUE
      ICNT=0
      IOF = 0
      DO 558 I=1,NSYMHF
      IF(I.NE.1) IOF = IOF + NLAMDA(I-1)
      NOI=NC(I)
      DO 557 J=1,NOI
      ICNT=ICNT+1
      IPT=IOF+J
C     WRITE(6,*)'IPT=',IPT,ICNT
  557 PTOCC(IPT)=ICNT
  558 CONTINUE
C     WRITE(*,*) '  VIRTUALS'
      IOF = 0
      DO 658 I=1,NSYMHF
      IF(I.NE.1) IOF = IOF + NLAMDA(I-1)
      NVI=NLAMDA(I)-NC(I)
      DO 657 J=1,NVI
      ICNT=ICNT+1
      IPT=IOF+NC(I) + J
C     WRITE(6,*) IOF,NC(I),J
C     WRITE(6,*)'IPT=',IPT,ICNT
  657 PTOCC(IPT)=ICNT
  658 CONTINUE
      DO 559 I=1,NT
      IPT=PTOCC(I)
  559 WTEMP(IPT)=EIGVAL(I)
      DO 569 I=1,NT
      EIGVAL(I)=WTEMP(I)
C     WRITE(6,*)'I=',I,'E(I)=',EIGVAL(I)
  569 CONTINUE
C
      DO 805 ISYM = 1,NIRRED
      FLOV(ISYM,1) = 0
      FLOV(ISYM,2) = -1
      FLOV(ISYM,3) = 0
      FLOV(ISYM,4) = -1
  805 CONTINUE
C
C     GET SYMMETRY LABEL FROM INPUT
C
      CALL LOCATE (5,'# INPUT ###',IERR)
      IF(IERR.NE.0) THEN
      WRITE (6,*)'NO INPUT WAS FOUND!'
      STOP
      ELSE
      READ(5,6004)LABEL
      READ(5,6004)LABEL
 6004 FORMAT(20A4)
 6005 FORMAT(A4,5X,I1)
      READ(5,6005)CHAR,NORD
      END IF
C
      ICNT=0
      DO 705 ISYM=1,NSYMHF
      ICSYM=ITYP(ISYM)
      ICNTH=ICNT+1
      NOI=NC(ISYM)
      DO 700 I=1,NOI
      ICNT=ICNT+1
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A2  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'A   ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B   ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'A''  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A"  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1G ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2G ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3G ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=4
      IF(ICSYM.EQ.'B1U ')ORBSYM(ICNT)=5
      IF(ICSYM.EQ.'B2U ')ORBSYM(ICNT)=6
      IF(ICSYM.EQ.'B3U ')ORBSYM(ICNT)=7
      IF(NIRRED.GT.4)GO TO 690
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'BG  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'BU  ')ORBSYM(ICNT)=3
  690 CONTINUE
      IF(CHAR.EQ.'DN  '.AND.NORD.EQ.2)THEN
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3  ')ORBSYM(ICNT)=3
      ENDIF
  700 CONTINUE
      IF(ICNTH-1.NE.ICNT) THEN
      SYMORB = ORBSYM(ICNT) + 1
      FLOV(SYMORB,1)=ICNTH
      FLOV(SYMORB,2)=ICNT
      END IF
C     WRITE(*,*)'ISYM',ISYM,'F1',FLOV(ISYM,1)
C     WRITE(*,*)'ISYM',ISYM,'F2',FLOV(ISYM,2)
  705 CONTINUE
      DO 715 ISYM=1,NSYMHF
      ICSYM=ITYP(ISYM)
      ICNTH=ICNT+1
      NVI=NLAMDA(ISYM)-NC(ISYM)
      DO 710 I=1,NVI
      ICNT=ICNT+1
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A2  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'A   ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B   ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'A''  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'A"  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1G ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2G ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3G ')ORBSYM(ICNT)=3
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=4
      IF(ICSYM.EQ.'B1U ')ORBSYM(ICNT)=5
      IF(ICSYM.EQ.'B2U ')ORBSYM(ICNT)=6
      IF(ICSYM.EQ.'B3U ')ORBSYM(ICNT)=7
      IF(NIRRED.GT.4)GO TO 691
      IF(ICSYM.EQ.'AG  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'BG  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'AU  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'BU  ')ORBSYM(ICNT)=3
  691 CONTINUE
      IF(CHAR.EQ.'DN  '.AND.NORD.EQ.2)THEN
      IF(ICSYM.EQ.'A1  ')ORBSYM(ICNT)=0
      IF(ICSYM.EQ.'B1  ')ORBSYM(ICNT)=1
      IF(ICSYM.EQ.'B2  ')ORBSYM(ICNT)=2
      IF(ICSYM.EQ.'B3  ')ORBSYM(ICNT)=3
      ENDIF
  710 CONTINUE
      IF(ICNTH-1.NE.ICNT) THEN
      SYMORB = ORBSYM(ICNT) + 1
      FLOV(SYMORB,3)=ICNTH
      FLOV(SYMORB,4)=ICNT
      END IF
C     WRITE(*,*)'ISYM',ISYM,'F3',FLOV(ISYM,3)
C     WRITE(*,*)'ISYM',ISYM,'F4',FLOV(ISYM,4)
  715 CONTINUE
C     WRITE(*,*)'ORBSYM',ORBSYM
      DO 800 ISYM=1,NSYMHF
      ICSYM=ITYP(ISYM)
      IF(ICSYM.EQ.'A1  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'A2  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'B1  ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'B2  ')ITEP(4)=ICSYM
      IF(ICSYM.EQ.'A   ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'B   ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'A''  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'A"  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'AG  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'B1G ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'B2G ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'B3G ')ITEP(4)=ICSYM
      IF(ICSYM.EQ.'AU  ')ITEP(5)=ICSYM
      IF(ICSYM.EQ.'B1U ')ITEP(6)=ICSYM
      IF(ICSYM.EQ.'B2U ')ITEP(7)=ICSYM
      IF(ICSYM.EQ.'B3U ')ITEP(8)=ICSYM
      IF(NIRRED.GT.4)GO TO 692
      IF(ICSYM.EQ.'AG  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'BG  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'AU  ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'BU  ')ITEP(4)=ICSYM
  692 CONTINUE
      IF(CHAR.EQ.'DN  '.AND.NORD.EQ.2)THEN
      IF(ICSYM.EQ.'A1  ')ITEP(1)=ICSYM
      IF(ICSYM.EQ.'B1  ')ITEP(2)=ICSYM
      IF(ICSYM.EQ.'B2  ')ITEP(3)=ICSYM
      IF(ICSYM.EQ.'B3  ')ITEP(4)=ICSYM
      ENDIF
  800 CONTINUE
      CALL RFI30(ENUC,ESCF,ZAN,COORD,NAT)
clj021889
c     write(6,*) 'read30: exiting'
      return
      END
C
C
      SUBROUTINE RFI30 (ENUC,ESCF,ZAN,GEOM,NAT)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*8 A30(100)
      INTEGER IA30(400),IPTR30(400)
      INTEGER IALBEL(20),IBLBEL(20),LBLDRT(26)
      DIMENSION ZAN(NAT),GEOM(3,NAT)
      EQUIVALENCE (IA30,A30)
clj021889
c     write(6,*) 'rfi30: entered'
      ITAP11 = 11
      IT30 = 30
      NOUT = 6
C
C     ----- GET CONSTANTS FROM TAPE30 -----
C
      CALL SREW(IT30)
      CALL WREADW(IT30,IA30,200,101,JUNK)
C
      IEND   =  IA30(1)
      MPOINT =  IA30(2)
      MCONST =  IA30(3)
      MCALCS =  IA30(4)
      NCALCS =  IA30(5)
      NAT    = IA30(19)
      NUM    = IA30(22)
      NNP    = IA30(23)
      NSHELL = IA30(27)
      NIRRED = IA30(28)
      NT     = IA30(29)
      NPRIM  = IA30(32)
      MXT    = IA30(36)
      NISO   = IA30(40)
C
C     ----- READ POINTERS FROM TAPE30 -----
C
      JUNK   = 101+MCONST
      CALL WREADW(IT30,IPTR30,MPOINT,JUNK,JUNK)
      CALL WREADW(IT30,   ZAN,    INTOWP(NAT),IPTR30(1),JUNK)
      JUNK   = 101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(IT30, LOCCAL, 1,JUNK,JUNK)
      CALL WREADW(IT30, IA30, 60,LOCCAL,LOCCAL)
      DO 500  ILBL=1,20
         IALBEL(ILBL) =  IA30(ILBL)
  500 CONTINUE
      WRITE(NOUT,905)IALBEL
  905 FORMAT(1X,/,'  LABEL FROM FILE30 : ',20A4,/)
      LOCCAL=LOCCAL+20
      CALL WREADW(IT30,  GEOM,  INTOWP(3*NAT),LOCCAL,LOCCAL)
      WRITE(NOUT,*)' GEOMETRY FROM FILE30'
      WRITE(NOUT,*)'                     '
      DO 523 I=1,NAT
      WRITE(NOUT,909)I,ZAN(I),GEOM(1,I),GEOM(2,I),GEOM(3,I)
  909 FORMAT(1X,I4,3X,F5.2,5X,3(4X,F13.10))
  523 CONTINUE
C
C     ----- GET ENERGIES AND WRITE OUT -----
C
      CALL WREADW(IT30,IA30,INTOWP(10),LOCCAL,LOCCAL)
      ESCF = A30(2)
      ENUC=A30(1)
      EE=ESCF-ENUC
      WRITE (NOUT,900)
  900 FORMAT (/,2X,'ENERGIES FROM FILE30 ',/)
      WRITE (NOUT,901) ENUC
  901 FORMAT (1X,' NUCLEAR REPULSION ENERGY =',F20.12)
      WRITE (NOUT,902) ESCF
  902 FORMAT (1X,' SCF ENERGY               =',F20.12)
      WRITE (NOUT,903) EE
  903 FORMAT (1X,' TOTAL ELECTRONIC  ENERGY =',F20.12)
      CALL RCLOSE(IT30,3)
clj021889
c     write(6,*) 'rfi30: exiting'
      RETURN
      END
