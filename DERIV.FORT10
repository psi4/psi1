      PROGRAM DERIVY
C   THE DERIVATIVE PROGRAM
C   THIS PROGRAM IS ABLE TO CALCULATE FIRST AND SECOND DERIVATIVES
C   (FOR ALL KINDS OF WAVE FUNCTIONS ??)
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
c Moved to PSI distribution disk on 020289 - clj.
C**********************************************************************
C*  BY:  RICHARD REMINGTON                                            *
C*  DATE:  MARCH  12,  1988         C3-12-88                          *
C*  REASON: DECREASE CORE TO RUN IN 7MB ON 9370  AND  ADD A WARNING   *
C*  WITH STOP AND EXIT IF LABEL "# DERIV ##" IS NOT FOUND BY LOCATE.  *
C**********************************************************************
C*  BY:  RICHARD REMINGTON                                            *
C*  DATE:  NOVEMBER 11, 1987                                          *
C*  REASON: IMPROVE PRECISION BY CHANGING DLIMIT = 1.0E-10 TO 1.0E-16 *
C*          CHANGE DLIMIT TO DLIM AND PUT IT INTO COMMON TOLER        *
C**********************************************************************
C* LAST UPDATED ON JUNE 20, 1987 BY RBR---WRITE ESCF TO 11 FOR SCF2ND *
C**********************************************************************
C*   BY: WESLEY ALLEN                                                 *
C*   DATE: NOVEMBER 5, 1986                                           *
C*   REASON:  FIX BUG IN THE FORMATION OF THE OCCUPATION VECTOR FOR   *
C*            TCSCF CASES WHERE THE TWO ORBITALS ARE OF THE SAME      *
C*            SYMMETRY (THIS INCLUDES ALL SCFX CASES).                *
C**********************************************************************
C*  LAST UPDATED ON MAY 15, 1985 BY YUKIO YAMAGUCHI                   *
C**********************************************************************
      IMPLICIT REAL*8 (A-H,O-Z)
C3-12-88  DIMENSION CC(1200000),IA(1),I30(200)
      DIMENSION CC(600000),IA(1),I30(200)
      CHARACTER*8 SCFTYP,CITYP,DERTYP,RAMAN
      CHARACTER*8 NOSYM,AFOCK,DFOCK,DERINT
      CHARACTER*8 OPTYPE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COORD/ZAN(50),X(3,50)
      COMMON/ENRGY/ENUC,ESCF
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/EX(200),CS(200)
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/GAUSE/MXSPDF(50),MINSH(3,50),MAXSH(3,50)
      COMMON/NDERS/NDERIV
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/OPEN2/GOCC(10)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/PARA2/NPRIM
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TAPES/ITAP42
      COMMON/TOLER/DLIM
      EQUIVALENCE (CC,IA)
    1 FORMAT(//,2X,' THE DERIVATIVE PROGRAM'/)
    2 FORMAT(4(A8,2X))
    3 FORMAT(//,3X,4(A8,2X))
    4 FORMAT(5I5)
    5 FORMAT(A8,2X,I5)
    6 FORMAT(F10.5,10I5)
    7 FORMAT(4(A8,2X),I5)
    8 FORMAT(//,2X,' WRONG INPUT '/
     1          2X,' SCFTYP = ',A8,5X,' CITYP = ',A8,5X,' DERTYP = ',A8,
     2        /)
    9 FORMAT(//,2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
   10 FORMAT(//,2X,' REQUIRED MEMORY EXCEEDS MAXCOR'/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10/)
   11 FORMAT(//,2X,' WRONG INPUT '/
     1          2X,' THE LABEL "# DERIV ##" WAS NOT FOUND IN THE INPUT,'
     2     ,' DECK.',/)
C
      CALL TSTART(6)
      CALL NOUNFL
C
      ITAPE3 =  3
      ICHEK  =  3
      INPUT  =  5
      IOUT   =  6
      ITAP30 = 30
      ITAP42 = 42
C3-12-88   MAXCOR=1200000
C3-12-88   MAXCOR=720000 IS TOO BIG
      MAXCOR=600000
C
C  READ IN PARAMETERS FROM TAPE30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      IOPEN=I30(43)
      CALL SREW(ITAP30)
C
      CALL LOCATE(INPUT,'# DERIV ##',IERR)
C
      IF(IERR .EQ. 0) GOTO 100
      WRITE(IOUT,11)
      WRITE(ICHEK,11)
      STOP 99100
C
  100 CONTINUE
      IOFF(1)=0
      DO 101 I=1,255
  101 IOFF(I+1)=IOFF(I)+I
C
      WRITE(6,1)
C
C   CLSCF--+
C   HSOP---+
C   OPSNG--+--SCF----SECOND   FOR SCF 2ND DERIVATIVE
C   GRSCF--+
C   TCSCF--+
C
C   CLSCF--+
C   HSOP---+
C   OPSNG--+--CI-----SECOND   FOR SCF-CI 2ND DERIVATIVE
C   GRSCF--+
C   TCSCF--+
C
C   MCSCF--+--MCSCF--SECOND   FOR MCSCF 2ND DERIVATIVE
C
C   MCSCF--+--CI-----SECOND   FOR MCSCF-CI 2ND DERIVATIVE
C
      READ(5,2) SCFTYP,CITYP,DERTYP,RAMAN
      WRITE(6,3) SCFTYP,CITYP,DERTYP,RAMAN
      READ(5,4) IPRNT
      NUNIQ=0
      IF(IOPEN.NE.0.AND.SCFTYP.EQ.'GRSCF   ') THEN
      READ(5,5) OPTYPE,NUNIQ
      DO 102 I=1,NUNIQ
      READ(5,6) GOCC(I),LL,(MOPN(I,J),J=1,LL)
      LOPN(I)=LL
  102 CONTINUE
      END IF
      READ(5,7) NOSYM,AFOCK,DFOCK,DERINT
C
      ISTYPE=0
      IF(SCFTYP.EQ.'CLSCF   ') ISTYPE=1
      IF(SCFTYP.EQ.'HSOP    ') ISTYPE=2
      IF(SCFTYP.EQ.'OPSNG   ') ISTYPE=3
      IF(SCFTYP.EQ.'GRSCF   ') ISTYPE=4
      IF(SCFTYP.EQ.'TCSCF-GR') ISTYPE=5
      IF(SCFTYP.EQ.'TCSCF   ') ISTYPE=6
      IF(SCFTYP.EQ.'MCSCF   ') ISTYPE=7
      ICTYPE=0
      IF(CITYP.EQ.'SCF     ') ICTYPE=1
      IF(CITYP.EQ.'CI      ') ICTYPE=2
      IF(CITYP.EQ.'MCSCF   ') ICTYPE=3
      NDERIV=0
      IF(DERTYP.EQ.'FIRST   ') NDERIV=1
      IF(DERTYP.EQ.'SECOND  ') NDERIV=2
      IF(DERTYP.EQ.'THIRD   ') NDERIV=3
      IF(DERTYP.EQ.'FOURTH  ') NDERIV=4
      NTYPES=0
      IF(SCFTYP.EQ.'CLSCF   ') NTYPES=1
      IF(SCFTYP.EQ.'HSOP    ') NTYPES=2
      IF(SCFTYP.EQ.'OPSNG   ') NTYPES=3
      IF(SCFTYP.EQ.'GRSCF   ') NTYPES=NUNIQ+1
      IF(SCFTYP.EQ.'TCSCF-GR') NTYPES=3
      IF(SCFTYP.EQ.'TCSCF   ') NTYPES=3
      IF(SCFTYP.EQ.'MCSCF   ') NTYPES=1
      NTYPEP=NTYPES+1
      IF(NDERIV.GE.2.AND.ISTYPE.EQ.2) ISTYPE=4
      IF(NDERIV.GE.2.AND.ISTYPE.EQ.3) ISTYPE=4
      IF(NDERIV.GE.2.AND.ISTYPE.EQ.6) ISTYPE=5
C
      IF(ISTYPE*ICTYPE*NDERIV.EQ.0) GO TO 399
C
      IRAMAN=0
      IF(RAMAN.EQ.'RAMAN   ') IRAMAN=1
      IDFOCK=0
      IF(NDERIV.GE.2) IDFOCK=1
      IF(ICTYPE.GE.2) IDFOCK=1
      IF(DFOCK.EQ.'FIRST   ') IDFOCK=1
      IF(DFOCK.EQ.'SECOND  ') IDFOCK=2
      IF(DFOCK.EQ.'BOTH    ') IDFOCK=3
      IAFOCK=0
      IF(AFOCK.EQ.'AFOCK   ') IAFOCK=1
      IF(ICTYPE.EQ.2) IAFOCK=1
      IDINT=0
      IF(DERINT.EQ.'FIRST   ') IDINT=1
      IF(DERINT.EQ.'SECOND  ') IDINT=2
      IF(DERINT.EQ.'BOTH    ') IDINT=3
C
C================================================
C===READ IN BASIS SET AND GEOMETRY FROM TAPE30===
C================================================
C
      WRITE(3,21)
   21 FORMAT(//,2X,' NOW YOU ARE IN GETBAS'/)
      CALL GETBAS
C
C===========================================
C===FORCE CALCULATION TO NOSYM IF DESIRED===
C===========================================
C
      IF(NOSYM.NE.'NOSYM   ') GO TO 201
      WRITE(3,22)
   22 FORMAT(//,2X,' NOW YOU ARE IN SETNOS'/)
      CALL SETNOS
C
C========================
C===FORM LIMITS ARRAYS===
C========================
C
  201 CONTINUE
      WRITE(3,23)
   23 FORMAT(//,2X,' NOW YOU ARE IN LIMITS'/)
      CALL LIMITS
C
C:::::::::::::::::::::::::::
C:::::NUCLEAR REPULSION:::::
C:::::::::::::::::::::::::::
C
C   CALCULATE DERIVATIVES OF NUCLEAR REPULSION
      WRITE(3,24)
   24 FORMAT(//,2X,' NOW YOU ARE IN NUCTWO'/)
      IC1=1
      IC2=IC1+N3N
      IC3=IC2+N3N
      IC4=IC3+N3N
      IC5=IC4+N3N
      IC6=IC5+N3N
      IC7=IC6+N3N
      IC8=IC7+N3N*N3N
      IC9=IC8+N3N*N3N
      IC10=IC9+N3N*N3N
      IC11=IC10+N3N*N3N
      IC12=IC11+N3N*N3N
      ICMAX=IC12+N3N*N3N
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................D1N     D2N.....
      CALL NUCTWO(CC(IC1),CC(IC7))
C
C===================================================
C===FORM DENSITY AND LAGRANGIAN MATRICES FOR SCF ===
C===================================================
C
      IF(CITYP.NE.'SCF     ') GO TO 205
      IF(NDERIV.GE.2) GO TO 202
      WRITE(3,25)
   25 FORMAT(//,2X,' NOW YOU ARE SCFMAT'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBASIS
      IC18=IC17+NBASIS
      IC19=IC18+NBFAO*NBASIS
      IC20=IC19+NBFAO*NBASIS
      IC21=IC20+NBASIS*NBASIS
      IC22=IC21+NBFAO*NBFAO
      IC23=IC22+NBFAO*NBFAO
      ICMAX=IC23+NBFAO*NBFAO
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................WAO      EIG      OCC      EAO      UAS      ESO......
      CALL SCFMAT(CC(IC15),CC(IC16),CC(IC17),CC(IC18),CC(IC19),CC(IC20),
C.................EE       U        T........
     1            CC(IC21),CC(IC22),CC(IC23))
C
C   FORM DENSITY MATRICES
      WRITE(3,26)
   26 FORMAT(//,2X,' NOW YOU ARE IN DENS30'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBASIS
      IC18=IC17+NBASIS
      ICMAX=IC18+NBFAO*NBASIS
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................DENS     DENT     EIG      OCC      EAO......
      CALL DENS30(CC(IC13),CC(IC14),CC(IC16),CC(IC17),CC(IC18))
      GO TO 203
C
C   READ IN PARAMETERS FROM THE MASTER FILE
  202 CONTINUE
      WRITE(3,27)
   27 FORMAT(//,2X,' NOW YOU ARE IN READMF'/)
      CALL READMF
C
C   FORM DENSITY MATRICES
      WRITE(3,28)
   28 FORMAT(//,2X,' NOW YOU ARE IN DENS40'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IC17=IC16+NBASIS
      IC18=IC17+NBASIS
      ICMAX=IC18+NBFAO*NBASIS
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................DENS     DENT     WAO      EIG      OCC      EAO......
      CALL DENS40(CC(IC13),CC(IC14),CC(IC15),CC(IC16),CC(IC17),CC(IC18))
C
C:::::::::::::::::::::::::::
C:::::SCF WAVE FUNCTION:::::
C:::::::::::::::::::::::::::
C
C   CALCULATE SCF DERIVATIVES
  203 CONTINUE
      WRITE(3,29)
   29 FORMAT(//,2X,' NOW YOU ARE IN SCFDER'/)
C#################################################
C###NOTICE THE FOLLOWING RESTRICTIONS#############
      NTREAD=NTYPEP
      IF(ISTYPE.EQ.5.OR.ISTYPE.EQ.6) NTREAD=7
      IF(IAFOCK.EQ.0) NTREAD=NTREAD-1
      IF(IDFOCK.LE.1) NATRI=1
C###END OF NOTICE#################################
C#################################################
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IA16=IC16+IC16-1
      MAXLFT=MAXCOR-IC16
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C.................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL SCFDER(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C.................D2N     D2O     D2F     D2W      D2T      D2TOT....
     1            CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C.................DENS     DENT     WAO      IA       CC..............
     2            CC(IC13),CC(IC14),CC(IC15),IA(IC16),CC(IC16),MAXLFT)
      GO TO 210
C
C::::::::::::::::::::::::::::::
C:::::SCF-CI WAVE FUNCTION:::::
C::::::::::::::::::::::::::::::
C
C   CALCULATE SCF-CI DERIVATIVES
  205 CONTINUE
      IF(SCFTYP.EQ.'MCSCF   ') GO TO 206
      IF(CITYP.NE.'CI      ') GO TO 206
      WRITE(3,30)
   30 FORMAT(//,2X,' NOW YOU ARE IN SCFCI'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IC16=IC15+NBATRI
      IA16=IC16+IC16-1
      MAXLFT=MAXCOR-IC16
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL SCFCI(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................D2N     D2O     D2F     D2W      D2T      D2TOT....
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................DENS     DENT     WAO      IA       CC..............
     2           CC(IC13),CC(IC14),CC(IC15),IA(IC16),CC(IC16),MAXLFT)
      GO TO 210
C
C:::::::::::::::::::::::::::::
C:::::MCSCF WAVE FUNCTION:::::
C:::::::::::::::::::::::::::::
C
C   CALCULATE MCSCF DERIVATIVES
  206 CONTINUE
      IF(CITYP.NE.'MCSCF   ') GO TO 207
      WRITE(3,31)
   31 FORMAT(//,2X,' NOW YOU ARE IN MCSCF'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI
      IC15=IC14+NBATRI
      IA15=IC15+IC15-1
      MAXLFT=MAXCOR-IC15
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL MCSCF(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................D2N     D2O     D2F     D2W      D2T      D2TOT....
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................DENT     WAO      IA       CC..............
     2           CC(IC13),CC(IC14),IA(IC15),CC(IC15),MAXLFT)
      GO TO 210
C
C::::::::::::::::::::::::::::::::
C:::::MCSCF-CI WAVE FUNCTION:::::
C::::::::::::::::::::::::::::::::
C
C   CALCULATE MCSCF-CI DERIVATIVES
  207 CONTINUE
      IF(CITYP.NE.'CI      ') GO TO 210
      WRITE(3,32)
   32 FORMAT(//,2X,' NOW YOU ARE IN MCSCI'/)
      IC13=IC12+N3N*N3N
      IC14=IC13+NBATRI*NTYPEP
      IC15=IC14+NBATRI
      IA15=IC15+IC15-1
      MAXLFT=MAXCOR-IC15
      ICMAX=IC16+NBATRI*N3N+NBATRI*3+NBATRI*NATRI+NBATRI*6+NBATRI
      WRITE(3,9) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 499
C................D1N     D1O     D1F     D1W     D1T     D1TOT...
      CALL MCSCI(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................D2N     D2O     D2F     D2S      D2T      D2TOT....
     1           CC(IC7),CC(IC8),CC(IC9),CC(IC10),CC(IC11),CC(IC12),
C................DENT     WAO      IA       CC..............
     2           CC(IC13),CC(IC14),IA(IC15),CC(IC15),MAXLFT)
C
  210 CONTINUE
      GO TO 500
  399 CONTINUE
      WRITE(3,8) SCFTYP,CITYP,DERTYP
      WRITE(6,8) SCFTYP,CITYP,DERTYP
      GO TO 500
  499 CONTINUE
      WRITE(3,10) ICMAX,MAXCOR
      WRITE(6,10) ICMAX,MAXCOR
  500 CONTINUE
      CALL TSTOP(6)
      STOP
      END
      SUBROUTINE GETBAS
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION I30(200),A30(100),CSPD(600),LISO(1600),LICT(400)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/COORD/ZAN(50),X(3,50)
      COMMON/ENRGY/ENUC,ESCF
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/EX(200),CS(200)
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/PARA2/NPRIM
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      EQUIVALENCE (I30,A30)
C
    1 FORMAT(/,3X,20A4/)
    2 FORMAT(2X,' NUCLEAR REPULSION ENERGY:',F20.10)
    3 FORMAT(2X,'               SCF ENERGY:',F20.10)
    4 FORMAT(/,2X,' NPRIM  = ',I5/)
    5 FORMAT(2X,I5,2F20.10)
    6 FORMAT(/,2X,' NSHELL = ',I5/)
    7 FORMAT(2X,8I5)
    8 FORMAT(/,2X,' NATOM = ',I5/)
    9 FORMAT(2X,I5,4F20.10)
C
C   GET CONSTANTS FROM TAPE30
      ITAP30=30
      CALL SREW(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
C
      IEND    = I30(1)
      MPOINT  = I30(2)
      MCONST  = I30(3)
      MCALCS  = I30(4)
      NCALCS  = I30(5)
      NBASIS  = I30(18)
      NATOM   = I30(19)
      NBFAO   = I30(22)
      NSHELL  = I30(27)
      NT      = I30(29)
      NPRIM   = I30(32)
      MXT     = I30(36)
      NISO    = I30(40)
      NSYM    = I30(41)
      NBATRI=IOFF(NBASIS+1)
      NBATR2=NBATRI*2
      N3N=NATOM*3
      NATRI=IOFF(N3N+1)
C
C   READ POINTERS FROM TAPE30
      IPOS=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,IPOS,JUNK)
C
C   READ BASIS SET INFO ETC.
      CALL WREADW(ITAP30,ZAN,NATOM*2,I30(1),JUNK)
      CALL WREADW(ITAP30,LICT,NATOM*NT,I30(2),JUNK)
      CALL WREADW(ITAP30,EX,NPRIM*2,I30(5),JUNK)
      CALL WREADW(ITAP30,CSPD,NPRIM*6,I30(6),JUNK)
      CALL WREADW(ITAP30,KSTART,NSHELL,I30(7),JUNK)
      CALL WREADW(ITAP30,KATOM,NSHELL,I30(8),JUNK)
      CALL WREADW(ITAP30,KTYPE,NSHELL,I30(9),JUNK)
      CALL WREADW(ITAP30,KNG,NSHELL,I30(10),JUNK)
      CALL WREADW(ITAP30,KLOC,NSHELL,I30(11),JUNK)
      CALL WREADW(ITAP30,KMIN,NSHELL,I30(12),JUNK)
      CALL WREADW(ITAP30,KMAX,NSHELL,I30(13),JUNK)
      CALL WREADW(ITAP30,T,MXT*2,I30(25),JUNK)
      CALL WREADW(ITAP30,INVT,NT,I30(26),JUNK)
      CALL WREADW(ITAP30,LISO,NSHELL*NISO,I30(27),JUNK)
      CALL WREADW(ITAP30,LBLAT,2*NATOM,I30(28),JUNK)
      CALL WREADW(ITAP30,PTR,3*3*NT*2,I30(31),JUNK)
      CALL WREADW(ITAP30,DTR,6*6*NT*2,I30(32),JUNK)
C
C   AND GET LOCATION OF INDIVIDUAL CALCULATION TO GET GEOMETRY
      IPOS=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,IPOS,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,JUNK)
      WRITE(6,1) (I30(I),I=1,20)
C
      IPOS=LOCCAL+80
      CALL WREADW(ITAP30,X,NATOM*6,IPOS,JUNK)
C
C   GET ENERGIES AND WRITE OUT
      IPOS=LOCCAL+80+NATOM*6
      CALL WREADW(ITAP30,I30,20,IPOS,JUNK)
      ENUC=A30(1)
      ESCF=A30(2)
      WRITE(6,2) ENUC
      WRITE(6,3) ESCF
C
C   COLLAPSE CONTRACTION COEFFICIENTS INTO ONE-D ARRAY
      IJ=0
      DO 102 I=1,3
      DO 101 J=1,NPRIM
      IJ=IJ+1
      VALU=CSPD(IJ)
      IF(VALU.EQ.ZERO) GO TO 101
      CS(J)=VALU
  101 CONTINUE
  102 CONTINUE
C
      DO 104 I=1,NISO
      II=(I-1)*NSHELL
      DO 103 ISHELL=1,NSHELL
      II=II+1
      ISO(ISHELL,I)=LISO(II)
  103 CONTINUE
  104 CONTINUE
      DO 106 I=1,NT
      II=(I-1)*NATOM
      DO 105 IATOM=1,NATOM
      II=II+1
      ICT(IATOM,I)=LICT(II)
  105 CONTINUE
  106 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,4) NPRIM
      DO 107 I=1,NPRIM
      WRITE(6,5) I,EX(I),CS(I)
  107 CONTINUE
      WRITE(6,6) NSHELL
      DO 108 I=1,NSHELL
      WRITE(6,7) I,KATOM(I),KTYPE(I),KSTART(I),KLOC(I),
     1           KMIN(I),KMAX(I),KNG(I)
  108 CONTINUE
      WRITE(6,8) NATOM
      DO 109 I=1,NATOM
  109 WRITE(6,9) I,ZAN(I),X(1,I),X(2,I),X(3,I)
C
  205 CONTINUE
      CALL RCLOSE(ITAP30,3)
      RETURN
      END
      SUBROUTINE SETNOS
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/GAUSC/T(36),PTR(3,3,8),DTR(6,6,8)
      COMMON/GAUSD/INVT(8),ISO(200,8),LBLAT(2,50),ICT(50,8)
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      DATA ZERO,ONE / 0.0D+00 , 1.0D+00 /
C
C   FORCE THE NO-SYMMETRY CALCULATION FOR CI SECOND DERIVATIVE
    1 FORMAT(/'   $$$$$ SET NO-SYMMETRY FLAG $$$$$'/
     1,       '   VALUES BEFORE SETNOS    NTRANS=',I3)
    2 FORMAT( '  TRANS=',9F10.6)
    3 FORMAT( '   ISO =',10I10)
    4 FORMAT(/'   %%%%%%%%%% AFTER SETNO  NTRANS=',I3)
C
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1) NT
      WRITE(6,2) (T(I),I=1,MXT)
      WRITE(6,3) ((ISO(I,J),I=1,NSHELL),J=1,NISO)
C
  201 CONTINUE
      NT=1
      MXT=9
      DO 101 I=1,9
  101 T(I)=ZERO
      T(1)=ONE
      T(5)=ONE
      T(9)=ONE
      DO 102 I=1,NSHELL
      INDIN(1)=I
      CALL ISOIN
      ISO(I,1)=INDOUT(1)
  102 CONTINUE
      IF(IPRNT.LE.3) GO TO 202
      WRITE(6,4) NT
      WRITE(6,2) (T(I),I=1,MXT)
      WRITE(6,3) (ISO(I,1),I=1,NSHELL)
C
  202 CONTINUE
      RETURN
      END
      SUBROUTINE ISOOUT
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ISPAC/INDIN(120),INDOUT(30)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/TOLER/DLIM
      LOGICAL*4 TRANS(120)
      LOGICAL*1 INDOUT
      EQUIVALENCE (TRANS(1),INDIN(1))
C
      DO 101 I=1,NT
      TRANS(I)=INDOUT(I)
  101 CONTINUE
      RETURN
C
C--ISOIN-------------------------------------------------ISOIN
      ENTRY ISOIN
C
      DO 102 I=1,NT
      INDOUT(I)=TRANS(I)
  102 CONTINUE
      RETURN
      END
      SUBROUTINE LIMITS
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/GAUSE/MXSPDF(50),MINSH(3,50),MAXSH(3,50)
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
    1 FORMAT (/,' ATOM # ',I2,' MAXSPDF',I2,/,('   SPDF ',I1,5X,I3
     1  ,          '-',I3))
C
      MXANGM=3
      DO 102 I=1,NATOM
      MXSPDF(I)=0
      DO 101 J=1,MXANGM
      MINSH(J,I)=0
      MAXSH(J,I)=0
  101 CONTINUE
  102 CONTINUE
C
      DO 103 I=1,NSHELL
      IATOM=KATOM(I)
      IF(KTYPE(I).GT.MXSPDF(IATOM)) MXSPDF(IATOM)=KTYPE(I)
  103 CONTINUE
C
      DO 106 IATOM=1,NATOM
      DO 105 ISPDF=1,MXSPDF(IATOM)
      DO 104 ISHELL=1,NSHELL
        IF(KATOM(ISHELL).EQ.IATOM.AND.KTYPE(ISHELL).EQ.ISPDF) THEN
          IF(MINSH(ISPDF,IATOM).EQ.0) MINSH(ISPDF,IATOM)=ISHELL
          MAXSH(ISPDF,IATOM)=ISHELL
        END IF
  104 CONTINUE
  105 CONTINUE
  106 CONTINUE
C
      DO 109 IATOM=1,NATOM
      DO 108 ISPDF=1,MXSPDF(IATOM)
      DO 107 ISHELL=MINSH(ISPDF,IATOM),MAXSH(ISPDF,IATOM)
        IF(KTYPE(ISHELL).NE.ISPDF.OR.KATOM(ISHELL).NE.IATOM)
     1      STOP ' # DERIV # ERROR: BASIS FUNCTION ORDER'
  107 CONTINUE
  108 CONTINUE
  109 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 201
      DO 110 IATOM=1,NATOM
      MX=MXSPDF(IATOM)
      WRITE(6,1) IATOM,MXSPDF(IATOM),(I,MINSH(I,IATOM)
     1  ,    MAXSH(I,IATOM),I=1,MX)
  110 CONTINUE
C
  201 CONTINUE
      RETURN
      END
      SUBROUTINE NUCTWO(D1N,D2N)
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*52 TITLE
      DIMENSION D1N(3,NATOM),D2N(N3N,N3N)
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/TOLER/DLIM
    1 FORMAT (//,' INFINITE REPULSION, CENTERS',I3,' AND',I3)
      DATA ZERO,THREE / 0.0D+00 , 3.0D+00 /
      DATA RLIM / 1.0D-7 /
C
C   CALCULATE NUCLEAR REPULSION AND DERIVATIVES
C
      DO 101 I=1,NATOM
      DO 101 J=1,3
      D1N(J,I)=ZERO
  101 CONTINUE
      IF(NDERIV.GE.2) THEN
      DO 102 I=1,N3N
      DO 102 J=1,N3N
  102 D2N(I,J)=ZERO
      END IF
C
      DO 104 I=2,NATOM
      CHGI=ZAN(I)
      IF(DABS(CHGI).GT.RLIM) THEN
      XI=C(1,I)
      YI=C(2,I)
      ZI=C(3,I)
      DO 103 J=1,I-1
      CHGJ=ZAN(J)
      IF(DABS(CHGJ).GT.RLIM) THEN
      XJ=C(1,J)
      YJ=C(2,J)
      ZJ=C(3,J)
      XIJ=XI-XJ
      YIJ=YI-YJ
      ZIJ=ZI-ZJ
      RR=XIJ*XIJ+YIJ*YIJ+ZIJ*ZIJ
        IF(RR.EQ.ZERO) THEN
        WRITE(6,1) I,J
        CALL EXIT
        END IF
      R=DSQRT(RR)
      REP=CHGI*CHGJ/R
      ENERGY=ENERGY+REP
C
      REP3S2=REP/RR
      D1N(1,I)=D1N(1,I)-XIJ*REP3S2
      D1N(2,I)=D1N(2,I)-YIJ*REP3S2
      D1N(3,I)=D1N(3,I)-ZIJ*REP3S2
      D1N(1,J)=D1N(1,J)+XIJ*REP3S2
      D1N(2,J)=D1N(2,J)+YIJ*REP3S2
      D1N(3,J)=D1N(3,J)+ZIJ*REP3S2
C
      IF(NDERIV.LE.1) GO TO 201
      REP5S2=REP3S2/RR
      REP5SS=REP5S2*THREE
      IPT=(I-1)*3+1
      JPT=(J-1)*3+1
      DRDXDX=-REP3S2+REP5SS*XIJ*XIJ
      DRDXDY=        REP5SS*XIJ*YIJ
      DRDXDZ=        REP5SS*XIJ*ZIJ
      DRDYDY=-REP3S2+REP5SS*YIJ*YIJ
      DRDYDZ=        REP5SS*YIJ*ZIJ
      DRDZDZ=-REP3S2+REP5SS*ZIJ*ZIJ
      D2N(IPT  ,IPT  )=D2N(IPT  ,IPT  )+DRDXDX
      D2N(IPT  ,IPT+1)=D2N(IPT  ,IPT+1)+DRDXDY
      D2N(IPT  ,IPT+2)=D2N(IPT  ,IPT+2)+DRDXDZ
      D2N(IPT+1,IPT+1)=D2N(IPT+1,IPT+1)+DRDYDY
      D2N(IPT+1,IPT+2)=D2N(IPT+1,IPT+2)+DRDYDZ
      D2N(IPT+2,IPT+2)=D2N(IPT+2,IPT+2)+DRDZDZ
      D2N(IPT  ,JPT  )=D2N(IPT  ,JPT  )-DRDXDX
      D2N(IPT  ,JPT+1)=D2N(IPT  ,JPT+1)-DRDXDY
      D2N(IPT  ,JPT+2)=D2N(IPT  ,JPT+2)-DRDXDZ
      D2N(IPT+1,JPT  )=D2N(IPT+1,JPT  )-DRDXDY
      D2N(IPT+1,JPT+1)=D2N(IPT+1,JPT+1)-DRDYDY
      D2N(IPT+1,JPT+2)=D2N(IPT+1,JPT+2)-DRDYDZ
      D2N(IPT+2,JPT  )=D2N(IPT+2,JPT  )-DRDXDZ
      D2N(IPT+2,JPT+1)=D2N(IPT+2,JPT+1)-DRDYDZ
      D2N(IPT+2,JPT+2)=D2N(IPT+2,JPT+2)-DRDZDZ
      D2N(JPT  ,JPT  )=D2N(JPT  ,JPT  )+DRDXDX
      D2N(JPT  ,JPT+1)=D2N(JPT  ,JPT+1)+DRDXDY
      D2N(JPT  ,JPT+2)=D2N(JPT  ,JPT+2)+DRDXDZ
      D2N(JPT+1,JPT+1)=D2N(JPT+1,JPT+1)+DRDYDY
      D2N(JPT+1,JPT+2)=D2N(JPT+1,JPT+2)+DRDYDZ
      D2N(JPT+2,JPT+2)=D2N(JPT+2,JPT+2)+DRDZDZ
  201 CONTINUE
      END IF
  103 CONTINUE
      END IF
  104 CONTINUE
C
      TITLE='NUCLEAR CONTRIBUTION TO FIRST DERIVATIVES          '
      CALL PRNONE(TITLE,D1N)
C
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2N,N3N)
      TITLE='NUCLEAR CONTRIBUTION TO SECOND DERIVATIVES         '
      CALL PRNTWO(TITLE,D2N)
      END IF
C
      RETURN
      END
      SUBROUTINE SCFMAT(WAO,EIG,OCC,EAO,UAS,ESO,EE,U,T)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION WAO(NBATRI)
      DIMENSION UAS(NBFAO,NBASIS),EIG(NBASIS),OCC(NBASIS)
      DIMENSION ESO(NBASIS,NBASIS),EAO(NBFAO,NBASIS)
      DIMENSION EE(NBFAO*NBFAO),U(NBFAO,NBFAO),T(NBFAO,NBFAO)
      DIMENSION NLAMDA(10),NCLOSD(10),NOPEN(10),OCT(2)
      DIMENSION ALPT(15),BETT(15),ALPC(15),BETC(15)
      DIMENSION I30(200),A30(100)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COUPL/ALPA(5,5),BETA(5,5)
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/OPEN2/GOCC(10)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      COMMON/TCSCF/SOCC1,SOCC2,SOCC12
      COMMON/TOLER/DLIM
      DATA ZERO,QURT,HALF,ONE,TWO / 0.0D+00 , 0.25D+00 , 0.5D+00 ,
     1                              1.0D+00 , 2.0D+00  /
      EQUIVALENCE (I30,A30)
    1 FORMAT(//,2X,' UAS MATRIX'/)
    2 FORMAT(//,2X,' NOPEN = ',10I5/)
    3 FORMAT(//,2X,' ALPT = ',10F10.6/)
    4 FORMAT(//,2X,' BETT = ',10F10.6/)
    5 FORMAT(//,2X,' ESO MATRIX'/)
    6 FORMAT(//,2X,' EAO MATRIX'/)
    7 FORMAT(//,2X,' WAO MATRIX (MO BASIS)'/)
    8 FORMAT(//,2X,' WAO MATRIX (AO BASIS)'/)
    9 FORMAT(//,2X,' ALPA MATRIX'/)
   10 FORMAT(//,2X,' BETA MATRIX'/)
C
C   GET CONSTANTS FROM TAPE30
      ITAP30=30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
C
      IEND    = I30(1)
      MPOINT  = I30(2)
      MCONST  = I30(3)
      MCALCS  = I30(4)
      NCALCS  = I30(5)
      MXCOEF  = I30(42)
      IOPEN   = I30(43)
C
C   READ IN AO-SO MATRIX
      IPOS=101+MCONST
      CALL WREADW(ITAP30,I30,MPOINT,IPOS,JUNK)
      CALL WREADW(ITAP30,UAS,NBFAO*NBASIS*2,I30(29),JUNK)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL MATOUT(UAS,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
  201 CONTINUE
      IPOS=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,IPOS,JUNK)
      IPOS=LOCCAL+60
      CALL WREADW(ITAP30,I30,20,IPOS,JUNK)
      LOCVEC=I30(1)
C
C   READ IN SO-MO EIGENVECTORS
      CALL WREADW(ITAP30,EE,MXCOEF*2,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,EIG,NBASIS*2,LOCVEC,LOCVEC)
      LOCVEC=LOCVEC+NSYM
      CALL WREADW(ITAP30,NLAMDA,NSYM,LOCVEC,LOCVEC)
      CALL WREADW(ITAP30,NCLOSD,NSYM,LOCVEC,LOCVEC)
C
C   READ IN COUPLING CONSTANTS FOR OPEN SHELLS
      IF(IOPEN.NE.0) THEN
      KOPEN=IABS(IOPEN)
      CALL WREADW(ITAP30,NOPEN,NSYM,LOCVEC,LOCVEC)
      IF(IPRNT.GT.3)
     *WRITE(6,2) (NOPEN(I),I=1,NSYM)
      CALL WREADW(ITAP30,ALPT,KOPEN*2,LOCVEC,LOCVEC)
      IF(IPRNT.GT.3)
     *WRITE(6,3) (ALPT(I),I=1,KOPEN)
      CALL WREADW(ITAP30,BETT,KOPEN*2,LOCVEC,LOCVEC)
      IF(IPRNT.GT.3)
     *WRITE(6,4) (BETT(I),I=1,KOPEN)
      END IF
C
C   READ IN COUPLING CONSTANTS FOR TCSCF
      IF(IOPEN.GE.0) GO TO 301
      COEF1=ONE-ALPT(1)
      COEF2=ONE-ALPT(3)
      OCT(1)=TWO/COEF1
      OCT(2)=TWO/COEF2
      SOCC1=COEF1*HALF
      SOCC2=COEF2*HALF
      SOCC12=-DSQRT(SOCC1*SOCC2)*TWO
C
C   FORM OCCUPATION VECTOR
  301 CONTINUE
      DO 101 I=1,NBASIS
  101 OCC(I)=ZERO
      ITC=0
      I=0
      DO 105 ISM=1,NSYM
      DO 103 J=I+1,I+NCLOSD(ISM)
      OCC(J)=TWO
  103 CONTINUE
      K=I+NCLOSD(ISM)
      IF(ISTYPE.EQ.5.AND.NOPEN(ISM).NE.0) GO TO 302
      IF(ISTYPE.EQ.6.AND.NOPEN(ISM).NE.0) GO TO 302
      IF(IOPEN.EQ.0) GO TO 303
      DO 104 J=K+1,K+NOPEN(ISM)
      OCC(J)=ONE
  104 CONTINUE
      GO TO 303
  302 CONTINUE
CWA
      DO 305 IWA=1,NOPEN(ISM)
      ITC=ITC+1
  305 OCC(K+IWA)=OCT(ITC)
  303 CONTINUE
      I=I+NLAMDA(ISM)
  105 CONTINUE
C
C   FORM SO-MO EIGENVECTOR MATRIX
      DO 106 I=1,NBASIS
      DO 106 J=1,NBASIS
      ESO(I,J)=ZERO
  106 CONTINUE
      I=0
      J=0
      DO 108 ISYM=1,NSYM
      N=NLAMDA(ISYM)
      DO 107 K=J+1,J+N
      DO 107 L=J+1,J+N
      I=I+1
      ESO(L,K)=EE(I)
  107 CONTINUE
      J=J+N
  108 CONTINUE
C
      IF(IPRNT.LE.3) GO TO 202
      WRITE(6,5)
      CALL EIGOUT(ESO,EIG,OCC,NBASIS,NBASIS,NBASIS,NBASIS,6)
C
C   TRANSFORM EIGENVECTORS FROM SO TO AO BASIS
  202 CONTINUE
      DO 110 I=1,NBFAO
      DO 110 J=1,NBASIS
      VALU=ZERO
      DO 109 K=1,NBASIS
      VALU=VALU+UAS(I,K)*ESO(K,J)
  109 CONTINUE
      EAO(I,J)=VALU
  110 CONTINUE
      IF(IPRNT.LE.3) GO TO 203
      WRITE(6,6)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C   READ IN THE LAGRANGAIN MATRIX
  203 CONTINUE
      CALL WREADW(ITAP30,EE,NBATR2,LOCVEC,JUNK)
      IF(IPRNT.LE.3) GO TO 204
      WRITE(6,7)
      CALL PRINT(EE,NBFAO*NBFAO,NBASIS,6)
C
C   TRANSFORM THE LAGRANGIAN MATRIX FROM MO TO AO BASIS
  204 CONTINUE
      IJ=0
      DO 111 I=1,NBASIS
      DO 111 J=1,I
      IJ=IJ+1
      T(I,J)=EE(IJ)
      T(J,I)=EE(IJ)
  111 CONTINUE
      DO 113 I=1,NBASIS
      DO 113 JJ=1,NBFAO
      VALU=ZERO
      DO 112 J=1,NBASIS
      VALU=VALU+EAO(JJ,J)*T(I,J)
  112 CONTINUE
      U(I,JJ)=VALU
  113 CONTINUE
      IIJJ=0
      DO 115 II=1,NBFAO
      DO 115 JJ=1,II
      IIJJ=IIJJ+1
      VALU=ZERO
      DO 114 I=1,NBASIS
      VALU=VALU+EAO(II,I)*U(I,JJ)
  114 CONTINUE
      WAO(IIJJ)=VALU*TWO
  115 CONTINUE
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,8)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   FORM THE COUPLING CONSTANT MATRICES
  205 CONTINUE
      NNP=IOFF(NTYPES+2)
      DO 116 I=1,NNP
      ALPC(I)=ZERO
      BETC(I)=ZERO
  116 CONTINUE
C
C   FOR CLOSED SHELL
      FOCC(1)=TWO
C
C   FOR OPEN-SHELL
      IF(ISTYPE.EQ.5.OR.ISTYPE.EQ.6) GO TO 206
      II=1
      IF(NUNIQ.EQ.0) GO TO 207
      DO 117 I=1,NUNIQ
      II=II+1
      FOCC(II)=GOCC(I)
  117 CONTINUE
      DO 118 I=1,NUNIQ
      II=I+1
      K=MOPN(I,1)
      DO 118 J=1,I
      JJ=J+1
      L=MOPN(J,1)
      IIJJ=IOFF(II)+JJ
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      ALPC(IIJJ)=ALPT(KL)
      BETC(IIJJ)=BETT(KL)
  118 CONTINUE
      GO TO 207
C
C FOR TCSCF-GR
  206 CONTINUE
      FOCC(2)=OCT(1)
      FOCC(3)=OCT(2)
      ALPC(3)=ONE-ONE/FOCC(2)
      ALPC(5)=ONE
      ALPC(6)=ONE-ONE/FOCC(3)
      BETC(3)=ONE
      BETC(5)=BETT(2)
      BETC(6)=ONE
C
C   VIRTUAL
  207 CONTINUE
      FOCC(II+1)=ZERO
C
      DO 119 I=1,NTYPEP
      DO 119 J=1,NTYPEP
      ALPA(I,J)=ZERO
      BETA(I,J)=ZERO
  119 CONTINUE
      IJ=0
      DO 120 I=1,NTYPES
      DO 120 J=1,I
      IJ=IJ+1
      ALPA(I,J)= (ONE-ALPC(IJ))*FOCC(I)*FOCC(J)*HALF
      BETA(I,J)=-(ONE-BETC(IJ))*FOCC(I)*FOCC(J)*QURT
      IF(I.EQ.J) GO TO 120
      ALPA(J,I)=ALPA(I,J)
      BETA(J,I)=BETA(I,J)
  120 CONTINUE
      IF(IPRNT.LE.2) GO TO 210
      WRITE(6,9)
      CALL MATOUT(ALPA,5,5,NTYPEP,NTYPEP,6)
      WRITE(6,10)
      CALL MATOUT(BETA,5,5,NTYPEP,NTYPEP,6)
  210 CONTINUE
C
      CALL RCLOSE(ITAP30,3)
      RETURN
      END
      SUBROUTINE DENS30(DENS,DENT,EIG,OCC,EAO)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EAO(NBFAO,NBASIS)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/OPEN1/NUNIQ,LOPN(5),MOPN(5,5)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      COMMON/TOLER/DLIM
      DATA ZERO,ONE,TWO / 0.0D+00 , 1.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' PARAMETERS'/
     * 2X,' NBASIS = ',I8/
     * 2X,' NBFAO  = ',I8/
     * 2X,' NBATRI = ',I8/
     * 2X,' NATOM  = ',I8/
     * 2X,' N3N    = ',I8/
     * 2X,' NATRI  = ',I8/
     * 2X,' IOCC   = ',I8/
     * 2X,' JOCC   = ',I8/
     * 2X,' KOCC   = ',I8/
     * 2X,' NTYPES = ',I8/
     * 2X,' NTYPEP = ',I8/
     * 2X,' ISTYPE = ',I8/
     * 2X,' ICTYPE = ',I8/
     * 2X,' NDERIV = ',I8/
     * 2X,' IAFOCK = ',I8/
     * 2X,' IDFOCK = ',I8/
     * 2X,' IDINT  = ',I8/
     * 2X,' IPRNT  = ',I8/)
    2 FORMAT(//,2X,' TOTAL DENSITY MATRIX'/)
    3 FORMAT(//,2X,' SHELL DENSITY MATRIX, ITYP = ',I5/)
    4 FORMAT(//,2X,' AVERAGE DENSITY MATRIX'/)
C
      IF(IPRNT.GT.3)
     *WRITE(6,1) NBASIS,NBFAO,NBATRI,NATOM,N3N,NATRI,IOCC,JOCC,KOCC,
     1  NTYPES,NTYPEP,ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT,IPRNT
C
C   FORM THE TOTAL DENSITY MATRIX
      IJ=0
      DO 102 I=1,NBFAO
      DO 102 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 101 K=1,NBASIS
      IF(OCC(K).LE.ZERO) GO TO 101
      VALU=VALU+EAO(I,K)*EAO(J,K)*OCC(K)
  101 CONTINUE
      DENT(IJ)=VALU
  102 CONTINUE
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,2)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
  201 CONTINUE
      GO TO (310,301,302,303,304,305),ISTYPE
C
C   HIGH-SPIN OPEN-SHELL SCF
  301 CONTINUE
      NDENTS=2
      IJ=0
      DO 104 I=1,NBFAO
      DO 104 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      DO 103 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO) GO TO 103
      PROD=EAO(I,K)*EAO(J,K)
      IF(FAC.EQ.ONE) GO TO 202
      VALC=VALC+PROD
      GO TO 103
  202 CONTINUE
      VALO=VALO+PROD
  103 CONTINUE
      DENS(IJ,1)=VALC*TWO
      DENS(IJ,2)=VALO
  104 CONTINUE
      GO TO 310
C
C   OPEN-SHELL SINGLET SCF
  302 CONTINUE
      NDENTS=4
      IJ=0
      DO 106 I=1,NBFAO
      DO 106 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      VALO1=ZERO
      VALO2=ZERO
      II=0
      DO 105 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO) GO TO 105
      PROD=EAO(I,K)*EAO(J,K)
      IF(FAC.EQ.ONE) GO TO 203
      VALC=VALC+PROD
      GO TO 105
  203 CONTINUE
      VALO=VALO+PROD
      II=II+1
      IF(II.GE.2) GO TO 204
      VALO1=VALO1+PROD
      GO TO 105
  204 CONTINUE
      VALO2=VALO2+PROD
  105 CONTINUE
      DENS(IJ,1)=VALC*TWO
      DENS(IJ,2)=VALO
      DENS(IJ,3)=VALO1
      DENS(IJ,4)=VALO2
  106 CONTINUE
      GO TO 310
C
C   GENERAL OPEN-SHELL SCF
C   FOR CLOSED SHELL
  303 CONTINUE
      NDENTS=NUNIQ+1
      IJ=0
      DO 108 I=1,NBFAO
      DO 108 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 107 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.NE.TWO) GO TO 107
      VALU=VALU+EAO(I,K)*EAO(J,K)
  107 CONTINUE
      DENS(IJ,1)=VALU*TWO
  108 CONTINUE
C
C   FOR OPEN-SHELLS
      IF(NUNIQ.EQ.0) GO TO 310
      DO 115 ITYP=1,NUNIQ
      ITT=ITYP+1
      COEF=FOCC(ITT)
      NN=LOPN(ITYP)
      IJ=0
      DO 114 I=1,NBFAO
      DO 114 J=1,I
      IJ=IJ+1
      II=0
      VALU=ZERO
      DO 113 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO.OR.FAC.EQ.TWO) GO TO 113
      II=II+1
      IF(FAC.NE.COEF) GO TO 113
      DO 112 L=1,NN
      IF(MOPN(ITYP,L).NE.II) GO TO 112
      VALU=VALU+EAO(I,K)*EAO(J,K)
  112 CONTINUE
  113 CONTINUE
      DENS(IJ,ITT)=VALU*COEF*TWO
  114 CONTINUE
  115 CONTINUE
       GO TO 307
C
C   TWO-CONFIGURATION SCF---GRSCF FORMALISM
  304 CONTINUE
      NDENTS=3
      DO 118 ITYP=1,NTYPES
      FAC=FOCC(ITYP)
      IJ=0
      DO 117 I=1,NBFAO
      DO 117 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 116 K=1,NBASIS
      IF(FAC.NE.OCC(K)) GO TO 116
      VALU=VALU+EAO(I,K)*EAO(J,K)
  116 CONTINUE
      DENS(IJ,ITYP)=VALU*TWO
  117 CONTINUE
  118 CONTINUE
      GO TO 307
C
C   TWO-CONFIGURATION SCF
  305 CONTINUE
      NDENTS=4
      IJ=0
      DO 120 I=1,NBFAO
      DO 120 J=1,I
      IJ=IJ+1
      VALC=ZERO
      VALO=ZERO
      VALO1=ZERO
      VALO2=ZERO
      II=0
      DO 119 K=1,NBASIS
      FAC=OCC(K)
      IF(FAC.EQ.ZERO) GO TO 119
      PROD=EAO(I,K)*EAO(J,K)
      IF(FAC.NE.TWO) GO TO 206
      VALC=VALC+PROD
      GO TO 119
  206 CONTINUE
      VALO=VALO+PROD*FAC
      II=II+1
      IF(II.GE.2) GO TO 207
      VALO1=VALO1+PROD*FAC
      GO TO 119
  207 CONTINUE
      VALO2=VALO2+PROD*FAC
  119 CONTINUE
      DENS(IJ,1)=VALC*TWO
      DENS(IJ,2)=VALO
      DENS(IJ,3)=VALO1
      DENS(IJ,4)=VALO2
  120 CONTINUE
C
C   FORM THE DENSITY MATRIX FOR THE AVERAGED FOCK
  307 CONTINUE
C     IF(IAFOCK.EQ.0) GO TO 310
C     NDENTS=NDENTS+1
C     IJ=0
C     DO 122 I=1,NBFAO
C     DO 122 J=1,I
C     IJ=IJ+1
C     VALU=ZERO
C     DO 121 K=1,NBASIS
C     KTYP=MOTYP(K)
C     FAC=FOCC(KTYP)
C     VALU=VALU+EAO(I,K)*EAO(J,K)*FAC
C 121 CONTINUE
C     DENS(IJ,NTYPEP)=VALU
C 122 CONTINUE
C     IF(IPRNT.LE.3) GO TO 310
C     WRITE(6,3)
C     CALL PRINT(DENS(1,NTYPEP),NBATRI,NBFAO,6)
C
C
  310 CONTINUE
      IF(IPRNT.LE.3) GO TO 210
      DO 125 ITYP=1,NDENTS
      WRITE(6,3) ITYP
      CALL PRINT(DENS(1,ITYP),NBATRI,NBFAO,6)
  125 CONTINUE
C
  210 CONTINUE
      RETURN
      END
      SUBROUTINE READMF
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/CALIF/LPARA(1024),APARA(1024)
      COMMON/COUPL/ALPA(5,5),BETA(5,5)
      COMMON/ENRGY/ENUC,ESCF
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/MFSEC/MASTER,NSECT
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      COMMON/TOLER/DLIM
      DATA ZERO,QURT,HALF,ONE / 0.0D+00 , 0.25D+00 , 0.5D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' PARAMETERS'/
     * 2X,' NBASIS = ',I8/
     * 2X,' NBFAO  = ',I8/
     * 2X,' NBATRI = ',I8/
     * 2X,' NATOM  = ',I8/
     * 2X,' N3N    = ',I8/
     * 2X,' NATRI  = ',I8/
     * 2X,' IOCC   = ',I8/
     * 2X,' JOCC   = ',I8/
     * 2X,' KOCC   = ',I8/
     * 2X,' NTYPES = ',I8/
     * 2X,' NTYPEP = ',I8/
     * 2X,' ISTYPE = ',I8/
     * 2X,' ICTYPE = ',I8/
     * 2X,' IRAMAN = ',I8/
     * 2X,' IAFOCK = ',I8/
     * 2X,' IDFOCK = ',I8/
     * 2X,' IDINT  = ',I8/
     * 2X,' IPRNT  = ',I8/)
    2 FORMAT(//,2X,' ALPA MATRIX'/)
    3 FORMAT(//,2X,' BETA MATRIX'/)
    4 FORMAT(//,2X,' NO.',8X,' FOCC',6X,' NSORB',7X,' NSTR',7X,' NEND'/)
    5 FORMAT(2X,I4,3X,F10.5,7X,I5,7X,I5,7X,I5)
C
      CALL INITMF(1)
C
C   READ IN SCF PARAMETERS
      NBASIS=LPARA(3)
      NBFAO=LPARA(11)
      NBATRI=IOFF(NBFAO+1)
      NBATR2=NBATRI*2
      IOCC=LPARA(7)
      KOCC=LPARA(8)
      JOCC=LPARA(9)
      NATOM=LPARA(10)
      N3N=LPARA(17)
      NATRI=IOFF(N3N+1)
      NTYPES=LPARA(18)
      NTYPEP=NTYPES+1
      ENUC=APARA(1)
      ESCF=APARA(2)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1) NBASIS,NBFAO,NBATRI,NATOM,N3N,NATRI,IOCC,JOCC,KOCC,
     1  NTYPES,NTYPEP,ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT,IPRNT
C
C   READ IN OCCUPATION NUMBERS AND COUPLING CONSTANTS
  201 CONTINUE
      DO 101 I=1,10
      NSORB(I)=LPARA(I+40)
      FOCC(I)=APARA(I+40)
  101 CONTINUE
      DO 102 I=1,NTYPEP
      DO 102 J=1,NTYPEP
      ALPA(I,J)=ZERO
      BETA(I,J)=ZERO
  102 CONTINUE
      IJ=0
      DO 103 I=1,NTYPES
      DO 103 J=1,I
      IJ=IJ+1
      ALPA(I,J)= (ONE-APARA(10+IJ))*FOCC(I)*FOCC(J)*HALF
      BETA(I,J)=-(ONE-APARA(25+IJ))*FOCC(I)*FOCC(J)*QURT
      IF(I.EQ.J) GO TO 103
      ALPA(J,I)=ALPA(I,J)
      BETA(J,I)=BETA(I,J)
  103 CONTINUE
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL MATOUT(ALPA,5,5,NTYPEP,NTYPEP,6)
      WRITE(6,3)
      CALL MATOUT(BETA,5,5,NTYPEP,NTYPEP,6)
  202 CONTINUE
C
C   FORM OCCUPATION ARRAYS
      NSTR(1)=1
      NEND(1)=NSORB(1)
      DO 104 ITYP=2,NTYPEP
      NSTR(ITYP)=NEND(ITYP-1)+1
      NEND(ITYP)=NSTR(ITYP)+NSORB(ITYP)-1
  104 CONTINUE
      DO 106 ITYP=1,NTYPEP
      DO 105 I=NSTR(ITYP),NEND(ITYP)
  105 MOTYP(I)=ITYP
  106 CONTINUE
      IF(IPRNT.LE.3) GO TO 203
      WRITE(6,4)
      DO 107 I=1,NTYPEP
  107 WRITE(6,5) I,FOCC(I),NSORB(I),NSTR(I),NEND(I)
  203 CONTINUE
C
      RETURN
      END
      SUBROUTINE DENS40(DENS,DENT,WAO,EIG,OCC,EAO)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI),WAO(NBATRI)
      DIMENSION EIG(NBASIS),OCC(NBASIS),EAO(NBFAO,NBASIS)
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/START/FOCC(10),NSORB(10),NSTR(10),NEND(10),MOTYP(256)
      COMMON/TOLER/DLIM
      DATA ZERO,TWO / 0.0D+00 , 2.0D+00 /
    1 FORMAT(//,2X,' SCF EIGENVECTOR (AO BASIS) MATRIX'/)
    2 FORMAT(//,2X,' SCF LAGRANGIAN (AO BASIS) MATRIX'/)
    3 FORMAT(//,2X,' TOTAL DENSITY MATRIX'/)
    4 FORMAT(//,2X,' SHELL DENSITY MATRIX, ITYP = ',I5/)
    5 FORMAT(//,2X,' AVERAGE DENSITY MATRIX'/)
C
C   READ IN AO-MO EIGENVECTORS
      CALL MREAD(EIG,17)
      CALL MREAD(OCC,18)
      CALL MREAD(EAO,20)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL EIGOUT(EAO,EIG,OCC,NBFAO,NBASIS,NBFAO,NBASIS,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,24)
      DO 101 I=1,NBATRI
  101 WAO(I)=WAO(I)*TWO
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   FORM THE TOTAL DENSITY MATRIX
  202 CONTINUE
      IJ=0
      DO 103 I=1,NBFAO
      DO 103 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 102 K=1,NBASIS
      IF(OCC(K).LE.ZERO) GO TO 102
      VALU=VALU+EAO(I,K)*EAO(J,K)*OCC(K)
  102 CONTINUE
      DENT(IJ)=VALU
  103 CONTINUE
      IF(IPRNT.LE.3) GO TO 203
      WRITE(6,3)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   FORM THE SHELL DENSITY MATRICES
  203 CONTINUE
      DO 106 ITYP=1,NTYPES
      IJ=0
      COEF=TWO
      IF(ISTYPE.EQ.4.AND.ITYP.GT.1) COEF=COEF*FOCC(ITYP)
      IST=NSTR(ITYP)
      IED=NEND(ITYP)
      DO 105 I=1,NBFAO
      DO 105 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 104 K=IST,IED
      VALU=VALU+EAO(I,K)*EAO(J,K)
  104 CONTINUE
      DENS(IJ,ITYP)=VALU*COEF
  105 CONTINUE
      IF(IPRNT.LE.3) GO TO 106
      WRITE(6,4) ITYP
      CALL PRINT(DENS(1,ITYP),NBATRI,NBFAO,6)
  106 CONTINUE
C
C   FORM THE DENSITY MATRIX FOR THE AVERAGED FOCK
      IF(IAFOCK.EQ.0) GO TO 205
      IJ=0
      DO 108 I=1,NBFAO
      DO 108 J=1,I
      IJ=IJ+1
      VALU=ZERO
      DO 107 K=1,NBASIS
      KTYP=MOTYP(K)
      FAC=FOCC(KTYP)
      VALU=VALU+EAO(I,K)*EAO(J,K)*FAC
  107 CONTINUE
      DENS(IJ,NTYPEP)=VALU
  108 CONTINUE
      IF(IPRNT.LE.3) GO TO 205
      WRITE(6,5)
      CALL PRINT(DENS(1,NTYPEP),NBATRI,NBASIS,6)
C
  205 CONTINUE
      RETURN
      END
      SUBROUTINE WRDER(D1TOT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1TOT(3,NATOM)
      DIMENSION I30(200),A30(100)
      COMMON/COORD/ZAN(50),X(3,50)
      COMMON/ENRGY/ENUC,ESCF
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/TOLER/DLIM
      EQUIVALENCE (I30,A30)
    1 FORMAT(20A4)
    2 FORMAT(I5,F20.10)
    3 FORMAT(4F20.10)
    4 FORMAT(20X,3F20.10)
C
C::::::::::::::::::::::::::::::::::::::::::
C:::SAVE FIRST DERIVATIVES ON THE TAPE30:::
C::::::::::::::::::::::::::::::::::::::::::
C
C   GET CONSTANTS FROM TAPE30
      ITAP30=30
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      IEND    = I30(1)
      MPOINT  = I30(2)
      MCONST  = I30(3)
      MCALCS  = I30(4)
      NCALCS  = I30(5)
C
C   AND GET LOCATION OF INDIVIDUAL CALCULATION TO SAVE GRADIENTS
      IPOS=101+MCONST+MPOINT+NCALCS-1
      CALL WREADW(ITAP30,LOCCAL,1,IPOS,JUNK)
      CALL WREADW(ITAP30,I30,60,LOCCAL,JUNK)
      LOCCAL=LOCCAL+61
      CALL WREADW(ITAP30,LOCDER,1,LOCCAL,JUNK)
      IF(LOCDER.LE.0) THEN
        LOCDER=IEND
        IEND=IEND+N3N*2
        CALL WWRITW(ITAP30,LOCDER,1,LOCCAL,JUNK)
        CALL WWRITW(ITAP30,IEND,1,101,JUNK)
      END IF
      CALL WWRITW(ITAP30,D1TOT,N3N*2,LOCDER,JUNK)
      CALL RCLOSE(ITAP30,3)
C
C::::::::::::::::::::::::::::::::::::::::::
C:::SAVE FIRST DERIVATIVES ON THE TAPE11:::
C::::::::::::::::::::::::::::::::::::::::::
C
      ITAP11=11
      REWIND ITAP11
      WRITE(ITAP11,1) (I30(I),I=1,20)
      WRITE(ITAP11,2) NATOM,ESCF
      DO 101 I=1,NATOM
      WRITE(ITAP11,3) ZAN(I),X(1,I),X(2,I),X(3,I)
  101 CONTINUE
      DO 102 I=1,NATOM
      WRITE(ITAP11,4) D1TOT(1,I),D1TOT(2,I),D1TOT(3,I)
  102 CONTINUE
      REWIND ITAP11
C
      RETURN
      END
      SUBROUTINE SCFDER(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                  D2N,D2O,D2F,D2W,D2T,D2TOT,DENS,DENT,WAO,
     2                  IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/TOLER/DLIM
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
C
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSH     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
C     TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
C     CALL PRNONE(TITLE,D1O)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
C
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2F,N3N)
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO SECOND DERIVATIVES'
C     CALL PRNTWO(TITLE,D2F)
      CALL FOLD(D2O,N3N)
      CALL VADD(D2O,D2O,D2F,N3N*N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO SECOND DERIVATIVES   '
      CALL PRNTWO(TITLE,D2O)
      END IF
C
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2W,N3N)
      TITLE='OVERLAP CONTRIBUTION TO SECOND DERIVATIVES        '
      CALL PRNTWO(TITLE,D2W)
      END IF
C
C   CALCULATE TWO-ELECTRON CONTRIBUTIONS
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      IC5=IC4+NBATRI*6
      ICMAX=IC5+NBATRI*N3N*NTREAD
C.................                  B1MAT...
      CALL JK2DER(DENS,DENT,D1T,D2T,CC(IC5))
C
C   SYMMETRIZE TWO-ELECTRON FIRST DERIVATIVES
      CALL SYMD(D1T)
      TITLE='TWO-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1T)
C
C   SYMMETRIZE TWO-ELECTRON SECOND DERIVATIVES
      IF(NDERIV.GE.2) THEN
      CALL FOLD(D2T,N3N)
      CALL SYMH(D2T)
      TITLE='TWO-ELECTRON CONTRIBUTION TO SECOND DERIVATIVES   '
      CALL PRNTWO(TITLE,D2T)
      END IF
C
C   SUM UP ALL CONTRIBUTIONS FOR FIRST DERIVATIVES
      CALL VADD(D1TOT,D1O,D1W,N3N)
      CALL VADD(D1TOT,D1T,D1TOT,N3N)
      CALL VADD(D1TOT,D1N,D1TOT,N3N)
      TITLE='-----TOTAL SCF FIRST DERIVATIVES-----             '
      CALL PRNONE(TITLE,D1TOT)
C
C   SUM UP ALL CONTRIBUTIONS FOR SECOND DERIVATIVES
      IF(NDERIV.GE.2) THEN
      CALL VADD(D2TOT,D2O,D2W,N3N*N3N)
      CALL VADD(D2TOT,D2T,D2TOT,N3N*N3N)
      CALL VADD(D2TOT,D2N,D2TOT,N3N*N3N)
      TITLE='-----TOTAL SCF SECOND DERIVATIVES (AO PART)-----  '
      CALL PRNTWO(TITLE,D2TOT)
      END IF
C
      IF(IDFOCK.GE.1) THEN
C   SYMMETRIZE B1 MATRIX ELEMENTS
C................B1MAT...
      CALL SYMF1(CC(IC5))
C
C   FORM TAPE42
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      IC5=IC4+NBATRI*6
      IC6=IC5+NBATRI*N3N*NTREAD
      ICMAX=IC6+NBATRI
C.................            DFH     DFS     B1MAT   SS......
      CALL DERFK1(D1TOT,D2TOT,CC(IC1),CC(IC2),CC(IC5),CC(IC6))
C
      END IF
C
C     IF(IDFOCK.GE.2) THEN
C   SYMMETRIZE B2 MATRIX ELEMENTS
C................B2MAT...
C     CALL SYMF2(CC(IC5))
C
C   FORM TAPE44
C     IC1=1
C     IC2=IC1+NBATRI*N3N
C     IC3=IC2+NBATRI*3
C     IC4=IC3+NBATRI*NATRI
C     IC5=IC4+NBATRI*6
C     IC6=IC5+NBATRI*N3N*NTREAD
C     ICMAX=IC6+NBATRI
C.................DSH     DSS     B2MAT    SS.....
C     CALL DERFK2(CC(IC3),CC(IC4),CC(IC6),CC(IC7))
C
C     END IF
C
C   SAVE FIRST DERIVATIVES ON TAPE11 AND TAPE30
      CALL WRDER(D1TOT)
C
      RETURN
      END
      SUBROUTINE SCFCI(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                 D2N,D2O,D2F,D2W,D2T,D2TOT,DENS,DENT,WAO,
     2                 IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENS(NBATRI,NTYPEP),DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
    1 FORMAT(//,2X,' ONE PARTICLE DENSITY MATRIX'/)
    2 FORMAT(//,2X,' LAGRANGIAN MATRIX'/)
C
C   OPEN THE MASTER FILE
      CALL INITMF(1)
C
C   READ IN THE ONE PARTICLE DENSITY MATRIX
      CALL MREAD(DENT,34)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,32)
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
  202 CONTINUE
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSF     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
C     CALL JK2DER
C
C     CALL SYMD
C
C     CALL SYMF
C
      RETURN
      END
      SUBROUTINE MCSCF(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                 D2N,D2O,D2F,D2W,D2T,D2TOT,DENT,WAO,
     2                 IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
    1 FORMAT(//,2X,' ONE PARTICLE DENSITY MATRIX'/)
    2 FORMAT(//,2X,' LAGRANGIAN MATRIX'/)
C
C   OPEN THE MASTER FILE
      CALL INITMF(1)
C
C   READ IN THE ONE PARTICLE DENSITY MATRIX
      CALL MREAD(DENT,38)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,37)
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
  202 CONTINUE
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSH     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
C     CALL JK2DER
C
C     CALL SYMD
C
C     CALL SYMF
C
      RETURN
      END
      SUBROUTINE MCSCI(D1N,D1O,D1F,D1W,D1T,D1TOT,
     1                 D2N,D2O,D2F,D2W,D2T,D2TOT,DENT,WAO,
     2                 IA,CC,MAXLFT)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION D1N(3,NATOM),D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D1T(3,NATOM),D1TOT(3,NATOM)
      DIMENSION D2N(N3N,N3N),D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION D2T(N3N,N3N),D2TOT(N3N,N3N)
      DIMENSION DENT(NBATRI),WAO(NBATRI)
      DIMENSION IA(1),CC(MAXLFT)
      CHARACTER*52 TITLE
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/NDERS/NDERIV
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
    1 FORMAT(//,2X,' ONE PARTICLE DENSITY MATRIX'/)
    2 FORMAT(//,2X,' LAGRANGIAN MATRIX'/)
C
C   OPEN THE MASTER FILE
      CALL INITMF(1)
C
C   READ IN THE ONE PARTICLE DENSITY MATRIX
      CALL MREAD(DENT,34)
      IF(IPRNT.LE.2) GO TO 201
      WRITE(6,1)
      CALL PRINT(DENT,NBATRI,NBFAO,6)
C
C   READ IN THE LAGRANGIAN MATRIX
  201 CONTINUE
      CALL MREAD(WAO,32)
      IF(IPRNT.LE.2) GO TO 202
      WRITE(6,2)
      CALL PRINT(WAO,NBATRI,NBFAO,6)
C
C   CALCULATE DERIVATIVES OF ONE-ELECTRON AND OVERLAP TERMS
  202 CONTINUE
      IC1=1
      IC2=IC1+NBATRI*N3N
      IC3=IC2+NBATRI*3
      IC4=IC3+NBATRI*NATRI
      ICMAX=IC4+NBATRI*6
C.................                                 DFH     DFS.....
      CALL MAKONE(DENT,WAO,D1O,D1F,D1W,D2O,D2F,D2W,CC(IC1),CC(IC2),
C.................DSH     DSS.....
     1            CC(IC3),CC(IC4))
C
C     TITLE='HELLMAN-FEYNMAN CONTRIBUTION TO FIRST DERIVATIVES '
C     CALL PRNONE(TITLE,D1F)
      CALL VADD(D1O,D1O,D1F,N3N)
      TITLE='ONE-ELECTRON CONTRIBUTION TO FIRST DERIVATIVES    '
      CALL PRNONE(TITLE,D1O)
      TITLE='OVERLAP CONTRIBUTION TO FIRST DERIVATIVES         '
      CALL PRNONE(TITLE,D1W)
C
C     CALL JK2DER
C
C     CALL SYMD
C
C     CALL SYMF
C
      RETURN
      END
      SUBROUTINE MAKONE(DT,W,D1O,D1F,D1W,D2O,D2F,D2W,DFH,DFS,DSH,DSS)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION DT(NBATRI),W(NBATRI)
      DIMENSION D1O(3,NATOM),D1F(3,NATOM),D1W(3,NATOM)
      DIMENSION D2O(N3N,N3N),D2F(N3N,N3N),D2W(N3N,N3N)
      DIMENSION DFH(NBATRI,3,NATOM),DFS(NBATRI,3)
      DIMENSION DSH(NBATRI,NATRI),DSS(NBATRI,6)
      DIMENSION XIN(16),YIN(16),ZIN(16),DXC(16),DYC(16),DZC(16)
      DIMENSION WXI(16),WYI(16),WZI(16),WXJ(16),WYJ(16),WZJ(16)
      DIMENSION WXIWXI(16),WYIWYI(16),WZIWZI(16)
      DIMENSION WXIWXJ(16),WYIWYJ(16),WZIWZJ(16)
      DIMENSION WXJWXJ(16),WYJWYJ(16),WZJWZJ(16)
      DIMENSION WXIDXC(16),WYIDYC(16),WZIDZC(16)
      DIMENSION WXJDXC(16),WYJDYC(16),WZJDZC(16)
      DIMENSION  DXDXC(16), DYDYC(16), DZDZC(16)
      LOGICAL IANDJ,AANDB,DFOCK1,DFOCK2
      COMMON/BASIS/NBASIS,NBFAO,NBATRI,NBATR2
      COMMON/CALCS/ISTYPE,ICTYPE,IRAMAN,IAFOCK,IDFOCK,IDINT
      COMMON/COORD/ZAN(50),C(3,50)
      COMMON/DSTVG/T,X0,Y0,Z0,NI,NJ,CX,CY,CZ,TAI,TAJ,TAA,UU
      COMMON/DSTVR/VX,VY,VZ,DVX,DVY,DVZ,DDVX,DDVY,DDVZ,WIVX,WIVY,WIVZ
     #,            WIWIVX,WIWIVY,WIWIVZ,WIWJVX,WIWJVY,WIWJVZ
     #,            WJWJVX,WJWJVY,WJWJVZ,WJVX,WJVY,WJVZ
     #,            WIXDVX,WIYDVY,WIZDVZ,WJXDVX,WJYDVY,WJZDVZ
     #,            DEXDXI,DEXDYI,DEXDZI,DEXDXJ,DEXDYJ,DEXDZJ
     #,            DEXDII,DEXDIJ,DEXDJJ,DEXDIC,DEXDJC
      COMMON/FUNCS/NTYPES,NTYPEP,NTREAD,NATOM,N3N,NATRI,NSYM
      COMMON/GAUSA/EX(200),CS(200)
      COMMON/GAUSB/KATOM(200),KTYPE(200),KSTART(200),KLOC(200),
     1             KMIN(200),KMAX(200),KNG(200)
      COMMON/IJATM/IATOM,JATOM,ICATOM
      COMMON/IJVEC/IX(20),IY(20),IZ(20),JX(20),JY(20),JZ(20)
      COMMON/IJXYZ/XI,YI,ZI,XJ,YJ,ZJ
      COMMON/INDEX/DENS(100),IJX(100),IJY(100),IJZ(100),IPOINT(100)
      COMMON/NDERS/NDERIV
      COMMON/PARA1/NSHELL,NT,MXT,NISO
      COMMON/ROOT /XX,U(9),WT(9),NROOTS
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/TOLER/DLIM
      DATA PI212 /1.1283791670955D+0/
      DATA ZERO,HALF,ONE,TWO / 0.0D+00 , 0.5D+00 , 1.0D+00 , 2.0D+00 /
      DATA NQLIM / 4 /
      DATA ITOL / 20 /
C
      TOL=ITOL*2.30258D+00
      DFOCK1=IDFOCK.GE.1
      DFOCK2=IDFOCK.GE.2
C
      DO 101 I=1,NATOM
      DO 101 J=1,3
      D1O(J,I)=ZERO
      D1F(J,I)=ZERO
      D1W(J,I)=ZERO
  101 CONTINUE
      IF(NDERIV.GE.2) THEN
      DO 102 I=1,N3N
      DO 102 J=1,N3N
      D2O(J,I)=ZERO
      D2F(J,I)=ZERO
      D2W(J,I)=ZERO
  102 CONTINUE
      END IF
      IF(DFOCK1) THEN
      DO 103 I=1,NATOM
      DO 103 J=1,3
      DO 103 K=1,NBATRI
      DFH(K,J,I)=ZERO
  103 CONTINUE
      DO 104 I=1,3
      DO 104 J=1,NBATRI
      DFS(J,I)=ZERO
  104 CONTINUE
      END IF
      IF(DFOCK2) THEN
      DO 105 I=1,NATRI
      DO 105 J=1,NBATRI
      DSH(J,I)=ZERO
  105 CONTINUE
      DO 106 I=1,6
      DO 106 J=1,NBATRI
      DSS(J,I)=ZERO
  106 CONTINUE
      END IF
C
C#################
C#####I SHELL#####
C#################
C
      DO 5000 II=1,NSHELL
C
      IATOM=KATOM(II)
      XI=C(1,IATOM)
      YI=C(2,IATOM)
      ZI=C(3,IATOM)
      IGMIN=KSTART(II)
      IGMAX=IGMIN+KNG(II)-1
      LIT=KTYPE(II)
      MINI=KMIN(II)
      MAXI=KMAX(II)
      LOCI=KLOC(II)-MINI
C
C#################
C#####J SHELL#####
C#################
C
      DO 4000 JJ=1,II
C
      JATOM=KATOM(JJ)
      XJ=C(1,JATOM)
      YJ=C(2,JATOM)
      ZJ=C(3,JATOM)
      JGMIN=KSTART(JJ)
      JGMAX=JGMIN+KNG(JJ)-1
      LJT=KTYPE(JJ)
      MINJ=KMIN(JJ)
      MAXJ=KMAX(JJ)
      LOCJ=KLOC(JJ)-MINJ
      IANDJ=II.EQ.JJ
      AANDB=IATOM.EQ.JATOM
C
      RR=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
C
C     ----- WORK OUT INDICES FOR COMBINING 2D INTEGRALS -----
C
      MIJ=0
      JMAX=MAXJ
      DO 112 I=MINI,MAXI
      NX=IX(I)
      NY=IY(I)
      NZ=IZ(I)
      IF(IANDJ) JMAX=I
      DO 111 J=MINJ,JMAX
      MIJ=MIJ+1
      IJX(MIJ)=NX+JX(J)
      IJY(MIJ)=NY+JY(J)
      IJZ(MIJ)=NZ+JZ(J)
      IPOS=IOFF(LOCI+I)+LOCJ+J
      IPOINT(MIJ)=IPOS
      DENS(MIJ)=DT(IPOS)
      IF(II.NE.JJ.OR.I.NE.J) DENS(MIJ)=DENS(MIJ)*TWO
  111 CONTINUE
  112 CONTINUE
C
C     ----- CALCULATE CORRECT NUMBER OF ROOTS TO USE FOR RYS QUAD. -
C
      NROOTS=(LIT+LJT+NDERIV)/2
C
      IPONT=(IATOM-1)*NBATRI
      JPONT=(JATOM-1)*NBATRI
      IAPT =(IATOM-1)*3+1
      JAPT =(JATOM-1)*3+1
      IAPTT=IOFF(IAPT+1)
      JAPTT=IOFF(JAPT+1)
      MAPT =MAX(IAPT,JAPT)
      NAPT =MIN(IAPT,JAPT)
      IJAPT=IOFF(MAPT)+NAPT
C
C     ----- ZERO TEMPORARY VARIABLES -----
C
      DVDXI=ZERO
      DVDYI=ZERO
      DVDZI=ZERO
      DVDXJ=ZERO
      DVDYJ=ZERO
      DVDZJ=ZERO
      DTDX  =ZERO
      DTDY  =ZERO
      DTDZ  =ZERO
      DSDX  =ZERO
      DSDY  =ZERO
      DSDZ  =ZERO
      IF(NDERIV.LE.1) GO TO 201
C
      DVXIXI=ZERO
      DVXIYI=ZERO
      DVXIZI=ZERO
      DVYIYI=ZERO
      DVYIZI=ZERO
      DVZIZI=ZERO
      DVXIXJ=ZERO
      DVXIYJ=ZERO
      DVXIZJ=ZERO
      DVYIXJ=ZERO
      DVYIYJ=ZERO
      DVYIZJ=ZERO
      DVZIXJ=ZERO
      DVZIYJ=ZERO
      DVZIZJ=ZERO
      DVXJXJ=ZERO
      DVXJYJ=ZERO
      DVXJZJ=ZERO
      DVYJYJ=ZERO
      DVYJZJ=ZERO
      DVZJZJ=ZERO
      DTDXDX=ZERO
      DTDXDY=ZERO
      DTDXDZ=ZERO
      DTDYDY=ZERO
      DTDYDZ=ZERO
      DTDZDZ=ZERO
      DSDXDX=ZERO
      DSDXDY=ZERO
      DSDXDZ=ZERO
      DSDYDY=ZERO
      DSDYDZ=ZERO
      DSDZDZ=ZERO
C
C:::::::::::::::::::::
C:::::I PRIMITIVE:::::
C:::::::::::::::::::::
C
  201 CONTINUE
      DO 3000 IG=IGMIN,IGMAX
      CI=CS(IG)
      AI=EX(IG)
      AXI=AI*XI
      AYI=AI*YI
      AZI=AI*ZI
      TAI=AI*TWO
C
C:::::::::::::::::::::
C:::::J PRIMITIVE:::::
C:::::::::::::::::::::
C
      IF(IANDJ) JGMAX=IG
      DO 2000 JG=JGMIN,JGMAX
      CJ=CS(JG)
      AJ=EX(JG)
      AXJ=AJ*XJ
      AYJ=AJ*YJ
      AZJ=AJ*ZJ
      TAJ=AJ*TWO
C
      PP=AI+AJ
      PAA=AI*AJ
      TPP=ONE/PP
      TAA=TAI+TAJ
      RHO2=PAA*TPP*TWO
      TEMP=PAA*TPP*RR
C
C     ----- IGNORE INTEGRAL IF PRE-EXPONENTIAL TOO SMALL -----
C
      IF(TEMP.GT.TOL) GO TO 2000
C
C     ----- DENSITY FACTOR -----
C
      TP=DSQRT(TPP)
      DIJ=CI*CJ*DEXP(-TEMP)
      IF(IANDJ.AND.IG.NE.JG) DIJ=DIJ*TWO
      DIJPI=DIJ*PI212*TPP
      DIJ=-DIJ
C
      AAX=AXI+AXJ
      AAY=AYI+AYJ
      AAZ=AZI+AZJ
      AX=AAX*TPP
      AY=AAY*TPP
      AZ=AAZ*TPP
C
C     ----- CALCULATE DERIVATIVE CONTRIBUTIONS FROM -----
C                KINETIC AND OVERLAP INTEGRALS
C
      IF(AANDB) GO TO 300
C
      X0=AX
      Y0=AY
      Z0=AZ
      T=DSQRT(PP)
      ST=TP
      IN=-NQLIM
      DO 120 NI=1,LIT
      IN=IN+NQLIM
      DO 120 NJ=1,LJT
      JN=IN+NJ
      CALL TDER2
      XIN(JN)=VX             * ST
      YIN(JN)=VY             * ST
      ZIN(JN)=VZ*DIJ         * ST
      WXI(JN)=WIVX           * ST
      WYI(JN)=WIVY           * ST
      WZI(JN)=WIVZ*DIJ       * ST
      DXC(JN)=DVX            * ST
      DYC(JN)=DVY            * ST
      DZC(JN)=DVZ*DIJ        * ST
      WXIDXC(JN)=WIXDVX      * ST
      WYIDYC(JN)=WIYDVY      * ST
      WZIDZC(JN)=WIZDVZ*DIJ  * ST
      IF(NDERIV.LE.1) GO TO 120
C
      WXIWXI(JN)=WIWIVX      * ST
      WYIWYI(JN)=WIWIVY      * ST
      WZIWZI(JN)=WIWIVZ*DIJ  * ST
      DXDXC(JN)=DDVX         * ST
      DYDYC(JN)=DDVY         * ST
      DZDZC(JN)=DDVZ*DIJ     * ST
  120 CONTINUE
C
C     ----- COMBINE TWO-DIMENSIONAL INTEGRALS TO FORM INTEGRALS -----
C
      DO 125 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DD=DENS(I)*HALF
      X = XIN(NX)
      Y = YIN(NY)
      Z = ZIN(NZ)
      XY = X*Y
      XZ = X*Z
      YZ = Y*Z
      DX = DXC(NX)
      DY = DYC(NY)
      DZ = DZC(NZ)
      WX = WXI(NX)
      WY = WYI(NY)
      WZ = WZI(NZ)
      WDX = WXIDXC(NX)
      WDY = WYIDYC(NY)
      WDZ = WZIDZC(NZ)
      IP=IPOINT(I)
      WD=W(IP)
      XTEMP1=WX*YZ
      YTEMP1=WY*XZ
      ZTEMP1=WZ*XY
      XTEMP2=WDX*YZ+WX*(DY*Z+Y*DZ)
      YTEMP2=WDY*XZ+WY*(DX*Z+X*DZ)
      ZTEMP2=WDZ*XY+WZ*(DX*Y+X*DY)
      IF(DABS(WD).LT.DLIM) GO TO 401
      DSDX=DSDX+XTEMP1*WD
      DSDY=DSDY+YTEMP1*WD
      DSDZ=DSDZ+ZTEMP1*WD
  401 CONTINUE
      IF(DABS(DD).LT.DLIM) GO TO 402
      DTDX=DTDX+XTEMP2*DD
      DTDY=DTDY+YTEMP2*DD
      DTDZ=DTDZ+ZTEMP2*DD
  402 CONTINUE
      IF(NDERIV.LE.1) GO TO 202
C
      SSDXDX= WXIWXI(NX)*YZ
      SSDXDY= WX*WY*Z
      SSDXDZ= WX*WZ*Y
      SSDYDY= WYIWYI(NY)*XZ
      SSDYDZ= WY*WZ*X
      SSDZDZ= WZIWZI(NZ)*XY
      TTDXDX = DXDXC(NX)*YZ + WXIWXI(NX) * (DY*Z + Y*DZ)
      TTDXDY = (WDX*WY + WX*WDY) * Z + WX*WY*DZ
      TTDXDZ = (WDX*WZ + WX*WDZ) * Y + WX*WZ*DY
      TTDYDY = DYDYC(NY)*XZ + WYIWYI(NY) * (DX*Z + X*DZ)
      TTDYDZ = (WDY*WZ + WY*WDZ) * X + WY*WZ*DX
      TTDZDZ = DZDZC(NZ)*XY + WZIWZI(NZ) * (DX*Y + X*DY)
      IF(DABS(WD).LT.DLIM) GO TO 403
      DSDXDX=DSDXDX + SSDXDX*WD
      DSDXDY=DSDXDY + SSDXDY*WD
      DSDXDZ=DSDXDZ + SSDXDZ*WD
      DSDYDY=DSDYDY + SSDYDY*WD
      DSDYDZ=DSDYDZ + SSDYDZ*WD
      DSDZDZ=DSDZDZ + SSDZDZ*WD
  403 CONTINUE
      IF(DABS(DD).LT.DLIM) GO TO 202
      DTDXDX = DTDXDX + TTDXDX * DD
      DTDXDY = DTDXDY + TTDXDY * DD
      DTDXDZ = DTDXDZ + TTDXDZ * DD
      DTDYDY = DTDYDY + TTDYDY * DD
      DTDYDZ = DTDYDZ + TTDYDZ * DD
      DTDZDZ = DTDZDZ + TTDZDZ * DD
C
  202 CONTINUE
      IF(.NOT.DFOCK1) GO TO 203
      DFS(IP,1)=DFS(IP,1)-XTEMP1
      DFS(IP,2)=DFS(IP,2)-YTEMP1
      DFS(IP,3)=DFS(IP,3)-ZTEMP1
      DFH(IP,1,IATOM)=DFH(IP,1,IATOM)+XTEMP2*HALF
      DFH(IP,1,JATOM)=DFH(IP,1,JATOM)-XTEMP2*HALF
      DFH(IP,2,IATOM)=DFH(IP,2,IATOM)+YTEMP2*HALF
      DFH(IP,2,JATOM)=DFH(IP,2,JATOM)-YTEMP2*HALF
      DFH(IP,3,IATOM)=DFH(IP,3,IATOM)+ZTEMP2*HALF
      DFH(IP,3,JATOM)=DFH(IP,3,JATOM)-ZTEMP2*HALF
  203 CONTINUE
      IF(.NOT.DFOCK2) GO TO 125
      DSS(IP,1)=DSS(IP,1)-SSDXDX
      DSS(IP,2)=DSS(IP,2)-SSDXDY
      DSS(IP,3)=DSS(IP,3)-SSDXDZ
      DSS(IP,4)=DSS(IP,4)-SSDYDY
      DSS(IP,5)=DSS(IP,5)-SSDYDZ
      DSS(IP,6)=DSS(IP,6)-SSDZDZ
C
      ICOUNT=IAPTT
      JCOUNT=JAPTT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDXDX*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDXDX*HALF
      ICOUNT=ICOUNT+IAPT
      JCOUNT=JCOUNT+JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDXDY*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDXDY*HALF
      ICOUNT=ICOUNT+1
      JCOUNT=JCOUNT+1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDYDY*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDYDY*HALF
      ICOUNT=ICOUNT+IAPT
      JCOUNT=JCOUNT+JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDXDZ*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDXDZ*HALF
      ICOUNT=ICOUNT+1
      JCOUNT=JCOUNT+1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDYDZ*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDYDZ*HALF
      ICOUNT=ICOUNT+1
      JCOUNT=JCOUNT+1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + TTDZDZ*HALF
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + TTDZDZ*HALF
      ICOUNT=IJAPT
      DSH(IP,ICOUNT)   = DSH(IP,ICOUNT)   -TTDXDX*HALF
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) -TTDXDY*HALF
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) -TTDXDZ*HALF
      ICOUNT=ICOUNT+MAPT
      DSH(IP,ICOUNT)   = DSH(IP,ICOUNT)   -TTDXDY*HALF
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) -TTDYDY*HALF
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) -TTDYDZ*HALF
      ICOUNT=ICOUNT+MAPT+1
      DSH(IP,ICOUNT)   = DSH(IP,ICOUNT)   -TTDXDZ*HALF
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) -TTDYDZ*HALF
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) -TTDZDZ*HALF
C
  125 CONTINUE
  300 CONTINUE
C
C     ----- LOOP OVER ATOMS IN POTENTIAL TERM -----
C
      DO 1000 IC=1,NATOM
      ICATOM=IC
C
      KAPT =(ICATOM-1)*3+1
      KAPTT=IOFF(KAPT+1)
      MMAPT=MAX(IAPT,KAPT)
      NNAPT=MIN(IAPT,KAPT)
      IKAPT=IOFF(MMAPT)+NNAPT
      MMAPT=MAX(JAPT,KAPT)
      NNAPT=MIN(JAPT,KAPT)
      JKAPT=IOFF(MMAPT)+NNAPT
C
      ZNUC=-ZAN(IC)*DIJPI
      CX=C(1,IC)
      CY=C(2,IC)
      CZ=C(3,IC)
      XX=PP*((AX-CX)**2+(AY-CY)**2+(AZ-CZ)**2)
          IF(NROOTS.LE.3) THEN
          CALL RT123
          ELSE IF(NROOTS.EQ.4) THEN
          CALL ROOT4
          ELSE IF(NROOTS.EQ.5) THEN
          CALL ROOT5
          ELSE
          STOP 'NOT ENOUGH ROOTS IN VDERIV'
          END IF
      HFDX=ZERO
      HFDY=ZERO
      HFDZ=ZERO
      IF(NDERIV.LE.1) GO TO 204
      HFDXX=ZERO
      HFDXY=ZERO
      HFDXZ=ZERO
      HFDYY=ZERO
      HFDYZ=ZERO
      HFDZZ=ZERO
      DVXIXC=ZERO
      DVXIYC=ZERO
      DVXIZC=ZERO
      DVYIXC=ZERO
      DVYIYC=ZERO
      DVYIZC=ZERO
      DVZIXC=ZERO
      DVZIYC=ZERO
      DVZIZC=ZERO
      DVXJXC=ZERO
      DVXJYC=ZERO
      DVXJZC=ZERO
      DVYJXC=ZERO
      DVYJYC=ZERO
      DVYJZC=ZERO
      DVZJXC=ZERO
      DVZJYC=ZERO
      DVZJZC=ZERO
  204 CONTINUE
      DO 150 IROOT=1,NROOTS
      UU=PP*U(IROOT)
      WW=WT(IROOT)*ZNUC
      TT=PP+UU
      T=DSQRT(TT)
      X0=(AAX+UU*CX)/TT
      Y0=(AAY+UU*CY)/TT
      Z0=(AAZ+UU*CZ)/TT
C
C     ----- CALCULATE TWO-DIMENSIONAL INTEGRALS -----
C
      IN=-NQLIM
      DO 130 NI=1,LIT
      IN=IN+NQLIM
      DO 130 NJ=1,LJT
      JN=IN+NJ
      CALL VDER2
      XIN(JN)=VX
      YIN(JN)=VY
      ZIN(JN)=VZ*WW
      DXC(JN)=DVX
      DYC(JN)=DVY
      DZC(JN)=DVZ*WW
      WXI(JN)=WIVX
      WYI(JN)=WIVY
      WZI(JN)=WIVZ*WW
      WXJ(JN)=WJVX
      WYJ(JN)=WJVY
      WZJ(JN)=WJVZ*WW
      IF(NDERIV.LE.1) GO TO 130
C
      WXIWXI(JN)=WIWIVX
      WYIWYI(JN)=WIWIVY
      WZIWZI(JN)=WIWIVZ*WW
      WXIWXJ(JN)=WIWJVX
      WYIWYJ(JN)=WIWJVY
      WZIWZJ(JN)=WIWJVZ*WW
      WXJWXJ(JN)=WJWJVX
      WYJWYJ(JN)=WJWJVY
      WZJWZJ(JN)=WJWJVZ*WW
      WXIDXC(JN)=WIXDVX
      WYIDYC(JN)=WIYDVY
      WZIDZC(JN)=WIZDVZ*WW
      WXJDXC(JN)=WJXDVX
      WYJDYC(JN)=WJYDVY
      WZJDZC(JN)=WJZDVZ*WW
      DXDXC(JN)=DDVX
      DYDYC(JN)=DDVY
      DZDZC(JN)=DDVZ*WW
  130 CONTINUE
 
C     ----- COMBINE TWO-DIMENSIONAL INTEGRALS TO FORM INTEGRALS -----
C
      ICPONT = (IC-1)*NBATRI
      DO 140 I=1,MIJ
      NX=IJX(I)
      NY=IJY(I)
      NZ=IJZ(I)
      DD=DENS(I)
      IP=IPOINT(I)
      X = XIN(NX)
      Y = YIN(NY)
      Z = ZIN(NZ)
      XY = X*Y
      XZ = X*Z
      YZ = Y*Z
      XTEMP3 = DXC(NX)*YZ
      YTEMP3 = DYC(NY)*XZ
      ZTEMP3 = DZC(NZ)*XY
      XTEMP4=WXI(NX)*YZ
      YTEMP4=WYI(NY)*XZ
      ZTEMP4=WZI(NZ)*XY
      XTEMP5=WXJ(NX)*YZ
      YTEMP5=WYJ(NY)*XZ
      ZTEMP5=WZJ(NZ)*XY
      IF(DABS(DD).LT.DLIM) GO TO 405
      HFDX  = HFDX + XTEMP3*DD
      HFDY  = HFDY + YTEMP3*DD
      HFDZ  = HFDZ + ZTEMP3*DD
      DVDXI=DVDXI+XTEMP4*DD
      DVDYI=DVDYI+YTEMP4*DD
      DVDZI=DVDZI+ZTEMP4*DD
      DVDXJ=DVDXJ+XTEMP5*DD
      DVDYJ=DVDYJ+YTEMP5*DD
      DVDZJ=DVDZJ+ZTEMP5*DD
  405 CONTINUE
      IF(NDERIV.LE.1) GO TO 205
C
      VHFDXX = DXDXC(NX)*YZ
      VHFDXY = DXC(NX)*DYC(NY)*Z
      VHFDXZ = DXC(NX)*Y*DZC(NZ)
      VHFDYY = DYDYC(NY)*XZ
      VHFDYZ = X*DYC(NY)*DZC(NZ)
      VHFDZZ = XY*DZDZC(NZ)
      VVXIXC= WXIDXC(NX)*YZ
      VVXIYC= WXI(NX)*DYC(NY)*Z
      VVXIZC= WXI(NX)*Y*DZC(NZ)
      VVYIXC= DXC(NX)*WYI(NY)*Z
      VVYIYC= WYIDYC(NY)*XZ
      VVYIZC= X*WYI(NY)*DZC(NZ)
      VVZIXC= DXC(NX)*Y*WZI(NZ)
      VVZIYC= X*DYC(NY)*WZI(NZ)
      VVZIZC= XY*WZIDZC(NZ)
      VVXJXC= WXJDXC(NX)*YZ
      VVXJYC= WXJ(NX)*DYC(NY)*Z
      VVXJZC= WXJ(NX)*Y*DZC(NZ)
      VVYJXC= DXC(NX)*WYJ(NY)*Z
      VVYJYC= WYJDYC(NY)*XZ
      VVYJZC= X*WYJ(NY)*DZC(NZ)
      VVZJXC= DXC(NX)*Y*WZJ(NZ)
      VVZJYC= X*DYC(NY)*WZJ(NZ)
      VVZJZC= XY*WZJDZC(NZ)
      VVXIXI= WXIWXI(NX)*YZ
      VVXIYI= WXI(NX)*WYI(NY)*Z
      VVXIZI= WXI(NX)*Y*WZI(NZ)
      VVYIYI= WYIWYI(NY)*XZ
      VVYIZI= X*WYI(NY)*WZI(NZ)
      VVZIZI= XY*WZIWZI(NZ)
      VVXIXJ= WXIWXJ(NX)*YZ
      VVXIYJ= WXI(NX)*WYJ(NY)*Z
      VVXIZJ= WXI(NX)*Y*WZJ(NZ)
      VVYIXJ= WXJ(NX)*WYI(NY)*Z
      VVYIYJ= WYIWYJ(NY)*XZ
      VVYIZJ= X*WYI(NY)*WZJ(NZ)
      VVZIXJ= WXJ(NX)*Y*WZI(NZ)
      VVZIYJ= X*WYJ(NY)*WZI(NZ)
      VVZIZJ= XY*WZIWZJ(NZ)
      VVXJXJ= WXJWXJ(NX)*YZ
      VVXJYJ= WXJ(NX)*WYJ(NY)*Z
      VVXJZJ= WXJ(NX)*Y*WZJ(NZ)
      VVYJYJ= WYJWYJ(NY)*XZ
      VVYJZJ= X*WYJ(NY)*WZJ(NZ)
      VVZJZJ= XY*WZJWZJ(NZ)
      IF(DABS(DD).LT.DLIM) GO TO 205
      HFDXX = HFDXX + VHFDXX * DD
      HFDXY = HFDXY + VHFDXY * DD
      HFDXZ = HFDXZ + VHFDXZ * DD
      HFDYY = HFDYY + VHFDYY * DD
      HFDYZ = HFDYZ + VHFDYZ * DD
      HFDZZ = HFDZZ + VHFDZZ * DD
      DVXIXC=DVXIXC + VVXIXC * DD
      DVXIYC=DVXIYC + VVXIYC * DD
      DVXIZC=DVXIZC + VVXIZC * DD
      DVYIXC=DVYIXC + VVYIXC * DD
      DVYIYC=DVYIYC + VVYIYC * DD
      DVYIZC=DVYIZC + VVYIZC * DD
      DVZIXC=DVZIXC + VVZIXC * DD
      DVZIYC=DVZIYC + VVZIYC * DD
      DVZIZC=DVZIZC + VVZIZC * DD
      DVXJXC=DVXJXC + VVXJXC * DD
      DVXJYC=DVXJYC + VVXJYC * DD
      DVXJZC=DVXJZC + VVXJZC * DD
      DVYJXC=DVYJXC + VVYJXC * DD
      DVYJYC=DVYJYC + VVYJYC * DD
      DVYJZC=DVYJZC + VVYJZC * DD
      DVZJXC=DVZJXC + VVZJXC * DD
      DVZJYC=DVZJYC + VVZJYC * DD
      DVZJZC=DVZJZC + VVZJZC * DD
      DVXIXI=DVXIXI + VVXIXI * DD
      DVXIYI=DVXIYI + VVXIYI * DD
      DVXIZI=DVXIZI + VVXIZI * DD
      DVYIYI=DVYIYI + VVYIYI * DD
      DVYIZI=DVYIZI + VVYIZI * DD
      DVZIZI=DVZIZI + VVZIZI * DD
      DVXIXJ=DVXIXJ + VVXIXJ * DD
      DVXIYJ=DVXIYJ + VVXIYJ * DD
      DVXIZJ=DVXIZJ + VVXIZJ * DD
      DVYIXJ=DVYIXJ + VVYIXJ * DD
      DVYIYJ=DVYIYJ + VVYIYJ * DD
      DVYIZJ=DVYIZJ + VVYIZJ * DD
      DVZIXJ=DVZIXJ + VVZIXJ * DD
      DVZIYJ=DVZIYJ + VVZIYJ * DD
      DVZIZJ=DVZIZJ + VVZIZJ * DD
      DVXJXJ=DVXJXJ + VVXJXJ * DD
      DVXJYJ=DVXJYJ + VVXJYJ * DD
      DVXJZJ=DVXJZJ + VVXJZJ * DD
      DVYJYJ=DVYJYJ + VVYJYJ * DD
      DVYJZJ=DVYJZJ + VVYJZJ * DD
      DVZJZJ=DVZJZJ + VVZJZJ * DD
C
  205 CONTINUE
      IF(.NOT.DFOCK1) GO TO 206
      DFH(IP,1,IC)=DFH(IP,1,IC)+XTEMP3
      DFH(IP,2,IC)=DFH(IP,2,IC)+YTEMP3
      DFH(IP,3,IC)=DFH(IP,3,IC)+ZTEMP3
      DFH(IP,1,IATOM) = DFH(IP,1,IATOM) + XTEMP4
      DFH(IP,2,IATOM) = DFH(IP,2,IATOM) + YTEMP4
      DFH(IP,3,IATOM) = DFH(IP,3,IATOM) + ZTEMP4
      DFH(IP,1,JATOM) = DFH(IP,1,JATOM) + XTEMP5
      DFH(IP,2,JATOM) = DFH(IP,2,JATOM) + YTEMP5
      DFH(IP,3,JATOM) = DFH(IP,3,JATOM) + ZTEMP5
  206 CONTINUE
      IF(.NOT.DFOCK2) GO TO 140
C
      ICOUNT = KAPTT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDXX
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDXY
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDYY
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDXZ
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDYZ
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VHFDZZ
 
      IF(KAPT-IAPT) 301,302,303
C
C        WHEN IATOM > ICATOM
C
  301 ICOUNT = IKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVXIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVXIZC
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVYIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVYIZC
      ICOUNT = ICOUNT + IAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVZIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVZIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZC
      GO TO 305
C
C        WHEN IATOM = ICATOM
C
  302 ICOUNT = IKAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIXC
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIXC + VVXIYC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIYC
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIXC + VVXIZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIYC + VVYIZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIZC
      GO TO 305
C
C        WHEN IATOM < ICATOM
C
  303 ICOUNT = IKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIXC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIXC
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIYC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIYC
      ICOUNT = ICOUNT + KAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIZC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIZC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZC
C
  305 IF(KAPT-JAPT) 306,307,308
C
C        WHEN JATOM > ICATOM
C
  306 ICOUNT = JKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVXJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVXJZC
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVYJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVYJZC
      ICOUNT = ICOUNT + JAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVZJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVZJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJZC
      GO TO 310
C
C        WHEN JATOM = ICATOM
C
  307 ICOUNT = JKAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXJXC
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYJXC + VVXJYC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYJYC
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZJXC + VVXJZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZJYC + VVYJZC
      ICOUNT = ICOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZJZC
      GO TO 310
C
C        WHEN JATOM < ICATOM
C
  308 ICOUNT = JKAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJXC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJXC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJXC
      ICOUNT = ICOUNT + KAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJYC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJYC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJYC
      ICOUNT = ICOUNT + KAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXJZC
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYJZC
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZJZC
C
C       (IATOM,IATOM) & (JATOM,JATOM) PAIRS
C
  310 ICOUNT = IAPTT
      JCOUNT = JAPTT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIXI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVXJXJ
      ICOUNT = ICOUNT + IAPT
      JCOUNT = JCOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIYI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVXJYJ
      ICOUNT = ICOUNT + 1
      JCOUNT = JCOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIYI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVYJYJ
      ICOUNT = ICOUNT + IAPT
      JCOUNT = JCOUNT + JAPT
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVXIZI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVXJZJ
      ICOUNT = ICOUNT + 1
      JCOUNT = JCOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVYIZI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVYJZJ
      ICOUNT = ICOUNT + 1
      JCOUNT = JCOUNT + 1
      DSH(IP,ICOUNT) = DSH(IP,ICOUNT) + VVZIZI
      DSH(IP,JCOUNT) = DSH(IP,JCOUNT) + VVZJZJ
C
      IF(IATOM-JATOM) 312,313,311
C
  311 ICOUNT = IJAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVXIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVXIZJ
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVYIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVYIZJ
      ICOUNT = ICOUNT + IAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVZIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVZIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZJ
      GO TO 315
  312 ICOUNT = IJAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIXJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIXJ
      ICOUNT = ICOUNT + JAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIYJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIYJ
      ICOUNT = ICOUNT + JAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIZJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIZJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZJ
      GO TO 315
C                      WHEN IATOM = JATOM
  313 ICOUNT = IJAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIXJ
      ICOUNT = ICOUNT + IAPT
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIYJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIYJ
      ICOUNT = ICOUNT + IAPT + 1
      DSH(IP,ICOUNT  ) = DSH(IP,ICOUNT  ) + VVXIZJ
      DSH(IP,ICOUNT+1) = DSH(IP,ICOUNT+1) + VVYIZJ
      DSH(IP,ICOUNT+2) = DSH(IP,ICOUNT+2) + VVZIZJ
 
  315 CONTINUE
  140 CONTINUE
C
  150 CONTINUE
      D1F(1,IC) = D1F(1,IC) + HFDX
      D1F(2,IC) = D1F(2,IC) + HFDY
      D1F(3,IC) = D1F(3,IC) + HFDZ
C
      IF(NDERIV.LE.1) GO TO 1000
      ICPT=KAPT
C     ICPT=(IC-1)*3+1
      D2F(ICPT  ,ICPT  ) = D2F(ICPT  ,ICPT  ) + HFDXX
      D2F(ICPT+1,ICPT  ) = D2F(ICPT+1,ICPT  ) + HFDXY
      D2F(ICPT+2,ICPT  ) = D2F(ICPT+2,ICPT  ) + HFDXZ
      D2F(ICPT+1,ICPT+1) = D2F(ICPT+1,ICPT+1) + HFDYY
      D2F(ICPT+2,ICPT+1) = D2F(ICPT+2,ICPT+1) + HFDYZ
      D2F(ICPT+2,ICPT+2) = D2F(ICPT+2,ICPT+2) + HFDZZ
      IPT=IAPT
C    IPT=(IATOM-1)*3+1
      D2O(IPT  ,ICPT  ) = D2O(IPT  ,ICPT  ) + DVXIXC
      D2O(IPT  ,ICPT+1) = D2O(IPT  ,ICPT+1) + DVXIYC
      D2O(IPT  ,ICPT+2) = D2O(IPT  ,ICPT+2) + DVXIZC
      D2O(IPT+1,ICPT  ) = D2O(IPT+1,ICPT  ) + DVYIXC
      D2O(IPT+1,ICPT+1) = D2O(IPT+1,ICPT+1) + DVYIYC
      D2O(IPT+1,ICPT+2) = D2O(IPT+1,ICPT+2) + DVYIZC
      D2O(IPT+2,ICPT  ) = D2O(IPT+2,ICPT  ) + DVZIXC
      D2O(IPT+2,ICPT+1) = D2O(IPT+2,ICPT+1) + DVZIYC
      D2O(IPT+2,ICPT+2) = D2O(IPT+2,ICPT+2) + DVZIZC
      JPT=JAPT
C     JPT=(JATOM-1)*3+1
      D2O(JPT  ,ICPT  ) = D2O(JPT  ,ICPT  ) + DVXJXC
      D2O(JPT  ,ICPT+1) = D2O(JPT  ,ICPT+1) + DVXJYC
      D2O(JPT  ,ICPT+2) = D2O(JPT  ,ICPT+2) + DVXJZC
      D2O(JPT+1,ICPT  ) = D2O(JPT+1,ICPT  ) + DVYJXC
      D2O(JPT+1,ICPT+1) = D2O(JPT+1,ICPT+1) + DVYJYC
      D2O(JPT+1,ICPT+2) = D2O(JPT+1,ICPT+2) + DVYJZC
      D2O(JPT+2,ICPT  ) = D2O(JPT+2,ICPT  ) + DVZJXC
      D2O(JPT+2,ICPT+1) = D2O(JPT+2,ICPT+1) + DVZJYC
      D2O(JPT+2,ICPT+2) = D2O(JPT+2,ICPT+2) + DVZJZC
 1000 CONTINUE
C
 2000 CONTINUE
 3000 CONTINUE
C:::::::::::::::::::::::::
C:::::END OF PRIMITIVES:::
C:::::::::::::::::::::::::
C
      D1O(1,IATOM)=D1O(1,IATOM)+DVDXI+DTDX
      D1O(2,IATOM)=D1O(2,IATOM)+DVDYI+DTDY
      D1O(3,IATOM)=D1O(3,IATOM)+DVDZI+DTDZ
      D1O(1,JATOM)=D1O(1,JATOM)+DVDXJ-DTDX
      D1O(2,JATOM)=D1O(2,JATOM)+DVDYJ-DTDY
      D1O(3,JATOM)=D1O(3,JATOM)+DVDZJ-DTDZ
      D1W(1,IATOM)=D1W(1,IATOM)+DSDX
      D1W(2,IATOM)=D1W(2,IATOM)+DSDY
      D1W(3,IATOM)=D1W(3,IATOM)+DSDZ
      D1W(1,JATOM)=D1W(1,JATOM)-DSDX
      D1W(2,JATOM)=D1W(2,JATOM)-DSDY
      D1W(3,JATOM)=D1W(3,JATOM)-DSDZ
C
      IF(NDERIV.LE.1) GO TO 4000
C     IPT=(IATOM-1)*3+1
C     JPT=(JATOM-1)*3+1
      IPT=IAPT
      JPT=JAPT
      D2O(IPT  ,IPT  ) = D2O(IPT  ,IPT  ) + DVXIXI + DTDXDX
      D2O(IPT  ,IPT+1) = D2O(IPT  ,IPT+1) + DVXIYI + DTDXDY
      D2O(IPT  ,IPT+2) = D2O(IPT  ,IPT+2) + DVXIZI + DTDXDZ
      D2O(IPT+1,IPT+1) = D2O(IPT+1,IPT+1) + DVYIYI + DTDYDY
      D2O(IPT+1,IPT+2) = D2O(IPT+1,IPT+2) + DVYIZI + DTDYDZ
      D2O(IPT+2,IPT+2) = D2O(IPT+2,IPT+2) + DVZIZI + DTDZDZ
      D2O(IPT  ,JPT  ) = D2O(IPT  ,JPT  ) + DVXIXJ - DTDXDX
      D2O(IPT  ,JPT+1) = D2O(IPT  ,JPT+1) + DVXIYJ - DTDXDY
      D2O(IPT  ,JPT+2) = D2O(IPT  ,JPT+2) + DVXIZJ - DTDXDZ
      D2W(IPT  ,IPT  ) = D2W(IPT  ,IPT  ) + DSDXDX
      D2W(IPT  ,IPT+1) = D2W(IPT  ,IPT+1) + DSDXDY
      D2W(IPT  ,IPT+2) = D2W(IPT  ,IPT+2) + DSDXDZ
      D2W(IPT+1,IPT+1) = D2W(IPT+1,IPT+1) + DSDYDY
      D2W(IPT+1,IPT+2) = D2W(IPT+1,IPT+2) + DSDYDZ
      D2W(IPT+2,IPT+2) = D2W(IPT+2,IPT+2) + DSDZDZ
      D2W(IPT  ,JPT  ) = D2W(IPT  ,JPT  ) - DSDXDX
      D2W(IPT  ,JPT+1) = D2W(IPT  ,JPT+1) - DSDXDY
      D2W(IPT  ,JPT+2) = D2W(IPT  ,JPT+2) - DSDXDZ
      IF(IATOM.NE.JATOM) THEN
      D2O(IPT+1,JPT  ) = D2O(IPT+1,JPT  ) + DVYIXJ - DTDXDY
      D2W(IPT+1,JPT  ) = D2W(IPT+1,JPT  ) - DSDXDY
      END IF
      D2O(IPT+1,JPT+1) = D2O(IPT+1,JPT+1) + DVYIYJ - DTDYDY
      D2O(IPT+1,JPT+2) = D2O(IPT+1,JPT+2) + DVYIZJ - DTDYDZ
      D2W(IPT+1,JPT+1) = D2W(IPT+1,JPT+1) - DSDYDY
      D2W(IPT+1,JPT+2) = D2W(IPT+1,JPT+2) - DSDYDZ
      IF(IATOM.NE.JATOM) THEN
      D2O(IPT+2,JPT  ) = D2O(IPT+2,JPT  ) + DVZIXJ - DTDXDZ
      D2O(IPT+2,JPT+1) = D2O(IPT+2,JPT+1) + DVZIYJ - DTDYDZ
      D2W(IPT+2,JPT  ) = D2W(IPT+2,JPT  ) - DSDXDZ
      D2W(IPT+2,JPT+1) = D2W(IPT+2,JPT+1) - DSDYDZ
      END IF
      D2O(IPT+2,JPT+2) = D2O(IPT+2,JPT+2) + DVZIZJ - DTDZDZ
      D2O(JPT  ,JPT  ) = D2O(JPT  ,JPT  ) + DVXJXJ + DTDXDX
      D2O(JPT  ,JPT+1) = D2O(JPT  ,JPT+1) + DVXJYJ + DTDXDY
      D2O(JPT  ,JPT+2) = D2O(JPT  ,JPT+2) + DVXJZJ + DTDXDZ
      D2O(JPT+1,JPT+1) = D2O(JPT+1,JPT+1) + DVYJYJ + DTDYDY
      D2O(JPT+1,JPT+2) = D2O(JPT+1,JPT+2) + DVYJZJ + DTDYDZ
      D2O(JPT+2,JPT+2) = D2O(JPT+2,JPT+2) + DVZJZJ + DTDZDZ
      D2W(IPT+2,JPT+2) = D2W(IPT+2,JPT+2) - DSDZDZ
      D2W(JPT  ,JPT  ) = D2W(JPT  ,JPT  ) + DSDXDX
      D2W(JPT  ,JPT+1) = D2W(JPT  ,JPT+1) + DSDXDY
      D2W(JPT  ,JPT+2) = D2W(JPT  ,JPT+2) + DSDXDZ
      D2W(JPT+1,JPT+1) = D2W(JPT+1,JPT+1) + DSDYDY
      D2W(JPT+1,JPT+2) = D2W(JPT+1,JPT+2) + DSDYDZ
      D2W(JPT+2,JPT+2) = D2W(JPT+2,JPT+2) + DSDZDZ
C
 4000 CONTINUE
 5000 CONTINUE
C#######################
C#####END OF SHELLS#####
C#######################
C
      RETURN
      END
