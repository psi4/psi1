      SUBROUTINE AMPFX(ELX,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ELX(NABC,NABC)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB104/PARA,WAVE,CONST,CYCL,CONV
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB202/R(1275)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB206/SQM(150),DEL(150),FREQ(150)
      DATA A00,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' MEAN SQUARE AMPLITUDES OF NORMAL VIBRATIONS'/
     1 2X,4H NO.,5X,11H DEL IN A+2/)
    2 FORMAT(2X,I2,5X,F12.5)
    3 FORMAT(//,2X,' MEAN SQUARE AND ROOT MEAN SQUARE AMPLITUDES (AT 298
     1.15 K)'/
     2 2X,4H NO.,5X,2H X,5X,2H Y,5X,8H L2(X-Y),7X,7H L(X-Y)/
     3 25X,7H IN A+2,8X,5H IN A/)
    4 FORMAT(2X,I2,2X,2(5X,I2),3X,2(F10.5,5X))
C
      WRITE(6,1)
      DO 101 I=1,NVIB
      F2X=EXP(2.0D+00*CONV*DABS(FREQ(I)))
      COTH=(F2X+ONE)/(F2X-ONE)
      DEL(I)=(CONST/FREQ(I))*COTH
  101 WRITE(6,2) I,DEL(I)
      WRITE(6,3)
      IAM=0
      DO 103 I=1,NAT1
      IR=I+1
      DO 103 J=IR,NATOM
      IAM=IAM+1
      IJ=I+IOFF(J)
      R0=R(IJ)
      XR=X(I)-X(J)
      YR=Y(I)-Y(J)
      ZR=Z(I)-Z(J)
      IX=3*I-2
      IY=3*I-1
      IZ=3*I
      JX=3*J-2
      JY=3*J-1
      JZ=3*J
      SAMPXY=A00
      DO 102 K=1,NVIB
      SAMPXY=SAMPXY+DEL(K)*((XR/R0)*(ELX(IX,K)-ELX(JX,K))+
     1 (YR/R0)*(ELX(IY,K)-ELX(JY,K))+(ZR/R0)*(ELX(IZ,K)-ELX(JZ,K)))**2
  102 CONTINUE
      RMSXY=DSQRT(SAMPXY)
      WRITE(6,4) IAM,I,J,SAMPXY,RMSXY
  103 CONTINUE
C
      RETURN
      END
      SUBROUTINE AMPGF(B,ELIN,ELX,EE,N3R)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(N3R,N3R),ELIN(NVIB,NVIB),ELX(N3N,N3N),EE(N3N,N3N)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB104/PARA,WAVE,CONST,CYCL,CONV
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB202/R(1275)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB206/SQM(150),DEL(150),FREQ(150)
      DATA A00,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' B MATRIX'/)
    2 FORMAT(//,2X,' L INVERSE MATRIX'/)
    3 FORMAT(//,2X,' M(-1)*B(TR) MATRIX'/)
    4 FORMAT(//,2X,' LX MATRIX'/)
    5 FORMAT(//,2X,' MEAN SQUARE AMPLITUDES OF NORMAL VIBRATIONS'/
     1 2X,4H NO.,5X,11H DEL IN A+2/)
    6 FORMAT(2X,I2,5X,F12.5)
    7 FORMAT(//,2X,' MEAN SQUARE AND ROOT MEAN SQUARE AMPLITUDES (AT 298
     1.15 K)'/
     2 2X,4H NO.,5X,2H X,5X,2H Y,5X,8H L2(X-Y),7X,7H L(X-Y)/
     3 25X,7H IN A+2,8X,5H IN A/)
    8 FORMAT(2X,I2,2X,2(5X,I2),3X,2(F10.5,5X))
C
C   THE CALCULATION OF THE LX MATRIX
C   LX = M(-1)*B(TR)*LIN(TR)
C
C*    WRITE(6,1)
C*    CALL MATOUT(B,N3R,N3R,N3N,N3N,6)
C*    WRITE(6,2)
C*    CALL MATOUT(ELIN,NVIB,NVIB,NVIB,NVIB,6)
C
      DO 102 I=1,N3N
      II=I/3
      IF(I.GT.3*II) II=II+1
      FACT=ONE/W(II)
      DO 101 J=1,NVIB
      EE(I,J)=B(J,I)*FACT
  101 CONTINUE
  102 CONTINUE
C*    WRITE(6,3)
C*    CALL MATOUT(EE,N3N,N3N,N3N,NVIB,6)
      DO 104 I=1,N3N
      DO 104 J=1,NVIB
      VALU=A00
      DO 103 K=1,NVIB
  103 VALU=VALU+EE(I,K)*ELIN(J,K)
      ELX(I,J)=VALU
  104 CONTINUE
      WRITE(6,4)
      CALL FRQOUT(ELX,FREQ,N3N,N3N,N3N,NVIB,6)
C
      WRITE(6,5)
      DO 105 I=1,NVIB
      F2X=EXP(2.0D+00*CONV*DABS(FREQ(I)))
      COTH=(F2X+ONE)/(F2X-ONE)
      DEL(I)=(CONST/FREQ(I))*COTH
  105 WRITE(6,6) I,DEL(I)
      WRITE(6,7)
      IAM=0
      DO 107 I=1,NAT1
      IR=I+1
      DO 107 J=IR,NATOM
      IAM=IAM+1
      IJ=I+IOFF(J)
      R0=R(IJ)
      XR=X(I)-X(J)
      YR=Y(I)-Y(J)
      ZR=Z(I)-Z(J)
      IX=3*I-2
      IY=3*I-1
      IZ=3*I
      JX=3*J-2
      JY=3*J-1
      JZ=3*J
      SAMPXY=A00
      DO 106 K=1,NVIB
      SAMPXY=SAMPXY+DEL(K)*((XR/R0)*(ELX(IX,K)-ELX(JX,K))+
     1 (YR/R0)*(ELX(IY,K)-ELX(JY,K))+(ZR/R0)*(ELX(IZ,K)-ELX(JZ,K)))**2
  106 CONTINUE
      RMSXY=DSQRT(SAMPXY)
      WRITE(6,8) IAM,I,J,SAMPXY,RMSXY
  107 CONTINUE
C
      RETURN
      END
      SUBROUTINE BENDNG(B,EX,EY,EZ,NXYZ,NNE)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NXYZ,NXYZ),EX(NNE,NNE),EY(NNE,NNE),EZ(NNE,NNE)
      COMMON/VIB103/NST,NBND,NLIB,NDEF,NTORS
      COMMON/VIB202/R(1275)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB302/KA(150),LA(150),MA(150)
      COMMON/VIB306/AGLB(150),AGLT(150),AGLO(150),AGLR(150)
C
C   THE CALCULATION OF S VECTORS FOR ANGLE BENDINGS
      DO 101 I=1,NBND
      II=I+NST
      K=KA(I)
      L=LA(I)
      M=MA(I)
      KX=3*K-2
      KY=3*K-1
      KZ=3*K
      LX=3*L-2
      LY=3*L-1
      LZ=3*L
      MX=3*M-2
      MY=3*M-1
      MZ=3*M
      AG=AGLB(I)
      LK=IOFF(MAX0(L,K))+MIN0(L,K)
      LM=IOFF(MAX0(L,M))+MIN0(L,M)
      B(II,KX)=(DCOS(AG)*EX(L,K)-EX(L,M))/(R(LK)*DSIN(AG))
      B(II,KY)=(DCOS(AG)*EY(L,K)-EY(L,M))/(R(LK)*DSIN(AG))
      B(II,KZ)=(DCOS(AG)*EZ(L,K)-EZ(L,M))/(R(LK)*DSIN(AG))
      B(II,MX)=(DCOS(AG)*EX(L,M)-EX(L,K))/(R(LM)*DSIN(AG))
      B(II,MY)=(DCOS(AG)*EY(L,M)-EY(L,K))/(R(LM)*DSIN(AG))
      B(II,MZ)=(DCOS(AG)*EZ(L,M)-EZ(L,K))/(R(LM)*DSIN(AG))
      B(II,LX)=-B(II,KX)-B(II,MX)
      B(II,LY)=-B(II,KY)-B(II,MY)
  101 B(II,LZ)=-B(II,KZ)-B(II,MZ)
      RETURN
      END
      SUBROUTINE DEFORM(B,EX,EY,EZ,NXYZ,NNE)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NXYZ,NXYZ),EX(NNE,NNE),EY(NNE,NNE),EZ(NNE,NNE)
      COMMON/VIB103/NST,NBND,NLIB,NDEF,NTORS
      COMMON/VIB202/R(1275)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB304/KD(150),LD(150),MD(150),ND(150)
C
C   THE CALCULATION OF S VECTORS FOR OUT OF PLANE DEFORMATIONS
      DO 101 I=1,NDEF
      II=I+NST+NBND+NLIB
      K=KD(I)
      L=LD(I)
      M=MD(I)
      N=ND(I)
      KX=3*K-2
      KY=3*K-1
      KZ=3*K
      LX=3*L-2
      LY=3*L-1
      LZ=3*L
      MX=3*M-2
      MY=3*M-1
      MZ=3*M
      NX=3*N-2
      NY=3*N-1
      NZ=3*N
      NK=IOFF(MAX0(N,K))+MIN0(N,K)
      NL=IOFF(MAX0(N,L))+MIN0(N,L)
      NM=IOFF(MAX0(N,M))+MIN0(N,M)
      CEXLM=EY(N,L)*EZ(N,M)-EZ(N,L)*EY(N,M)
      CEYLM=EZ(N,L)*EX(N,M)-EX(N,L)*EZ(N,M)
      CEZLM=EX(N,L)*EY(N,M)-EY(N,L)*EX(N,M)
      CEXMK=EY(N,M)*EZ(N,K)-EZ(N,M)*EY(N,K)
      CEYMK=EZ(N,M)*EX(N,K)-EX(N,M)*EZ(N,K)
      CEZMK=EX(N,M)*EY(N,K)-EY(N,M)*EX(N,K)
      CEXKL=EY(N,K)*EZ(N,L)-EZ(N,K)*EY(N,L)
      CEYKL=EZ(N,K)*EX(N,L)-EX(N,K)*EZ(N,L)
      CEZKL=EX(N,K)*EY(N,L)-EY(N,K)*EX(N,L)
      B(II,KX)=CEXLM/R(NK)
      B(II,KY)=CEYLM/R(NK)
      B(II,KZ)=CEZLM/R(NK)
      B(II,LX)=CEXMK/R(NL)
      B(II,LY)=CEYMK/R(NL)
      B(II,LZ)=CEZMK/R(NL)
      B(II,MX)=CEXKL/R(NM)
      B(II,MY)=CEYKL/R(NM)
      B(II,MZ)=CEZKL/R(NM)
      B(II,NX)=-B(II,KX)-B(II,LX)-B(II,MX)
      B(II,NY)=-B(II,KY)-B(II,LY)-B(II,MY)
  101 B(II,NZ)=-B(II,KZ)-B(II,LZ)-B(II,MZ)
      RETURN
      END
      SUBROUTINE DIST(IPRNT)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB102/LDIM,MDIM,NDIM
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB202/R(1275)
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' INTERATOMIC DISTANCE MATRIX'/)
C
      IJ=0
      DO 101 I=1,NATOM
      DO 101 J=1,I
      IJ=IJ+1
      R(IJ)=A00
      IF(I.EQ.J) GO TO 101
      XD=X(I)-X(J)
      YD=Y(I)-Y(J)
      ZD=Z(I)-Z(J)
      R(IJ)=DSQRT(XD*XD+YD*YD+ZD*ZD)
  101 CONTINUE
      IF(IPRNT.EQ.0) GO TO 201
      WRITE(6,1)
      CALL PRINT(R,LDIM,NATOM,6)
  201 RETURN
      END
      SUBROUTINE FCONST(FX,FP,FM,FF,AA,NABC,IFORCE)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION FX(NABC,NABC),FP(NABC,NABC),FM(NABC,NABC)
      DIMENSION FF(NABC,NABC),AA(NABC,NABC)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB106/NSTORE,NPLUS
      COMMON/VIB203/ENGX(50),ENGY(50),ENGZ(50)
      DATA A00,TWO / 0.0D+00 , 2.0D+00 /
      DATA HE,A0 / 4.359813653D+00 , 0.52917706D+00 /
      DATA ITAP15 / 15 /
    1 FORMAT(F10.7)
    2 FORMAT(2I5)
    3 FORMAT(3F20.10)
    4 FORMAT(20X,3F20.14)
    5 FORMAT(//,2X,' FP MATRIX'/)
    6 FORMAT(//,2X,' FM MATRIX'/)
    7 FORMAT(//,2X,' FX MATRIX (IN A.U.)'/)
    8 FORMAT(//,2X,' AVERAGED FX MATRIX (UPPER TRI. = FX, LOWER TRI. = D
     1IFFERENCE)'/)
    9 FORMAT(3F20.10)
   10 FORMAT(//,2X,' FX MATRIX (IN HARTREE/BOHR+2)'/)
   11 FORMAT(//,2X,' FX MATRIX (IN MDYN/A)'/)
C
C   FUNIT IS IN MDYN/A
      FUNIT=HE/(A0*A0)
C
      GO TO (301,302,303),IFORCE
C
C   READ IN ANALYTICAL GRADIENT SETS
C***INPUT DELX***
  301 CONTINUE
      DO 101 I=1,N3N
      DO 101 J=1,N3N
      FP(I,J)=A00
      FM(I,J)=A00
  101 CONTINUE
      READ(5,1) DELX
      REWIND ITAP15
      READ(ITAP15,2) NNATOM,NNSTOR
      DO 104 ICASE=1,NPLUS
      IF(NSTORE.EQ.0) GO TO 201
      READ(ITAP15,2) JCASE
  201 CONTINUE
      IF(ICASE.GT.N3N) GO TO 205
      II=ICASE
      DO 102 J=1,NATOM
      JX=3*(J-1)+1
      JY=JX+1
      JZ=JX+2
      IF(ICASE.GT.NSTORE) GO TO 202
      READ(ITAP15,3) FP(II,JX),FP(II,JY),FP(II,JZ)
      GO TO 102
  202 CONTINUE
      FP(II,JX)=ENGX(J)
      FP(II,JY)=ENGY(J)
      FP(II,JZ)=ENGZ(J)
  102 CONTINUE
      IF(ICASE.LE.N3N) GO TO 104
  205 II=ICASE-N3N
      DO 103 J=1,NATOM
      JX=3*(J-1)+1
      JY=JX+1
      JZ=JX+2
      IF(ICASE.GT.NSTORE) GO TO 206
      READ(ITAP15,3) FM(II,JX),FM(II,JY),FM(II,JZ)
      GO TO 103
  206 CONTINUE
      FM(II,JX)=ENGX(J)
      FM(II,JY)=ENGY(J)
      FM(II,JZ)=ENGZ(J)
  103 CONTINUE
  104 CONTINUE
      WRITE(6,5)
      CALL MATOUT(FP,NABC,NABC,N3N,N3N,6)
      WRITE(6,6)
      CALL MATOUT(FM,NABC,NABC,N3N,N3N,6)
      IF(NPLUS.LT.2*N3N) GO TO 210
C
C   CALCULATE FORCE CONSTANT MATRIX
      FACT=DELX*TWO
      IF(NPLUS.EQ.N3N) FACT=DELX
      DO 105 I=1,N3N
      DO 105 J=1,N3N
      AA(I,J)=(FP(I,J)-FM(I,J))/FACT
  105 CONTINUE
      WRITE(6,7)
      CALL MATOUT(AA,NABC,NABC,N3N,N3N,6)
      DO 106 I=1,N3N
      DO 106 J=I,N3N
      FF(I,J)=(AA(I,J)+AA(J,I))/TWO
      IF(I.EQ.J) GO TO 106
      FF(J,I)=(AA(I,J)-AA(J,I))/TWO
  106 CONTINUE
      WRITE(6,8)
      CALL MATOUT(FF,NABC,NABC,N3N,N3N,6)
      DO 107 I=1,N3N
      DO 107 J=I,N3N
      FX(I,J)=FF(I,J)
      IF(I.EQ.J) GO TO 107
      FX(J,I)=FF(I,J)
  107 CONTINUE
C
C   STORE GRADIENT SETS IN TAPE15
  210 CONTINUE
      REWIND ITAP15
      WRITE(ITAP15,2) NATOM,NPLUS
      DO 110 ICASE=1,NPLUS
      WRITE(ITAP15,2) ICASE
      IF(ICASE.GT.N3N) GO TO 215
      II=ICASE
      DO 108 J=1,NATOM
      JX=3*(J-1)+1
      JY=JX+1
      JZ=JX+2
      WRITE(ITAP15,3) FP(II,JX),FP(II,JY),FP(II,JZ)
  108 CONTINUE
      IF(ICASE.LE.N3N) GO TO 110
  215 CONTINUE
      II=ICASE-N3N
      DO 109 J=1,NATOM
      JX=3*(J-1)+1
      JY=JX+1
      JZ=JX+2
      WRITE(ITAP15,3) FM(II,JX),FM(II,JY),FM(II,JZ)
  109 CONTINUE
  110 CONTINUE
      REWIND ITAP15
      IF(NPLUS.GE.2*N3N) GO TO 305
      RETURN
C
C   READ IN FORCE CONSTANTS FROM TAPE5
  302 CONTINUE
      READ(5,9) ((FX(I,J),J=1,N3N),I=1,N3N)
      GO TO 305
C
C   READ IN ANALYTICAL SECOND DERIVATIVES
  303 CONTINUE
      REWIND ITAP15
      READ(ITAP15,2) NNATOM,NNSTOR
      READ(ITAP15,9) ((FX(I,J),J=1,N3N),I=1,N3N)
      REWIND ITAP15
C
  305 CONTINUE
      WRITE(6,10)
      CALL MATOUT(FX,NABC,NABC,N3N,N3N,6)
      DO 115 I=1,N3N
      DO 115 J=1,N3N
      FX(I,J)=FX(I,J)*FUNIT
  115 CONTINUE
      WRITE(6,11)
      CALL MATOUT(FX,NABC,NABC,N3N,N3N,6)
C
      RETURN
      END
      SUBROUTINE GFMAT(FX,F,G,B,BIN,EE,PIVOT,INDEX,NABC,NXYZ,NPQR,
     1                 ISOMOL)
      IMPLICIT REAL*8 (A-H,O-Z)
      LOGICAL ISOMOL
      DIMENSION FX(NABC,NABC),F(NABC,NABC),G(NPQR),B(NXYZ,NXYZ)
      DIMENSION BIN(NABC,NABC),EE(NABC,NABC),PIVOT(NABC),INDEX(NABC)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB107/NIC,NINT,ISYM,NSYM
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB205/IOFF(150)
      DATA A00,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' B MATRIX'/)
    2 FORMAT(//,2X,' DETERM OF B MATRIX = ',D15.7/)
    3 FORMAT(//,2X,' B INVERSE MATRIX'/)
    4 FORMAT(//,2X,' B * B(-1) = E'/)
    5 FORMAT(//,2X,' G MATRIX'/)
    6 FORMAT(//,2X,' F MATRIX'/)
C
C   FORM INVERSE B MATRIX
      DO 101 I=1,N3N
      DO 101 J=1,N3N
      BIN(I,J)=B(I,J)
  101 CONTINUE
C     WRITE(6,1)
C     CALL MATOUT(BIN,NABC,NABC,N3N,N3N,6)
      CALL MATINV(BIN,EE,PIVOT,INDEX,N3N,N3N,DETERM,NABC)
      WRITE(6,2) DETERM
      WRITE(6,3)
      CALL MATOUT(BIN,NABC,NABC,N3N,N3N,6)
      CALL MTXMPY(BIN,NABC,B,NXYZ,EE,NABC,EE,NABC,N3N,1)
      WRITE(6,4)
      CALL MATOUT(EE,NABC,NABC,N3N,N3N,6)
C
C   THE CALCULATION OF G MATRIX
      IJ=0
      DO 103 I=1,NIC
      DO 103 J=1,I
      IJ=IJ+1
      VALU=A00
      DO 102 K=1,NATOM
      KX=3*K-2
      KY=3*K-1
      KZ=3*K
      VALU=VALU+(B(I,KX)*B(J,KX)+B(I,KY)*B(J,KY)+B(I,KZ)*B(J,KZ))
     1 *(ONE/W(K))
  102 CONTINUE
      G(IJ)=VALU
  103 CONTINUE
      WRITE(6,5)
      CALL PRINT(G,NPQR,NIC,6)
C
C   THE CALCULATION OF F MATRIX FROM FX MATRIX
      IF(ISOMOL) GO TO 201
      CALL MTXMPY(BIN,NABC,FX,NABC,F,NABC,EE,NABC,N3N,5)
  201 CONTINUE
      WRITE(6,6)
      CALL MATOUT(F,NABC,NABC,N3N,N3N,6)
C
      RETURN
      END
      SUBROUTINE IRINTR(BIN,ELL)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION BIN(N3N,N3N),ELL(NVIB,NVIB)
      DIMENSION DIPD(3,150),DIPDD(3,150)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB204/DIPDR(3,150),POLDR(6,150)
      COMMON/VIB206/SQM(150),DEL(150),FREQ(150)
      DATA CONST1,CONST2 / 4.225471775D+00 , 1.835099075D+00 /
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' DIPOLE MOMENT DERIVATIVES W.R.T. INTERNAL COORDINAT
     1E'/)
    2 FORMAT(//,2X,' DIPOLE MOMENT DERIVATIVES W.R.T. NORMAL COORDINATES
     1 (IN DEBYE.AMU(-1/2).A-1)'/)
    3 FORMAT(//,2X,' NORMAL FREQUENCIES AND IR INTENSITIES'/
     1  13X,' IN CM-1',9X,' DEBYE+2.AMU-1.A-2',6X,' KM.MOLE-1',
     2  9X,' CM.MOLE-1*D+6',5X,' L.CM-2.MOLE-1*D+3'/)
    4 FORMAT(2X,I5,5(F15.6,6X))
C
C   TRANSFORM DIPOLE DERIVATIVES FROM CARTESIAN TO INTERNAL COORDINATE
      DO 102 I=1,3
      DO 102 J=1,NVIB
      VALU=A00
      DO 101 K=1,N3N
  101 VALU=VALU+DIPDR(I,K)*BIN(K,J)
      DIPDD(I,J)=VALU
  102 CONTINUE
      WRITE(6,1)
      CALL MATOUT(DIPDD,3,150,3,NVIB,6)
C
C   TRANSFORM DIPOLE DERIVATIVES FROM INTERNAL TO NORMAL COORDINATE
      DO 104 I=1,3
      DO 104 J=1,NVIB
      VALU=A00
      DO 103 K=1,NVIB
  103 VALU=VALU+DIPDD(I,K)*ELL(K,J)
      DIPD(I,J)=VALU
  104 CONTINUE
      WRITE(6,2)
      CALL FRQOUT(DIPD,FREQ,3,150,3,NVIB,6)
C
      WRITE(6,3)
      DO 106 I=1,NVIB
      VALU1=A00
      DO 105 J=1,3
  105 VALU1=VALU1+DIPD(J,I)*DIPD(J,I)
      VALU2=VALU1*CONST1*10.0D+00
      VALU3=VALU1*CONST1
      VALU4=VALU1*CONST2
      WRITE(6,4) I,FREQ(I),VALU1,VALU2,VALU3,VALU4
  106 CONTINUE
C
      RETURN
      END
      SUBROUTINE IRINTX(ELX,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ELX(NABC,NABC)
      DIMENSION DIPD(3,150)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB204/DIPDR(3,150),POLDR(6,150)
      COMMON/VIB206/SQM(150),DEL(150),FREQ(150)
      DATA CONST1,CONST2 / 4.225471775D+00 , 1.835099075D+00 /
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' DIPOLE MOMENT DERIVATIVES W.R.T. NORMAL COORDINATES
     1 (IN DEBYE.AMU(-1/2).A-1)'/)
    2 FORMAT(//,2X,' NORMAL FREQUENCIES AND IR INTENSITIES'/
     1  13X,' IN CM-1',9X,' DEBYE+2.AMU-1.A-2',6X,' KM.MOLE-1',
     2  9X,' CM.MOLE-1*D+6',5X,' L.CM-2.MOLE-1*D+3'/)
    3 FORMAT(2X,I5,5(F15.6,6X))
C
      DO 102 I=1,3
      DO 102 J=1,N3N
      VALU=A00
      DO 101 K=1,N3N
  101 VALU=VALU+DIPDR(I,K)*ELX(K,J)
      DIPD(I,J)=VALU
  102 CONTINUE
      WRITE(6,1)
      CALL FRQOUT(DIPD,FREQ,3,150,3,N3N,6)
C
      WRITE(6,2)
      DO 104 I=1,N3N
      VALU1=A00
      DO 103 J=1,3
  103 VALU1=VALU1+DIPD(J,I)*DIPD(J,I)
      VALU2=VALU1*CONST1*10.0D+00
      VALU3=VALU1*CONST1
      VALU4=VALU1*CONST2
      WRITE(6,3) I,FREQ(I),VALU1,VALU2,VALU3,VALU4
  104 CONTINUE
C
      RETURN
      END
      SUBROUTINE LINBND(B,EX,EY,EZ,NXYZ,NNE)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NXYZ,NXYZ),EX(NNE,NNE),EY(NNE,NNE),EZ(NNE,NNE)
      COMMON/VIB103/NST,NBND,NLIB,NDEF,NTORS
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB202/R(1275)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB303/KB(150),LB(150),MB(150)
      DATA PI / 3.1415926536D+00 /
      DATA ONE / 1.0D+00 /
C
      NLHF=NLIB/2
C   N IS A DUMMY ATOM
      DO 101 I=1,NLHF
      I1=2*I-1+NST+NBND
      I2=I1+1
      K=KB(I)
      L=LB(I)
      M=MB(I)
      KX=3*K-2
      KY=3*K-1
      KZ=3*K
      LX=3*L-2
      LY=3*L-1
      LZ=3*L
      MX=3*M-2
      MY=3*M-1
      MZ=3*M
      XN=X(M)+ONE
      YN=Y(M)+ONE
      ZN=Z(M)+ONE
      RMN=DSQRT(3.0D+00)
      ML=IOFF(MAX0(M,L))+MIN0(M,L)
      RML=R(ML)
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      RNL=DSQRT((XN-X(L))**2+(YN-Y(L))**2+(ZN-Z(L))**2)
      SQCOS=(RNL**2-RMN**2-RML**2)/(2.0D+00*RML*RMN)
      AGM=PI-DACOS(SQCOS)
      EXMN=ONE/RMN
      EYMN=ONE/RMN
      EZMN=ONE/RMN
      B(I1,KX)=(DCOS(AGM)*EX(M,L)-EXMN)/(R(KL)*DSIN(AGM))
      B(I1,KY)=(DCOS(AGM)*EY(M,L)-EYMN)/(R(KL)*DSIN(AGM))
      B(I1,KZ)=(DCOS(AGM)*EZ(M,L)-EZMN)/(R(KL)*DSIN(AGM))
      B(I1,MX)=(DCOS(AGM)*EX(M,L)-EXMN)/(R(ML)*DSIN(AGM))
      B(I1,MY)=(DCOS(AGM)*EY(M,L)-EYMN)/(R(ML)*DSIN(AGM))
      B(I1,MZ)=(DCOS(AGM)*EZ(M,L)-EZMN)/(R(ML)*DSIN(AGM))
      B(I1,LX)=-B(I1,KX)-B(I1,MX)
      B(I1,LY)=-B(I1,KY)-B(I1,MY)
      B(I1,LZ)=-B(I1,KZ)-B(I1,MZ)
      B(I2,KX)=-(EYMN*EZ(M,L)-EZMN*EY(M,L))/(R(KL)*DSIN(AGM))
      B(I2,KY)=-(EZMN*EX(M,L)-EXMN*EZ(M,L))/(R(KL)*DSIN(AGM))
      B(I2,KZ)=-(EXMN*EY(M,L)-EYMN*EX(M,L))/(R(KL)*DSIN(AGM))
      B(I2,MX)=-(EYMN*EZ(M,L)-EZMN*EY(M,L))/(R(ML)*DSIN(AGM))
      B(I2,MY)=-(EZMN*EX(M,L)-EXMN*EZ(M,L))/(R(ML)*DSIN(AGM))
      B(I2,MZ)=-(EXMN*EY(M,L)-EYMN*EX(M,L))/(R(ML)*DSIN(AGM))
      B(I2,LX)=-B(I2,KX)-B(I2,MX)
      B(I2,LY)=-B(I2,KY)-B(I2,MY)
      B(I2,LZ)=-B(I2,KZ)-B(I2,MZ)
  101 CONTINUE
      RETURN
      END
      SUBROUTINE MOMENT
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION T(6),PR(3),EG(3,3),FV1(3),FV2(3)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB104/PARA,WAVE,CONST,CYCL,CONV
      COMMON/VIB105/AIXX,AIYY,AIZZ,SUMW,ROTCM(3)
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,2X,' CENTER OF MASS'/8X,' CMX',11X,' CMY',11X,' CMZ'//
     1 2X,3(5X,F10.7)/)
    2 FORMAT(//,2X,' CARTESIAN COORDINATES W.R.T. CENTER OF MASS'/
     1 5X,4H NO.,11X,2H X,13X,2H Y,13X,2H Z,13X,2H W/)
    3 FORMAT(2X,I7,5X,4F15.7)
    4 FORMAT(//,2X,' INERTIA TENSOR'/)
    5 FORMAT(//,2X,' PRINCIPAL MOMENTS OF INERTIA'/
     1 2X,4H NO.,7X,11H IN AMU.A+2,7X,10H IN G.CM+2,8X,
     2 8H IN CM-1,10X,7H IN MHZ/31X,8H (*D+39)/)
    6 FORMAT(2X,I2,3X,4D18.5)
    7 FORMAT(//,2X,' EIGENVECTOR OF INERTIA TENSOR'/)
C
C   THE CALCULATION OF CENTER OF MASS
      SUMW=A00
      SUMWX=A00
      SUMWY=A00
      SUMWZ=A00
      DO 101 I=1,NATOM
      SUMW=SUMW+W(I)
      SUMWX=SUMWX+W(I)*X(I)
      SUMWY=SUMWY+W(I)*Y(I)
      SUMWZ=SUMWZ+W(I)*Z(I)
  101 CONTINUE
      CMX=SUMWX/SUMW
      CMY=SUMWY/SUMW
      CMZ=SUMWZ/SUMW
      WRITE(6,1) CMX,CMY,CMZ
C   THE CARTESIAN COORDINATES W.R.T. CENTER OF MASS
      WRITE(6,2)
      DO 102 I=1,NATOM
      X(I)=X(I)-CMX
      Y(I)=Y(I)-CMY
      Z(I)=Z(I)-CMZ
      WRITE(6,3) I,X(I),Y(I),Z(I),W(I)
  102 CONTINUE
C
C   THE CALCULATION OF INERTIA TENSOR
      DO 103 I=1,6
  103 T(I)=A00
      DO 104 I=1,NATOM
      T(1)=T(1)+W(I)*(Y(I)**2+Z(I)**2)
      T(3)=T(3)+W(I)*(Z(I)**2+X(I)**2)
      T(6)=T(6)+W(I)*(X(I)**2+Y(I)**2)
      T(2)=T(2)-W(I)*X(I)*Y(I)
      T(4)=T(4)-W(I)*Z(I)*X(I)
      T(5)=T(5)-W(I)*Y(I)*Z(I)
  104 CONTINUE
      AIXX=T(1)
      AIYY=T(3)
      AIZZ=T(6)
      ILIN=0
      IF(AIXX.LE.1.0D-2) ILIN=1
      IF(AIYY.LE.1.0D-2) ILIN=1
      IF(AIZZ.LE.1.0D-2) ILIN=1
      WRITE(6,4)
      CALL PRINT(T,6,3,6)
C
C   THE CALCULATION OF PRINCIPAL MOMENTS OF INERTIA
      IF(ILIN.NE.0) GO TO 201
      CALL RSP(3,3,6,T,PR,1,EG,FV1,FV2)
      WRITE(6,5)
      DO 105 I=1,3
      PA=PR(I)*PARA
      PB=CONST/PR(I)
      PC=CYCL/PR(I)
      ROTCM(I)=PB
      WRITE(6,6) I,PR(I),PA,PB,PC
  105 CONTINUE
      WRITE(6,7)
      CALL MATOUT(EG,3,3,3,3,6)
      GO TO 205
C
C   DIATOMIC AND LINEAR POLYATOMIC MOLECULES
  201 WRITE(6,5)
      III=0
      DO 106 I=1,3
      II=I*(I+1)/2
      PA=A00
      PB=A00
      PC=A00
      IF(T(II).LE.1.0D-2) GO TO 202
      PA=T(II)*PARA
      PB=CONST/T(II)
      PC=CYCL/T(II)
      III=III+1
      ROTCM(III)=PB
      GO TO 203
  202 T(II)=A00
  203 WRITE(6,6) I,T(II),PA,PB,PC
  106 CONTINUE
  205 RETURN
      END
      SUBROUTINE MTXMPY(A,NAD,B,NBD,C,NCD,D,NDD,N,IMPY)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION A(NAD,NAD),B(NBD,NBD),C(NCD,NCD),D(NDD,NDD)
      DATA A00 / 0.0D+00 /
C
      DO 101 I=1,NCD
      DO 101 J=1,NCD
  101 C(I,J)=A00
      GO TO (201,202,203,204,205,206),IMPY
C     C=A*B
  201 DO 102 I=1,N
      DO 102 J=1,N
      DO 102 K=1,N
  102 C(I,J)=C(I,J)+A(I,K)*B(K,J)
      RETURN
C     C=TA*B
  202 DO 103 I=1,N
      DO 103 J=1,N
      DO 103 K=1,N
  103 C(I,J)=C(I,J)+A(K,I)*B(K,J)
      RETURN
C     C=A*TB
  203 DO 104 I=1,N
      DO 104 J=1,N
      DO 104 K=1,N
  104 C(I,J)=C(I,J)+A(I,K)*B(J,K)
      RETURN
C     C=TA*TB
  204 DO 105 I=1,N
      DO 105 J=1,N
      DO 105 K=1,N
  105 C(I,J)=C(I,J)+A(K,I)*B(J,K)
      RETURN
C     C=TA*B*A
  205 DO 106 I=1,N
      DO 106 J=1,N
      D(I,J)=A00
      DO 106 K=1,N
  106 D(I,J)=D(I,J)+A(K,I)*B(K,J)
      DO 107 I=1,N
      DO 107 J=1,N
      DO 107 K=1,N
  107 C(I,J)=C(I,J)+D(I,K)*A(K,J)
      RETURN
C     C=A*B*TA
  206 DO 108 I=1,N
      DO 108 J=1,N
      D(I,J)=A00
      DO 108 K=1,N
  108 D(I,J)=D(I,J)+A(I,K)*B(K,J)
      DO 109 I=1,N
      DO 109 J=1,N
      DO 109 K=1,N
  109 C(I,J)=C(I,J)+D(I,K)*A(J,K)
      RETURN
      END
cets The following is called by a C program which handles dynamic
cets allocation of memory.
      subroutine fentry(cc,ia,maxcor)
cets  PROGRAM NORMCO
C     The NORmal COordinate analysis program
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
C* BY:  BRADLEY DELEEUW                                               *
C* DATE:  JUNE 27, 1988                                               *
C* REASON:  UPDATE ATOMIC MASSES OF PRINCIPAL ISOTOPES.  ELEMENTS     *
C*        19-36 ADDED.  ELEMENT 11 CHANGED FROM 22.9898 TO 22.98977.  *
C*        ELEMENT 13 CHANGED FROM 26.98153 TO 26.98154.  ELEMENT 17   *
C*        CHANGED FROM 34.95885 TO 34.96885.  ELEMENT 18 CHANGED      *
C*        FROM 39.948 TO 39.96238.                                    *
C* DATA SOURCE:  J. CHEM. PHYS. REF. DATA, VOL.13, NO.3, 1984, p.309  *
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         search:  c3-18-88  *
C*  DATE:  MARCH  18,  1988                                           *
C*  REASON: DECREASE CORE TO RUN IN 7MB ON 9370                       *
C**********************************************************************
C*  LAST UPDATED ON DECEMBER 28, 1987 BY YUKIO YAMAGUCHI              *
C**********************************************************************
      IMPLICIT REAL*8 (A-H,O-Z)
c3-18-88  DIMENSION CC(360000),IA(1)
cets  DIMENSION CC(360000),IA(1)
      dimension cc(maxcor),ia(intowp(maxcor))
      DIMENSION I30(200),COORD(3,50),GRAD(3,50),WISO(20,50)
C   THE NORMAL COORDINATE ANALYSIS
C   FX---CARTESIAN COORDINATE SYSTEM
C   GF---INTERNAL COORDINATE SYSTEM
C   THIS PROGRAM IS ABEL TO TREAT MOLECULES WITH '50' ATOMS
      LOGICAL CALEND,GEOINP,ISOMOL
      DIMENSION ATM(36)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB102/LDIM,MDIM,NDIM
      COMMON/VIB103/NST,NBND,NLIB,NDEF,NTORS
      COMMON/VIB104/PARA,WAVE,CONST,CYCL,CONV
      COMMON/VIB105/AIXX,AIYY,AIZZ,SUMW,ROTCM(3)
      COMMON/VIB106/NSTORE,NPLUS
      COMMON/VIB107/NIC,NINT,ISYM,NSYM
      COMMON/VIB108/IZVLIM,IPLOT
      COMMON/VIB109/ITHERM,IQELEC
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB202/R(1275)
      COMMON/VIB203/ENGX(50),ENGY(50),ENGZ(50)
      COMMON/VIB204/DIPDR(3,150),POLDR(6,150)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB206/SQM(150),ROOT(150),FREQ(150)
      COMMON/VIB207/VZERO
      COMMON/VIB301/KR(150),LR(150)
      COMMON/VIB302/KA(150),LA(150),MA(150)
      COMMON/VIB303/KB(150),LB(150),MB(150)
      COMMON/VIB304/KD(150),LD(150),MD(150),ND(150)
      COMMON/VIB305/KT(150),LT(150),MT(150),NT(150)
      COMMON/VIB306/AGLB(150),AGLT(150),AGLO(150),AGLR(150)
      COMMON/VIB307/AGLL(150),AGLD(150),AGLE(150),AGLF(150)
      COMMON/VIB308/IIS(150),JJS(150),KKS(150),LLS(150)
cets  EQUIVALENCE (CC,IA)
      DATA ATM / 1.007825D+00 , 4.00260D+00 , 7.01600D+00 ,
     *           9.01218D+00  , 11.00931D+00 , 12.00000D+00 ,
     *           14.00307D+00 , 15.99491D+00 , 18.99840D+00 ,
     *           19.99244D+00 , 22.98977D+00 , 23.98504D+00 ,
     *           26.98154D+00 , 27.97693D+00 , 30.97376D+00 ,
     *           31.97207D+00 , 34.96885D+00 , 39.96238D+00 ,
     *           38.96371D+00 , 39.96259D+00 , 44.95591D+00 ,
     *           47.94795D+00 , 50.94396D+00 , 51.94051D+00 ,
     *           54.93805D+00 , 55.93494D+00 , 58.93320D+00 ,
     *           57.93535D+00 , 62.92960D+00 , 63.92915D+00 ,
     *           68.92558D+00 , 73.92118D+00 , 74.92160D+00 ,
     *           79.91652D+00 , 78.91834D+00 , 83.91151D+00   /
      DATA PH,BK,AVN / 6.626176D+00 , 1.380662D+00 , 6.022045D+00 /
      DATA A0,HE,EV / 0.52917706D+00 , 4.359813653D+00 , 1.6021892D+00 /
      DATA CL,TEMP / 2.99792458D+00 , 298.15D+00 /
      DATA PI,ALN / 3.1415926536D+00 , 2.3025850930D+00 /
      DATA NRED / 10 /
      DATA ITAP15,ITAP17,ITAP18 / 15 , 17 , 18 /
    1 FORMAT(//,2X,' THE NORMAL COORDINATE ANALYSIS PROGRAM'/)
    2 FORMAT(14I5)
    3 FORMAT(//,2X,' PARAMETERS FOR THE CALCULATION'//
     * 2X,' IFXGF  = ',I5/
     * 2X,' ISOTOP = ',I5/
     * 2X,' NVIB   = ',I5/
     * 2X,' IFORCE = ',I5/
     * 2X,' IDIPOL = ',I5/
     * 2X,' IPOLAR = ',I5/
     * 2X,' IGEOMT = ',I5/
     * 2X,' ITHERM = ',I5/
     * 2X,' IQELEC = ',I5/
     * 2X,' IZVLIM = ',I5/
     * 2X,' IPLOT  = ',I5/
     * 2X,' IPRNT  = ',I5/
     * 2X,' NATOM  = ',I5/
     * 2X,' N3N    = ',I5/
     * 2X,' NSTORE = ',I5/
     * 2X,' NPLUS  = ',I5)
    4 FORMAT(//,2X,' SCF ENERGY = ',F20.10/)
    5 FORMAT(//,2X,' MOLECULAR GEOMETRY (IN A.U.)'/
     1 5X,4H NO.,13X,2H X,18X,2H Y,18X,2H Z,18X,2H W/)
    6 FORMAT(4F20.10)
    7 FORMAT(2X,I7,5X,4F20.10)
    8 FORMAT(//,2X,' MOLECULAR GEOMETRY (IN A)'/
     1 5X,4H NO.,13X,2H X,18X,2H Y,18X,2H Z,18X,2H W/)
    9 FORMAT(3F20.10)
   10 FORMAT(//,2X,' FIRST DERIVATIVES OF DIPOLE MOMENTS (IN DEBYE/A)'/)
   11 FORMAT(//,2X,' FIRST DERIVATIVES OF POLARIZABILITIES (IN A+2)'/)
   12 FORMAT(2I5)
   13 FORMAT(3I5)
   14 FORMAT(4I5)
   15 FORMAT(F20.10)
   16 FORMAT(/1H1//,2X,' THE NORMAL COORDINATE ANALYSIS PROPGRAM'/)
   17 FORMAT(//,3X,22(1H*)/2X,' VIBRATIONAL AMPLITUDES'/3X,22(1H*))
   18 FORMAT(//,3X,20(1H*)/2X,' INFRARED INTENSITIES'/3X,20(1H*))
   19 FORMAT(//,3X,17(1H*)/2X,' RAMAN INTENSITIES'/3X,17(1H*))
   20 FORMAT(//,2X,' THERE ARE NOT ENOUGH GRADIENTS TO CALCULATE NORMAL
     1COORDINATES'/)
C
      call drum
      CALL TSTART(6)
cets  CALL NOUNFL
C
      open (unit=15,status='unknown',file='file15')
      open (unit=17,status='unknown',file='file17')
      open (unit=18,status='unknown',file='file18')
C   PHYSICAL CONSTANTS
      PARA=1.0D+00/AVN
      WAVE=1.0D+04*DSQRT(AVN)/(2.0D+00*PI*CL)
      CONST=1.0D+02*(PH*AVN)/(8.0D+00*PI*PI*CL)
      CYCL=1.0D+06*(PH*AVN)/(8.0D+00*PI*PI)
      CONV=1.0D-01*(PH*CL)/(2.0D+00*BK*TEMP)
C
      LDIM=1275
      MDIM=150
      NDIM=50
      INPUT=5
      ITAPE6=6
      ITAP30=30
c3-18-88  MAXCOR=360000
cets  MAXCOR=360000
C
      CALL LOCATE(INPUT,'# NORMCO #',IERR)
C
      WRITE(6,1)
C
C***INPUT PARAMETERS FOR THE CALCULATION***
C   IFXGF IS A PARAMETER FOR THE METHOD
C     IFXGF =1   :FX MATRIX METHOD
C     IFXGF =2   :GF MATRIX METHOD
C   ISOTOP IS A PARAMETER FOR ISOTOPIC MOLECULES
C     ISOTOP =0 AND 1 :USE REGULAR ATOMIC MASS
C     ISOTOP =2 OR MORE :NUMBER OF ISOTOPIC MOLECULES
C   NVIB IS DEGREES OF VIBRATIONAL FREEDOM
C   IFORCE IS A PARAMETER FOR GRADIENT SETS
C     IFORCE =1 :READ IN GRADIENT SETS FROM '15' FILE
C     IFORCE =2 :READ IN GRADIENT SETS FROM INPUT FILE
C     IFORCE =3 :READ IN A HESSIAN FROM '15' FILE
C   IDIPOL IS A PARAMETER FOR DIPOLE DERIVATIVES
C     IDIPOL =0  :NO DIPOLE DERIVATIVES
C     IDIPOL =1  :READ IN DIPOLE DERIVATIVES
C   IPOLAR IS A PARAMETER FOR POLARIZABILITY DRIVATIVES
C     IPOLAR =0  :NO POLARIZABILITY DERIVATIVES
C     IPOLAR =1  :READ IN POLARIZABILITY DERIVATIVES
C   IGEOMT IS A PARAMETER FOR INPUT DATA
C     IGEOMT =0 :READ IN GEOMETRY FROM TAPE 30
C     IGEOMT =1 :READ IN GEOMETRY FROM TAPE 5
C   ITHERM IS A PARAMETER FOR THERMOCHEMISTRY
C     ITHERM =0 AND 1 :USE 1 FOR SYMMETRY PARAMETER
C     ITHERM =N :FOR A MOLECULE WITH SYMMETRY NUMBER N
C   IQELEC IS A PARAMETER FOR MULTIPLICITY OF ELECTRONIC STATE
C     IQELEC =0 AND 1 :USE 1 FOR SINGLE MULTIPLICITY
C     IQELEC =N :FOR MULTIPLICITY OF ELECTRONIC STATE
C   IZVLIM IS A PARAMETER FOR LOWER LIMIT TO THE ZPVE CORRECTION
C     IZVLIM =0 :USE DEFAULT VALUE OF 20 CM-1
C     IZVLIM =N :SPECIFY LOWER LIMIT OF ZPVE
C   IPLOT  IS A PARAMETER FOR THERMOCHEMISTRY
C     IPLOT  =0 : DO NOT FORM FILE14
C     IPLOT  =1 : FORM FILE14 FOR PLOTTING PURPOSE
      READ(5,2) IFXGF,ISOTOP,NVIB,IFORCE,IDIPOL,IPOLAR,IGEOMT,ITHERM,
     1          IQELEC,IZVLIM,IPLOT,IPRNT
      IF(ISOTOP.EQ.0) ISOTOP=1
      IF(ITHERM.EQ.0) ITHERM=1
      IF(IQELEC.EQ.0) IQELEC=1
      IF(IZVLIM.EQ.0) IZVLIM=20
C
      REWIND ITAP15
      READ(ITAP15,2) NATOM,NSTORE
      NAT1=NATOM-1
      N3N=NATOM*3
      CALEND=NSTORE.GE.N3N*2
      NPLUS=NSTORE
      GEOINP=.NOT.CALEND
      GEOINP=IGEOMT.NE.0
      IF(.NOT.CALEND) NPLUS=NSTORE+1
      CALEND=NPLUS.GE.N3N*2
      WRITE(6,3) IFXGF,ISOTOP,NVIB,IFORCE,IDIPOL,IPOLAR,IGEOMT,ITHERM,
     1 IQELEC,IZVLIM,IPLOT,IPRNT,NATOM,N3N,NSTORE,NPLUS
C
      IOFF(1)=0
      DO 101 I=1,149
      IOFF(I+1)=IOFF(I)+I
  101 CONTINUE
C
      CALL RFILE(ITAP30)
      CALL WREADW(ITAP30,I30,200,101,JUNK)
      IEND=I30(1)
      MPOINT=I30(2)
      MCONST=I30(3)
      MCALCS=I30(4)
      NCALCS=I30(5)
      NATOM=I30(19)
      NAT1=NATOM-1
      N3N=NATOM*3
      JUNK=101+MCONST
      CALL WREADW(ITAP30,IPT,1,JUNK,JUNK)
      CALL WREADW(ITAP30,CHG,NATOM*2,IPT,JUNK)
      IGEOP=100+MCONST+MPOINT+NCALCS
      CALL WREADW(ITAP30,LOCCAL,1,IGEOP,JUNK)
      IGEOP=LOCCAL+60
      CALL WREADW(ITAP30,I30,20,IGEOP,IGEOP)
      CALL WREADW(ITAP30,COORD,N3N*2,IGEOP,JUNK)
      JUNK=JUNK+INTOWP(1)
      CALL WREADW(ITAP30,ESCF,2,JUNK,JUNK)
      JUNK=I30(2)
      CALL WREADW(ITAP30,GRAD,N3N*2,JUNK,JUNK)
C
C   REWIND INPUT FILE
      CALL LOCATE(INPUT,'# NORMCO #',IERR)
      READ(5,2) IDUM1,IDUM2,IDUM3,IDUM4,IDUM5,IDUM6,IDUM7,IDUM8,IDUM9,
     1          IDUM10
C
      WRITE(6,4) ESCF
      WRITE(6,5)
      DO 102 I=1,NATOM
      IF(GEOINP) GO TO 201
      X(I)=COORD(1,I)
      Y(I)=COORD(2,I)
      Z(I)=COORD(3,I)
      II=CHG(I)
      W(I)=ATM(II)
      GO TO 202
  201 CONTINUE
      READ(5,6) COORD(1,I),COORD(2,I),COORD(3,I),W(I)
      X(I)=COORD(1,I)
      Y(I)=COORD(2,I)
      Z(I)=COORD(3,I)
  202 CONTINUE
      WISO(1,I)=W(I)
      WRITE(6,7) I,X(I),Y(I),Z(I),W(I)
  102 CONTINUE
      CALL DIST(1)
      WRITE(6,8)
      DO 103 I=1,NATOM
      X(I)=X(I)*A0
      Y(I)=Y(I)*A0
      Z(I)=Z(I)*A0
      WRITE(6,7) I,X(I),Y(I),Z(I),W(I)
  103 CONTINUE
      CALL DIST(1)
      DO 104 I=1,NATOM
      ENGX(I)=GRAD(1,I)
      ENGY(I)=GRAD(2,I)
      ENGZ(I)=GRAD(3,I)
  104 CONTINUE
C
C   FORM FORCE CONSTANT MATRIX
      N3N2=N3N*N3N
      IC1=1
      IC2=IC1+N3N2
      IC3=IC2+N3N2
      IC4=IC3+N3N2
      IC5=IC4+N3N2
      ICMAX=IC5+N3N2
C.................FX      FP      FM      FF      AA.................
      CALL FCONST(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),N3N,IFORCE)
C
      IF(.NOT.CALEND) GO TO 210
C
C   THE CALCULATION OF CENTER OF MASS AND MOMENTS OF INTERTIA
      CALL MOMENT
C
C   READ IN DIPOLE MOMENT DERIVATIVES
      IF(IDIPOL.EQ.0) GO TO 203
      REWIND ITAP17
      READ(ITAP17,2) NATOM,N3N
      READ(ITAP17,9) ((DIPDR(I,J),J=1,N3N),I=1,3)
      WRITE(6,10)
      CALL MATOUT(DIPDR,3,150,3,N3N,6)
      REWIND ITAP17
C
C   READ IN POLARIZABILITY DERIVATIVES
  203 CONTINUE
      IF(IPOLAR.EQ.0) GO TO 204
      REWIND ITAP18
      READ(ITAP18,2) NATOM,N3N
      READ(ITAP18,9) ((POLDR(I,J),J=1,N3N),I=1,6)
      WRITE(6,11)
      CALL MATOUT(POLDR,6,150,6,N3N,6)
      REWIND ITAP18
C
C   READ IN INTERNAL COORDINATES
  204 CONTINUE
      IF(IFXGF.NE.2) GO TO 205
      READ(5,2) NST,NBND,NLIB,NDEF,NTORS,ISYM
      NINT=NST+NBND+NLIB+NDEF+NTORS
C   INPUT DATA FOR STRETCHINGS
      IF(NST.EQ.0) GO TO 301
      READ(5,12) (KR(I),LR(I),I=1,NST)
C   INPUT DATA FOR BENDINGS
  301 IF(NBND.EQ.0) GO TO 302
      READ(5,13) (KA(I),LA(I),MA(I),I=1,NBND)
C   INPUT DAT FOR LINEAR BENDINGS
  302 IF(NLIB.EQ.0) GO TO 303
      NLHF=NLIB/2
      READ(5,13) (KB(I),LB(I),MB(I),I=1,NLHF)
C   INPUT DATA FOR DEFORMATIONS
  303 IF(NDEF.EQ.0) GO TO 304
      READ(5,14) (KD(I),LD(I),MD(I),ND(I),I=1,NDEF)
C   INPUT DATA FOR TORSIONS
  304 IF(NTORS.EQ.0) GO TO 305
      READ(5,14) (KT(I),LT(I),MT(I),NT(I),I=1,NTORS)
C
C   INPUT UNITARY MATRIX ELEMENTS
  305 CONTINUE
      IF(ISYM.EQ.0) GO TO 205
      NSYM=0
  500 READ(5,2) II,JJ,KK,LL
      IJKL=II*JJ*KK*LL
      IF(IJKL.EQ.0) GO TO 501
      NSYM=NSYM+1
      IIS(NSYM)=II
      JJS(NSYM)=JJ
      KKS(NSYM)=KK
      LLS(NSYM)=LL
      GO TO 500
  501 CONTINUE
C
C   READ IN ISOTOPIC ATOMIC MASS
  205 CONTINUE
      IF(ISOTOP.LE.1) GO TO 206
      DO 105 ISO=2,ISOTOP
      READ(5,15) (WISO(ISO,I),I=1,NATOM)
  105 CONTINUE
C
C   VIBRATIONAL ANALYSIS FOR ISOTOPIC MOLECULES
  206 CONTINUE
      ISOMOL=.FALSE.
      NISO=0
  400 NISO=NISO+1
      IF(NISO.EQ.1) GO TO 401
      IF(NISO.GT.ISOTOP) GO TO 220
      ISOMOL=.TRUE.
      WRITE(6,5)
      DO 106 I=1,NATOM
      X(I)=COORD(1,I)
      Y(I)=COORD(2,I)
      Z(I)=COORD(3,I)
      W(I)=WISO(NISO,I)
      WRITE(6,7) I,X(I),Y(I),Z(I),W(I)
  106 CONTINUE
      WRITE(6,8)
      DO 107 I=1,NATOM
      X(I)=X(I)*A0
      Y(I)=Y(I)*A0
      Z(I)=Z(I)*A0
      WRITE(6,7) I,X(I),Y(I),Z(I),W(I)
  107 CONTINUE
C
      CALL MOMENT
C
C   THE NORMAL COORDINATE ANALYSIS
  401 CONTINUE
      IF(IFXGF.EQ.2) GO TO 402
C
C   FX MATRIX METHOD
      N3N2=N3N*N3N
      N3TRI=IOFF(N3N+1)
      IC1=1
      IC2=IC1+N3N2
      IC3=IC2+N3N2
      IC4=IC3+N3N2
      IC5=IC4+N3N2
      IC6=IC5+N3N
      IC7=IC6+N3N
      IC8=IC7+N3N
      ICMAX=IC8+N3TRI
C................FX      ELX     ELXM    EE      VALU    FV1.....
      CALL VIBFX(CC(IC1),CC(IC2),CC(IC3),CC(IC4),CC(IC5),CC(IC6),
C................FV2     FXM...............
     1           CC(IC7),CC(IC8),N3N,N3TRI)
C
C   EVALUATE THERMODYNAMIC FUNCTIONS
      CALL THERMO
      GO TO 400
C
C   GF MATRIX METHOD
  402 CONTINUE
      N3N2=N3N*N3N
      N3R=N3N+NRED
      N3R2=N3R*N3R
      NATOM2=NATOM*NATOM
      N3TRI=IOFF(N3N+1)
      IC1=1
      IC2=IC1+N3N2
      IC3=IC2+N3R2
      IC4=IC3+N3N2
      IC5=IC4+N3TRI
      IC6=IC5+N3R2
      IC7=IC6+NATOM2
      IC8=IC7+NATOM2
      ICMAX=IC8+NATOM2
C................B       EX      EY      EZ.......................
      CALL VIBGF(CC(IC5),CC(IC6),CC(IC7),CC(IC8),N3R,NATOM,ISOMOL)
C
C   FORM SYMMETRY INTERNAL COORDINATE MATRIX IF NECESSARY
      IF(ISYM.EQ.0) GO TO 403
      IC1=1
      IC2=IC1+N3N2
      IC3=IC2+N3R2
      IC4=IC3+N3N2
      IC5=IC4+N3TRI
      IC6=IC5+N3R2
      IC7=IC6+N3R2
      ICMAX=IC7+N3R2
C................U       B       BS      EE.................
      CALL SYMCO(CC(IC2),CC(IC5),CC(IC6),CC(IC7),N3R,ISOMOL)
C
C   FORM G AND F MATRICES
  403 CONTINUE
      IC1=1
      IC2=IC1+N3N2
      IC3=IC2+N3R2
      IC4=IC3+N3N2
      IC5=IC4+N3TRI
      IC6=IC5+N3R2
      IC7=IC6+N3N2
      IC8=IC7+N3N2
      IC9=IC8+NATOM
      IA9=IC9+IC9-1
      ICMAX=IC9+NATOM
C................FX      F       G       B       BIN     EE......
      CALL GFMAT(CC(IC1),CC(IC3),CC(IC4),CC(IC5),CC(IC6),CC(IC7),
C................PIVOT   INDEX........................
     1           CC(IC8),IA(IC9),N3N,N3R,N3TRI,ISOMOL)
C
C   NORMAL COORDINATE ANALYSIS
      NVIB2=NVIB*NVIB
      IC1=1
      IC2=IC1+N3N2
      IC3=IC2+N3R2
      IC4=IC3+N3N2
      IC5=IC4+N3TRI
      IC6=IC5+N3R2
      IC7=IC6+N3N2
      IC8=IC7+NVIB2
      IC9=IC8+NVIB2
      IC10=IC9+NVIB2
      IC11=IC10+NVIB2
      IC12=IC11+NVIB2
      IC13=IC12+NVIB2
      IC14=IC13+NVIB2
      IC15=IC14+NVIB2
      IC16=IC15+NVIB
      IC17=IC16+NVIB
      IC18=IC17+NVIB
      ICMAX=IC18+NVIB
C.................F       G       S       WW      H       AA......
      CALL NORMGF(CC(IC3),CC(IC4),CC(IC4),CC(IC7),CC(IC8),CC(IC9),
C.................Y        ELIN     ELL      POT      EKED     EE.......
     1            CC(IC10),CC(IC11),CC(IC12),CC(IC13),CC(IC13),CC(IC13),
C.................GIN      VALU     ROOT     FV1      FV2......
     2            CC(IC14),CC(IC15),CC(IC16),CC(IC17),CC(IC18),
C................................
     3            N3N,N3TRI,NVIB)
C
C   THE CALCULATION OF VIBRATIONAL AMPLITUDES
      WRITE(6,17)
      IC1=1
      IC2=IC1+N3N2
      IC3=IC2+N3R2
      IC4=IC3+N3N2
      IC5=IC4+N3TRI
      IC6=IC5+N3R2
      IC7=IC6+N3N2
      IC8=IC7+NVIB2
      IC9=IC8+NVIB2
      IC10=IC9+NVIB2
      IC11=IC10+NVIB2
      IC12=IC11+NVIB2
      IC13=IC12+NVIB2
      IC14=IC13+N3N2
      ICMAX=IC14+N3N2
      CALL AMPGF(CC(IC5),CC(IC11),CC(IC13),CC(IC14),N3R)
C
C   THE CALCULATION OF INFRARED INTENSITIES
      IF(IDIPOL.EQ.0) GO TO 404
      WRITE(6,18)
      CALL IRINTR(CC(IC6),CC(IC12))
C
C   THE CALCULATION OF RAMAN INTENSITIES
  404 IF(IPOLAR.EQ.0) GO TO 405
      WRITE(6,19)
      CALL RAMANR(CC(IC6),CC(IC12))
C
C   END OF AN ISOTOPIC MOLECULE
  405 CONTINUE
      GO TO 400
C
  210 WRITE(6,20)
C
  220 CONTINUE
      CALL RCLOSE(ITAP30,3)
      CALL TSTOP(6)
      RETURN
      END
      SUBROUTINE NORMFX(ELXM,EE,VALU,FV1,FV2,FXM,NABC,NPQR)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ELXM(NABC,NABC),EE(NABC,NABC)
      DIMENSION VALU(NABC),FV1(NABC),FV2(NABC),FXM(NPQR)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB104/PARA,WAVE,CONST,CYCL,CONV
      COMMON/VIB108/IZVLIM,IPLOT
      COMMON/VIB206/SQM(150),ROOT(150),FREQ(150)
      COMMON/VIB207/VZERO
      DATA PH,BK,AVN / 6.626176D+00 , 1.380662D+00 , 6.022045D+00 /
      DATA CL,TEMP / 2.99792458D+00 , 298.15D+00 /
      DATA A00,HALF,ONE / 0.0D+00 , 0.5D+00 , 1.0D+00 /
    1 FORMAT(//,2X,28H EIGENVALUES AND EIGENVECTOR)
    2 FORMAT(/,2X,28H EIGENVALUES AND FREQUENCIES/
     1 13X,8H IN A.U.,9X,8H IN CM-1/)
    3 FORMAT(2X,I5,F15.6,2X,F15.6)
    4 FORMAT(//,2X,' ZERO-POINT VIBRATIONAL ENERGY'//
     1          2X,F20.5,' IN CM-1',5X,F20.5,' IN KCAL/MOL'/)
    5 FORMAT(//,2X,' LXM MATRIX'/)
    6 FORMAT(//,2X,' LXM X LXM(T) = E '/)
C
C  LOWER LIMIT TO THE ZPVE CORRECTION
      ZLIMIT=FLOAT(IZVLIM)
C
C  A CONVERSION FACTOR FROM CM-1 TO KCAL.MOLE-1
      CMKM=(CL*PH*AVN*1.0D-04)/4.184D+00
C
C   THE CALCULATION OF EIGENVALUE AND EIGENVECTOR
      CALL RSP(NABC,N3N,NPQR,FXM,VALU,1,ELXM,FV1,FV2)
C     WRITE(6,1)
      WRITE(6,2)
      DO 101 I=1,N3N
      II=N3N-I+1
      ROOT(I)=VALU(II)
      IF(VALU(II).LT.A00) VALU(II)=-VALU(II)
      FREQ(I)=DSIGN(ONE,ROOT(I))*WAVE*DSQRT(VALU(II))
  101 WRITE(6,3) I,ROOT(I),FREQ(I)
C
C   EVALUATE VIBRATIONAL ZERO-POINT ENERGY
C   THE SMALLEST FREQUENCY IS LIMITED TO ZLIMIT
      VZERO=A00
      DO 102 I=1,NVIB
      IF(FREQ(I).LT.ZLIMIT) GO TO 102
      VZERO=VZERO+FREQ(I)
  102 CONTINUE
      VZERO=VZERO*HALF
      VKM=VZERO*CMKM
      WRITE(6,4) VZERO,VKM
C
C   EIGENVECTOR CORRESPONDS TO LXM VECTOR
      NN=N3N/2
      DO 103 I=1,N3N
      DO 103 J=1,NN
      JJ=N3N-J+1
      EJ=ELXM(I,J)
      EJJ=ELXM(I,JJ)
      ELXM(I,J)=EJJ
      ELXM(I,JJ)=EJ
  103 CONTINUE
      WRITE(6,5)
      CALL FRQOUT(ELXM,FREQ,NABC,NABC,N3N,N3N,6)
C
C   THE EXAMINATION OF ABOVE CALCULATION
      CALL MTXMPY(ELXM,NABC,ELXM,NABC,EE,NABC,EE,NABC,N3N,3)
      WRITE(6,6)
      CALL MATOUT(EE,NABC,NABC,N3N,N3N,6)
C
      RETURN
      END
      SUBROUTINE NORMGF(F,G,S,WW,H,AA,Y,ELIN,ELL,POT,EKED,EE,GIN,
     1                  VALU,ROOT,FV1,FV2,NXYZ,NPQR,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION F(NXYZ,NXYZ),G(NPQR),S(NPQR),WW(NABC,NABC),H(NABC,NABC)
      DIMENSION AA(NABC,NABC),Y(NABC,NABC),ELIN(NABC,NABC)
      DIMENSION ELL(NABC,NABC),POT(NABC,NABC),EKED(NABC,NABC)
      DIMENSION EE(NABC,NABC),GIN(NABC,NABC)
      DIMENSION VALU(NABC),ROOT(NABC),FV1(NABC),FV2(NABC)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB104/PARA,WAVE,CONST,CYCL,CONV
      COMMON/VIB108/IZVLIM,IPLOT
      COMMON/VIB206/ROGAM(150),DEL(150),FREQ(150)
      COMMON/VIB207/VZERO
      DATA PH,BK,AVN / 6.626176D+00 , 1.380662D+00 , 6.022045D+00 /
      DATA CL,TEMP / 2.99792458D+00 , 298.15D+00 /
      DATA A00,HALF,ONE / 0.0D+00 , 0.5D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' G MATRIX'/)
    2 FORMAT(//,2X,' F MATRIX'/)
    3 FORMAT(//,2X,' EIGENVALUES OF G MATRIX')
    4 FORMAT(13X,8H GAMMA-G,9X,13H ROOT GAMMA-G/)
    5 FORMAT(2X,I2,2(5X,F12.5))
    6 FORMAT(//,2X,' H MATRIX'/)
    7 FORMAT(//,2X,' EIGENVALUES OF H MATRIX')
    8 FORMAT(13X,8H GAMMA-H,6X,10H FREQUENCY/)
    9 FORMAT(//,2X,' EIGENVECTORS OF H MATRIX'/)
   10 FORMAT(//,2X,' ZERO-POINT VIBRATIONAL ENERGY'//
     1          2X,F20.5,' IN CM-1',5X,F20.5,' IN KCAL/MOL'/)
   11 FORMAT(//,2X,' L INVERSE MATRIX'/)
   12 FORMAT(//,2X,' L MATRIX'/)
   13 FORMAT(//,2X,' L X L(T) = G'/)
   14 FORMAT(//,2X,' L X L(-1) = E'/)
   15 FORMAT(//,2X,' POTENTIAL ENERGY DISTRIBUTION'/)
   16 FORMAT(//,2X,' KINETIC ENERGY DISTRIBUTION'/)
C
      WRITE(6,1)
      CALL PRINT(G,NPQR,NVIB,6)
      WRITE(6,2)
      CALL MATOUT(F,NXYZ,NXYZ,NVIB,NVIB,6)
C
C  LOWER LIMIT TO THE ZPVE CORRECTION
      ZLIMIT=FLOAT(IZVLIM)
C
C  A CONVERSION FACTOR FROM CM-1 TO KCAL.MOLE-1
      CMKM=(CL*PH*AVN*1.0D-04)/4.184D+00
C
C   THE CALCULATION OF EIGENVALUE AND EIGENVECTOR OF G MATRIX
      CALL RSP(NABC,NVIB,NPQR,G,VALU,1,WW,FV1,FV2)
      WRITE(6,3)
      WRITE(6,4)
      DO 101 I=1,NVIB
      ROGAM(I)=A00
      IF(VALU(I).LE.A00) GO TO 201
      ROGAM(I)=DSQRT(VALU(I))
  201 WRITE(6,5) I,VALU(I),ROGAM(I)
  101 CONTINUE
C
C   THE CALCULATION OF LGZERO MATRIX
      DO 102 I=1,NVIB
      DO 102 J=1,NVIB
  102 WW(I,J)=WW(I,J)*ROGAM(J)
C
C   THE CALCULATION OF H MATRIX
C     H MATRIX CORRESPONDS TO W*F*W
      CALL MTXMPY(WW,NABC,F,NXYZ,H,NABC,AA,NABC,NVIB,5)
      WRITE(6,6)
      IJ=0
      DO 103 I=1,NVIB
      DO 103 J=1,I
      IJ=IJ+1
      S(IJ)=H(I,J)
  103 CONTINUE
      CALL PRINT(S,NPQR,NVIB,6)
C
C   THE CALCULATION OF FREQUENCIES
      CALL RSP(NABC,NVIB,NPQR,S,ROOT,1,AA,FV1,FV2)
      WRITE(6,7)
      WRITE(6,8)
      DO 104 I=1,NVIB
      FREQ(I)=DSIGN(ONE,ROOT(I))*WAVE*DSQRT(DABS(ROOT(I)))
      WRITE(6,5) I,ROOT(I),FREQ(I)
  104 CONTINUE
      WRITE(6,9)
      CALL FRQOUT(AA,FREQ,NABC,NABC,NVIB,NVIB,6)
C
C   EVALUATE VIBRATIONAL ZERO-POINT ENERGY
C   THE SMALLEST FREQUENCY IS LIMITED TO ZLIMIT
      VZERO=A00
      DO 105 I=1,NVIB
      IF(FREQ(I).LT.ZLIMIT) GO TO 105
      VZERO=VZERO+FREQ(I)
  105 CONTINUE
      VZERO=VZERO*HALF
      VKM=VZERO*CMKM
      WRITE(6,10) VZERO,VKM
C
C   THE CALCULATION OF L INVERSE MATRIX
      DO 106 I=1,NVIB
      DO 106 J=1,NVIB
      Y(I,J)=AA(J,I)/VALU(J)
  106 CONTINUE
      CALL MTXMPY(Y,NABC,WW,NABC,ELIN,NABC,EE,NABC,NVIB,3)
      WRITE(6,11)
      CALL FRQOUT(ELIN,FREQ,NABC,NABC,NVIB,NVIB,6)
C
C   THE CALCULATION OF L MATRIX
      CALL MTXMPY(WW,NABC,AA,NABC,ELL,NABC,EE,NABC,NVIB,1)
      WRITE(6,12)
      CALL FRQOUT(ELL,FREQ,NABC,NABC,NVIB,NVIB,6)
C
C   THE EXAMINATION OF ABOVE CALCULATION ACCORDING TO G MATRIX
      CALL MTXMPY(ELL,NABC,ELL,NABC,AA,NABC,EE,NABC,NVIB,3)
      WRITE(6,13)
      CALL MATOUT(AA,NABC,NABC,NVIB,NVIB,6)
      CALL MTXMPY(ELL,NABC,ELIN,NABC,AA,NABC,EE,NABC,NVIB,1)
      WRITE(6,14)
      CALL MATOUT(AA,NABC,NABC,NVIB,NVIB,6)
C
C   THE CALCULATION OF POTENTIAL ENERGY DISTRIBUTION
      DO 110 I=1,NVIB
      DO 110 J=1,NVIB
  110 POT(I,J)=A00
      DO 111 I=1,NVIB
      DO 111 J=1,NVIB
      POT(I,J)=POT(I,J)+(ELL(I,J)**2*F(I,I))/ROOT(J)
  111 CONTINUE
      WRITE(6,15)
      CALL FRQOUT(POT,FREQ,NABC,NABC,NVIB,NVIB,6)
C
C   THE CALCULATION OF KINETIC ENERGY DISTRIBUTION
      CALL MTXMPY(ELIN,NABC,ELIN,NABC,GIN,NABC,AA,NABC,NVIB,2)
      DO 112 I=1,NVIB
      DO 112 J=1,NVIB
  112 EKED(I,J)=A00
      DO 113 I=1,NVIB
      DO 113 J=1,NVIB
  113 EKED(I,J)=EKED(I,J)+GIN(I,I)*ELL(I,J)**2
      WRITE(6,16)
      CALL FRQOUT(EKED,FREQ,NABC,NABC,NVIB,NVIB,6)
C
      RETURN
      END
      SUBROUTINE RAMANR(BIN,ELL)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION BIN(N3N,N3N),ELL(NVIB,NVIB)
      DIMENSION POLD(6,150),POLDD(6,150),GSQ(150)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB204/DIPDR(3,150),POLDR(6,150)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB206/ALP(150),ASQ(150),FREQ(150)
      DATA A00,HALF,THREE / 0.0D+00 , 0.5D+00 , 3.0D+00 /
    1 FORMAT(//,2X,' POLARIZABILITY DERIVATIVES W.R.T. INTERNAL COORDINA
     1TE'/)
    2 FORMAT(//,2X,' POLARIZABILITY DERIVATIVES W.R.T. NORMAL COORDINATE
     1S (IN A+2.AMU(-1/2))'/)
    3 FORMAT(//,2X,' NORMAL FREQUENCIES, SCATTERING ACTIVITY AND DEPOLAR
     1IZATION RATIO'/13X,' IN CM-1',13X,' A+4.AMU-1',18X,' RHO'/)
    4 FORMAT(2X,I5,4(F15.6,10X))
C
C   TRANSFORM POLARIZABILITY DERIVATIVES FROM CARTESIAN TO INTERNAL
C   COORDINATE
      CALL MATOUT(BIN,N3N,N3N,N3N,N3N,6)
      CALL MATOUT(ELL,NVIB,NVIB,NVIB,NVIB,6)
      DO 102 I=1,6
      DO 102 J=1,NVIB
      VALU=A00
      DO 101 K=1,N3N
  101 VALU=VALU+POLDR(I,K)*BIN(K,J)
      POLDD(I,J)=VALU
  102 CONTINUE
      WRITE(6,1)
      CALL MATOUT(POLDD,6,150,6,NVIB,6)
C
C   TRANSFORM POLARIZABILITY DERIVATIVES FROM INTERNAL TO NORMAL
C   COORDINATE
      DO 104 I=1,6
      DO 104 J=1,NVIB
      VALU=A00
      DO 103 K=1,NVIB
  103 VALU=VALU+POLDD(I,K)*ELL(K,J)
      POLD(I,J)=VALU
  104 CONTINUE
      WRITE(6,2)
      CALL FRQOUT(POLD,FREQ,6,150,6,NVIB,6)
C
C   CALCULATE ALPH'S
      DO 105 I=1,NVIB
      ALP(I)=(POLD(1,I)+POLD(3,I)+POLD(6,I))/THREE
      ASQ(I)=ALP(I)*ALP(I)
  105 CONTINUE
C
C   CALCULATE GAMMA SQUARE'S
      DO 107 I=1,NVIB
      VALU=A00
      DO 106 J=1,3
      DO 106 K=1,3
      JK=IOFF(MAX0(J,K))+MIN0(J,K)
  106 VALU=VALU+POLD(JK,I)*POLD(JK,I)
      GSQ(I)=(VALU*THREE-ASQ(I)*9.0D+00)*HALF
  107 CONTINUE
C
C   CALCULATE SCATTERING ACTIVITY AND DEPOLARIZATION RATIO
      WRITE(6,3)
      DO 108 I=1,NVIB
      SACT=ASQ(I)*45.0D+00+GSQ(I)*7.0D+00
      RHO=(GSQ(I)*THREE)/(ASQ(I)*45.0D+00+GSQ(I)*4.0D+00)
      WRITE(6,4) I,FREQ(I),SACT,RHO
  108 CONTINUE
C
      RETURN
      END
      SUBROUTINE RAMANX(ELX,NABC)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION ELX(NABC,NABC)
      DIMENSION POLD(6,150),GSQ(150)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB204/DIPDR(3,150),POLDR(6,150)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB206/ALP(150),ASQ(150),FREQ(150)
      DATA A00,HALF,THREE / 0.0D+00 , 0.5D+00 , 3.0D+00 /
    1 FORMAT(//,2X,' POLARIZABILITY DERIVATIVES W.R.T. NORMAL COORDINATE
     1S (IN A+2.AMU(-1/2))'/)
    2 FORMAT(//,2X,' NORMAL FREQUENCIES, SCATTERING ACTIVITY AND DEPOLAR
     1IZATION RATIO'/13X,' IN CM-1',13X,' A+4.AMU-1',18X,' RHO'/)
    3 FORMAT(2X,I5,4(F15.6,10X))
C
      DO 102 I=1,6
      DO 102 J=1,N3N
      VALU=A00
      DO 101 K=1,N3N
  101 VALU=VALU+POLDR(I,K)*ELX(K,J)
      POLD(I,J)=VALU
  102 CONTINUE
      WRITE(6,1)
      CALL FRQOUT(POLD,FREQ,6,150,6,N3N,6)
C
C   CALCULATE ALPH'S
      DO 103 I=1,N3N
      ALP(I)=(POLD(1,I)+POLD(3,I)+POLD(6,I))/THREE
      ASQ(I)=ALP(I)*ALP(I)
  103 CONTINUE
C
C   CALCULATE GAMMA SQUARE'S
      DO 105 I=1,N3N
      VALU=A00
      DO 104 J=1,3
      DO 104 K=1,3
      JK=IOFF(MAX0(J,K))+MIN0(J,K)
  104 VALU=VALU+POLD(JK,I)*POLD(JK,I)
      GSQ(I)=(VALU*THREE-ASQ(I)*9.0D+00)*HALF
  105 CONTINUE
C
C   CALCULATE SCATTERING ACTIVITY AND DEPOLARIZATION RATIO
      WRITE(6,2)
      DO 106 I=1,N3N
      SACT=ASQ(I)*45.0D+00+GSQ(I)*7.0D+00
      RHO=(GSQ(I)*THREE)/(ASQ(I)*45.0D+00+GSQ(I)*4.0D+00)
      WRITE(6,3) I,FREQ(I),SACT,RHO
  106 CONTINUE
C
      RETURN
      END
      SUBROUTINE STRNG(B,EX,EY,EZ,NXYZ,NNE)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NXYZ,NXYZ),EX(NNE,NNE),EY(NNE,NNE),EZ(NNE,NNE)
      COMMON/VIB103/NST,NBND,NLIB,NDEF,NTORS
      COMMON/VIB301/KR(150),LR(150)
C
C   THE CALCULATION OF S VECTORS FOR STRETCHINGS
      DO 101 I=1,NST
      K=KR(I)
      L=LR(I)
      KX=3*K-2
      KY=3*K-1
      KZ=3*K
      LX=3*L-2
      LY=3*L-1
      LZ=3*L
      B(I,KX)=EX(L,K)
      B(I,KY)=EY(L,K)
      B(I,KZ)=EZ(L,K)
      B(I,LX)=EX(K,L)
      B(I,LY)=EY(K,L)
  101 B(I,LZ)=EZ(K,L)
      RETURN
      END
      SUBROUTINE SYMCO(U,B,BS,EE,NXYZ,ISOMOL)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION U(NXYZ,NXYZ),B(NXYZ,NXYZ),BS(NXYZ,NXYZ),EE(NXYZ,NXYZ)
      LOGICAL ISOMOL
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB107/NIC,NINT,ISYM,NSYM
      COMMON/VIB308/IIS(150),JJS(150),KKS(150),LLS(150)
      DATA A00,ONE / 0.0D+00 , 1.0D+00 /
    1 FORMAT(//,2X,' U MATRIX'/)
    2 FORMAT(//,2X,' UNITARITY OF U MATRIX'/)
    3 FORMAT(//,2X,' BS MATRIX'/)
    4 FORMAT(//,2X,' INPUT ERROR ',5X,' II,JJ,KK,LL ',4I5/)
C
      NROT=3
      IF(ILIN.NE.0) NROT=2
C
C   FORM UNITARY TRANSFORMATION MATRIX
      IF(ISOMOL) GO TO 201
      DO 101 I=1,NIC
      DO 101 J=1,NIC
  101 U(I,J)=A00
C
      DO 102 IXYZ=1,NSYM
      II=IIS(IXYZ)
      JJ=JJS(IXYZ)
      KK=KKS(IXYZ)
      LL=LLS(IXYZ)
      XK=FLOAT(KK)
      XL=FLOAT(LL)
      FAC=ONE
      IF(XK.LT.A00) FAC=-ONE
      IF(XL.LE.A00) GO TO 205
      U(II,JJ)=FAC*DSQRT(DABS(XK))/DSQRT(XL)
  102 CONTINUE
C
      DO 103 I=1,NROT+3
      II=NVIB+I
      JJ=NINT+I
      U(II,JJ)=ONE
  103 CONTINUE
C
      WRITE(6,1)
      CALL MATOUT(U,NXYZ,NXYZ,NIC,NIC,6)
      WRITE(6,2)
      CALL MTXMPY(U,NXYZ,U,NXYZ,EE,NXYZ,EE,NXYZ,NIC,3)
      CALL MATOUT(EE,NXYZ,NXYZ,NIC,NIC,6)
  201 CONTINUE
      WRITE(6,3)
      CALL MTXMPY(U,NXYZ,B,NXYZ,BS,NXYZ,EE,NXYZ,NIC,1)
      CALL MATOUT(BS,NXYZ,NXYZ,NIC,NIC,6)
      DO 104 I=1,NIC
      DO 104 J=1,NIC
  104 B(I,J)=BS(I,J)
      GO TO 210
C
  205 WRITE(6,4) II,JJ,KK,LL
      STOP
C
  210 RETURN
      END
      SUBROUTINE THERMO
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB105/AIXX,AIYY,AIZZ,SUMW,ROTCM(3)
      COMMON/VIB108/IZVLIM,IPLOT
      COMMON/VIB109/ITHERM,IQELEC
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB206/SQM(150),ROOT(150),FREQ(150)
      COMMON/VIB207/VZERO
      DATA PH,BK,AVN / 6.626176D+00 , 1.380662D+00 , 6.022045D+00 /
      DATA A0,HE,EV / 0.52917706D+00 , 4.359813653D+00 , 1.6021892D+00 /
      DATA CL,TEMP / 2.99792458D+00 , 298.15D+00 /
      DATA PI,ALN / 3.1415926536D+00 , 2.3025850930D+00 /
      DATA GASC,GASR,GASV / 1.9872D+00 , 8.20568 , 22.41383D+03 /
      DATA A00 / 0.0D+00 /
    1 FORMAT(//,3X,23(1H*)/2X,' THERMODYNAMIC FUNCTIONS'/3X,23(1H*)
     *       //,2X,' RIGID ROTOR-HARMONIC OSCILLATOR-IDEAL GAS APPROXIMA
     *TION'   /,2X,' VALUES ARE AT 1 ATM AND 298.15 DEGREE KELVIN'
     *        /,2X,' SYMMETRY NUMBER         = ',I5
     *        /,2X,' ELECTRONIC MULTIPLICITY = ',I5)
    2 FORMAT(//,2X,'  CV/R (TRANS.)          = ',F15.6,
     *         10X,'  S/R  (TRANS.)          = ',F15.6/
     *          2X,'  CV/R (ROT.)            = ',F15.6,
     *         10X,'  S/R  (ROT.)            = ',F15.6/
     *          2X,'  CV/R (VIB.)            = ',F15.6,
     *         10X,'  S/R  (VIB.)            = ',F15.6/
     *          2X,'  CV/R (ELEC.)           = ',F15.6,
     *         10X,'  S/R  (ELEC.)           = ',F15.6/
     *          2X,'  CV/R (TOTAL)           = ',F15.6,
     *         10X,'  S/R  (TOTAL)           = ',F15.6/
     *          2X,'  CV   (CAL.DEG.MOLE-1 ) = ',F15.6,
     *         10X,'  S    (CAL.DEG.MOLE-1 ) = ',F15.6)
    3 FORMAT(/ ,2X,'  CP   (CAL.DEG.MOLE-1 ) = ',F15.6)
    4 FORMAT(//,2X,' (E-H00)/RT (TRANS.)     = ',F15.6,
     *         10X,'-(A-H00)/RT (TRANS.)     = ',F15.6/
     *          2X,' (E-H00)/RT (ROT.)       = ',F15.6,
     *         10X,'-(A-H00)/RT (ROT.)       = ',F15.6/
     *          2X,' (E-H00)/RT (VIB.)       = ',F15.6,
     *         10X,'-(A-H00)/RT (VIB.)       = ',F15.6/
     *          2X,' (E-H00)/RT (ELEC.)      = ',F15.6,
     *         10X,'-(A-H00)/RT (ELEC.)      = ',F15.6/
     *          2X,' (E-H00)/RT (TOTAL)      = ',F15.6,
     *         10X,'-(A-H00)/RT (TOTAL)      = ',F15.6/
     *          2X,' (E-H00)    (CAL.MOLE-1) = ',F15.6,
     *         10X,'-(A-H00)    (CAL.MOLE-1) = ',F15.6)
    5 FORMAT(/ ,2X,' (H-H00)    (CAL.MOLE-1) = ',F15.6,
     *         10X,'-(G-H00)    (CAL.MOLE-1) = ',F15.6)
    6 FORMAT(/ ,2X,'  A = E - TS             = ',F15.6,
     *         10X,'  G = H - TS             = ',F15.6)
    7 FORMAT(//,2X,'  Q (TRANS.) (*D+30)     = ',F15.6/
     *          2X,'  Q (ROT.)               = ',F15.6/
     *          2X,'  Q (VIB.)               = ',F15.6/
     *          2X,'  Q (ELEC.)              = ',F15.6/
     *          2X,'  Q (TOTAL)  (*D+30)     = ',F15.6)
    8 FORMAT(/, 2X,'  ZPVE      (CAL.MOLE-1) = ',F15.6,
     *       /, 2X,'  LOWEST LIMIT IN CM-1   = ',F15.6)
C
C   EVALUATION OF THERMODYNAMIC FUNCTIONS
C
      WRITE(6,1) ITHERM,IQELEC
C
C   ZERO-POINT VIBATIONAL ENERGY FROM NORMFX OR NORMGF
      ZLIMIT=FLOAT(IZVLIM)
      CMCAL=(CL*PH*AVN*1.0D-01)/4.184D+00
      ZPVE=VZERO*CMCAL
C
C   ELECTRONIC MULTIPLICITY
      WELEC= FLOAT(IQELEC)
C
C   CALCUALTE PHYSICAL CONSTANTS
      VALU=(2.0D+00*10.0D+00*PI*BK)/(PH*PH*AVN)
C#######################################################################
C##THE FOLLOWINGS ARE A CONSTANT AND FORMULA
C##FOR ENTROPY CALCULATION USING VOLUME
C##   SCONST=2.5D+00 + 1.5D+00*DLOG(VALU) - DLOG(AVN)
C##  *               - 2.0D+00*DLOG(10.0D+00)
C##   SRC=SCONST*GASC
C##   STRN=SCONST + 1.5D+00*DLOG(SUMW) + 1.5D+00*DLOG(TEMP) + DLOG(GASV)
C#######################################################################
C
C##THE FOLLOWINGS ARE A CONSTANT AND FORMULA
C##FOR ENTROPY CALCULATION USING PRESSURE
      SCONST=2.5D+00 + 1.5D+00*DLOG(VALU) - DLOG(AVN)
     *               + DLOG(GASR) - DLOG(10.0D+00)
      SRC=SCONST*GASC
C
      STRN=SCONST + 1.5D+00*DLOG(SUMW) + 2.5D+00*DLOG(TEMP)
      VRC=(1.0D-01*PH*CL)/BK
      CVELEC=A00
      SELEC=DLOG(WELEC)
      EELEC=A00
      AELEC=DLOG(WELEC)
      QELEC=WELEC
      QTRN=DSQRT((VALU*SUMW*TEMP)**3)*GASR*TEMP/1.0D+08
C
      IF(NATOM.EQ.2) GO TO 201
      IF(ILIN.NE.0) GO TO 203
      GO TO 206
C
C#######################
C###DIATOMIC MOLECULE###
C#######################
  201 CONTINUE
      RCONST=(VRC*ROTCM(1))/TEMP
      VCONST=(VRC*FREQ(1))/TEMP
      EXPVIB=DEXP(VCONST)
      DNUM=EXPVIB-1.0D+00
      IF(W(1).EQ.W(2)) THEN
        SIGMA=2.0D+00
      ELSE
        SIGMA=1.0D+00
      END IF
C
C  HEAT CAPACITY AT CONSTANT VOLUME
      CVTRN=1.5D+00
      CVROT=1.0D+00
      CVVIB=(VCONST*VCONST)*(EXPVIB/(DNUM*DNUM))
      CVTOT=CVTRN + CVROT + CVVIB + CVELEC
      CVCAL=CVTOT*GASC
C
C  ENTROPY
      SROT=1.0D+00 - DLOG(RCONST) - DLOG(SIGMA)
      SVIB=VCONST/DNUM + DLOG(EXPVIB/DNUM)
      STOT=STRN + SROT + SVIB + SELEC
      SCAL=STOT*GASC
      WRITE(6,2) CVTRN,STRN,CVROT,SROT,CVVIB,SVIB,CVELEC,SELEC,
     *           CVTOT,STOT,CVCAL,SCAL
C
C  HEAT CAPACITY AT CONSTANT PRESSURE
      CPCAL=(CVTOT+1.0D+00)*GASC
      WRITE(6,3) CPCAL
C
C  ENERGY
      ETRN=1.5D+00
      EROT=1.0D+00
      EVIB=VCONST/DNUM
      ETOT=ETRN + EROT + EVIB + EELEC
      ECAL=ETOT*GASC*TEMP
      HCAL=(ETOT+1.0D+00)*GASC*TEMP
C
C  FREE ENERGY
      ATRN=STRN - 2.5D+00 + 1.0D+00
      AROT=-DLOG(RCONST) - DLOG(SIGMA)
      AVIB=DLOG(EXPVIB/DNUM)
      ATOT=ATRN + AROT + AVIB + AELEC
      ACAL=ATOT*GASC*TEMP
      GCAL=(ATOT-1.0D+00)*GASC*TEMP
C
      WRITE(6,4) ETRN,ATRN,EROT,AROT,EVIB,AVIB,EELEC,AELEC,
     *           ETOT,ATOT,ECAL,ACAL
      WRITE(6,5) HCAL,GCAL
C
C  TEST FOR THE CALCULATION
C  USING THE RELATIONSHIPS :  A = E - TS   &  G = H - TS
      ATEST=ECAL - TEMP*SCAL
      GTEST=HCAL - TEMP*SCAL
      WRITE(6,6) ATEST,GTEST
C
C  PARTITION FUNCTION
      QROT=1.0D+00/(RCONST*SIGMA)
      QVIB=EXPVIB/DNUM
      QTOT=QTRN * QROT * QVIB * QELEC
      WRITE(6,7) QTRN,QROT,QVIB,QELEC,QTOT
C
C  ZERO-POINT VIBRATIONAL ENERGY
      WRITE(6,8) ZPVE,ZLIMIT
C
      GO TO 210
C
C################################
C###LINEAR POLYATOMIC MOLECULE###
C################################
  203 CONTINUE
      SIGMA=FLOAT(ITHERM)
C
C  HEAT CAPACITY AT CONSTANT VOLUME
      CVTRN=1.5D+00
      CVROT=1.0D+00
      CVVIB=A00
C
C  ENTROPY
      RCONST=(VRC*ROTCM(1))/TEMP
      SROT=1.0D+00 - DLOG(RCONST) - DLOG(SIGMA)
      SVIB=A00
C
C  ENERGY
      ETRN=1.5D+00
      EROT=1.0D+00
      EVIB=A00
C
C  FREE ENERGY
      ATRN=STRN - 2.5D+00 +1.0D+00
      AROT=-DLOG(RCONST) -DLOG(SIGMA)
      AVIB=A00
C
C  PARTITION FUNCTION
      QROT=1.0D+00/(RCONST*SIGMA)
      QVIB=1.0D+00
C
      DO 101 I=1,NVIB
      IF(FREQ(I).LT.ZLIMIT) GO TO 101
      VCONST=(VRC*FREQ(I))/TEMP
      EXPVIB=DEXP(VCONST)
      DNUM=EXPVIB-1.0D+00
      CVVIB=CVVIB + (VCONST*VCONST)*(EXPVIB/(DNUM*DNUM))
      SVIB=SVIB + VCONST/DNUM + DLOG(EXPVIB/DNUM)
      EVIB=EVIB + VCONST/DNUM
      AVIB=AVIB + DLOG(EXPVIB/DNUM)
      QVIB=QVIB*(EXPVIB/DNUM)
  101 CONTINUE
C
C  TOTAL HEAT CAPACITY AT CONSTANT VOLUME
      CVTOT=CVTRN + CVROT + CVVIB + CVELEC
      CVCAL=CVTOT*GASC
C
C  TOTAL ENTROPY
      STOT=STRN + SROT + SVIB + SELEC
      SCAL=STOT*GASC
      WRITE(6,2) CVTRN,STRN,CVROT,SROT,CVVIB,SVIB,CVELEC,SELEC,
     *           CVTOT,STOT,CVCAL,SCAL
C
C  HEAT CAPACITY AT CONSTANT PRESSURE
      CPCAL=(CVTOT+1.0D+00)*GASC
      WRITE(6,3) CPCAL
C
C  TOTAL ENERGY
      ETOT=ETRN + EROT + EVIB + EELEC
      ECAL=ETOT*GASC*TEMP
      HCAL=(ETOT+1.0D+00)*GASC*TEMP
C
C  TOTAL FREE ENERGY
      ATOT=ATRN + AROT + AVIB + AELEC
      ACAL=ATOT*GASC*TEMP
      GCAL=(ATOT-1.0D+00)*GASC*TEMP
      WRITE(6,4) ETRN,ATRN,EROT,AROT,EVIB,AVIB,EELEC,AELEC,
     *           ETOT,ATOT,ECAL,ACAL
      WRITE(6,5) HCAL,GCAL
C
C  TEST FOR THE CALCULATION
C  USING THE RELATIONSHIPS :  A = E - TS   &  G = H - TS
      ATEST=ECAL - TEMP*SCAL
      GTEST=HCAL - TEMP*SCAL
      WRITE(6,6) ATEST,GTEST
C
C  TOTAL PARTITION FUNCTION
      QTOT=QTRN * QROT * QVIB * QELEC
      WRITE(6,7) QTRN,QROT,QVIB,QELEC,QTOT
C
C  ZERO-POINT VIBRATIONAL ENERGY
      WRITE(6,8) ZPVE,ZLIMIT
      GO TO 210
C
C####################################
C###NON-LINEAR POLYATOMIC MOLECULE###
C####################################
  206 CONTINUE
      SIGMA=FLOAT(ITHERM)
C
C  HEAT CAPACITY AT CONSTANT VOLUME
      CVTRN=1.5D+00
      CVROT=1.5D+00
      CVVIB=A00
C
C  ENTROPY
      RCONS1=(VRC*ROTCM(1))/TEMP
      RCONS2=(VRC*ROTCM(2))/TEMP
      RCONS3=(VRC*ROTCM(3))/TEMP
      SROT=1.5D+00 - 0.5D+00*DLOG((RCONS1*RCONS2*RCONS3)/PI)
     *             - DLOG(SIGMA)
      SVIB=A00
C
C  ENERGY
      ETRN=1.5D+00
      EROT=1.5D+00
      EVIB=A00
C
C  FREE ENERGY
      ATRN=STRN - 2.5D+00 + 1.0D+00
      AROT=-0.5D+00*DLOG((RCONS1*RCONS2*RCONS3)/PI) - DLOG(SIGMA)
      AVIB=A00
C
C  PARTITION FUNCTION
      QROT=DSQRT(PI/(RCONS1*RCONS2*RCONS3))/SIGMA
      QVIB=1.0D+00
C
      DO 102 I=1,NVIB
      IF(FREQ(I).LT.ZLIMIT) GO TO 102
      VCONST=(VRC*FREQ(I))/TEMP
      EXPVIB=DEXP(VCONST)
      DNUM=EXPVIB-1.0D+00
      CVVIB=CVVIB + (VCONST*VCONST)*(EXPVIB/(DNUM*DNUM))
      SVIB=SVIB + VCONST/DNUM + DLOG(EXPVIB/DNUM)
      EVIB=EVIB + VCONST/DNUM
      AVIB=AVIB + DLOG(EXPVIB/DNUM)
      QVIB=QVIB*(EXPVIB/DNUM)
  102 CONTINUE
C
C  TOTAL HEAT CAPACITY AT CONSTANT VOLUME
      CVTOT=CVTRN + CVROT + CVVIB + CVELEC
      CVCAL=CVTOT*GASC
C
C  TOTAL ENTROPY
      STOT=STRN + SROT + SVIB + SELEC
      SCAL=STOT*GASC
      WRITE(6,2) CVTRN,STRN,CVROT,SROT,CVVIB,SVIB,CVELEC,SELEC,
     *           CVTOT,STOT,CVCAL,SCAL
C
C  HEAT CAPACITY AT CONSTANT PRESSURE
      CPCAL=(CVTOT+1.0D+00)*GASC
      WRITE(6,3) CPCAL
C
C  TOTAL ENERGY
      ETOT=ETRN + EROT + EVIB + EELEC
      ECAL=ETOT*GASC*TEMP
      HCAL=(ETOT+1.0D+00)*GASC*TEMP
C
C  TOTAL FREE ENERGY
      ATOT=ATRN + AROT + AVIB + AELEC
      ACAL=ATOT*GASC*TEMP
      GCAL=(ATOT-1.0D+00)*GASC*TEMP
      WRITE(6,4) ETRN,ATRN,EROT,AROT,EVIB,AVIB,EELEC,AELEC,
     *           ETOT,ATOT,ECAL,ACAL
      WRITE(6,5) HCAL,GCAL
C
C  TEST FOR THE CALCULATION
C  USING THE RELATIONSHIPS :  A = E - TS   &  G = H - TS
      ATEST=ECAL - TEMP*SCAL
      GTEST=HCAL - TEMP*SCAL
      WRITE(6,6) ATEST,GTEST
C
C  TOTAL PARTITION FUNCTION
      QTOT=QTRN * QROT * QVIB * QELEC
      WRITE(6,7) QTRN,QROT,QVIB,QELEC,QTOT
C
C  ZERO-POINT VIBRATIONAL ENERGY
      WRITE(6,8) ZPVE,ZLIMIT
C
  210 CONTINUE
      RETURN
      END
      SUBROUTINE TORS(B,EX,EY,EZ,NXYZ,NNE)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NXYZ,NXYZ),EX(NNE,NNE),EY(NNE,NNE),EZ(NNE,NNE)
      COMMON/VIB103/NST,NBND,NLIB,NDEF,NTORS
      COMMON/VIB202/R(1275)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB305/KT(150),LT(150),MT(150),NT(150)
      COMMON/VIB306/AGLB(150),AGLT(150),AGLO(150),AGLR(150)
C
C   THE CALCULATION OF S VECTORS FOR TORSIONS
C   BASED ON DEFINITION OF WILSON-DECIOUS-CROSS
      DO 101 I=1,NTORS
      II=I+NST+NBND+NLIB+NDEF
      K=KT(I)
      L=LT(I)
      M=MT(I)
      N=NT(I)
      KX=3*K-2
      KY=3*K-1
      KZ=3*K
      LX=3*L-2
      LY=3*L-1
      LZ=3*L
      MX=3*M-2
      MY=3*M-1
      MZ=3*M
      NX=3*N-2
      NY=3*N-1
      NZ=3*N
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      MN=IOFF(MAX0(M,N))+MIN0(M,N)
      ML=IOFF(MAX0(M,L))+MIN0(M,L)
      AL=AGLT(I)
      AM=AGLO(I)
      CEXKM=EY(K,L)*EZ(L,M)-EZ(K,L)*EY(L,M)
      CEYKM=EZ(K,L)*EX(L,M)-EX(K,L)*EZ(L,M)
      CEZKM=EX(K,L)*EY(L,M)-EY(K,L)*EX(L,M)
      CEXNL=EY(N,M)*EZ(M,L)-EZ(N,M)*EY(M,L)
      CEYNL=EZ(N,M)*EX(M,L)-EX(N,M)*EZ(M,L)
      CEZNL=EX(N,M)*EY(M,L)-EY(N,M)*EX(M,L)
      RS2K=R(KL)*DSIN(AL)**2
      RS2M=R(ML)*DSIN(AM)**2
      RS2N=R(MN)*DSIN(AM)**2
      RS2L=R(ML)*DSIN(AL)**2
      B(II,KX)=-CEXKM/RS2K
      B(II,KY)=-CEYKM/RS2K
      B(II,KZ)=-CEZKM/RS2K
      B(II,LX)=(R(ML)-R(KL)*DCOS(AL))*CEXKM/(R(ML)*RS2K)+
     1 DCOS(AM)*CEXNL/RS2M
      B(II,LY)=(R(ML)-R(KL)*DCOS(AL))*CEYKM/(R(ML)*RS2K)+
     1 DCOS(AM)*CEYNL/RS2M
      B(II,LZ)=(R(ML)-R(KL)*DCOS(AL))*CEZKM/(R(ML)*RS2K)+
     1 DCOS(AM)*CEZNL/RS2M
      B(II,MX)=(R(ML)-R(MN)*DCOS(AM))*CEXNL/(R(ML)*RS2N)+
     1 DCOS(AL)*CEXKM/RS2L
      B(II,MY)=(R(ML)-R(MN)*DCOS(AM))*CEYNL/(R(ML)*RS2N)+
     1 DCOS(AL)*CEYKM/RS2L
      B(II,MZ)=(R(ML)-R(MN)*DCOS(AM))*CEZNL/(R(ML)*RS2N)+
     1 DCOS(AL)*CEZKM/RS2L
      B(II,NX)=-CEXNL/RS2N
      B(II,NY)=-CEYNL/RS2N
  101 B(II,NZ)=-CEZNL/RS2N
      RETURN
      END
      SUBROUTINE VIBFX(FX,ELX,ELXM,EE,VALU,FV1,FV2,FXM,NABC,NPQR)
C   THE NORMAL COORDINATE ANALYSIS FOR CARTESIAN COORDINATE SYSTEM
      IMPLICIT REAL*8 (A-H,O-Z)
      CHARACTER*80 LABEL
      DIMENSION FX(NABC,NABC),ELX(NABC,NABC),ELXM(NABC,NABC)
      DIMENSION EE(NABC,NABC),VALU(NABC),FV1(NABC),FV2(NABC),FXM(NPQR)
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB108/IZVLIM,IPLOT
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB206/SQM(150),ROOT(150),FREQ(150)
      DATA LABEL / ' ATOMIC NUMBER , GEOMETRY , FREQUENCIES , AND EIGENV
     1ECTORS FROM NORMCO        ' /
    1 FORMAT(//,2X,' THE NORMAL COORDINATE ANALYSIS BY FX MATRIX METHOD'
     1)
    2 FORMAT(//,2X,' SECULAR EQUATIONS'/2X,' FXM MATRIX'/)
    3 FORMAT(//,3X,23(1H*)/2X,' VIBRATIONAL FREQUENCIES'/3X,23(1H*))
    4 FORMAT(//,2X,' LX MATRIX'/)
    5 FORMAT(//,2X,' LX X LX(T) = M(-1)'/)
    6 FORMAT(//,3X,22(1H*)/2X,' VIBRATIONAL AMPLITUDES'/3X,22(1H*))
    7 FORMAT(//,3X,20(1H*)/2X,' INFRARED INTENSITIES'/3X,20(1H*))
    8 FORMAT(//,3X,17(1H*)/2X,' RAMAN INTENSITIES'/3X,17(1H*))
    9 FORMAT(A80)
   10 FORMAT(5I5)
   11 FORMAT(4F20.10)
   12 FORMAT(F20.10)
   13 FORMAT(3F20.10)
C
      WRITE(6,1)
C   THE FORMATION OF THE SECULAR EQUATION
      DO 101 I=1,NATOM
  101 SQM(I)=DSQRT(W(I))
      DO 102 I=1,N3N
      II=I/3
      IF(I.GT.3*II) II=II+1
      DO 102 J=I,N3N
      JJ=J/3
      IF(J.GT.3*JJ) JJ=JJ+1
      IJ=I+IOFF(J)
      FXM(IJ)=(1./SQM(II))*FX(I,J)*(1./SQM(JJ))
  102 CONTINUE
      WRITE(6,2)
      CALL PRINT(FXM,NPQR,N3N,6)
C
C   THE NORMAL COORDINATE ANALYSIS
      WRITE(6,3)
      CALL NORMFX(ELXM,EE,VALU,FV1,FV2,FXM,NABC,NPQR)
C
C   THE CALCULATION OF LX MATRIX
      DO 103 I=1,N3N
      II=I/3
      IF(I.GT.3*II) II=II+1
      DO 103 J=1,N3N
  103 ELX(I,J)=(1./SQM(II))*ELXM(I,J)
      WRITE(6,4)
      CALL FRQOUT(ELX,FREQ,NABC,NABC,N3N,N3N,6)
      CALL MTXMPY(ELX,NABC,ELX,NABC,EE,NABC,EE,NABC,N3N,3)
      WRITE(6,5)
      CALL MATOUT(EE,NABC,NABC,N3N,N3N,6)
C
C   THE CALCULATION OF VIBRATIONAL AMPLITUDES
      WRITE(6,6)
      CALL AMPFX(ELX,NABC)
C
C   THE CALCULATION OF INFRARED INTENSITIES
      IF(IDIPOL.EQ.0) GO TO 201
      WRITE(6,7)
      CALL IRINTX(ELX,NABC)
C
C   THE CALCULATION OF RAMAN INTENSITIES
  201 IF(IPOLAR.EQ.0) GO TO 202
      WRITE(6,8)
      CALL RAMANX(ELX,NABC)
C
C   FORM FILE14 IF NECESSARY
  202 CONTINUE
      IF(IPLOT.EQ.0) GO TO 203
      ITAP14=14
      open(unit=14,file='file14',status='unknown')
      REWIND ITAP14
      WRITE(ITAP14,9) LABEL
      WRITE(ITAP14,10) NATOM,NVIB
      DO 105 I=1,NATOM
      WRITE(ITAP14,11) CHG(I),X(I),Y(I),Z(I)
  105 CONTINUE
      DO 106 IVIB=1,NVIB
      WRITE(ITAP14,12) FREQ(IVIB)
      WRITE(ITAP14,13) (ELXM(I,IVIB),I=1,N3N)
  106 CONTINUE
      DO 107 IVIB=1,NVIB
      WRITE(ITAP14,12) FREQ(IVIB)
      WRITE(ITAP14,13) (ELX(I,IVIB),I=1,N3N)
  107 CONTINUE
      REWIND ITAP14
C
  203 CONTINUE
      RETURN
      END
      SUBROUTINE VIBGF(B,EX,EY,EZ,NXYZ,NNE,ISOMOL)
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION B(NXYZ,NXYZ),EX(NNE,NNE),EY(NNE,NNE),EZ(NNE,NNE)
C   THE NORMAL COORDINATE ANALYSIS BY GF MATRIX METHOD
C   FX IS A FORCE CONSTANT MATRIX IN CARTESIAN COORDINATE SYSTEM
C   F IS A FORCE CONSTANT MATRIX IN INTERNAL COORDINATE SYSTEM
C   DIMENSION AND COMMON STATEMENTS
      LOGICAL ISOMOL
      COMMON/VIB101/NATOM,NAT1,N3N,ILIN,NVIB,IDIPOL,IPOLAR
      COMMON/VIB102/LDIM,MDIM,NDIM
      COMMON/VIB103/NST,NBND,NLIB,NDEF,NTORS
      COMMON/VIB104/PARA,WAVE,CONST,CYCL,CONV
      COMMON/VIB105/AIXX,AIYY,AIZZ,SUMW,ROTCM(3)
      COMMON/VIB107/NIC,NINT,ISYM,NSYM
      COMMON/VIB201/CHG(50),X(50),Y(50),Z(50),W(50)
      COMMON/VIB202/R(1275)
      COMMON/VIB205/IOFF(150)
      COMMON/VIB301/KR(150),LR(150)
      COMMON/VIB302/KA(150),LA(150),MA(150)
      COMMON/VIB303/KB(150),LB(150),MB(150)
      COMMON/VIB304/KD(150),LD(150),MD(150),ND(150)
      COMMON/VIB305/KT(150),LT(150),MT(150),NT(150)
      COMMON/VIB306/AGLB(150),AGLT(150),AGLO(150),AGLR(150)
      COMMON/VIB307/AGLL(150),AGLD(150),AGLE(150),AGLF(150)
      DATA PI / 3.1415926536D+00 /
      DATA A00,ONE / 0.0D+00 , 1.0D+00 /
C   FORMAT STATEMENTS
    1 FORMAT(//,2X,' THE NORMAL COORDINATE ANALYSIS BY GF MATRIX METHOD
     1'/)
    2 FORMAT(10I5)
    3 FORMAT(//,2X,' PARAMETERS FOR MOLECULAR VIBRATION'//
     * 2X,' NST    = ',I5/
     * 2X,' NBND   = ',I5/
     $ 2X,' NLIB   = ',I5/
     * 2X,' NDEF   = ',I5/
     * 2X,' NTORS  = ',I5/
     * 2X,' NINT   = ',I5/
     * 2X,' NROT   = ',I5/
     * 2X,' NIC    = ',I5/
     * 2X,' NVIB   = ',I5/
     * 2X,' ILIN   = ',I5/
     * 2X,' ISYM   = ',I5)
    4 FORMAT(2I5)
    5 FORMAT(//,2X,21H INTERNAL COORDINATES,50X,11H COORDINATE/
     1 73X,4H NO.)
    6 FORMAT(2X,11H STRETCHING/
     1 2X,20H   R   K-L    K    L/)
    7 FORMAT(2X,F10.5,2I5,51X,2H (,I2,1H))
    8 FORMAT(3I5)
    9 FORMAT(/,2X,11H BOND ANGLE/2X,8H BENDING/
     1 2X,25H ANG-KLM      K    L    M/)
   10 FORMAT(2X,F10.5,3I5,46X,2H (,I2,1H))
   11 FORMAT(/,2X,' LINEAR BENDING'/
     1 2X,8H ANG-KLM,5X,2H K,3X,2H L,3X,2H M/)
   12 FORMAT(4I5)
   13 FORMAT(/,2X,' OUT OF PLANE DEFORMATION'/
     1 2X,8H ANG-LNM,7X,8H ANG-KNM,7X,8H ANG-KNL,
     2 8X,2H K,3X,2H L,3X,2H M,3X,2H N/)
   14 FORMAT(2X,F10.5,5X,F10.5,5X,F10.5,3X,4I5,8X,2H (,I2,1H))
   15 FORMAT(/,2X,8H TORSION/
     1 2X,8H ANG-KLM,7X,8H ANG-LMN,7X,8H ANG-TOR,
     2 8X,2H K,3X,2H L,3X,2H M,3X,2H N/)
   16 FORMAT(//,2X,' UNIT VECTOR COMPONENTS')
   17 FORMAT(/,2X,22H FIRST THREE TERMS EX ,I2,8H,1   EY  ,I2,
     1 8H,1   EZ ,I2,3H,1 /)
   18 FORMAT(9F13.5)
   19 FORMAT(//,2X,' B MATRIX'/)
C
      WRITE(6,1)
C     NINT IS NUMBER OF VIBRATIONAL NORMAL COORDINATES
C         WITH REDUNDANT COORDINATES IF ANY
C     NIC IS TOTAL NUMBER OF NORMAL COORDINATES
C         WITH ROTATIONAL AND TRANSLATIONAL NORMAL COORDINATES
C     NVIB IS NUMBER OF NORMAL COORDINATES TO BE ANALIZED
C     ILIN=0 NON-LINEAR POLYATOMIC MOLECULES
C     ILIN=1 DIATOMIC AND LINEAR MOLECULES
C     ISYM=0 WITHOUT SYMMETRY COORDINATE
C     ISYM=1 WITH SYMMETRY COORDINATE
C
      AR=PI/180.0D+00
C***INPUT INFORMATIONS FOR GF MATRIX METHOD***
CCC   IF(.NOT.ISOMOL)
CCC  *READ(5,2) NST,NBND,NLIB,NDEF,NTORS,ISYM
      NINT=NST+NBND+NLIB+NDEF+NTORS
      NROT=3
      IF(ILIN.NE.0) NROT=2
      NIC=NINT+3+NROT
      NVIB=3*NATOM-3-NROT
      WRITE(6,3) NST,NBND,NLIB,NDEF,NTORS,NINT,NROT,NIC,NVIB,ILIN,ISYM
C
C   THE CALCULATION OF B VECTORS
C   THE CALCULATION OF UNIT VECTORS
      DO 101 I=1,NATOM
      DO 101 J=1,NATOM
      EX(I,J)=A00
      EY(I,J)=A00
  101 EZ(I,J)=A00
      DO 102 I=1,NIC
      DO 102 J=1,NIC
  102 B(I,J)=A00
      DO 103 I=1,NAT1
      IR=I+1
      DO 103 J=IR,NATOM
      IJ=I+IOFF(J)
      EX(I,J)=-(X(I)-X(J))/R(IJ)
      EY(I,J)=-(Y(I)-Y(J))/R(IJ)
      EZ(I,J)=-(Z(I)-Z(J))/R(IJ)
      EX(J,I)=-EX(I,J)
      EY(J,I)=-EY(I,J)
      EZ(J,I)=-EZ(I,J)
  103 CONTINUE
C***INPUT DATA FOR STRETCHINGS***
      IF(NST.EQ.0) GO TO 201
CCC   IF(.NOT.ISOMOL)
CCC  *READ(5,4) (KR(I),LR(I),I=1,NST)
      WRITE(6,5)
      WRITE(6,6)
      DO 104 I=1,NST
      K=KR(I)
      L=LR(I)
      II=I
      KL=IOFF(MAX0(K,L))+MIN0(K,L)
      WRITE(6,7) R(KL),KR(I),LR(I),II
  104 CONTINUE
      CALL STRNG(B,EX,EY,EZ,NXYZ,NNE)
C***INPUT DATA FOR BENDINGS***
  201 IF(NBND.EQ.0) GO TO 202
CCC   IF(.NOT.ISOMOL)
CCC  *READ(5,8) (KA(I),LA(I),MA(I),I=1,NBND)
      WRITE(6,9)
      DO 105 I=1,NBND
      K=KA(I)
      L=LA(I)
      M=MA(I)
      II=I+NST
      AKLM=EX(L,K)*EX(L,M)+EY(L,K)*EY(L,M)+EZ(L,K)*EZ(L,M)
      AGLB(I)=DACOS(AKLM)
      ANG=AGLB(I)/AR
      WRITE(6,10) ANG,KA(I),LA(I),MA(I),II
  105 CONTINUE
      CALL BENDNG(B,EX,EY,EZ,NXYZ,NNE)
C***INPUT DATA FOR LINEAR BENDINGS***
  202 IF(NLIB.EQ.0) GO TO 203
      NLHF=NLIB/2
CCC   IF(.NOT.ISOMOL)
CCC  *READ(5,8) (KB(I),LB(I),MB(I),I=1,NLHF)
      WRITE(6,11)
      DO 106 I=1,NLHF
      I1=2*I-1+NST+NBND
      I2=I1+1
      K=KB(I)
      L=LB(I)
      M=MB(I)
      AKLM=EX(L,K)*EX(L,M)+EY(L,K)*EY(L,M)+EZ(L,K)*EZ(L,M)
      AGLL(I)=DACOS(AKLM)
      ANG=AGLL(I)/AR
      WRITE(6,10) ANG,KB(I),LB(I),MB(I),I1
      WRITE(6,10) ANG,KB(I),LB(I),MB(I),I2
  106 CONTINUE
      CALL LINBND(B,EX,EY,EZ,NXYZ,NNE)
C***INPUT DATA FOR DEFORMATIONS***
  203 IF(NDEF.EQ.0) GO TO 204
CCC   IF(.NOT.ISOMOL)
CCC  *READ(5,12) (KD(I),LD(I),MD(I),ND(I),I=1,NDEF)
      WRITE(6,13)
      DO 107 I=1,NDEF
      II=I+NST+NBND+NLIB
      K=KD(I)
      L=LD(I)
      M=MD(I)
      N=ND(I)
      ALNM=EX(N,L)*EX(N,M)+EY(N,L)*EY(N,M)+EZ(N,L)*EZ(N,M)
      AGLD(I)=DACOS(ALNM)
      AKNM=EX(N,K)*EX(N,M)+EY(N,K)*EY(N,M)+EZ(N,K)*EZ(N,M)
      AGLE(I)=DACOS(AKNM)
      AKNL=EX(N,K)*EX(N,L)+EY(N,K)*EY(N,L)+EZ(N,K)*EZ(N,L)
      AGLF(I)=DACOS(AKNL)
      DLM=AGLD(I)/AR
      DKM=AGLE(I)/AR
      DKL=AGLF(I)/AR
      WRITE(6,14) DLM,DKM,DKL,KD(I),LD(I),MD(I),ND(I),II
  107 CONTINUE
      CALL DEFORM(B,EX,EY,EZ,NXYZ,NNE)
C***INPUT DATA FOR TORSIONS***
  204 IF(NTORS.EQ.0) GO TO 205
CCC   IF(.NOT.ISOMOL)
CCC  *READ(5,12) (KT(I),LT(I),MT(I),NT(I),I=1,NTORS)
      WRITE(6,15)
      DO 108 I=1,NTORS
      II=I+NST+NBND+NLIB+NDEF
      K=KT(I)
      L=LT(I)
      M=MT(I)
      N=NT(I)
C   BASED ON DEFINITION OF WILSON-DECIOUS-CROSS
      AKLM=EX(L,K)*EX(L,M)+EY(L,K)*EY(L,M)+EZ(L,K)*EZ(L,M)
      AGLT(I)=DACOS(AKLM)
      ALMN=EX(M,L)*EX(M,N)+EY(M,L)*EY(M,N)+EZ(M,L)*EZ(M,N)
      AGLO(I)=DACOS(ALMN)
      SINP=DSIN(AGLT(I))
      PX=(EY(K,L)*EZ(L,M)-EZ(K,L)*EY(L,M))/SINP
      PY=(EZ(K,L)*EX(L,M)-EX(K,L)*EZ(L,M))/SINP
      PZ=(EX(K,L)*EY(L,M)-EY(K,L)*EX(L,M))/SINP
      SINQ=DSIN(AGLO(I))
      QX=(EY(L,M)*EZ(M,N)-EZ(L,M)*EY(M,N))/SINQ
      QY=(EZ(L,M)*EX(M,N)-EX(L,M)*EZ(M,N))/SINQ
      QZ=(EX(L,M)*EY(M,N)-EY(L,M)*EX(M,N))/SINQ
      AKLMN=PX*QX+PY*QY+PZ*QZ
      IF(DABS(AKLMN).GT.ONE) AKLMN=DSIGN(ONE,AKLMN)
      AGLR(I)=DACOS(AKLMN)
C***********************************************************************
C   CHECK ORIENTATION OF TORSIONAL ANGLE
      SKLMN=PX*EX(M,N)+PY*EY(M,N)+PZ*EZ(M,N)
      IF(SKLMN.LT.A00) AGLR(I)=PI+PI-AGLR(I)
C***********************************************************************
      ATL=AGLT(I)/AR
      ATM=AGLO(I)/AR
      ATT=AGLR(I)/AR
      WRITE(6,14) ATL,ATM,ATT,KT(I),LT(I),MT(I),NT(I),II
  108 CONTINUE
      CALL TORS(B,EX,EY,EZ,NXYZ,NNE)
C
C   PRINT OUT E VECTORS
  205 WRITE(6,16)
      DO 110 I=1,NATOM
      WRITE(6,17) I,I,I
      WRITE(6,18) (EX(I,J),EY(I,J),EZ(I,J),J=1,NATOM)
  110 CONTINUE
      IRX=NINT+1
      IF(AIXX.LE.1.0D-3) IRX=NINT
      IRY=IRX+1
      IF(AIYY.LE.1.0D-3) IRY=IRX
      IRZ=IRY+1
      IF(AIZZ.LE.1.0D-3) IRZ=IRY
      ITX=IRZ+1
      ITY=IRZ+2
      ITZ=IRZ+3
      DO 111 J=1,NATOM
      JX=3*J-2
      JY=3*J-1
      JZ=3*J
C   B MATRIX FOR ROTATIONS
      IF(AIXX.LE.1.0D-3) GO TO 206
      B(IRX,JX)=A00
      B(IRX,JY)=-(Z(J)*W(J))/AIXX
      B(IRX,JZ)=(Y(J)*W(J))/AIXX
  206 IF(AIYY.LE.1.0D-3) GO TO 207
      B(IRY,JX)=(Z(J)*W(J))/AIYY
      B(IRY,JY)=A00
      B(IRY,JZ)=-(X(J)*W(J))/AIYY
  207 IF(AIZZ.LE.1.0D-3) GO TO 208
      B(IRZ,JX)=-(Y(J)*W(J))/AIZZ
      B(IRZ,JY)=(X(J)*W(J))/AIZZ
      B(IRZ,JZ)=A00
C   B MATRIX FOR TRANSLATIONS
  208 WS=W(J)/SUMW
      B(ITX,JX)=WS
      B(ITY,JY)=WS
      B(ITZ,JZ)=WS
  111 CONTINUE
      WRITE(6,19)
      CALL MATOUT(B,NXYZ,NXYZ,NIC,NIC,6)
C
      RETURN
      END
