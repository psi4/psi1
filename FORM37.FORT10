      PROGRAM FORM37
C   THE PROGRAM TO FORM SUPERMATRIX FILE
C**********************************************************************
C*   NOTICE OF PROGRAM MODIFICATION                                   *
C**********************************************************************
C*  BY:  RICHARD REMINGTON                         SEARCH: C01-31-89  *
C*  DATE:  JANUARY  31, 1989                                          *
C*  REASON: DECREASE CORE FROM 15MB ON 3090 TO 7MB ON 9370.           *
C**********************************************************************
C** MIQUEL DURAN, SEPTEMBER 1986                                    ***
C** LAST UPDATED ON MAY 29, 1987 BY YUKIO YAMAGUCHI                 ***
C** MAXCOR HAS CHANGED FROM 700K TO 1700K                           ***
C** INTMX HAS CHANGED FROM 1296 TO 10000                            ***
C**********************************************************************
C
C FORMAT OF TAPE37....  MAXIJ UNITS  PER RECORD
C OF IJ,KL,P,Q   (MAXIJ TIMES 20 BYTES, IJ AND KL ARE 2-BYTE)
C AT THE VERY END OF THE RECORD, CURRIJ IS WRITTEN...
C HOW MANY INTEGRALS ARE IN THIS RECORD...IF IT IS MAXIJ,
C THAT MEANS THAT THERE IS ANOTHER RECORD TO READ.
C THIS VERSION DOES NO TAKE INTO ACCOUNT ANY SYMMETRY, BUT
C ELIMINATES P AND Q WHEN THEY ARE SMALLER THAN A THRESHOLD.
C   PRESENT VERSION... MAXIJ =  3276
C                      MAXBUF=  4096
C   PRESENT VERSION... MAXIMUM NBASIS = 125
C
C   (RECALL THAT 10*3276 IS SLIGHTLY LESS THAN 4096*8)
C
      IMPLICIT REAL*8 (A-H,O-Z)
C01-31-89   PARAMETER (MAXCC=1700000)
      PARAMETER (MAXCC=720000)
      DIMENSION CC(MAXCC),IA(1)
      INTEGER BLABEL(20)
      INTEGER ND(10),MNL(142),MS(142),MTYPE(2,20),ITYP(20)
      CHARACTER TAPE*8
      LOGICAL TAPE36
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/ENRGY/ESCF,ENUC,SCFCON,NITER
      COMMON/I3030/I3030(200),NLAMDA(100)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4,MAXCOR,ICMAX
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP37,TAPE
      COMMON/ZNSTT/NST
      COMMON/SUPMX/ISUPMX,INTMX,NINT,NEWBUF,MAXIJ
      LOGICAL*1 IZ
      COMMON/ZZZSY/IZ(7875)
      COMMON/PARAS/MXCOEF
      EQUIVALENCE (CC,IA)
    3 FORMAT(20X,'******* THE FORM37 PROGRAM ******'/
     1       20X,'WRITTEN BY M.D.P. FROM UAB AT UCB'/
     1       20X,'*********************************'/)
    4 FORMAT(2X,' BLABEL = ',20A4)
    5 FORMAT(2X,' ENUC   = ',F15.8)
    6 FORMAT(2X,' NST    = ',I5/2X,' NDEG   =',8I5)
    7 FORMAT(2X,' NBASIS = ',I8/
     1       2X,' NTRI   = ',I8/
     2       2X,' NSYM   = ',I8/
     3       2X,' NBFAO  = ',I8/
     4       2X,' NBFSO  = ',I8/
     5       2X,' NBATRI = ',I8/
     6       2X,' IPRNT  = ',I8/
     7       2X,' TAPE   = ',A8)
    8 FORMAT(2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10)
    9 FORMAT(2X,' REQUIRED MEMORY EXCEEDS MAXCOR '/
     1          2X,' ICMAX = ',I10,5X,' MAXCOR = ',I10)
   21 FORMAT(' NOW YOU ARE IN RDONE'/)
   22 FORMAT(' NOW YOU ARE IN RDTWO'/)
   30 FORMAT(2X,' IPARA = ',I10/)
C
      MAXCOR=MAXCC
C
      CALL TSTART(6)
      CALL NOUNFL
      ITAPE3=3
      ITAPE4=4
      INPUT=5
      ITAPE6=6
      ITAP34=34
      ITAP37=37
      MAXBUF=4096
      MAXBF2=MAXBUF*2
      MAXBF4=MAXBUF*4
      IOFF(1)=0
      DO 101 I=1,255
  101 IOFF(I+1)=IOFF(I)+I
C
C   READ IN INTEGRAL INFORMATION FROM 34 FILE
      WRITE(6,3)
      WRITE(3,3)
      WRITE(4,3)
      CALL RFILE(ITAP34)
      CALL WREADW(ITAP34,NKIND,1,1,IEND)
      CALL WREADW(ITAP34,ICLOS,1,IEND,IEND)
      CALL WREADW(ITAP34,BLABEL,20,IEND,IEND)
      CALL WREADW(ITAP34,ENUC,2,IEND,IEND)
      CALL WREADW(ITAP34,NST,1,IEND,IEND)
      CALL WREADW(ITAP34,ND,NST,IEND,IEND)
      CALL WREADW(ITAP34,ITYP,NST,IEND,IEND)
      CALL WREADW(ITAP34,NDEG,NST,IEND,IEND)
      CALL WREADW(ITAP34,NS,1,IEND,IEND)
      CALL WREADW(ITAP34,MTYPE,2*NS,IEND,IEND)
      CALL WREADW(ITAP34,LAPU,1,IEND,IEND)
      CALL WREADW(ITAP34,MS,LAPU,IEND,IEND)
      CALL WREADW(ITAP34,MNL,LAPU,IEND,IPARA)
C     WRITE(6,30) IPARA
      WRITE(3,30) IPARA
      WRITE(4,30) IPARA
      ISADR=I2SEC(IPARA)+1
      CALL RSETSA(ITAP34,ISADR)
      WRITE(6,4) BLABEL
C     WRITE(3,4) BLABEL
      WRITE(6,5) ENUC
      WRITE(3,5) ENUC
      WRITE(6,6) NST,(NDEG(I),I=1,NST)
      WRITE(3,6) NST,(NDEG(I),I=1,NST)
C
C INPUT SCF PARAMETERS
C.................IORDER
      NSYM=0
      NBASIS=0
      MXCOEF=0
      DO 102 I=1,NST
      IF(NDEG(I).GT.0) THEN
               NSYM=NSYM+1
               NLAMDA(NSYM)=NDEG(I)
      END IF
      MXCOEF=MXCOEF+NDEG(I)*NDEG(I)
      NBASIS=NBASIS+NDEG(I)
  102 CONTINUE
      WRITE(3,*) 'MXCOEF,NSYM,NBASIS=',MXCOEF,NSYM,NBASIS
      WRITE(4,*) 'MXCOEF,NSYM,NBASIS=',MXCOEF,NSYM,NBASIS
      WRITE(3,*) 'NLAMDA=',(NLAMDA(I),I=1,NSYM)
      WRITE(4,*) 'NLAMDA=',(NLAMDA(I),I=1,NSYM)
      IDEG(1)=0
      LSYM(1)=0
      IF(NSYM.EQ.1) GO TO 203
      II=0
      DO 103 I=2,NST
      IF(NDEG(I).LE.0) GO TO 202
  201 II=II+1
      NN=NDEG(II)
      IF(NN.EQ.0) GO TO 201
      IDEG(I)=IDEG(I-1)+NN
      LSYM(I)=LSYM(I-1)+IOFF(NN+1)
      GO TO 103
  202 LSYM(I)=LSYM(I-1)
      IDEG(I)=IDEG(I-1)
  103 CONTINUE
  203 NTRI=IOFF(NBASIS+1)
      TAPE='  TAPE36'
      WRITE(6,7) NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI,IPRNT,TAPE
      IF(NBASIS.GT.125) THEN
        WRITE(6,*) ' ALLOWED MAXIMUM SIZE OF BASIS SET IS 125.'
        WRITE(3,*) ' ALLOWED MAXIMUM SIZE OF BASIS SET IS 125.'
        WRITE(4,*) ' ALLOWED MAXIMUM SIZE OF BASIS SET IS 125.'
        WRITE(6,*) ' SIZE OF CURRENT BASIS SET IS ',NBASIS
        WRITE(3,*) ' SIZE OF CURRENT BASIS SET IS ',NBASIS
        WRITE(4,*) ' SIZE OF CURRENT BASIS SET IS ',NBASIS
        STOP
      END IF
C
C SET UP ZERO SYMMETRY ELEMENTS
C
      DO 401 I=1,NTRI
  401          IZ(I)=.FALSE.
      DO 402 I=1,NST
               NL=NDEG(I)
               IF(NL.EQ.0)GOTO 402
               IN=IDEG(I)
               DO 403 IC=IN+1,IN+NL
               DO 403 IB=IN+1,IC
                       IJ=IOFF(IC)+IB
  403                  IZ(IJ)=.TRUE.
  402          CONTINUE
C
C   CREATE SO INTEGRAL FILES
C
      WRITE(3,21)
      WRITE(4,21)
      IBUFHF=4471
      IC1=1
      IC2=IC1+NTRI
      IC3=IC2+NTRI
      IC4=IC3+NTRI
      IC5=IC4+NTRI
      IA5=IC5+IC5-1
      ICMAX=IC5+IBUFHF
      WRITE(3,8) ICMAX,MAXCOR
      WRITE(4,8) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
C................S       H       T       V       LBLI    STVI....
      CALL RDONE(CC(IC1),CC(IC2),CC(IC3),CC(IC4),IA(IA5),CC(IC5),
C.......................
     1           IBUFHF)
C
      WRITE(3,22)
      WRITE(4,22)
      IBUFHF=4471
C WE WANT TO PRESERVE S AND H, SO WE BEGIN AT OLD IC3
      IC5=IC4
      IA5=IC5+IC5-1
      IC6=IC5+IBUFHF
      IA6=IC6+IC6-1
      ICMAX=IC6+MAXBF2
      WRITE(3,8) ICMAX,MAXCOR
      IF(ICMAX.GT.MAXCOR) GO TO 399
      MAXIJ=3276
C***  INTMX=1296*2
      INTMX=10000*2
      LMIJ=IA6
      LXV1=LMIJ+MAXIJ
      LP=ICMAX
      LIX=LP+3*INTMX
      LLB=LIX+INTMX+128
      LV1=LLB+INTMX*2
      LV2=LV1+INTMX
      CALL SRDTWO(IA(IA5),CC(IC5),IA(LMIJ),IA(LXV1),
     1  CC(LP),CC(LIX),CC(LLB),CC(LV1),CC(LV2))
  400 CONTINUE
      CALL RCLOSE(ITAP34,3)
      CALL TSTOP(6)
      STOP
  399 CONTINUE
      WRITE(6,9) ICMAX,MAXCOR
      WRITE(3,9) ICMAX,MAXCOR
      STOP
      END
      SUBROUTINE SRDTWO(LBLI,PKI,MIJ,XV1,P,IX,LB,V1,V2)
C
C READ TWO-ELECTRON INTEGRALS  SUPERMATRIX
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION LBLI(*),PKI(*),MIJ(*),XV1(*)
      DIMENSION P(*),IX(*),LB(*),V1(*),V2(*)
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP37
      COMMON/SUPMX/ISUPMX,INTMX,NINT,NEWBUF,MAXIJ,INOSYM
      COMMON/PKIVA/PKII,NBUFTO
      DATA ZERO / 0.0D+00 /
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,9I5,3F15.7)
   20 FORMAT(4I5,F20.10)
      INOSYM=1
      ITAP37=37
      CALL RFILE(ITAP37)
      IBUFSZ=8942
      IBUFQT=2236
      IBL=0
      INTI=0
      INTO=0
      NBLI=0
      NBLO=0
      NINT=0
      NEWBUF=0
  201 NBLI=NBLI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
      NBUFTO=NBUFTO+NBUF
      DO 101 I=1,NBUF
      LOR=ISHFT(LBLI(I+I+2),-2)
      LSM=ISHFT(LOR,-8)
      KOR=ISHFT(LSM,-3)
      KSM=ISHFT(KOR,-8)+1
      KOR=IAND(KOR,255)
      LSM=IAND(LSM,7)+1
      LOR=IAND(LOR,255)
      III=IAND(LBLI(I+I+2),3)
      JSM=ISHFT(LBLI(I+I+1),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+I+1),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      KK=KOR+IDEG(KSM)
      LL=LOR+IDEG(LSM)
      PKII=PKI(I+IBUFQT)
      CALL GIRONA(P,IX,LB,II,JJ,KK,LL,ISM,JSM,KSM,LSM)
      IF(III.NE.0 .AND.NINT.NE.0)THEN
               DO 40 J1=1,NINT
               J2=J1+INTMX
               J3=J2+INTMX
               V2(J1)=0.25*(P(J2)+P(J3))
               V1(J1)=P(J1)-V2(J1)
   40          CONTINUE
               CALL CATALA(V1,V2,LB,MIJ,XV1,0)
               NEWBUF=0
      END IF
  101 CONTINUE
      INTI=INTI+NBUF
      IF(ILSTI.EQ.0)GOTO 201
C OUTPUT LAST BUFFER
      WRITE(6,*)NBUFTO,' TWO-ELECTRON INTEGRALS READ'
      WRITE(3,*)NBUFTO,' TWO-ELECTRON INTEGRALS READ'
      CALL CATALA(V1,V2,LB,MIJ,XV1,1)
      CALL SREW(ITAP37)
      CALL RCLOSE(ITAP37,3)
      RETURN
      END
      SUBROUTINE GIRONA(P,IX,LB,I,J,K,L,ISM,JSM,KSM,LSM)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION P(*),IX(*),LB(*)
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SUPMX/ISUPMX,INTMX,NINT,NEWBUF,MAXIJ,INOSYM
C     WRITE(6,*)'GIRONA',I,J,K,L
      IF(INOSYM.NE.0)GOTO 320
      IF(ISM.EQ.JSM .AND. KSM.EQ.LSM) GOTO 300
      IF(ISM.EQ.KSM .AND. JSM.EQ.LSM) GOTO 310
      GOTO 500
  300 IF(JSM.EQ.KSM)GOTO 320
      IJ=IOFF(I)+J
      KL=IOFF(K)+L
      CALL TROBAR(P,IX,LB,IJ,KL,1)
      GOTO 500
  310 IF(KSM.EQ.JSM)GOTO 320
      IF(J-L)312,311,313
  311 IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,6)
      GOTO 500
  312 IF(I.EQ.K)GOTO 500
      IK=IOFF(I)+K
      LJ=IOFF(L)+J
      CALL TROBAR(P,IX,LB,IK,LJ,3)
      GOTO 500
  313 IF(I.EQ.K)GOTO 314
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,2)
      GOTO 500
  314 IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,6)
      GOTO 500
  320 IJ=IOFF(I)+J
      KL=IOFF(K)+L
      IF(IJ.EQ.KL)GOTO 450
      IF(J-K)340,400,330
  330 IF(I.EQ.J)GOTO 410
      IF(K.EQ.L)GOTO 370
      CALL TROBAR(P,IX,LB,IJ,KL,1)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,2)
      IL=IOFF(I)+L
      JK=IOFF(J)+K
      CALL TROBAR(P,IX,LB,IL,JK,2)
      GOTO 500
  340 IF(J-L)360,380,350
  350 IF(I.EQ.K)GOTO 420
      CALL TROBAR(P,IX,LB,IJ,KL,1)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,2)
      IL=IOFF(I)+L
      KJ=IOFF(K)+J
      CALL TROBAR(P,IX,LB,IL,KJ,3)
      GOTO 500
  360 IF(K.EQ.L)GOTO 390
      CALL TROBAR(P,IX,LB,IJ,KL,1)
      IK=IOFF(I)+K
      LJ=IOFF(L)+J
      CALL TROBAR(P,IX,LB,IK,LJ,3)
      IL=IOFF(I)+L
      KJ=IOFF(K)+J
      CALL TROBAR(P,IX,LB,IL,KJ,3)
      GOTO 500
  370 CALL TROBAR(P,IX,LB,IJ,KL,1)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,2)
      GOTO 500
  380 CALL TROBAR(P,IX,LB,IJ,KL,5)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,6)
      GOTO 500
  390 CALL TROBAR(P,IX,LB,IJ,KL,1)
      IK=IOFF(I)+K
      LJ=IOFF(L)+J
      CALL TROBAR(P,IX,LB,IK,LJ,3)
      GOTO 500
  400 IF(I.EQ.J)GOTO 430
      IF(K.EQ.L)GOTO 460
      CALL TROBAR(P,IX,LB,IJ,KL,4)
      IL=IOFF(I)+L
      JK=IOFF(J)+K
      CALL TROBAR(P,IX,LB,IL,JK,6)
      GOTO 500
 410  IF(K.EQ.L)GOTO 440
      CALL TROBAR(P,IX,LB,IJ,KL,1)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,2)
      GOTO 500
  420 CALL TROBAR(P,IX,LB,IJ,KL,5)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,6)
      GOTO 500
  430 CALL TROBAR(P,IX,LB,IJ,KL,7)
      GOTO 500
  440 CALL TROBAR(P,IX,LB,IJ,KL,1)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,2)
      GOTO 500
  450 IF(I.EQ.J)GOTO 470
      CALL TROBAR(P,IX,LB,IJ,KL,5)
      IK=IOFF(I)+K
      JL=IOFF(J)+L
      CALL TROBAR(P,IX,LB,IK,JL,6)
      GOTO 500
  460 CALL TROBAR(P,IX,LB,IJ,KL,7)
      GOTO 500
  470 CALL TROBAR(P,IX,LB,IJ,KL,7)
C
  500 CONTINUE
      RETURN
      END
      SUBROUTINE TROBAR(P,INEXT,LBLINT,IJ,KL,IABC)
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/SUPMX/ISUPMX,INTMX,NINT,NEWBUF,MAXIJ,INOSYM
      COMMON/PKIVA/PKI,NBUFTO
      DIMENSION P(*),INEXT(*),LBLINT(*)
      IF(NEWBUF.EQ.0)THEN
               INTMXP=INTMX+1
               INTMXE=INTMX+128
               IF(NINT.EQ.0)NINT=INTMX
               DO 10 I=1,NINT
 10            INEXT(I)=0
               DO 15 I=INTMXP,INTMXE
 15            INEXT(I)=0
               NINT=0
               NEWBUF=1
      END IF
      K=IJ+KL+IJ
      K=IAND(K,127)+INTMXP
      J=INEXT(K)
      IF(J.GT.0)GOTO 40
   30 NINT=NINT+1
      IF(NINT.GT.INTMX)THEN
               WRITE(6,*)'MAXIMUM INTEGRALS IN TROBAR...'
               STOP
      END IF
      INEXT(K)=NINT
      LBLINT(2*NINT-1)=KL
      LBLINT(2*NINT  )=IJ
      I1=NINT
      I2=I1+INTMX
      I3=I2+INTMX
      P(I1)=ZERO
      P(I2)=ZERO
      P(I3)=ZERO
      GOTO 202
   40 IF(LBLINT(2*J-1).EQ.KL .AND. LBLINT(2*J).EQ.IJ) GOTO 100
      K=J
      J=INEXT(K)
      IF(J.GT.0)GOTO 40
      GOTO 30
  100 I1=J
      I2=I1+INTMX
      I3=I2+INTMX
  202 CONTINUE
      GOTO (1,2,3,4,5,6,7),IABC
    1 P(I1)=PKI
      GOTO 9
    2 P(I2)=PKI
      GOTO 9
    3 P(I3)=PKI
      GOTO 9
    4 P(I1)=PKI
      P(I2)=PKI
      GOTO 9
    5 P(I1)=PKI
      P(I3)=PKI
      GOTO 9
    6 P(I2)=PKI
      P(I3)=PKI
      GOTO 9
    7 P(I1)=PKI
      P(I2)=PKI
      P(I3)=PKI
    9 RETURN
      END
      SUBROUTINE CATALA(V1,V2,LB,MIJ,XV1,IFINI)
      IMPLICIT REAL*8(A-H,O-Z)
C NOTE THAT MIJ AND XV1 ARE CONTIGUOUS IN MEMORY
C SO THEY CAN BE OUTPUT IN SWRITE
      INTEGER*2 MIJ(*)
      DIMENSION XV1(*),V1(*),V2(*),LB(*)
      COMMON/ZZZSY/IZ(7875)
      COMMON/PKIVA/PKI,NBUFTO
      LOGICAL*1 IZ
      COMMON/SUPMX/ISUPMX,INTMX,NINT,NEWBUF,MAXIJ,INOSYM
      COMMON/LIMIT/MAXBAS,MAXBUF,MAXBF2,MAXBF4,MAXCOR,NCRUSD
      COMMON/TAPES/ITAP34,ITAP37
      COMMON/IBLBL/IBL
      DATA THRES/1.0D-10/  TWO/2.0D0/
      IF(IFINI.EQ.1)GOTO 1000
C     WRITE(6,*)'BUFFER OF ',NINT,' INTEGRALS IN CATALA'
      DO 1 I=1,NINT
      KL=LB(2*I-1)
      IJ=LB(2*I  )
C     WRITE(6,*)IJ,KL,IZ(IJ),IZ(KL)
C ELIMINATE INTEGRALS WITH WRONG SYMMETRY
      IF(INOSYM.EQ.0)THEN
      IF(.NOT.IZ(IJ))GOTO 1
      IF(.NOT.IZ(KL))GOTO 1
      END IF
C ELIMINATE THOSE VERY SMALL
      V1V=DABS(V1(I))
      V2V=DABS(V2(I))
C     WRITE(6,*)IJ,KL,V1V,V2V
      IF(V1V.LT.THRES .AND. V2V.LT.THRES)GOTO 1
      IF(V2V.LT.THRES)NV2V=NV2V+1
      IBL=IBL+1
      MIJ(IBL)=IJ
      MIJ(IBL+MAXIJ)=KL
      IF(IJ.EQ.KL)THEN
               V1(I)=V1(I)/TWO
               V2(I)=V2(I)/TWO
      END IF
      XV1(IBL)=V1(I)
      XV1(IBL+MAXIJ)=V2(I)
C     WRITE(6,*)IJ,KL,V1(I),V2(I)
      IF(IBL.LT.MAXIJ)GOTO 1
      MIJ(10*MAXIJ+1)=IBL
      CALL SWRIT(ITAP37,MIJ,MAXBF4)
      NINTTO=NINTTO+IBL
      NBUFO=NBUFO+1
      IBL=0
      IF(NINTTO.GT.3*NBUFTO)THEN
             WRITE(6,*)'PROBLEMS IN CATALA, NINTTO>3*NBUFTO'
             WRITE(6,*)NBUFO,' BUFFERS ALREADY WRITTEN'
             STOP
      END IF
    1 CONTINUE
      RETURN
 1000 CONTINUE
      MIJ(10*MAXIJ+1)=IBL
      CALL SWRIT(ITAP37,MIJ,MAXBF4)
      NINTTO=NINTTO+IBL
      WRITE(6,*)NINTTO,' P AND Q INTEGRALS WRITTEN'
      WRITE(3,*)NINTTO,' P AND Q INTEGRALS WRITTEN'
      RETURN
      END
      SUBROUTINE RDONE(S,H,T,V,LBLI,STVI,INBUFS)
C
C READ S,T AND V MATRICES
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION S(NTRI),H(NTRI),T(NTRI),V(NTRI)
      DIMENSION LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
    1 FORMAT(//,2X,' S MATRIX'/)
    2 FORMAT(//,2X,' T MATRIX'/)
    3 FORMAT(//,2X,' V MATRIX'/)
    4 FORMAT(//,2X,' H MATRIX'/)
C
C   READ IN ONE ELECTRON INTEGRALS
C
C***  ITAPE8=8
C***  REWIND ITAPE8
C   S INTEGRALS
      CALL ONEI(S,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.3) GO TO 201
      WRITE(6,1)
      CALL PRINT(S,NTRI,NBASIS,6)
C
C   T INTEGRALS
  201 CONTINUE
      CALL ONEI(T,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 202
      WRITE(6,2)
      CALL PRINT(T,NTRI,NBASIS,6)
C
C   V INTEGRALS
  202 CONTINUE
      CALL ONEI(V,LBLI,STVI,INBUFS)
      IF(IPRNT.LE.4) GO TO 203
      WRITE(6,3)
      CALL PRINT(V,NTRI,NBASIS,6)
C
C   TOTAL ONE ELECTRON INTEGRALS
  203 CONTINUE
      DO 101 I=1,NTRI
  101 H(I)=T(I)+V(I)
      IF(IPRNT.LE.3) GO TO 204
      WRITE(6,4)
      CALL PRINT(H,NTRI,NBASIS,6)
C
  204 CONTINUE
CCC   WRITE(6,*) ' ONE ELECTRON INTEGRALS---S , T, V, H'
CCC   DO 102 I=1,NTRI
CCC   WRITE(6,5) I,S(I),T(I),V(I),H(I)
CC102 CONTINUE
CCC 5 FORMAT(2X,I5,5X,4F20.10)
C
      RETURN
      END
      SUBROUTINE ONEI(X,LBLI,STVI,INBUFS)
C
C READ ONE-ELECTRON INTEGRALS
C
      IMPLICIT REAL*8 (A-H,O-Z)
      DIMENSION X(NTRI),LBLI(INBUFS*2),STVI(INBUFS)
      COMMON/BASIS/NBASIS,NTRI,NSYM,NBFAO,NBFSO,NBATRI
      COMMON/SIGNS/IOFF(256),IPRNT
      COMMON/SYMMS/IDEG(10),NDEG(10),LSYM(10)
      COMMON/TAPES/ITAP34,ITAP36
      DATA ZERO / 0.0D+00 /
    1 FORMAT(2X,' ILSTI = ',I5/
     1       2X,' NBUF  = ',I5/)
    2 FORMAT(2X,8I5,3F15.7)
C
      DO 101 I=1,NTRI
  101 X(I)=ZERO
C
      IBUFSZ=8942
      IBUFS3=1491
      INTI=0
      NBLI=0
  201 NBLI=NBLI+1
      CALL SREAD(ITAP34,LBLI,IBUFSZ)
      ILSTI=LBLI(1)
      NBUF=LBLI(2)
      IF(IPRNT.GE.5)
     *WRITE(6,1) ILSTI,NBUF
C***  WRITE(8,15) NBUF
C**15 FORMAT(I5)
      DO 102 I=1,NBUF
      JSM=ISHFT(LBLI(I+2),-8)
      IOR=ISHFT(JSM,-3)
      ISM=ISHFT(IOR,-8)+1
      IOR=IAND(IOR,255)
      JSM=IAND(JSM,7)+1
      JOR=IAND(LBLI(I+2),255)
      II=IOR+IDEG(ISM)
      JJ=JOR+IDEG(JSM)
      IIJJ=IOFF(II)+JJ
      STV0=STVI(I+IBUFS3)
      X(IIJJ)=STV0
C***  WRITE(8,10) II,JJ,STV0
C     IF(IPRNT.LE.6) GO TO 102
C     WRITE(6,2) I,IOR,ISM,JOR,JSM,II,JJ,IIJJ,STV0
C**10 FORMAT(2I5,F20.10)
  102 CONTINUE
      INTI=INTI+NBUF
      IF(ILSTI.EQ.0) GO TO 201
C
      RETURN
      END
